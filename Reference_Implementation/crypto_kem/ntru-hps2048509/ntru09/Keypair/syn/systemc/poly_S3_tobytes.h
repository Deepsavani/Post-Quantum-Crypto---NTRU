// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _poly_S3_tobytes_HH_
#define _poly_S3_tobytes_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct poly_S3_tobytes : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > msg_address0;
    sc_out< sc_logic > msg_ce0;
    sc_out< sc_logic > msg_we0;
    sc_out< sc_lv<8> > msg_d0;
    sc_in< sc_lv<9> > msg_offset;
    sc_out< sc_lv<9> > a_coeffs_address0;
    sc_out< sc_logic > a_coeffs_ce0;
    sc_in< sc_lv<16> > a_coeffs_q0;
    sc_out< sc_lv<9> > a_coeffs_address1;
    sc_out< sc_logic > a_coeffs_ce1;
    sc_in< sc_lv<16> > a_coeffs_q1;


    // Module declarations
    poly_S3_tobytes(sc_module_name name);
    SC_HAS_PROCESS(poly_S3_tobytes);

    ~poly_S3_tobytes();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > tmp_149_fu_174_p1;
    sc_signal< sc_lv<8> > tmp_149_reg_424;
    sc_signal< sc_lv<7> > i_9_fu_188_p2;
    sc_signal< sc_lv<7> > i_9_reg_433;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > tmp_fu_202_p2;
    sc_signal< sc_lv<9> > tmp_reg_438;
    sc_signal< sc_lv<1> > exitcond_fu_182_p2;
    sc_signal< sc_lv<8> > c_1_fu_256_p2;
    sc_signal< sc_lv<8> > c_1_reg_455;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > sum_fu_276_p2;
    sc_signal< sc_lv<8> > sum_reg_466;
    sc_signal< sc_lv<8> > c_2_fu_295_p2;
    sc_signal< sc_lv<8> > c_2_reg_471;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > c_3_fu_329_p2;
    sc_signal< sc_lv<8> > c_3_reg_487;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > tmp_163_fu_335_p1;
    sc_signal< sc_lv<8> > tmp_163_reg_493;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > tmp_164_fu_363_p3;
    sc_signal< sc_lv<3> > j_5_fu_386_p2;
    sc_signal< sc_lv<3> > j_5_reg_506;
    sc_signal< sc_lv<8> > c_5_fu_418_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<7> > i_reg_138;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > c5_reg_150;
    sc_signal< sc_lv<3> > j_reg_163;
    sc_signal< sc_lv<64> > tmp_135_fu_214_p1;
    sc_signal< sc_lv<64> > tmp_138_fu_225_p1;
    sc_signal< sc_lv<64> > tmp_141_fu_267_p1;
    sc_signal< sc_lv<64> > tmp_144_fu_306_p1;
    sc_signal< sc_lv<64> > tmp_146_fu_311_p1;
    sc_signal< sc_lv<64> > sum_cast_fu_355_p1;
    sc_signal< sc_lv<64> > tmp_150_fu_381_p1;
    sc_signal< sc_lv<64> > sum2_cast_fu_397_p1;
    sc_signal< sc_lv<8> > c_4_fu_349_p2;
    sc_signal< sc_lv<9> > p_shl7_fu_194_p3;
    sc_signal< sc_lv<9> > i_cast1_fu_178_p1;
    sc_signal< sc_lv<9> > tmp_s_fu_208_p2;
    sc_signal< sc_lv<9> > tmp_137_fu_219_p2;
    sc_signal< sc_lv<6> > tmp_153_fu_234_p1;
    sc_signal< sc_lv<8> > p_shl6_fu_238_p3;
    sc_signal< sc_lv<8> > c_fu_230_p1;
    sc_signal< sc_lv<8> > tmp_136_fu_246_p2;
    sc_signal< sc_lv<8> > tmp_157_fu_252_p1;
    sc_signal< sc_lv<9> > tmp_140_fu_262_p2;
    sc_signal< sc_lv<8> > tmp_236_cast_fu_272_p1;
    sc_signal< sc_lv<8> > tmp_158_fu_281_p2;
    sc_signal< sc_lv<8> > tmp_159_fu_291_p1;
    sc_signal< sc_lv<8> > tmp_139_fu_286_p2;
    sc_signal< sc_lv<9> > tmp_143_fu_301_p2;
    sc_signal< sc_lv<8> > tmp_160_fu_315_p2;
    sc_signal< sc_lv<8> > tmp_161_fu_325_p1;
    sc_signal< sc_lv<8> > tmp_142_fu_320_p2;
    sc_signal< sc_lv<8> > tmp_162_fu_339_p2;
    sc_signal< sc_lv<8> > tmp_145_fu_344_p2;
    sc_signal< sc_lv<4> > j_cast_cast_fu_359_p1;
    sc_signal< sc_lv<4> > tmp_148_fu_371_p2;
    sc_signal< sc_lv<9> > tmp_238_cast4_fu_377_p1;
    sc_signal< sc_lv<8> > sum2_fu_392_p2;
    sc_signal< sc_lv<8> > tmp_165_fu_402_p2;
    sc_signal< sc_lv<8> > tmp_147_fu_408_p2;
    sc_signal< sc_lv<8> > tmp_166_fu_414_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<7> ap_const_lv7_65;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<9> ap_const_lv9_4;
    static const sc_lv<9> ap_const_lv9_3;
    static const sc_lv<9> ap_const_lv9_2;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<8> ap_const_lv8_65;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_coeffs_address0();
    void thread_a_coeffs_address1();
    void thread_a_coeffs_ce0();
    void thread_a_coeffs_ce1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_1_fu_256_p2();
    void thread_c_2_fu_295_p2();
    void thread_c_3_fu_329_p2();
    void thread_c_4_fu_349_p2();
    void thread_c_5_fu_418_p2();
    void thread_c_fu_230_p1();
    void thread_exitcond_fu_182_p2();
    void thread_i_9_fu_188_p2();
    void thread_i_cast1_fu_178_p1();
    void thread_j_5_fu_386_p2();
    void thread_j_cast_cast_fu_359_p1();
    void thread_msg_address0();
    void thread_msg_ce0();
    void thread_msg_d0();
    void thread_msg_we0();
    void thread_p_shl6_fu_238_p3();
    void thread_p_shl7_fu_194_p3();
    void thread_sum2_cast_fu_397_p1();
    void thread_sum2_fu_392_p2();
    void thread_sum_cast_fu_355_p1();
    void thread_sum_fu_276_p2();
    void thread_tmp_135_fu_214_p1();
    void thread_tmp_136_fu_246_p2();
    void thread_tmp_137_fu_219_p2();
    void thread_tmp_138_fu_225_p1();
    void thread_tmp_139_fu_286_p2();
    void thread_tmp_140_fu_262_p2();
    void thread_tmp_141_fu_267_p1();
    void thread_tmp_142_fu_320_p2();
    void thread_tmp_143_fu_301_p2();
    void thread_tmp_144_fu_306_p1();
    void thread_tmp_145_fu_344_p2();
    void thread_tmp_146_fu_311_p1();
    void thread_tmp_147_fu_408_p2();
    void thread_tmp_148_fu_371_p2();
    void thread_tmp_149_fu_174_p1();
    void thread_tmp_150_fu_381_p1();
    void thread_tmp_153_fu_234_p1();
    void thread_tmp_157_fu_252_p1();
    void thread_tmp_158_fu_281_p2();
    void thread_tmp_159_fu_291_p1();
    void thread_tmp_160_fu_315_p2();
    void thread_tmp_161_fu_325_p1();
    void thread_tmp_162_fu_339_p2();
    void thread_tmp_163_fu_335_p1();
    void thread_tmp_164_fu_363_p3();
    void thread_tmp_165_fu_402_p2();
    void thread_tmp_166_fu_414_p1();
    void thread_tmp_236_cast_fu_272_p1();
    void thread_tmp_238_cast4_fu_377_p1();
    void thread_tmp_fu_202_p2();
    void thread_tmp_s_fu_208_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
