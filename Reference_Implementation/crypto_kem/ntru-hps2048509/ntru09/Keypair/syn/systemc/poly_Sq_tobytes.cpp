// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "poly_Sq_tobytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic poly_Sq_tobytes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic poly_Sq_tobytes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state1 = "1";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state2 = "10";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state3 = "100";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state4 = "1000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state5 = "10000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state6 = "100000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_1 = "1";
const sc_lv<1> poly_Sq_tobytes::ap_const_lv1_0 = "0";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_2 = "10";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_4 = "100";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_5 = "101";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_6 = "110";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_7 = "111";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_8 = "1000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_A = "1010";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_C = "1100";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_D = "1101";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_E = "1110";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_F = "1111";
const sc_lv<6> poly_Sq_tobytes::ap_const_lv6_0 = "000000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_9 = "1001";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_0 = "0000000000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_3 = "11";
const sc_lv<4> poly_Sq_tobytes::ap_const_lv4_0 = "0000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_B = "1011";
const sc_lv<3> poly_Sq_tobytes::ap_const_lv3_0 = "000";
const sc_lv<1> poly_Sq_tobytes::ap_const_lv1_1 = "1";
const sc_lv<4> poly_Sq_tobytes::ap_const_lv4_4 = "100";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_1 = "1";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_2 = "10";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_3 = "11";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_4 = "100";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_5 = "101";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_6 = "110";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_7 = "111";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_2BA = "1010111010";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_2B9 = "1010111001";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_2B8 = "1010111000";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_2B7 = "1010110111";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_2B6 = "1010110110";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_10 = "10000";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_2B5 = "1010110101";
const sc_lv<16> poly_Sq_tobytes::ap_const_lv16_0 = "0000000000000000";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_B = "1011";
const sc_lv<6> poly_Sq_tobytes::ap_const_lv6_3F = "111111";
const sc_lv<6> poly_Sq_tobytes::ap_const_lv6_1 = "1";
const sc_lv<4> poly_Sq_tobytes::ap_const_lv4_8 = "1000";
const sc_lv<4> poly_Sq_tobytes::ap_const_lv4_1 = "1";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_1 = "1";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_2 = "10";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_3 = "11";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_4 = "100";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_5 = "101";
const sc_lv<7> poly_Sq_tobytes::ap_const_lv7_0 = "0000000";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_6 = "110";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_7 = "111";
const sc_lv<2> poly_Sq_tobytes::ap_const_lv2_0 = "00";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_8 = "1000";
const sc_lv<5> poly_Sq_tobytes::ap_const_lv5_0 = "00000";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_9 = "1001";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_A = "1010";
const sc_lv<3> poly_Sq_tobytes::ap_const_lv3_4 = "100";
const sc_lv<3> poly_Sq_tobytes::ap_const_lv3_1 = "1";
const bool poly_Sq_tobytes::ap_const_boolean_1 = true;

poly_Sq_tobytes::poly_Sq_tobytes(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new poly_Sq_tobytes_1_t("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    t_U->address1(t_address1);
    t_U->ce1(t_ce1);
    t_U->we1(t_we1);
    t_U->d1(a_coeffs_q0);
    t_U->q1(t_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_coeffs_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_124_fu_571_p1 );
    sensitive << ( tmp_s_fu_949_p1 );

    SC_METHOD(thread_a_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_exitcond1_fu_925_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( j_1_reg_460 );

    SC_METHOD(thread_exitcond2_fu_554_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_448 );

    SC_METHOD(thread_exitcond3_fu_530_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_425 );

    SC_METHOD(thread_exitcond_fu_959_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( j_2_reg_472 );

    SC_METHOD(thread_grp_fu_494_p4);
    sensitive << ( t_q1 );

    SC_METHOD(thread_grp_fu_504_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_grp_fu_514_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_j_3_fu_560_p2);
    sensitive << ( j_reg_448 );

    SC_METHOD(thread_j_4_fu_970_p2);
    sensitive << ( j_2_reg_472 );

    SC_METHOD(thread_j_cast6_fu_550_p1);
    sensitive << ( j_reg_448 );

    SC_METHOD(thread_next_mul_fu_524_p2);
    sensitive << ( phi_mul_reg_436 );

    SC_METHOD(thread_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_90_fu_586_p1 );
    sensitive << ( tmp_96_fu_665_p1 );
    sensitive << ( tmp_102_fu_713_p1 );
    sensitive << ( tmp_108_fu_782_p1 );
    sensitive << ( tmp_114_fu_859_p1 );
    sensitive << ( tmp_121_fu_920_p1 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_93_fu_626_p1 );
    sensitive << ( tmp_99_fu_676_p1 );
    sensitive << ( tmp_105_fu_743_p1 );
    sensitive << ( tmp_111_fu_804_p1 );
    sensitive << ( tmp_118_fu_899_p1 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_119_reg_1174 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_123_fu_581_p1 );
    sensitive << ( tmp_94_fu_653_p2 );
    sensitive << ( tmp_100_fu_698_p3 );
    sensitive << ( tmp_106_fu_770_p2 );
    sensitive << ( tmp_112_fu_844_p3 );
    sensitive << ( tmp_128_fu_1012_p3 );
    sensitive << ( tmp_131_fu_1041_p2 );
    sensitive << ( tmp_148_fu_1076_p1 );

    SC_METHOD(thread_r_d1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( t_q0 );
    sensitive << ( t_q1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_91_fu_613_p2 );
    sensitive << ( tmp_103_fu_730_p2 );
    sensitive << ( tmp_116_fu_886_p2 );
    sensitive << ( tmp_127_fu_988_p2 );
    sensitive << ( tmp_133_fu_1069_p2 );

    SC_METHOD(thread_r_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_we1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_959_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_125_fu_576_p1 );
    sensitive << ( tmp_134_fu_965_p1 );

    SC_METHOD(thread_t_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_87_fu_954_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_959_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_t_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_t_d0);
    sensitive << ( a_coeffs_q0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_959_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_959_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_t_we1);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_tmp_100_fu_698_p3);
    sensitive << ( grp_fu_504_p4 );
    sensitive << ( tmp_61_fu_693_p2 );

    SC_METHOD(thread_tmp_101_fu_707_p2);
    sensitive << ( phi_mul_reg_436 );

    SC_METHOD(thread_tmp_102_fu_713_p1);
    sensitive << ( tmp_101_fu_707_p2 );

    SC_METHOD(thread_tmp_103_fu_730_p2);
    sensitive << ( tmp_51_fu_722_p3 );
    sensitive << ( grp_fu_514_p4 );

    SC_METHOD(thread_tmp_104_fu_737_p2);
    sensitive << ( phi_mul_reg_436 );

    SC_METHOD(thread_tmp_105_fu_743_p1);
    sensitive << ( tmp_104_fu_737_p2 );

    SC_METHOD(thread_tmp_106_fu_770_p2);
    sensitive << ( tmp_53_reg_1164 );
    sensitive << ( tmp_54_fu_762_p3 );

    SC_METHOD(thread_tmp_107_fu_776_p2);
    sensitive << ( phi_mul_reg_436 );

    SC_METHOD(thread_tmp_108_fu_782_p1);
    sensitive << ( tmp_107_fu_776_p2 );

    SC_METHOD(thread_tmp_110_fu_798_p2);
    sensitive << ( phi_mul_reg_436 );

    SC_METHOD(thread_tmp_111_fu_804_p1);
    sensitive << ( tmp_110_fu_798_p2 );

    SC_METHOD(thread_tmp_112_fu_844_p3);
    sensitive << ( tmp_142_fu_836_p3 );
    sensitive << ( tmp_68_fu_831_p2 );

    SC_METHOD(thread_tmp_113_fu_853_p2);
    sensitive << ( phi_mul_reg_436 );

    SC_METHOD(thread_tmp_114_fu_859_p1);
    sensitive << ( tmp_113_fu_853_p2 );

    SC_METHOD(thread_tmp_115_fu_868_p3);
    sensitive << ( tmp_143_fu_864_p1 );

    SC_METHOD(thread_tmp_116_fu_886_p2);
    sensitive << ( tmp_115_fu_868_p3 );
    sensitive << ( tmp_58_fu_876_p4 );

    SC_METHOD(thread_tmp_117_fu_893_p2);
    sensitive << ( phi_mul_reg_436 );

    SC_METHOD(thread_tmp_118_fu_899_p1);
    sensitive << ( tmp_117_fu_893_p2 );

    SC_METHOD(thread_tmp_11_fu_937_p3);
    sensitive << ( j_1_reg_460 );

    SC_METHOD(thread_tmp_120_fu_914_p2);
    sensitive << ( phi_mul_reg_436 );

    SC_METHOD(thread_tmp_121_fu_920_p1);
    sensitive << ( tmp_120_fu_914_p2 );

    SC_METHOD(thread_tmp_122_fu_566_p2);
    sensitive << ( tmp_reg_1136 );
    sensitive << ( j_cast6_fu_550_p1 );

    SC_METHOD(thread_tmp_123_fu_581_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_124_fu_571_p1);
    sensitive << ( tmp_122_fu_566_p2 );

    SC_METHOD(thread_tmp_125_fu_576_p1);
    sensitive << ( j_reg_448 );

    SC_METHOD(thread_tmp_126_fu_980_p3);
    sensitive << ( tmp_144_fu_976_p1 );

    SC_METHOD(thread_tmp_127_fu_988_p2);
    sensitive << ( grp_fu_514_p4 );
    sensitive << ( tmp_126_fu_980_p3 );

    SC_METHOD(thread_tmp_128_fu_1012_p3);
    sensitive << ( tmp_76_reg_1205 );
    sensitive << ( tmp_75_fu_1006_p2 );

    SC_METHOD(thread_tmp_130_fu_1024_p3);
    sensitive << ( tmp_146_reg_1210 );

    SC_METHOD(thread_tmp_131_fu_1041_p2);
    sensitive << ( tmp_38_fu_1031_p4 );
    sensitive << ( tmp_130_fu_1024_p3 );

    SC_METHOD(thread_tmp_132_fu_1052_p3);
    sensitive << ( tmp_147_reg_1215 );

    SC_METHOD(thread_tmp_133_fu_1069_p2);
    sensitive << ( tmp_39_fu_1059_p4 );
    sensitive << ( tmp_132_fu_1052_p3 );

    SC_METHOD(thread_tmp_134_fu_965_p1);
    sensitive << ( j_2_reg_472 );

    SC_METHOD(thread_tmp_135_fu_601_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_137_fu_641_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_138_fu_681_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_139_fu_718_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_140_fu_758_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_141_fu_819_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_142_fu_836_p3);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_143_fu_864_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_144_fu_976_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_145_fu_995_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_146_fu_1020_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_147_fu_1048_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_148_fu_1076_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_38_fu_1031_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_39_fu_1059_p4);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_41_fu_591_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_42_fu_605_p3);
    sensitive << ( tmp_135_fu_601_p1 );

    SC_METHOD(thread_tmp_45_fu_645_p3);
    sensitive << ( tmp_137_fu_641_p1 );

    SC_METHOD(thread_tmp_51_fu_722_p3);
    sensitive << ( tmp_139_fu_718_p1 );

    SC_METHOD(thread_tmp_54_fu_762_p3);
    sensitive << ( tmp_140_fu_758_p1 );

    SC_METHOD(thread_tmp_58_fu_876_p4);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_60_fu_685_p3);
    sensitive << ( tmp_138_fu_681_p1 );

    SC_METHOD(thread_tmp_61_fu_693_p2);
    sensitive << ( tmp_57_reg_1159 );
    sensitive << ( tmp_60_fu_685_p3 );

    SC_METHOD(thread_tmp_67_fu_823_p3);
    sensitive << ( tmp_141_fu_819_p1 );

    SC_METHOD(thread_tmp_68_fu_831_p2);
    sensitive << ( tmp_65_reg_1169 );
    sensitive << ( tmp_67_fu_823_p3 );

    SC_METHOD(thread_tmp_74_fu_999_p3);
    sensitive << ( tmp_145_reg_1200 );

    SC_METHOD(thread_tmp_75_fu_1006_p2);
    sensitive << ( grp_fu_494_p4 );
    sensitive << ( tmp_74_fu_999_p3 );

    SC_METHOD(thread_tmp_87_fu_954_p1);
    sensitive << ( j_1_reg_460 );

    SC_METHOD(thread_tmp_88_fu_931_p2);
    sensitive << ( j_1_reg_460 );

    SC_METHOD(thread_tmp_89_fu_536_p2);
    sensitive << ( i_reg_425 );

    SC_METHOD(thread_tmp_90_fu_586_p1);
    sensitive << ( phi_mul_reg_436 );

    SC_METHOD(thread_tmp_91_fu_613_p2);
    sensitive << ( tmp_42_fu_605_p3 );
    sensitive << ( tmp_41_fu_591_p4 );

    SC_METHOD(thread_tmp_92_fu_620_p2);
    sensitive << ( phi_mul_reg_436 );

    SC_METHOD(thread_tmp_93_fu_626_p1);
    sensitive << ( tmp_92_fu_620_p2 );

    SC_METHOD(thread_tmp_94_fu_653_p2);
    sensitive << ( tmp_44_reg_1154 );
    sensitive << ( tmp_45_fu_645_p3 );

    SC_METHOD(thread_tmp_95_fu_659_p2);
    sensitive << ( phi_mul_reg_436 );

    SC_METHOD(thread_tmp_96_fu_665_p1);
    sensitive << ( tmp_95_fu_659_p2 );

    SC_METHOD(thread_tmp_98_fu_670_p2);
    sensitive << ( phi_mul_reg_436 );

    SC_METHOD(thread_tmp_99_fu_676_p1);
    sensitive << ( tmp_98_fu_670_p2 );

    SC_METHOD(thread_tmp_cast9_fu_945_p1);
    sensitive << ( tmp_11_fu_937_p3 );

    SC_METHOD(thread_tmp_fu_542_p3);
    sensitive << ( i_reg_425 );

    SC_METHOD(thread_tmp_s_fu_949_p1);
    sensitive << ( tmp_cast9_fu_945_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_530_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_554_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond1_fu_925_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_959_p2 );

    ap_CS_fsm = "00000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "poly_Sq_tobytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_address0, "(port)r_address0");
    sc_trace(mVcdFile, r_ce0, "(port)r_ce0");
    sc_trace(mVcdFile, r_we0, "(port)r_we0");
    sc_trace(mVcdFile, r_d0, "(port)r_d0");
    sc_trace(mVcdFile, r_address1, "(port)r_address1");
    sc_trace(mVcdFile, r_ce1, "(port)r_ce1");
    sc_trace(mVcdFile, r_we1, "(port)r_we1");
    sc_trace(mVcdFile, r_d1, "(port)r_d1");
    sc_trace(mVcdFile, a_coeffs_address0, "(port)a_coeffs_address0");
    sc_trace(mVcdFile, a_coeffs_ce0, "(port)a_coeffs_ce0");
    sc_trace(mVcdFile, a_coeffs_q0, "(port)a_coeffs_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, next_mul_fu_524_p2, "next_mul_fu_524_p2");
    sc_trace(mVcdFile, next_mul_reg_1123, "next_mul_reg_1123");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_89_fu_536_p2, "tmp_89_fu_536_p2");
    sc_trace(mVcdFile, tmp_89_reg_1131, "tmp_89_reg_1131");
    sc_trace(mVcdFile, tmp_fu_542_p3, "tmp_fu_542_p3");
    sc_trace(mVcdFile, tmp_reg_1136, "tmp_reg_1136");
    sc_trace(mVcdFile, exitcond3_fu_530_p2, "exitcond3_fu_530_p2");
    sc_trace(mVcdFile, j_3_fu_560_p2, "j_3_fu_560_p2");
    sc_trace(mVcdFile, j_3_reg_1144, "j_3_reg_1144");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond2_fu_554_p2, "exitcond2_fu_554_p2");
    sc_trace(mVcdFile, tmp_44_reg_1154, "tmp_44_reg_1154");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_494_p4, "grp_fu_494_p4");
    sc_trace(mVcdFile, tmp_57_reg_1159, "tmp_57_reg_1159");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_53_reg_1164, "tmp_53_reg_1164");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_65_reg_1169, "tmp_65_reg_1169");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_119_reg_1174, "tmp_119_reg_1174");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_88_fu_931_p2, "tmp_88_fu_931_p2");
    sc_trace(mVcdFile, tmp_88_reg_1182, "tmp_88_reg_1182");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, exitcond1_fu_925_p2, "exitcond1_fu_925_p2");
    sc_trace(mVcdFile, j_4_fu_970_p2, "j_4_fu_970_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, exitcond_fu_959_p2, "exitcond_fu_959_p2");
    sc_trace(mVcdFile, tmp_145_fu_995_p1, "tmp_145_fu_995_p1");
    sc_trace(mVcdFile, tmp_145_reg_1200, "tmp_145_reg_1200");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_fu_504_p4, "grp_fu_504_p4");
    sc_trace(mVcdFile, tmp_76_reg_1205, "tmp_76_reg_1205");
    sc_trace(mVcdFile, tmp_146_fu_1020_p1, "tmp_146_fu_1020_p1");
    sc_trace(mVcdFile, tmp_146_reg_1210, "tmp_146_reg_1210");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_147_fu_1048_p1, "tmp_147_fu_1048_p1");
    sc_trace(mVcdFile, tmp_147_reg_1215, "tmp_147_reg_1215");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, t_address1, "t_address1");
    sc_trace(mVcdFile, t_ce1, "t_ce1");
    sc_trace(mVcdFile, t_we1, "t_we1");
    sc_trace(mVcdFile, t_q1, "t_q1");
    sc_trace(mVcdFile, i_reg_425, "i_reg_425");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, phi_mul_reg_436, "phi_mul_reg_436");
    sc_trace(mVcdFile, j_reg_448, "j_reg_448");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_1_reg_460, "j_1_reg_460");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, j_2_reg_472, "j_2_reg_472");
    sc_trace(mVcdFile, tmp_124_fu_571_p1, "tmp_124_fu_571_p1");
    sc_trace(mVcdFile, tmp_125_fu_576_p1, "tmp_125_fu_576_p1");
    sc_trace(mVcdFile, tmp_90_fu_586_p1, "tmp_90_fu_586_p1");
    sc_trace(mVcdFile, tmp_93_fu_626_p1, "tmp_93_fu_626_p1");
    sc_trace(mVcdFile, tmp_96_fu_665_p1, "tmp_96_fu_665_p1");
    sc_trace(mVcdFile, tmp_99_fu_676_p1, "tmp_99_fu_676_p1");
    sc_trace(mVcdFile, tmp_102_fu_713_p1, "tmp_102_fu_713_p1");
    sc_trace(mVcdFile, tmp_105_fu_743_p1, "tmp_105_fu_743_p1");
    sc_trace(mVcdFile, tmp_108_fu_782_p1, "tmp_108_fu_782_p1");
    sc_trace(mVcdFile, tmp_111_fu_804_p1, "tmp_111_fu_804_p1");
    sc_trace(mVcdFile, tmp_114_fu_859_p1, "tmp_114_fu_859_p1");
    sc_trace(mVcdFile, tmp_118_fu_899_p1, "tmp_118_fu_899_p1");
    sc_trace(mVcdFile, tmp_121_fu_920_p1, "tmp_121_fu_920_p1");
    sc_trace(mVcdFile, tmp_s_fu_949_p1, "tmp_s_fu_949_p1");
    sc_trace(mVcdFile, tmp_87_fu_954_p1, "tmp_87_fu_954_p1");
    sc_trace(mVcdFile, tmp_134_fu_965_p1, "tmp_134_fu_965_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_123_fu_581_p1, "tmp_123_fu_581_p1");
    sc_trace(mVcdFile, tmp_91_fu_613_p2, "tmp_91_fu_613_p2");
    sc_trace(mVcdFile, tmp_94_fu_653_p2, "tmp_94_fu_653_p2");
    sc_trace(mVcdFile, tmp_100_fu_698_p3, "tmp_100_fu_698_p3");
    sc_trace(mVcdFile, tmp_103_fu_730_p2, "tmp_103_fu_730_p2");
    sc_trace(mVcdFile, tmp_106_fu_770_p2, "tmp_106_fu_770_p2");
    sc_trace(mVcdFile, tmp_112_fu_844_p3, "tmp_112_fu_844_p3");
    sc_trace(mVcdFile, tmp_116_fu_886_p2, "tmp_116_fu_886_p2");
    sc_trace(mVcdFile, tmp_127_fu_988_p2, "tmp_127_fu_988_p2");
    sc_trace(mVcdFile, tmp_128_fu_1012_p3, "tmp_128_fu_1012_p3");
    sc_trace(mVcdFile, tmp_131_fu_1041_p2, "tmp_131_fu_1041_p2");
    sc_trace(mVcdFile, tmp_133_fu_1069_p2, "tmp_133_fu_1069_p2");
    sc_trace(mVcdFile, tmp_148_fu_1076_p1, "tmp_148_fu_1076_p1");
    sc_trace(mVcdFile, j_cast6_fu_550_p1, "j_cast6_fu_550_p1");
    sc_trace(mVcdFile, tmp_122_fu_566_p2, "tmp_122_fu_566_p2");
    sc_trace(mVcdFile, tmp_135_fu_601_p1, "tmp_135_fu_601_p1");
    sc_trace(mVcdFile, tmp_42_fu_605_p3, "tmp_42_fu_605_p3");
    sc_trace(mVcdFile, tmp_41_fu_591_p4, "tmp_41_fu_591_p4");
    sc_trace(mVcdFile, tmp_92_fu_620_p2, "tmp_92_fu_620_p2");
    sc_trace(mVcdFile, tmp_137_fu_641_p1, "tmp_137_fu_641_p1");
    sc_trace(mVcdFile, tmp_45_fu_645_p3, "tmp_45_fu_645_p3");
    sc_trace(mVcdFile, tmp_95_fu_659_p2, "tmp_95_fu_659_p2");
    sc_trace(mVcdFile, tmp_98_fu_670_p2, "tmp_98_fu_670_p2");
    sc_trace(mVcdFile, tmp_138_fu_681_p1, "tmp_138_fu_681_p1");
    sc_trace(mVcdFile, tmp_60_fu_685_p3, "tmp_60_fu_685_p3");
    sc_trace(mVcdFile, tmp_61_fu_693_p2, "tmp_61_fu_693_p2");
    sc_trace(mVcdFile, tmp_101_fu_707_p2, "tmp_101_fu_707_p2");
    sc_trace(mVcdFile, tmp_139_fu_718_p1, "tmp_139_fu_718_p1");
    sc_trace(mVcdFile, tmp_51_fu_722_p3, "tmp_51_fu_722_p3");
    sc_trace(mVcdFile, grp_fu_514_p4, "grp_fu_514_p4");
    sc_trace(mVcdFile, tmp_104_fu_737_p2, "tmp_104_fu_737_p2");
    sc_trace(mVcdFile, tmp_140_fu_758_p1, "tmp_140_fu_758_p1");
    sc_trace(mVcdFile, tmp_54_fu_762_p3, "tmp_54_fu_762_p3");
    sc_trace(mVcdFile, tmp_107_fu_776_p2, "tmp_107_fu_776_p2");
    sc_trace(mVcdFile, tmp_110_fu_798_p2, "tmp_110_fu_798_p2");
    sc_trace(mVcdFile, tmp_141_fu_819_p1, "tmp_141_fu_819_p1");
    sc_trace(mVcdFile, tmp_67_fu_823_p3, "tmp_67_fu_823_p3");
    sc_trace(mVcdFile, tmp_142_fu_836_p3, "tmp_142_fu_836_p3");
    sc_trace(mVcdFile, tmp_68_fu_831_p2, "tmp_68_fu_831_p2");
    sc_trace(mVcdFile, tmp_113_fu_853_p2, "tmp_113_fu_853_p2");
    sc_trace(mVcdFile, tmp_143_fu_864_p1, "tmp_143_fu_864_p1");
    sc_trace(mVcdFile, tmp_115_fu_868_p3, "tmp_115_fu_868_p3");
    sc_trace(mVcdFile, tmp_58_fu_876_p4, "tmp_58_fu_876_p4");
    sc_trace(mVcdFile, tmp_117_fu_893_p2, "tmp_117_fu_893_p2");
    sc_trace(mVcdFile, tmp_120_fu_914_p2, "tmp_120_fu_914_p2");
    sc_trace(mVcdFile, tmp_11_fu_937_p3, "tmp_11_fu_937_p3");
    sc_trace(mVcdFile, tmp_cast9_fu_945_p1, "tmp_cast9_fu_945_p1");
    sc_trace(mVcdFile, tmp_144_fu_976_p1, "tmp_144_fu_976_p1");
    sc_trace(mVcdFile, tmp_126_fu_980_p3, "tmp_126_fu_980_p3");
    sc_trace(mVcdFile, tmp_74_fu_999_p3, "tmp_74_fu_999_p3");
    sc_trace(mVcdFile, tmp_75_fu_1006_p2, "tmp_75_fu_1006_p2");
    sc_trace(mVcdFile, tmp_38_fu_1031_p4, "tmp_38_fu_1031_p4");
    sc_trace(mVcdFile, tmp_130_fu_1024_p3, "tmp_130_fu_1024_p3");
    sc_trace(mVcdFile, tmp_39_fu_1059_p4, "tmp_39_fu_1059_p4");
    sc_trace(mVcdFile, tmp_132_fu_1052_p3, "tmp_132_fu_1052_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

poly_Sq_tobytes::~poly_Sq_tobytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
}

void poly_Sq_tobytes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_reg_425 = tmp_89_reg_1131.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_425 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_530_p2.read(), ap_const_lv1_1))) {
        j_1_reg_460 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        j_1_reg_460 = tmp_88_reg_1182.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_925_p2.read(), ap_const_lv1_1))) {
        j_2_reg_472 = ap_const_lv4_4;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_959_p2.read()))) {
        j_2_reg_472 = j_4_fu_970_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_530_p2.read(), ap_const_lv1_0))) {
        j_reg_448 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_448 = j_3_reg_1144.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        phi_mul_reg_436 = next_mul_reg_1123.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_436 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_3_reg_1144 = j_3_fu_560_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        next_mul_reg_1123 = next_mul_fu_524_p2.read();
        tmp_89_reg_1131 = tmp_89_fu_536_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_119_reg_1174 = t_q0.read().range(10, 3);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tmp_145_reg_1200 = tmp_145_fu_995_p1.read();
        tmp_76_reg_1205 = t_q0.read().range(6, 5);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_146_reg_1210 = tmp_146_fu_1020_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_147_reg_1215 = tmp_147_fu_1048_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_44_reg_1154 = t_q1.read().range(12, 5);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_53_reg_1164 = t_q1.read().range(11, 4);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_57_reg_1159 = t_q1.read().range(15, 10);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_65_reg_1169 = t_q0.read().range(15, 9);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_88_reg_1182 = tmp_88_fu_931_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_530_p2.read(), ap_const_lv1_0))) {
        tmp_reg_1136 = tmp_fu_542_p3.read();
    }
}

void poly_Sq_tobytes::thread_a_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        a_coeffs_address0 =  (sc_lv<9>) (tmp_s_fu_949_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_coeffs_address0 =  (sc_lv<9>) (tmp_124_fu_571_p1.read());
    } else {
        a_coeffs_address0 = "XXXXXXXXX";
    }
}

void poly_Sq_tobytes::thread_a_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        a_coeffs_ce0 = ap_const_logic_1;
    } else {
        a_coeffs_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void poly_Sq_tobytes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_exitcond1_fu_925_p2() {
    exitcond1_fu_925_p2 = (!j_1_reg_460.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_460.read() == ap_const_lv3_4);
}

void poly_Sq_tobytes::thread_exitcond2_fu_554_p2() {
    exitcond2_fu_554_p2 = (!j_reg_448.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_448.read() == ap_const_lv4_8);
}

void poly_Sq_tobytes::thread_exitcond3_fu_530_p2() {
    exitcond3_fu_530_p2 = (!i_reg_425.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_425.read() == ap_const_lv6_3F);
}

void poly_Sq_tobytes::thread_exitcond_fu_959_p2() {
    exitcond_fu_959_p2 = (!j_2_reg_472.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_2_reg_472.read() == ap_const_lv4_8);
}

void poly_Sq_tobytes::thread_grp_fu_494_p4() {
    grp_fu_494_p4 = t_q1.read().range(15, 10);
}

void poly_Sq_tobytes::thread_grp_fu_504_p4() {
    grp_fu_504_p4 = t_q0.read().range(6, 5);
}

void poly_Sq_tobytes::thread_grp_fu_514_p4() {
    grp_fu_514_p4 = t_q0.read().range(14, 7);
}

void poly_Sq_tobytes::thread_j_3_fu_560_p2() {
    j_3_fu_560_p2 = (!j_reg_448.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_448.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void poly_Sq_tobytes::thread_j_4_fu_970_p2() {
    j_4_fu_970_p2 = (!j_2_reg_472.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_2_reg_472.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void poly_Sq_tobytes::thread_j_cast6_fu_550_p1() {
    j_cast6_fu_550_p1 = esl_zext<9,4>(j_reg_448.read());
}

void poly_Sq_tobytes::thread_next_mul_fu_524_p2() {
    next_mul_fu_524_p2 = (!phi_mul_reg_436.read().is_01() || !ap_const_lv10_B.is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul_reg_436.read()) + sc_biguint<10>(ap_const_lv10_B));
}

void poly_Sq_tobytes::thread_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_address0 =  (sc_lv<10>) (ap_const_lv64_2B5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        r_address0 =  (sc_lv<10>) (ap_const_lv64_2B7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_address0 =  (sc_lv<10>) (ap_const_lv64_2B9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_address0 =  (sc_lv<10>) (tmp_121_fu_920_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_address0 =  (sc_lv<10>) (tmp_114_fu_859_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_address0 =  (sc_lv<10>) (tmp_108_fu_782_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_address0 =  (sc_lv<10>) (tmp_102_fu_713_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_address0 =  (sc_lv<10>) (tmp_96_fu_665_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_address0 =  (sc_lv<10>) (tmp_90_fu_586_p1.read());
    } else {
        r_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_address1 =  (sc_lv<10>) (ap_const_lv64_2B6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_address1 =  (sc_lv<10>) (ap_const_lv64_2B8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        r_address1 =  (sc_lv<10>) (ap_const_lv64_2BA);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_address1 =  (sc_lv<10>) (tmp_118_fu_899_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_address1 =  (sc_lv<10>) (tmp_111_fu_804_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_address1 =  (sc_lv<10>) (tmp_105_fu_743_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_address1 =  (sc_lv<10>) (tmp_99_fu_676_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_address1 =  (sc_lv<10>) (tmp_93_fu_626_p1.read());
    } else {
        r_address1 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        r_ce0 = ap_const_logic_1;
    } else {
        r_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        r_ce1 = ap_const_logic_1;
    } else {
        r_ce1 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_d0 = tmp_148_fu_1076_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        r_d0 = tmp_131_fu_1041_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_d0 = tmp_128_fu_1012_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_d0 = tmp_119_reg_1174.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_d0 = tmp_112_fu_844_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_d0 = tmp_106_fu_770_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_d0 = tmp_100_fu_698_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_d0 = tmp_94_fu_653_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_d0 = tmp_123_fu_581_p1.read();
    } else {
        r_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_r_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_d1 = tmp_133_fu_1069_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        r_d1 = tmp_127_fu_988_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_d1 = tmp_116_fu_886_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_d1 = t_q0.read().range(8, 1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_d1 = tmp_103_fu_730_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        r_d1 = t_q1.read().range(9, 2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_d1 = tmp_91_fu_613_p2.read();
    } else {
        r_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        r_we0 = ap_const_logic_1;
    } else {
        r_we0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_r_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        r_we1 = ap_const_logic_1;
    } else {
        r_we1 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_959_p2.read()))) {
        t_address0 =  (sc_lv<3>) (tmp_134_fu_965_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                 esl_seteq<1,1,1>(exitcond_fu_959_p2.read(), ap_const_lv1_1)))) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_address0 =  (sc_lv<3>) (tmp_125_fu_576_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        t_address0 =  (sc_lv<3>) ("XXX");
    }
}

void poly_Sq_tobytes::thread_t_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_address1 =  (sc_lv<3>) (tmp_87_fu_954_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else {
        t_address1 =  (sc_lv<3>) ("XXX");
    }
}

void poly_Sq_tobytes::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_959_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_959_p2.read(), ap_const_lv1_1)))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_t_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        t_ce1 = ap_const_logic_1;
    } else {
        t_ce1 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_t_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_959_p2.read()))) {
        t_d0 = ap_const_lv16_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_d0 = a_coeffs_q0.read();
    } else {
        t_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_t_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_959_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_t_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_we1 = ap_const_logic_1;
    } else {
        t_we1 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_tmp_100_fu_698_p3() {
    tmp_100_fu_698_p3 = esl_concat<2,6>(grp_fu_504_p4.read(), tmp_61_fu_693_p2.read());
}

void poly_Sq_tobytes::thread_tmp_101_fu_707_p2() {
    tmp_101_fu_707_p2 = (!ap_const_lv10_4.is_01() || !phi_mul_reg_436.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_4) + sc_biguint<10>(phi_mul_reg_436.read()));
}

void poly_Sq_tobytes::thread_tmp_102_fu_713_p1() {
    tmp_102_fu_713_p1 = esl_zext<64,10>(tmp_101_fu_707_p2.read());
}

void poly_Sq_tobytes::thread_tmp_103_fu_730_p2() {
    tmp_103_fu_730_p2 = (tmp_51_fu_722_p3.read() | grp_fu_514_p4.read());
}

void poly_Sq_tobytes::thread_tmp_104_fu_737_p2() {
    tmp_104_fu_737_p2 = (!ap_const_lv10_5.is_01() || !phi_mul_reg_436.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_5) + sc_biguint<10>(phi_mul_reg_436.read()));
}

void poly_Sq_tobytes::thread_tmp_105_fu_743_p1() {
    tmp_105_fu_743_p1 = esl_zext<64,10>(tmp_104_fu_737_p2.read());
}

void poly_Sq_tobytes::thread_tmp_106_fu_770_p2() {
    tmp_106_fu_770_p2 = (tmp_54_fu_762_p3.read() | tmp_53_reg_1164.read());
}

void poly_Sq_tobytes::thread_tmp_107_fu_776_p2() {
    tmp_107_fu_776_p2 = (!ap_const_lv10_6.is_01() || !phi_mul_reg_436.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_6) + sc_biguint<10>(phi_mul_reg_436.read()));
}

void poly_Sq_tobytes::thread_tmp_108_fu_782_p1() {
    tmp_108_fu_782_p1 = esl_zext<64,10>(tmp_107_fu_776_p2.read());
}

void poly_Sq_tobytes::thread_tmp_110_fu_798_p2() {
    tmp_110_fu_798_p2 = (!ap_const_lv10_7.is_01() || !phi_mul_reg_436.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_7) + sc_biguint<10>(phi_mul_reg_436.read()));
}

void poly_Sq_tobytes::thread_tmp_111_fu_804_p1() {
    tmp_111_fu_804_p1 = esl_zext<64,10>(tmp_110_fu_798_p2.read());
}

void poly_Sq_tobytes::thread_tmp_112_fu_844_p3() {
    tmp_112_fu_844_p3 = esl_concat<1,7>(tmp_142_fu_836_p3.read(), tmp_68_fu_831_p2.read());
}

void poly_Sq_tobytes::thread_tmp_113_fu_853_p2() {
    tmp_113_fu_853_p2 = (!ap_const_lv10_8.is_01() || !phi_mul_reg_436.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_8) + sc_biguint<10>(phi_mul_reg_436.read()));
}

void poly_Sq_tobytes::thread_tmp_114_fu_859_p1() {
    tmp_114_fu_859_p1 = esl_zext<64,10>(tmp_113_fu_853_p2.read());
}

void poly_Sq_tobytes::thread_tmp_115_fu_868_p3() {
    tmp_115_fu_868_p3 = esl_concat<3,5>(tmp_143_fu_864_p1.read(), ap_const_lv5_0);
}

void poly_Sq_tobytes::thread_tmp_116_fu_886_p2() {
    tmp_116_fu_886_p2 = (tmp_115_fu_868_p3.read() | tmp_58_fu_876_p4.read());
}

void poly_Sq_tobytes::thread_tmp_117_fu_893_p2() {
    tmp_117_fu_893_p2 = (!ap_const_lv10_9.is_01() || !phi_mul_reg_436.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_9) + sc_biguint<10>(phi_mul_reg_436.read()));
}

void poly_Sq_tobytes::thread_tmp_118_fu_899_p1() {
    tmp_118_fu_899_p1 = esl_zext<64,10>(tmp_117_fu_893_p2.read());
}

void poly_Sq_tobytes::thread_tmp_11_fu_937_p3() {
    tmp_11_fu_937_p3 = esl_concat<1,3>(ap_const_lv1_1, j_1_reg_460.read());
}

void poly_Sq_tobytes::thread_tmp_120_fu_914_p2() {
    tmp_120_fu_914_p2 = (!ap_const_lv10_A.is_01() || !phi_mul_reg_436.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_A) + sc_biguint<10>(phi_mul_reg_436.read()));
}

void poly_Sq_tobytes::thread_tmp_121_fu_920_p1() {
    tmp_121_fu_920_p1 = esl_zext<64,10>(tmp_120_fu_914_p2.read());
}

void poly_Sq_tobytes::thread_tmp_122_fu_566_p2() {
    tmp_122_fu_566_p2 = (!tmp_reg_1136.read().is_01() || !j_cast6_fu_550_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_reg_1136.read()) + sc_biguint<9>(j_cast6_fu_550_p1.read()));
}

void poly_Sq_tobytes::thread_tmp_123_fu_581_p1() {
    tmp_123_fu_581_p1 = t_q0.read().range(8-1, 0);
}

void poly_Sq_tobytes::thread_tmp_124_fu_571_p1() {
    tmp_124_fu_571_p1 = esl_zext<64,9>(tmp_122_fu_566_p2.read());
}

void poly_Sq_tobytes::thread_tmp_125_fu_576_p1() {
    tmp_125_fu_576_p1 = esl_zext<64,4>(j_reg_448.read());
}

void poly_Sq_tobytes::thread_tmp_126_fu_980_p3() {
    tmp_126_fu_980_p3 = esl_concat<4,4>(tmp_144_fu_976_p1.read(), ap_const_lv4_0);
}

void poly_Sq_tobytes::thread_tmp_127_fu_988_p2() {
    tmp_127_fu_988_p2 = (tmp_126_fu_980_p3.read() | grp_fu_514_p4.read());
}

void poly_Sq_tobytes::thread_tmp_128_fu_1012_p3() {
    tmp_128_fu_1012_p3 = esl_concat<2,6>(tmp_76_reg_1205.read(), tmp_75_fu_1006_p2.read());
}

void poly_Sq_tobytes::thread_tmp_130_fu_1024_p3() {
    tmp_130_fu_1024_p3 = esl_concat<2,6>(tmp_146_reg_1210.read(), ap_const_lv6_0);
}

void poly_Sq_tobytes::thread_tmp_131_fu_1041_p2() {
    tmp_131_fu_1041_p2 = (tmp_38_fu_1031_p4.read() | tmp_130_fu_1024_p3.read());
}

void poly_Sq_tobytes::thread_tmp_132_fu_1052_p3() {
    tmp_132_fu_1052_p3 = esl_concat<5,3>(tmp_147_reg_1215.read(), ap_const_lv3_0);
}

void poly_Sq_tobytes::thread_tmp_133_fu_1069_p2() {
    tmp_133_fu_1069_p2 = (tmp_39_fu_1059_p4.read() | tmp_132_fu_1052_p3.read());
}

void poly_Sq_tobytes::thread_tmp_134_fu_965_p1() {
    tmp_134_fu_965_p1 = esl_zext<64,4>(j_2_reg_472.read());
}

void poly_Sq_tobytes::thread_tmp_135_fu_601_p1() {
    tmp_135_fu_601_p1 = t_q1.read().range(5-1, 0);
}

void poly_Sq_tobytes::thread_tmp_137_fu_641_p1() {
    tmp_137_fu_641_p1 = t_q1.read().range(2-1, 0);
}

void poly_Sq_tobytes::thread_tmp_138_fu_681_p1() {
    tmp_138_fu_681_p1 = t_q0.read().range(5-1, 0);
}

void poly_Sq_tobytes::thread_tmp_139_fu_718_p1() {
    tmp_139_fu_718_p1 = t_q1.read().range(4-1, 0);
}

void poly_Sq_tobytes::thread_tmp_140_fu_758_p1() {
    tmp_140_fu_758_p1 = t_q0.read().range(1-1, 0);
}

void poly_Sq_tobytes::thread_tmp_141_fu_819_p1() {
    tmp_141_fu_819_p1 = t_q1.read().range(5-1, 0);
}

void poly_Sq_tobytes::thread_tmp_142_fu_836_p3() {
    tmp_142_fu_836_p3 = t_q1.read().range(5, 5);
}

void poly_Sq_tobytes::thread_tmp_143_fu_864_p1() {
    tmp_143_fu_864_p1 = t_q0.read().range(3-1, 0);
}

void poly_Sq_tobytes::thread_tmp_144_fu_976_p1() {
    tmp_144_fu_976_p1 = t_q1.read().range(4-1, 0);
}

void poly_Sq_tobytes::thread_tmp_145_fu_995_p1() {
    tmp_145_fu_995_p1 = t_q0.read().range(5-1, 0);
}

void poly_Sq_tobytes::thread_tmp_146_fu_1020_p1() {
    tmp_146_fu_1020_p1 = t_q1.read().range(2-1, 0);
}

void poly_Sq_tobytes::thread_tmp_147_fu_1048_p1() {
    tmp_147_fu_1048_p1 = t_q0.read().range(5-1, 0);
}

void poly_Sq_tobytes::thread_tmp_148_fu_1076_p1() {
    tmp_148_fu_1076_p1 = t_q1.read().range(8-1, 0);
}

void poly_Sq_tobytes::thread_tmp_38_fu_1031_p4() {
    tmp_38_fu_1031_p4 = t_q0.read().range(12, 5);
}

void poly_Sq_tobytes::thread_tmp_39_fu_1059_p4() {
    tmp_39_fu_1059_p4 = t_q1.read().range(15, 8);
}

void poly_Sq_tobytes::thread_tmp_41_fu_591_p4() {
    tmp_41_fu_591_p4 = t_q0.read().range(15, 8);
}

void poly_Sq_tobytes::thread_tmp_42_fu_605_p3() {
    tmp_42_fu_605_p3 = esl_concat<5,3>(tmp_135_fu_601_p1.read(), ap_const_lv3_0);
}

void poly_Sq_tobytes::thread_tmp_45_fu_645_p3() {
    tmp_45_fu_645_p3 = esl_concat<2,6>(tmp_137_fu_641_p1.read(), ap_const_lv6_0);
}

void poly_Sq_tobytes::thread_tmp_51_fu_722_p3() {
    tmp_51_fu_722_p3 = esl_concat<4,4>(tmp_139_fu_718_p1.read(), ap_const_lv4_0);
}

void poly_Sq_tobytes::thread_tmp_54_fu_762_p3() {
    tmp_54_fu_762_p3 = esl_concat<1,7>(tmp_140_fu_758_p1.read(), ap_const_lv7_0);
}

void poly_Sq_tobytes::thread_tmp_58_fu_876_p4() {
    tmp_58_fu_876_p4 = t_q1.read().range(13, 6);
}

void poly_Sq_tobytes::thread_tmp_60_fu_685_p3() {
    tmp_60_fu_685_p3 = esl_concat<5,1>(tmp_138_fu_681_p1.read(), ap_const_lv1_0);
}

void poly_Sq_tobytes::thread_tmp_61_fu_693_p2() {
    tmp_61_fu_693_p2 = (tmp_60_fu_685_p3.read() | tmp_57_reg_1159.read());
}

void poly_Sq_tobytes::thread_tmp_67_fu_823_p3() {
    tmp_67_fu_823_p3 = esl_concat<5,2>(tmp_141_fu_819_p1.read(), ap_const_lv2_0);
}

void poly_Sq_tobytes::thread_tmp_68_fu_831_p2() {
    tmp_68_fu_831_p2 = (tmp_67_fu_823_p3.read() | tmp_65_reg_1169.read());
}

void poly_Sq_tobytes::thread_tmp_74_fu_999_p3() {
    tmp_74_fu_999_p3 = esl_concat<5,1>(tmp_145_reg_1200.read(), ap_const_lv1_0);
}

void poly_Sq_tobytes::thread_tmp_75_fu_1006_p2() {
    tmp_75_fu_1006_p2 = (tmp_74_fu_999_p3.read() | grp_fu_494_p4.read());
}

void poly_Sq_tobytes::thread_tmp_87_fu_954_p1() {
    tmp_87_fu_954_p1 = esl_zext<64,3>(j_1_reg_460.read());
}

void poly_Sq_tobytes::thread_tmp_88_fu_931_p2() {
    tmp_88_fu_931_p2 = (!j_1_reg_460.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_1_reg_460.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void poly_Sq_tobytes::thread_tmp_89_fu_536_p2() {
    tmp_89_fu_536_p2 = (!i_reg_425.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_425.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void poly_Sq_tobytes::thread_tmp_90_fu_586_p1() {
    tmp_90_fu_586_p1 = esl_zext<64,10>(phi_mul_reg_436.read());
}

void poly_Sq_tobytes::thread_tmp_91_fu_613_p2() {
    tmp_91_fu_613_p2 = (tmp_42_fu_605_p3.read() | tmp_41_fu_591_p4.read());
}

void poly_Sq_tobytes::thread_tmp_92_fu_620_p2() {
    tmp_92_fu_620_p2 = (!ap_const_lv10_1.is_01() || !phi_mul_reg_436.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(phi_mul_reg_436.read()));
}

void poly_Sq_tobytes::thread_tmp_93_fu_626_p1() {
    tmp_93_fu_626_p1 = esl_zext<64,10>(tmp_92_fu_620_p2.read());
}

void poly_Sq_tobytes::thread_tmp_94_fu_653_p2() {
    tmp_94_fu_653_p2 = (tmp_45_fu_645_p3.read() | tmp_44_reg_1154.read());
}

void poly_Sq_tobytes::thread_tmp_95_fu_659_p2() {
    tmp_95_fu_659_p2 = (!ap_const_lv10_2.is_01() || !phi_mul_reg_436.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_2) + sc_biguint<10>(phi_mul_reg_436.read()));
}

void poly_Sq_tobytes::thread_tmp_96_fu_665_p1() {
    tmp_96_fu_665_p1 = esl_zext<64,10>(tmp_95_fu_659_p2.read());
}

void poly_Sq_tobytes::thread_tmp_98_fu_670_p2() {
    tmp_98_fu_670_p2 = (!ap_const_lv10_3.is_01() || !phi_mul_reg_436.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_3) + sc_biguint<10>(phi_mul_reg_436.read()));
}

void poly_Sq_tobytes::thread_tmp_99_fu_676_p1() {
    tmp_99_fu_676_p1 = esl_zext<64,10>(tmp_98_fu_670_p2.read());
}

void poly_Sq_tobytes::thread_tmp_cast9_fu_945_p1() {
    tmp_cast9_fu_945_p1 = esl_sext<9,4>(tmp_11_fu_937_p3.read());
}

void poly_Sq_tobytes::thread_tmp_fu_542_p3() {
    tmp_fu_542_p3 = esl_concat<6,3>(i_reg_425.read(), ap_const_lv3_0);
}

void poly_Sq_tobytes::thread_tmp_s_fu_949_p1() {
    tmp_s_fu_949_p1 = esl_zext<64,9>(tmp_cast9_fu_945_p1.read());
}

void poly_Sq_tobytes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_530_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_554_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond1_fu_925_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_959_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

}

