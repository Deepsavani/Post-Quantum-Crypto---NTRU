// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sample_fixed_type (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        r_coeffs_address0,
        r_coeffs_ce0,
        r_coeffs_we0,
        r_coeffs_d0,
        u_address0,
        u_ce0,
        u_q0,
        u_address1,
        u_ce1,
        u_q1
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] r_coeffs_address0;
output   r_coeffs_ce0;
output   r_coeffs_we0;
output  [15:0] r_coeffs_d0;
output  [11:0] u_address0;
output   u_ce0;
input  [7:0] u_q0;
output  [11:0] u_address1;
output   u_ce1;
input  [7:0] u_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] r_coeffs_address0;
reg r_coeffs_ce0;
reg r_coeffs_we0;
reg[15:0] r_coeffs_d0;
reg[11:0] u_address0;
reg u_ce0;
reg[11:0] u_address1;
reg u_ce1;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] reg_370;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
reg   [7:0] reg_374;
wire   [6:0] i_4_fu_388_p2;
reg   [6:0] i_4_reg_945;
wire    ap_CS_fsm_state2;
wire   [11:0] tmp_fu_406_p2;
reg   [11:0] tmp_reg_950;
wire   [0:0] exitcond3_fu_382_p2;
wire   [8:0] tmp_7_fu_503_p3;
reg   [8:0] tmp_7_reg_987;
wire    ap_CS_fsm_state4;
reg   [1:0] tmp_1_reg_994;
reg   [3:0] tmp_16_reg_1019;
wire    ap_CS_fsm_state6;
reg   [5:0] tmp_25_reg_1044;
wire    ap_CS_fsm_state8;
wire   [6:0] i_5_fu_874_p2;
reg   [6:0] i_5_reg_1067;
wire    ap_CS_fsm_state11;
reg   [8:0] s_addr_4_reg_1072;
wire   [0:0] exitcond2_fu_868_p2;
reg   [8:0] s_addr_5_reg_1080;
wire    ap_CS_fsm_state13;
wire   [0:0] exitcond1_fu_892_p2;
wire   [7:0] i_6_fu_903_p2;
reg   [7:0] i_6_reg_1085;
wire   [8:0] i_7_fu_922_p2;
reg   [8:0] i_7_reg_1093;
wire    ap_CS_fsm_state16;
wire   [63:0] tmp_37_fu_928_p1;
reg   [63:0] tmp_37_reg_1098;
wire   [0:0] exitcond_fu_916_p2;
reg   [8:0] s_address0;
reg    s_ce0;
reg    s_we0;
reg   [31:0] s_d0;
wire   [31:0] s_q0;
reg    s_ce1;
reg    s_we1;
wire   [31:0] s_q1;
wire    grp_crypto_sort_fu_365_ap_start;
wire    grp_crypto_sort_fu_365_ap_done;
wire    grp_crypto_sort_fu_365_ap_idle;
wire    grp_crypto_sort_fu_365_ap_ready;
wire   [8:0] grp_crypto_sort_fu_365_array_r_address0;
wire    grp_crypto_sort_fu_365_array_r_ce0;
wire    grp_crypto_sort_fu_365_array_r_we0;
wire   [31:0] grp_crypto_sort_fu_365_array_r_d0;
wire   [8:0] grp_crypto_sort_fu_365_array_r_address1;
wire    grp_crypto_sort_fu_365_array_r_ce1;
wire    grp_crypto_sort_fu_365_array_r_we1;
wire   [31:0] grp_crypto_sort_fu_365_array_r_d1;
reg   [6:0] i_reg_320;
wire    ap_CS_fsm_state10;
reg   [6:0] i_1_reg_332;
wire    ap_CS_fsm_state12;
reg   [7:0] i_2_reg_343;
wire    ap_CS_fsm_state14;
reg   [8:0] i_3_reg_354;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state17;
reg    grp_crypto_sort_fu_365_ap_start_reg;
wire   [63:0] sum_cast_fu_418_p1;
wire   [63:0] sum2_cast_fu_439_p1;
wire   [63:0] sum6_cast_fu_459_p1;
wire   [63:0] sum8_cast_fu_479_p1;
wire   [63:0] tmp_8_fu_511_p1;
wire   [63:0] sum1_cast_fu_541_p1;
wire   [63:0] sum3_cast_fu_561_p1;
wire   [63:0] sum4_cast_fu_581_p1;
wire   [63:0] sum5_cast_fu_601_p1;
wire   [63:0] tmp_15_fu_631_p1;
wire   [63:0] sum7_cast_fu_661_p1;
wire   [63:0] sum9_cast_fu_681_p1;
wire   [63:0] sum10_cast_fu_701_p1;
wire   [63:0] sum11_cast_fu_721_p1;
wire   [63:0] tmp_24_fu_751_p1;
wire   [63:0] sum12_cast_fu_781_p1;
wire   [63:0] sum13_cast_fu_801_p1;
wire   [63:0] sum14_cast_fu_821_p1;
wire   [63:0] tmp_32_fu_863_p1;
wire   [63:0] tmp_33_fu_880_p1;
wire   [63:0] tmp_35_fu_898_p1;
wire   [31:0] tmp_6_fu_488_p6;
wire   [31:0] tmp_13_fu_610_p7;
wire   [31:0] tmp_22_fu_730_p7;
wire   [31:0] tmp_30_fu_851_p2;
wire   [31:0] tmp_34_fu_885_p2;
wire   [31:0] tmp_36_fu_909_p2;
wire   [15:0] tmp_92_cast_fu_937_p1;
wire   [10:0] p_shl_fu_394_p3;
wire   [11:0] p_shl_cast_fu_402_p1;
wire   [11:0] i_cast1_fu_378_p1;
wire   [11:0] sum_fu_412_p2;
wire   [11:0] tmp_s_fu_423_p2;
wire  signed [12:0] tmp_1_cast_fu_429_p1;
wire   [12:0] sum2_fu_433_p2;
wire   [11:0] tmp_4_fu_444_p2;
wire  signed [12:0] tmp_5_cast_fu_449_p1;
wire   [12:0] sum6_fu_453_p2;
wire   [11:0] tmp_2_fu_464_p2;
wire  signed [12:0] tmp_12_cast_fu_469_p1;
wire   [12:0] sum8_fu_473_p2;
wire   [5:0] tmp_3_fu_484_p1;
wire   [11:0] tmp_5_fu_526_p2;
wire  signed [12:0] tmp_23_cast_fu_531_p1;
wire   [12:0] sum1_fu_535_p2;
wire   [11:0] tmp_9_fu_546_p2;
wire  signed [12:0] tmp_27_cast_fu_551_p1;
wire   [12:0] sum3_fu_555_p2;
wire   [11:0] tmp_10_fu_566_p2;
wire  signed [12:0] tmp_31_cast_fu_571_p1;
wire   [12:0] sum4_fu_575_p2;
wire   [11:0] tmp_11_fu_586_p2;
wire  signed [12:0] tmp_35_cast_fu_591_p1;
wire   [12:0] sum5_fu_595_p2;
wire   [3:0] tmp_12_fu_606_p1;
wire   [8:0] tmp_14_fu_626_p2;
wire   [11:0] tmp_17_fu_646_p2;
wire  signed [12:0] tmp_47_cast_fu_651_p1;
wire   [12:0] sum7_fu_655_p2;
wire   [11:0] tmp_18_fu_666_p2;
wire  signed [12:0] tmp_51_cast_fu_671_p1;
wire   [12:0] sum9_fu_675_p2;
wire   [11:0] tmp_19_fu_686_p2;
wire  signed [12:0] tmp_55_cast_fu_691_p1;
wire   [12:0] sum10_fu_695_p2;
wire   [11:0] tmp_20_fu_706_p2;
wire  signed [12:0] tmp_59_cast_fu_711_p1;
wire   [12:0] sum11_fu_715_p2;
wire   [1:0] tmp_21_fu_726_p1;
wire   [8:0] tmp_23_fu_746_p2;
wire   [11:0] tmp_26_fu_766_p2;
wire  signed [12:0] tmp_70_cast_fu_771_p1;
wire   [12:0] sum12_fu_775_p2;
wire   [11:0] tmp_28_fu_786_p2;
wire  signed [12:0] tmp_75_cast_fu_791_p1;
wire   [12:0] sum13_fu_795_p2;
wire   [11:0] tmp_29_fu_806_p2;
wire  signed [12:0] tmp_79_cast_fu_811_p1;
wire   [12:0] sum14_fu_815_p2;
wire   [15:0] tmp_27_fu_826_p4;
wire   [31:0] tmp_73_cast_fu_835_p1;
wire   [31:0] tmp9_fu_839_p5;
wire   [8:0] tmp_31_fu_858_p2;
wire   [1:0] tmp_38_fu_933_p1;
reg   [16:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 grp_crypto_sort_fu_365_ap_start_reg = 1'b0;
end

sample_fixed_type_s #(
    .DataWidth( 32 ),
    .AddressRange( 508 ),
    .AddressWidth( 9 ))
s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s_address0),
    .ce0(s_ce0),
    .we0(s_we0),
    .d0(s_d0),
    .q0(s_q0),
    .address1(grp_crypto_sort_fu_365_array_r_address1),
    .ce1(s_ce1),
    .we1(s_we1),
    .d1(grp_crypto_sort_fu_365_array_r_d1),
    .q1(s_q1)
);

crypto_sort grp_crypto_sort_fu_365(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_crypto_sort_fu_365_ap_start),
    .ap_done(grp_crypto_sort_fu_365_ap_done),
    .ap_idle(grp_crypto_sort_fu_365_ap_idle),
    .ap_ready(grp_crypto_sort_fu_365_ap_ready),
    .array_r_address0(grp_crypto_sort_fu_365_array_r_address0),
    .array_r_ce0(grp_crypto_sort_fu_365_array_r_ce0),
    .array_r_we0(grp_crypto_sort_fu_365_array_r_we0),
    .array_r_d0(grp_crypto_sort_fu_365_array_r_d0),
    .array_r_q0(s_q0),
    .array_r_address1(grp_crypto_sort_fu_365_array_r_address1),
    .array_r_ce1(grp_crypto_sort_fu_365_array_r_ce1),
    .array_r_we1(grp_crypto_sort_fu_365_array_r_we1),
    .array_r_d1(grp_crypto_sort_fu_365_array_r_d1),
    .array_r_q1(s_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_crypto_sort_fu_365_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state13) & (exitcond1_fu_892_p2 == 1'd1))) begin
            grp_crypto_sort_fu_365_ap_start_reg <= 1'b1;
        end else if ((grp_crypto_sort_fu_365_ap_ready == 1'b1)) begin
            grp_crypto_sort_fu_365_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_382_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_332 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i_1_reg_332 <= i_5_reg_1067;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond2_fu_868_p2 == 1'd1))) begin
        i_2_reg_343 <= 8'd127;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        i_2_reg_343 <= i_6_reg_1085;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_3_reg_354 <= i_7_reg_1093;
    end else if (((grp_crypto_sort_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        i_3_reg_354 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_reg_320 <= i_4_reg_945;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_320 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_4_reg_945 <= i_4_fu_388_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_5_reg_1067 <= i_5_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_892_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        i_6_reg_1085 <= i_6_fu_903_p2;
        s_addr_5_reg_1080[7 : 0] <= tmp_35_fu_898_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_7_reg_1093 <= i_7_fu_922_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_370 <= u_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_374 <= u_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_868_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        s_addr_4_reg_1072[6 : 0] <= tmp_33_fu_880_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_16_reg_1019 <= {{u_q1[7:4]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_1_reg_994 <= {{u_q1[7:6]}};
        tmp_7_reg_987[8 : 2] <= tmp_7_fu_503_p3[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_25_reg_1044 <= {{u_q1[7:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        tmp_37_reg_1098[8 : 0] <= tmp_37_fu_928_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_382_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_950 <= tmp_fu_406_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state16) & (exitcond_fu_916_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond_fu_916_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        r_coeffs_address0 = tmp_37_reg_1098;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_coeffs_address0 = 64'd508;
    end else begin
        r_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        r_coeffs_ce0 = 1'b1;
    end else begin
        r_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        r_coeffs_d0 = tmp_92_cast_fu_937_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_coeffs_d0 = 16'd0;
    end else begin
        r_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state16) & (exitcond_fu_916_p2 == 1'd1)))) begin
        r_coeffs_we0 = 1'b1;
    end else begin
        r_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        s_address0 = tmp_37_fu_928_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        s_address0 = s_addr_5_reg_1080;
    end else if (((exitcond1_fu_892_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        s_address0 = tmp_35_fu_898_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s_address0 = s_addr_4_reg_1072;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        s_address0 = tmp_33_fu_880_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s_address0 = tmp_32_fu_863_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_address0 = tmp_24_fu_751_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_address0 = tmp_15_fu_631_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_address0 = tmp_8_fu_511_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_address0 = grp_crypto_sort_fu_365_array_r_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | ((exitcond1_fu_892_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        s_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_ce0 = grp_crypto_sort_fu_365_array_r_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        s_ce1 = grp_crypto_sort_fu_365_array_r_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s_d0 = tmp_36_fu_909_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        s_d0 = tmp_34_fu_885_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        s_d0 = tmp_30_fu_851_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        s_d0 = tmp_22_fu_730_p7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_d0 = tmp_13_fu_610_p7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_d0 = tmp_6_fu_488_p6;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_d0 = grp_crypto_sort_fu_365_array_r_d0;
    end else begin
        s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        s_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        s_we0 = grp_crypto_sort_fu_365_array_r_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        s_we1 = grp_crypto_sort_fu_365_array_r_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        u_address0 = sum14_cast_fu_821_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        u_address0 = sum12_cast_fu_781_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        u_address0 = sum10_cast_fu_701_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        u_address0 = sum7_cast_fu_661_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        u_address0 = sum4_cast_fu_581_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        u_address0 = sum1_cast_fu_541_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        u_address0 = sum6_cast_fu_459_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        u_address0 = sum_cast_fu_418_p1;
    end else begin
        u_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        u_address1 = sum13_cast_fu_801_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        u_address1 = sum11_cast_fu_721_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        u_address1 = sum9_cast_fu_681_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        u_address1 = sum5_cast_fu_601_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        u_address1 = sum3_cast_fu_561_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        u_address1 = sum8_cast_fu_479_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        u_address1 = sum2_cast_fu_439_p1;
    end else begin
        u_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        u_ce0 = 1'b1;
    end else begin
        u_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        u_ce1 = 1'b1;
    end else begin
        u_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond3_fu_382_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (exitcond2_fu_868_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (exitcond1_fu_892_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_crypto_sort_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (exitcond_fu_916_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond1_fu_892_p2 = ((i_2_reg_343 == 8'd254) ? 1'b1 : 1'b0);

assign exitcond2_fu_868_p2 = ((i_1_reg_332 == 7'd127) ? 1'b1 : 1'b0);

assign exitcond3_fu_382_p2 = ((i_reg_320 == 7'd127) ? 1'b1 : 1'b0);

assign exitcond_fu_916_p2 = ((i_3_reg_354 == 9'd508) ? 1'b1 : 1'b0);

assign grp_crypto_sort_fu_365_ap_start = grp_crypto_sort_fu_365_ap_start_reg;

assign i_4_fu_388_p2 = (i_reg_320 + 7'd1);

assign i_5_fu_874_p2 = (i_1_reg_332 + 7'd1);

assign i_6_fu_903_p2 = (i_2_reg_343 + 8'd1);

assign i_7_fu_922_p2 = (i_3_reg_354 + 9'd1);

assign i_cast1_fu_378_p1 = i_reg_320;

assign p_shl_cast_fu_402_p1 = p_shl_fu_394_p3;

assign p_shl_fu_394_p3 = {{i_reg_320}, {4'd0}};

assign sum10_cast_fu_701_p1 = sum10_fu_695_p2;

assign sum10_fu_695_p2 = ($signed(13'd508) + $signed(tmp_55_cast_fu_691_p1));

assign sum11_cast_fu_721_p1 = sum11_fu_715_p2;

assign sum11_fu_715_p2 = ($signed(13'd508) + $signed(tmp_59_cast_fu_711_p1));

assign sum12_cast_fu_781_p1 = sum12_fu_775_p2;

assign sum12_fu_775_p2 = ($signed(13'd508) + $signed(tmp_70_cast_fu_771_p1));

assign sum13_cast_fu_801_p1 = sum13_fu_795_p2;

assign sum13_fu_795_p2 = ($signed(13'd508) + $signed(tmp_75_cast_fu_791_p1));

assign sum14_cast_fu_821_p1 = sum14_fu_815_p2;

assign sum14_fu_815_p2 = ($signed(13'd508) + $signed(tmp_79_cast_fu_811_p1));

assign sum1_cast_fu_541_p1 = sum1_fu_535_p2;

assign sum1_fu_535_p2 = ($signed(13'd508) + $signed(tmp_23_cast_fu_531_p1));

assign sum2_cast_fu_439_p1 = sum2_fu_433_p2;

assign sum2_fu_433_p2 = ($signed(13'd508) + $signed(tmp_1_cast_fu_429_p1));

assign sum3_cast_fu_561_p1 = sum3_fu_555_p2;

assign sum3_fu_555_p2 = ($signed(13'd508) + $signed(tmp_27_cast_fu_551_p1));

assign sum4_cast_fu_581_p1 = sum4_fu_575_p2;

assign sum4_fu_575_p2 = ($signed(13'd508) + $signed(tmp_31_cast_fu_571_p1));

assign sum5_cast_fu_601_p1 = sum5_fu_595_p2;

assign sum5_fu_595_p2 = ($signed(13'd508) + $signed(tmp_35_cast_fu_591_p1));

assign sum6_cast_fu_459_p1 = sum6_fu_453_p2;

assign sum6_fu_453_p2 = ($signed(13'd508) + $signed(tmp_5_cast_fu_449_p1));

assign sum7_cast_fu_661_p1 = sum7_fu_655_p2;

assign sum7_fu_655_p2 = ($signed(13'd508) + $signed(tmp_47_cast_fu_651_p1));

assign sum8_cast_fu_479_p1 = sum8_fu_473_p2;

assign sum8_fu_473_p2 = ($signed(13'd508) + $signed(tmp_12_cast_fu_469_p1));

assign sum9_cast_fu_681_p1 = sum9_fu_675_p2;

assign sum9_fu_675_p2 = ($signed(13'd508) + $signed(tmp_51_cast_fu_671_p1));

assign sum_cast_fu_418_p1 = sum_fu_412_p2;

assign sum_fu_412_p2 = (12'd508 + tmp_fu_406_p2);

assign tmp9_fu_839_p5 = {{{{u_q0}, {1'd0}}, {u_q1}}, {15'd0}};

assign tmp_10_fu_566_p2 = (12'd6 + tmp_reg_950);

assign tmp_11_fu_586_p2 = (12'd7 + tmp_reg_950);

assign tmp_12_cast_fu_469_p1 = $signed(tmp_2_fu_464_p2);

assign tmp_12_fu_606_p1 = u_q1[3:0];

assign tmp_13_fu_610_p7 = {{{{{{tmp_12_fu_606_p1}, {u_q0}}, {reg_374}}, {reg_370}}, {tmp_1_reg_994}}, {2'd0}};

assign tmp_14_fu_626_p2 = (tmp_7_reg_987 | 9'd1);

assign tmp_15_fu_631_p1 = tmp_14_fu_626_p2;

assign tmp_17_fu_646_p2 = (12'd8 + tmp_reg_950);

assign tmp_18_fu_666_p2 = (12'd9 + tmp_reg_950);

assign tmp_19_fu_686_p2 = (12'd10 + tmp_reg_950);

assign tmp_1_cast_fu_429_p1 = $signed(tmp_s_fu_423_p2);

assign tmp_20_fu_706_p2 = (12'd11 + tmp_reg_950);

assign tmp_21_fu_726_p1 = u_q1[1:0];

assign tmp_22_fu_730_p7 = {{{{{{tmp_21_fu_726_p1}, {u_q0}}, {reg_374}}, {reg_370}}, {tmp_16_reg_1019}}, {2'd0}};

assign tmp_23_cast_fu_531_p1 = $signed(tmp_5_fu_526_p2);

assign tmp_23_fu_746_p2 = (tmp_7_reg_987 | 9'd2);

assign tmp_24_fu_751_p1 = tmp_23_fu_746_p2;

assign tmp_26_fu_766_p2 = (12'd12 + tmp_reg_950);

assign tmp_27_cast_fu_551_p1 = $signed(tmp_9_fu_546_p2);

assign tmp_27_fu_826_p4 = {{{reg_370}, {tmp_25_reg_1044}}, {2'd0}};

assign tmp_28_fu_786_p2 = (12'd13 + tmp_reg_950);

assign tmp_29_fu_806_p2 = (12'd14 + tmp_reg_950);

assign tmp_2_fu_464_p2 = (12'd3 + tmp_reg_950);

assign tmp_30_fu_851_p2 = (tmp_73_cast_fu_835_p1 + tmp9_fu_839_p5);

assign tmp_31_cast_fu_571_p1 = $signed(tmp_10_fu_566_p2);

assign tmp_31_fu_858_p2 = (tmp_7_reg_987 | 9'd3);

assign tmp_32_fu_863_p1 = tmp_31_fu_858_p2;

assign tmp_33_fu_880_p1 = i_1_reg_332;

assign tmp_34_fu_885_p2 = (s_q0 | 32'd1);

assign tmp_35_cast_fu_591_p1 = $signed(tmp_11_fu_586_p2);

assign tmp_35_fu_898_p1 = i_2_reg_343;

assign tmp_36_fu_909_p2 = (s_q0 | 32'd2);

assign tmp_37_fu_928_p1 = i_3_reg_354;

assign tmp_38_fu_933_p1 = s_q0[1:0];

assign tmp_3_fu_484_p1 = u_q1[5:0];

assign tmp_47_cast_fu_651_p1 = $signed(tmp_17_fu_646_p2);

assign tmp_4_fu_444_p2 = (12'd2 + tmp_reg_950);

assign tmp_51_cast_fu_671_p1 = $signed(tmp_18_fu_666_p2);

assign tmp_55_cast_fu_691_p1 = $signed(tmp_19_fu_686_p2);

assign tmp_59_cast_fu_711_p1 = $signed(tmp_20_fu_706_p2);

assign tmp_5_cast_fu_449_p1 = $signed(tmp_4_fu_444_p2);

assign tmp_5_fu_526_p2 = (12'd4 + tmp_reg_950);

assign tmp_6_fu_488_p6 = {{{{{tmp_3_fu_484_p1}, {u_q0}}, {reg_374}}, {reg_370}}, {2'd0}};

assign tmp_70_cast_fu_771_p1 = $signed(tmp_26_fu_766_p2);

assign tmp_73_cast_fu_835_p1 = tmp_27_fu_826_p4;

assign tmp_75_cast_fu_791_p1 = $signed(tmp_28_fu_786_p2);

assign tmp_79_cast_fu_811_p1 = $signed(tmp_29_fu_806_p2);

assign tmp_7_fu_503_p3 = {{i_reg_320}, {2'd0}};

assign tmp_8_fu_511_p1 = tmp_7_fu_503_p3;

assign tmp_92_cast_fu_937_p1 = tmp_38_fu_933_p1;

assign tmp_9_fu_546_p2 = (12'd5 + tmp_reg_950);

assign tmp_fu_406_p2 = (p_shl_cast_fu_402_p1 - i_cast1_fu_378_p1);

assign tmp_s_fu_423_p2 = (12'd1 + tmp_fu_406_p2);

always @ (posedge ap_clk) begin
    tmp_7_reg_987[1:0] <= 2'b00;
    s_addr_4_reg_1072[8:7] <= 2'b00;
    s_addr_5_reg_1080[8] <= 1'b0;
    tmp_37_reg_1098[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //sample_fixed_type
