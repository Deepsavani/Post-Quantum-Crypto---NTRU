

================================================================
== Vivado HLS Report for 'poly_S3_mul'
================================================================
* Date:           Mon Aug 24 18:55:52 2020

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        ntru09
* Solution:       dec
* Product family: artix7
* Target device:  xc7a200tfbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     9.122|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+---------+------+---------+---------+
    |     Latency    |    Interval    | Pipeline|
    |  min |   max   |  min |   max   |   Type  |
    +------+---------+------+---------+---------+
    |  4583|  1556015|  4583|  1556015|   none  |
    +------+---------+------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+------+---------+----------+-----------+-----------+---------+----------+
        |             |     Latency    | Iteration|  Initiation Interval  |   Trip  |          |
        |  Loop Name  |  min |   max   |  Latency |  achieved |   target  |  Count  | Pipelined|
        +-------------+------+---------+----------+-----------+-----------+---------+----------+
        |- Loop 1     |  3054|  1554486| 6 ~ 3054 |          -|          -|      509|    no    |
        | + Loop 1.1  |     0|     1524|         3|          -|          -| 0 ~ 508 |    no    |
        | + Loop 1.2  |     3|     1527|         3|          -|          -| 1 ~ 509 |    no    |
        |- Loop 2     |  1527|     1527|         3|          -|          -|      509|    no    |
        +-------------+------+---------+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
	9  / (exitcond2)
3 --> 
	4  / (tmp_130)
	6  / (!tmp_130)
4 --> 
	5  / true
5 --> 
	3  / true
6 --> 
	7  / (!exitcond1)
	2  / (exitcond1)
7 --> 
	8  / true
8 --> 
	6  / true
9 --> 
	10  / (!exitcond)
10 --> 
	11  / true
11 --> 
	9  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 12 [1/1] (1.35ns)   --->   "br label %1" [poly.c:64]   --->   Operation 12 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 2.77>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%indvars_iv = phi i9 [ %indvars_iv_next, %6 ], [ 1, %0 ]" [poly.c:64]   --->   Operation 13 'phi' 'indvars_iv' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%k = phi i9 [ %k_3, %6 ], [ 0, %0 ]"   --->   Operation 14 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%k_cast5 = zext i9 %k to i10" [poly.c:64]   --->   Operation 15 'zext' 'k_cast5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (1.34ns)   --->   "%exitcond2 = icmp eq i9 %indvars_iv, -2" [poly.c:64]   --->   Operation 16 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 509, i64 509, i64 509)"   --->   Operation 17 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.73ns)   --->   "%k_3 = add i9 %k, 1" [poly.c:64]   --->   Operation 18 'add' 'k_3' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %.preheader.preheader, label %2" [poly.c:64]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%tmp = zext i9 %k to i64" [poly.c:66]   --->   Operation 20 'zext' 'tmp' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%r_coeffs_addr_13 = getelementptr [509 x i16]* %r_coeffs, i64 0, i64 %tmp" [poly.c:66]   --->   Operation 21 'getelementptr' 'r_coeffs_addr_13' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (2.77ns)   --->   "store i16 0, i16* %r_coeffs_addr_13, align 2" [poly.c:66]   --->   Operation 22 'store' <Predicate = (!exitcond2)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_2 : Operation 23 [1/1] (1.73ns)   --->   "%tmp_s = sub i9 -3, %k" [poly.c:67]   --->   Operation 23 'sub' 'tmp_s' <Predicate = (!exitcond2)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (1.35ns)   --->   "br label %3" [poly.c:67]   --->   Operation 24 'br' <Predicate = (!exitcond2)> <Delay = 1.35>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%r_coeffs_addr = getelementptr [509 x i16]* %r_coeffs, i64 0, i64 508" [poly.c:73]   --->   Operation 25 'getelementptr' 'r_coeffs_addr' <Predicate = (exitcond2)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.35ns)   --->   "br label %.preheader" [poly.c:72]   --->   Operation 26 'br' <Predicate = (exitcond2)> <Delay = 1.35>

State 3 <SV = 2> <Delay = 4.50>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%i = phi i9 [ 1, %2 ], [ %i_5, %4 ]"   --->   Operation 27 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%i_cast = zext i9 %i to i10" [poly.c:67]   --->   Operation 28 'zext' 'i_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (1.34ns)   --->   "%tmp_130 = icmp ult i9 %i, %tmp_s" [poly.c:67]   --->   Operation 29 'icmp' 'tmp_130' <Predicate = true> <Delay = 1.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%empty_28 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 508, i64 0)"   --->   Operation 30 'speclooptripcount' 'empty_28' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %tmp_130, label %4, label %.preheader3.preheader" [poly.c:67]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (1.73ns)   --->   "%tmp_145 = add i10 %k_cast5, %i_cast" [poly.c:68]   --->   Operation 32 'add' 'tmp_145' <Predicate = (tmp_130)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_146 = zext i10 %tmp_145 to i64" [poly.c:68]   --->   Operation 33 'zext' 'tmp_146' <Predicate = (tmp_130)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%a_coeffs_addr = getelementptr [509 x i16]* %a_coeffs, i64 0, i64 %tmp_146" [poly.c:68]   --->   Operation 34 'getelementptr' 'a_coeffs_addr' <Predicate = (tmp_130)> <Delay = 0.00>
ST_3 : Operation 35 [2/2] (2.77ns)   --->   "%a_coeffs_load = load i16* %a_coeffs_addr, align 2" [poly.c:68]   --->   Operation 35 'load' 'a_coeffs_load' <Predicate = (tmp_130)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_3 : Operation 36 [1/1] (1.73ns)   --->   "%tmp_147 = sub i9 -3, %i" [poly.c:68]   --->   Operation 36 'sub' 'tmp_147' <Predicate = (tmp_130)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_148 = zext i9 %tmp_147 to i64" [poly.c:68]   --->   Operation 37 'zext' 'tmp_148' <Predicate = (tmp_130)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%b_coeffs_addr = getelementptr [509 x i16]* %b_coeffs, i64 0, i64 %tmp_148" [poly.c:68]   --->   Operation 38 'getelementptr' 'b_coeffs_addr' <Predicate = (tmp_130)> <Delay = 0.00>
ST_3 : Operation 39 [2/2] (2.77ns)   --->   "%b_coeffs_load = load i16* %b_coeffs_addr, align 2" [poly.c:68]   --->   Operation 39 'load' 'b_coeffs_load' <Predicate = (tmp_130)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_3 : Operation 40 [2/2] (2.77ns)   --->   "%r_coeffs_load_2 = load i16* %r_coeffs_addr_13, align 2" [poly.c:68]   --->   Operation 40 'load' 'r_coeffs_load_2' <Predicate = (tmp_130)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_3 : Operation 41 [1/1] (1.73ns)   --->   "%i_5 = add i9 %i, 1" [poly.c:67]   --->   Operation 41 'add' 'i_5' <Predicate = (tmp_130)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (1.35ns)   --->   "br label %.preheader3" [poly.c:69]   --->   Operation 42 'br' <Predicate = (!tmp_130)> <Delay = 1.35>

State 4 <SV = 3> <Delay = 2.77>
ST_4 : Operation 43 [1/2] (2.77ns)   --->   "%a_coeffs_load = load i16* %a_coeffs_addr, align 2" [poly.c:68]   --->   Operation 43 'load' 'a_coeffs_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_4 : Operation 44 [1/2] (2.77ns)   --->   "%b_coeffs_load = load i16* %b_coeffs_addr, align 2" [poly.c:68]   --->   Operation 44 'load' 'b_coeffs_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_4 : Operation 45 [1/2] (2.77ns)   --->   "%r_coeffs_load_2 = load i16* %r_coeffs_addr_13, align 2" [poly.c:68]   --->   Operation 45 'load' 'r_coeffs_load_2' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>

State 5 <SV = 4> <Delay = 9.12>
ST_5 : Operation 46 [1/1] (2.82ns) (grouped into DSP with root node tmp_150)   --->   "%tmp_149 = mul i16 %a_coeffs_load, %b_coeffs_load" [poly.c:68]   --->   Operation 46 'mul' 'tmp_149' <Predicate = true> <Delay = 2.82> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 6.35> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 47 [1/1] (3.53ns) (root node of the DSP)   --->   "%tmp_150 = add i16 %r_coeffs_load_2, %tmp_149" [poly.c:68]   --->   Operation 47 'add' 'tmp_150' <Predicate = true> <Delay = 3.53> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 6.35> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 48 [1/1] (2.77ns)   --->   "store i16 %tmp_150, i16* %r_coeffs_addr_13, align 2" [poly.c:68]   --->   Operation 48 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "br label %3" [poly.c:67]   --->   Operation 49 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 3> <Delay = 4.50>
ST_6 : Operation 50 [1/1] (0.00ns)   --->   "%i_1 = phi i9 [ %i_6, %5 ], [ 0, %.preheader3.preheader ]"   --->   Operation 50 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 51 [1/1] (0.00ns)   --->   "%i_1_cast = zext i9 %i_1 to i10" [poly.c:69]   --->   Operation 51 'zext' 'i_1_cast' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 52 [1/1] (1.34ns)   --->   "%exitcond1 = icmp eq i9 %i_1, %indvars_iv" [poly.c:69]   --->   Operation 52 'icmp' 'exitcond1' <Predicate = true> <Delay = 1.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 53 [1/1] (0.00ns)   --->   "%empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 509, i64 0)"   --->   Operation 53 'speclooptripcount' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 54 [1/1] (1.73ns)   --->   "%i_6 = add i9 %i_1, 1" [poly.c:69]   --->   Operation 54 'add' 'i_6' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 55 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %6, label %5" [poly.c:69]   --->   Operation 55 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 56 [1/1] (1.73ns)   --->   "%tmp_151 = sub i10 %k_cast5, %i_1_cast" [poly.c:70]   --->   Operation 56 'sub' 'tmp_151' <Predicate = (!exitcond1)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_152 = sext i10 %tmp_151 to i64" [poly.c:70]   --->   Operation 57 'sext' 'tmp_152' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_6 : Operation 58 [1/1] (0.00ns)   --->   "%a_coeffs_addr_6 = getelementptr [509 x i16]* %a_coeffs, i64 0, i64 %tmp_152" [poly.c:70]   --->   Operation 58 'getelementptr' 'a_coeffs_addr_6' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_6 : Operation 59 [2/2] (2.77ns)   --->   "%a_coeffs_load_6 = load i16* %a_coeffs_addr_6, align 2" [poly.c:70]   --->   Operation 59 'load' 'a_coeffs_load_6' <Predicate = (!exitcond1)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_153 = zext i9 %i_1 to i64" [poly.c:70]   --->   Operation 60 'zext' 'tmp_153' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "%b_coeffs_addr_1 = getelementptr [509 x i16]* %b_coeffs, i64 0, i64 %tmp_153" [poly.c:70]   --->   Operation 61 'getelementptr' 'b_coeffs_addr_1' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_6 : Operation 62 [2/2] (2.77ns)   --->   "%b_coeffs_load_1 = load i16* %b_coeffs_addr_1, align 2" [poly.c:70]   --->   Operation 62 'load' 'b_coeffs_load_1' <Predicate = (!exitcond1)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_6 : Operation 63 [2/2] (2.77ns)   --->   "%r_coeffs_load_3 = load i16* %r_coeffs_addr_13, align 2" [poly.c:70]   --->   Operation 63 'load' 'r_coeffs_load_3' <Predicate = (!exitcond1)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_6 : Operation 64 [1/1] (1.73ns)   --->   "%indvars_iv_next = add i9 %indvars_iv, 1" [poly.c:64]   --->   Operation 64 'add' 'indvars_iv_next' <Predicate = (exitcond1)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "br label %1" [poly.c:64]   --->   Operation 65 'br' <Predicate = (exitcond1)> <Delay = 0.00>

State 7 <SV = 4> <Delay = 2.77>
ST_7 : Operation 66 [1/2] (2.77ns)   --->   "%a_coeffs_load_6 = load i16* %a_coeffs_addr_6, align 2" [poly.c:70]   --->   Operation 66 'load' 'a_coeffs_load_6' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_7 : Operation 67 [1/2] (2.77ns)   --->   "%b_coeffs_load_1 = load i16* %b_coeffs_addr_1, align 2" [poly.c:70]   --->   Operation 67 'load' 'b_coeffs_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_7 : Operation 68 [1/2] (2.77ns)   --->   "%r_coeffs_load_3 = load i16* %r_coeffs_addr_13, align 2" [poly.c:70]   --->   Operation 68 'load' 'r_coeffs_load_3' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>

State 8 <SV = 5> <Delay = 9.12>
ST_8 : Operation 69 [1/1] (2.82ns) (grouped into DSP with root node tmp_155)   --->   "%tmp_154 = mul i16 %a_coeffs_load_6, %b_coeffs_load_1" [poly.c:70]   --->   Operation 69 'mul' 'tmp_154' <Predicate = true> <Delay = 2.82> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 6.35> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 70 [1/1] (3.53ns) (root node of the DSP)   --->   "%tmp_155 = add i16 %r_coeffs_load_3, %tmp_154" [poly.c:70]   --->   Operation 70 'add' 'tmp_155' <Predicate = true> <Delay = 3.53> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 6.35> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 71 [1/1] (2.77ns)   --->   "store i16 %tmp_155, i16* %r_coeffs_addr_13, align 2" [poly.c:70]   --->   Operation 71 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_8 : Operation 72 [1/1] (0.00ns)   --->   "br label %.preheader3" [poly.c:69]   --->   Operation 72 'br' <Predicate = true> <Delay = 0.00>

State 9 <SV = 2> <Delay = 2.77>
ST_9 : Operation 73 [1/1] (0.00ns)   --->   "%k_1 = phi i9 [ %k_2, %7 ], [ 0, %.preheader.preheader ]"   --->   Operation 73 'phi' 'k_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 74 [1/1] (1.34ns)   --->   "%exitcond = icmp eq i9 %k_1, -3" [poly.c:72]   --->   Operation 74 'icmp' 'exitcond' <Predicate = true> <Delay = 1.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 75 [1/1] (0.00ns)   --->   "%empty_30 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 509, i64 509, i64 509)"   --->   Operation 75 'speclooptripcount' 'empty_30' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 76 [1/1] (1.73ns)   --->   "%k_2 = add i9 %k_1, 1" [poly.c:72]   --->   Operation 76 'add' 'k_2' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 77 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %8, label %7" [poly.c:72]   --->   Operation 77 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_133 = zext i9 %k_1 to i64" [poly.c:73]   --->   Operation 78 'zext' 'tmp_133' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 79 [1/1] (0.00ns)   --->   "%r_coeffs_addr_14 = getelementptr [509 x i16]* %r_coeffs, i64 0, i64 %tmp_133" [poly.c:73]   --->   Operation 79 'getelementptr' 'r_coeffs_addr_14' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 80 [2/2] (2.77ns)   --->   "%r_coeffs_load = load i16* %r_coeffs_addr_14, align 2" [poly.c:73]   --->   Operation 80 'load' 'r_coeffs_load' <Predicate = (!exitcond)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_9 : Operation 81 [2/2] (2.77ns)   --->   "%r_coeffs_load_1 = load i16* %r_coeffs_addr, align 2" [poly.c:73]   --->   Operation 81 'load' 'r_coeffs_load_1' <Predicate = (!exitcond)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_9 : Operation 82 [1/1] (0.00ns)   --->   "ret void" [poly.c:74]   --->   Operation 82 'ret' <Predicate = (exitcond)> <Delay = 0.00>

State 10 <SV = 3> <Delay = 8.73>
ST_10 : Operation 83 [1/2] (2.77ns)   --->   "%r_coeffs_load = load i16* %r_coeffs_addr_14, align 2" [poly.c:73]   --->   Operation 83 'load' 'r_coeffs_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_10 : Operation 84 [1/2] (2.77ns)   --->   "%r_coeffs_load_1 = load i16* %r_coeffs_addr, align 2" [poly.c:73]   --->   Operation 84 'load' 'r_coeffs_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_10 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node a_assign)   --->   "%tmp_140 = shl i16 %r_coeffs_load_1, 1" [poly.c:73]   --->   Operation 85 'shl' 'tmp_140' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_141 = trunc i16 %r_coeffs_load_1 to i7" [poly.c:73]   --->   Operation 86 'trunc' 'tmp_141' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_128 = call i8 @_ssdm_op_BitConcatenate.i8.i7.i1(i7 %tmp_141, i1 false)" [poly.c:73]   --->   Operation 87 'bitconcatenate' 'tmp_128' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_142 = trunc i16 %r_coeffs_load to i8" [poly.c:73]   --->   Operation 88 'trunc' 'tmp_142' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_144 = trunc i16 %r_coeffs_load to i4" [poly.c:73]   --->   Operation 89 'trunc' 'tmp_144' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_156 = trunc i16 %r_coeffs_load_1 to i3" [poly.c:73]   --->   Operation 90 'trunc' 'tmp_156' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_131 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %tmp_156, i1 false)" [poly.c:73]   --->   Operation 91 'bitconcatenate' 'tmp_131' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_157 = trunc i16 %r_coeffs_load_1 to i1" [poly.c:73]   --->   Operation 92 'trunc' 'tmp_157' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_132 = call i2 @_ssdm_op_BitConcatenate.i2.i1.i1(i1 %tmp_157, i1 false)" [poly.c:73]   --->   Operation 93 'bitconcatenate' 'tmp_132' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_158 = trunc i16 %r_coeffs_load to i2" [poly.c:73]   --->   Operation 94 'trunc' 'tmp_158' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 95 [1/1] (1.84ns) (out node of the LUT)   --->   "%a_assign = add i16 %r_coeffs_load, %tmp_140" [poly.c:73]   --->   Operation 95 'add' 'a_assign' <Predicate = true> <Delay = 1.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 96 [1/1] (1.71ns)   --->   "%a_assign_cast = add i8 %tmp_128, %tmp_142" [poly.c:5->poly.c:73]   --->   Operation 96 'add' 'a_assign_cast' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_111 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %a_assign, i32 8, i32 15)" [poly.c:10->poly.c:73]   --->   Operation 97 'partselect' 'tmp_111' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_i_cast = zext i8 %tmp_111 to i9" [poly.c:10->poly.c:73]   --->   Operation 98 'zext' 'tmp_i_cast' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_i_cast_31 = zext i8 %a_assign_cast to i9" [poly.c:10->poly.c:73]   --->   Operation 99 'zext' 'tmp_i_cast_31' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 100 [1/1] (1.71ns)   --->   "%tmp_112 = add i8 %a_assign_cast, %tmp_111" [poly.c:5->poly.c:73]   --->   Operation 100 'add' 'tmp_112' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 101 [1/1] (1.71ns)   --->   "%r = add i9 %tmp_i_cast, %tmp_i_cast_31" [poly.c:10->poly.c:73]   --->   Operation 101 'add' 'r' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_113 = call i5 @_ssdm_op_PartSelect.i5.i9.i32.i32(i9 %r, i32 4, i32 8)" [poly.c:11->poly.c:73]   --->   Operation 102 'partselect' 'tmp_113' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_229_i_cast = zext i5 %tmp_113 to i6" [poly.c:11->poly.c:73]   --->   Operation 103 'zext' 'tmp_229_i_cast' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 104 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_134 = add i4 %tmp_131, %tmp_144" [poly.c:73]   --->   Operation 104 'add' 'tmp_134' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_135 = call i4 @_ssdm_op_PartSelect.i4.i16.i32.i32(i16 %a_assign, i32 8, i32 11)" [poly.c:73]   --->   Operation 105 'partselect' 'tmp_135' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_136 = call i2 @_ssdm_op_PartSelect.i2.i16.i32.i32(i16 %a_assign, i32 8, i32 9)" [poly.c:73]   --->   Operation 106 'partselect' 'tmp_136' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 107 [1/1] (1.20ns)   --->   "%tmp_137 = add i2 %tmp_132, %tmp_158" [poly.c:73]   --->   Operation 107 'add' 'tmp_137' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 108 [1/1] (2.57ns) (root node of TernaryAdder)   --->   "%fold_i_cast = add i4 %tmp_134, %tmp_135" [poly.c:11->poly.c:73]   --->   Operation 108 'add' 'fold_i_cast' <Predicate = true> <Delay = 2.57> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_230_i_cast = zext i4 %fold_i_cast to i6" [poly.c:11->poly.c:73]   --->   Operation 109 'zext' 'tmp_230_i_cast' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 110 [1/1] (1.54ns)   --->   "%r_1 = add i6 %tmp_229_i_cast, %tmp_230_i_cast" [poly.c:11->poly.c:73]   --->   Operation 110 'add' 'r_1' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_231_i_cast = call i4 @_ssdm_op_PartSelect.i4.i6.i32.i32(i6 %r_1, i32 2, i32 5)" [poly.c:12->poly.c:73]   --->   Operation 111 'partselect' 'tmp_231_i_cast' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 112 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_138 = add i2 %tmp_137, %tmp_136" [poly.c:73]   --->   Operation 112 'add' 'tmp_138' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_139 = call i2 @_ssdm_op_PartSelect.i2.i8.i32.i32(i8 %tmp_112, i32 4, i32 5)" [poly.c:5->poly.c:73]   --->   Operation 113 'partselect' 'tmp_139' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 114 [1/1] (1.67ns) (root node of TernaryAdder)   --->   "%fold1_i_cast = add i2 %tmp_138, %tmp_139" [poly.c:12->poly.c:73]   --->   Operation 114 'add' 'fold1_i_cast' <Predicate = true> <Delay = 1.67> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_143 = call i2 @_ssdm_op_PartSelect.i2.i6.i32.i32(i6 %r_1, i32 2, i32 3)" [poly.c:13->poly.c:73]   --->   Operation 115 'partselect' 'tmp_143' <Predicate = true> <Delay = 0.00>

State 11 <SV = 4> <Delay = 7.62>
ST_11 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_232_i_cast = zext i2 %fold1_i_cast to i4" [poly.c:12->poly.c:73]   --->   Operation 116 'zext' 'tmp_232_i_cast' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 117 [1/1] (1.49ns)   --->   "%r_2 = add i4 %tmp_231_i_cast, %tmp_232_i_cast" [poly.c:12->poly.c:73]   --->   Operation 117 'add' 'r_2' <Predicate = true> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_114 = call i2 @_ssdm_op_PartSelect.i2.i4.i32.i32(i4 %r_2, i32 2, i32 3)" [poly.c:13->poly.c:73]   --->   Operation 118 'partselect' 'tmp_114' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_233_i_cast = zext i2 %tmp_114 to i3" [poly.c:13->poly.c:73]   --->   Operation 119 'zext' 'tmp_233_i_cast' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 120 [1/1] (1.20ns)   --->   "%fold2_i_cast = add i2 %tmp_143, %fold1_i_cast" [poly.c:13->poly.c:73]   --->   Operation 120 'add' 'fold2_i_cast' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_234_i_cast = zext i2 %fold2_i_cast to i3" [poly.c:13->poly.c:73]   --->   Operation 121 'zext' 'tmp_234_i_cast' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 122 [1/1] (1.20ns)   --->   "%r_3 = add i3 %tmp_233_i_cast, %tmp_234_i_cast" [poly.c:13->poly.c:73]   --->   Operation 122 'add' 'r_3' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 123 [1/1] (1.34ns)   --->   "%t = add i3 -3, %r_3" [poly.c:15->poly.c:73]   --->   Operation 123 'add' 't' <Predicate = true> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_159 = call i1 @_ssdm_op_BitSelect.i1.i3.i32(i3 %t, i32 2)" [poly.c:16->poly.c:73]   --->   Operation 124 'bitselect' 'tmp_159' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node tmp_238_i)   --->   "%c_cast = select i1 %tmp_159, i3 -1, i3 0" [poly.c:16->poly.c:73]   --->   Operation 125 'select' 'c_cast' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node tmp_238_i)   --->   "%tmp_235_i = and i3 %r_3, %c_cast" [poly.c:18->poly.c:73]   --->   Operation 126 'and' 'tmp_235_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node tmp_238_i)   --->   "%tmp_235_i_cast = zext i3 %tmp_235_i to i16" [poly.c:18->poly.c:73]   --->   Operation 127 'zext' 'tmp_235_i_cast' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node tmp_238_i)   --->   "%not_tmp_53_i = xor i1 %tmp_159, true" [poly.c:16->poly.c:73]   --->   Operation 128 'xor' 'not_tmp_53_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node tmp_238_i)   --->   "%tmp_236_i_cast_cast = select i1 %not_tmp_53_i, i3 -1, i3 0" [poly.c:18->poly.c:73]   --->   Operation 129 'select' 'tmp_236_i_cast_cast' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node tmp_238_i)   --->   "%tmp_237_i = and i3 %t, %tmp_236_i_cast_cast" [poly.c:18->poly.c:73]   --->   Operation 130 'and' 'tmp_237_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node tmp_238_i)   --->   "%tmp_237_i_cast = sext i3 %tmp_237_i to i16" [poly.c:18->poly.c:73]   --->   Operation 131 'sext' 'tmp_237_i_cast' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 132 [1/1] (0.81ns) (out node of the LUT)   --->   "%tmp_238_i = xor i16 %tmp_235_i_cast, %tmp_237_i_cast" [poly.c:18->poly.c:73]   --->   Operation 132 'xor' 'tmp_238_i' <Predicate = true> <Delay = 0.81> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 133 [1/1] (2.77ns)   --->   "store i16 %tmp_238_i, i16* %r_coeffs_addr_14, align 2" [poly.c:73]   --->   Operation 133 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 509> <RAM>
ST_11 : Operation 134 [1/1] (0.00ns)   --->   "br label %.preheader" [poly.c:72]   --->   Operation 134 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvars_iv', poly.c:64) with incoming values : ('indvars_iv_next', poly.c:64) [6]  (1.35 ns)

 <State 2>: 2.77ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', poly.c:64) [7]  (0 ns)
	'getelementptr' operation ('r_coeffs_addr_13', poly.c:66) [15]  (0 ns)
	'store' operation (poly.c:66) of constant 0 on array 'r_coeffs' [16]  (2.77 ns)

 <State 3>: 4.51ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', poly.c:67) [20]  (0 ns)
	'add' operation ('tmp_145', poly.c:68) [26]  (1.73 ns)
	'getelementptr' operation ('a_coeffs_addr', poly.c:68) [28]  (0 ns)
	'load' operation ('a_coeffs_load', poly.c:68) on array 'a_coeffs' [29]  (2.77 ns)

 <State 4>: 2.77ns
The critical path consists of the following:
	'load' operation ('a_coeffs_load', poly.c:68) on array 'a_coeffs' [29]  (2.77 ns)

 <State 5>: 9.12ns
The critical path consists of the following:
	'mul' operation of DSP[36] ('tmp_149', poly.c:68) [34]  (2.82 ns)
	'add' operation of DSP[36] ('tmp_150', poly.c:68) [36]  (3.53 ns)
	'store' operation (poly.c:68) of variable 'tmp_150', poly.c:68 on array 'r_coeffs' [37]  (2.77 ns)

 <State 6>: 4.51ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', poly.c:69) [43]  (0 ns)
	'sub' operation ('tmp_151', poly.c:70) [50]  (1.73 ns)
	'getelementptr' operation ('a_coeffs_addr_6', poly.c:70) [52]  (0 ns)
	'load' operation ('a_coeffs_load_6', poly.c:70) on array 'a_coeffs' [53]  (2.77 ns)

 <State 7>: 2.77ns
The critical path consists of the following:
	'load' operation ('a_coeffs_load_6', poly.c:70) on array 'a_coeffs' [53]  (2.77 ns)

 <State 8>: 9.12ns
The critical path consists of the following:
	'mul' operation of DSP[59] ('tmp_154', poly.c:70) [57]  (2.82 ns)
	'add' operation of DSP[59] ('tmp_155', poly.c:70) [59]  (3.53 ns)
	'store' operation (poly.c:70) of variable 'tmp_155', poly.c:70 on array 'r_coeffs' [60]  (2.77 ns)

 <State 9>: 2.77ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', poly.c:72) [69]  (0 ns)
	'getelementptr' operation ('r_coeffs_addr_14', poly.c:73) [76]  (0 ns)
	'load' operation ('r_coeffs_load', poly.c:73) on array 'r_coeffs' [77]  (2.77 ns)

 <State 10>: 8.73ns
The critical path consists of the following:
	'load' operation ('r_coeffs_load', poly.c:73) on array 'r_coeffs' [77]  (2.77 ns)
	'add' operation ('a', poly.c:73) [89]  (1.84 ns)
	'add' operation ('fold_i_cast', poly.c:11->poly.c:73) [102]  (2.57 ns)
	'add' operation ('r', poly.c:11->poly.c:73) [104]  (1.55 ns)

 <State 11>: 7.62ns
The critical path consists of the following:
	'add' operation ('r', poly.c:12->poly.c:73) [110]  (1.49 ns)
	'add' operation ('r', poly.c:13->poly.c:73) [116]  (1.2 ns)
	'add' operation ('t', poly.c:15->poly.c:73) [117]  (1.35 ns)
	'select' operation ('c_cast', poly.c:16->poly.c:73) [119]  (0 ns)
	'and' operation ('tmp_235_i', poly.c:18->poly.c:73) [120]  (0 ns)
	'xor' operation ('tmp_238_i', poly.c:18->poly.c:73) [126]  (0.813 ns)
	'store' operation (poly.c:73) of variable 'tmp_238_i', poly.c:18->poly.c:73 on array 'r_coeffs' [127]  (2.77 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
