// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "poly_Sq_frombytes_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic poly_Sq_frombytes_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic poly_Sq_frombytes_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> poly_Sq_frombytes_1::ap_ST_fsm_state1 = "1";
const sc_lv<11> poly_Sq_frombytes_1::ap_ST_fsm_state2 = "10";
const sc_lv<11> poly_Sq_frombytes_1::ap_ST_fsm_state3 = "100";
const sc_lv<11> poly_Sq_frombytes_1::ap_ST_fsm_state4 = "1000";
const sc_lv<11> poly_Sq_frombytes_1::ap_ST_fsm_state5 = "10000";
const sc_lv<11> poly_Sq_frombytes_1::ap_ST_fsm_state6 = "100000";
const sc_lv<11> poly_Sq_frombytes_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> poly_Sq_frombytes_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> poly_Sq_frombytes_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> poly_Sq_frombytes_1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> poly_Sq_frombytes_1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> poly_Sq_frombytes_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> poly_Sq_frombytes_1::ap_const_lv32_1 = "1";
const sc_lv<1> poly_Sq_frombytes_1::ap_const_lv1_0 = "0";
const sc_lv<1> poly_Sq_frombytes_1::ap_const_lv1_1 = "1";
const sc_lv<32> poly_Sq_frombytes_1::ap_const_lv32_2 = "10";
const sc_lv<32> poly_Sq_frombytes_1::ap_const_lv32_3 = "11";
const sc_lv<32> poly_Sq_frombytes_1::ap_const_lv32_4 = "100";
const sc_lv<32> poly_Sq_frombytes_1::ap_const_lv32_5 = "101";
const sc_lv<32> poly_Sq_frombytes_1::ap_const_lv32_6 = "110";
const sc_lv<32> poly_Sq_frombytes_1::ap_const_lv32_8 = "1000";
const sc_lv<32> poly_Sq_frombytes_1::ap_const_lv32_9 = "1001";
const sc_lv<6> poly_Sq_frombytes_1::ap_const_lv6_0 = "000000";
const sc_lv<32> poly_Sq_frombytes_1::ap_const_lv32_7 = "111";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_0 = "0000000000";
const sc_lv<64> poly_Sq_frombytes_1::ap_const_lv64_385 = "1110000101";
const sc_lv<64> poly_Sq_frombytes_1::ap_const_lv64_386 = "1110000110";
const sc_lv<64> poly_Sq_frombytes_1::ap_const_lv64_1FB = "111111011";
const sc_lv<64> poly_Sq_frombytes_1::ap_const_lv64_383 = "1110000011";
const sc_lv<64> poly_Sq_frombytes_1::ap_const_lv64_384 = "1110000100";
const sc_lv<64> poly_Sq_frombytes_1::ap_const_lv64_1FA = "111111010";
const sc_lv<64> poly_Sq_frombytes_1::ap_const_lv64_382 = "1110000010";
const sc_lv<64> poly_Sq_frombytes_1::ap_const_lv64_381 = "1110000001";
const sc_lv<64> poly_Sq_frombytes_1::ap_const_lv64_1F9 = "111111001";
const sc_lv<32> poly_Sq_frombytes_1::ap_const_lv32_A = "1010";
const sc_lv<64> poly_Sq_frombytes_1::ap_const_lv64_1F8 = "111111000";
const sc_lv<6> poly_Sq_frombytes_1::ap_const_lv6_3F = "111111";
const sc_lv<6> poly_Sq_frombytes_1::ap_const_lv6_1 = "1";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_CC = "11001100";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_CD = "11001101";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_CE = "11001110";
const sc_lv<3> poly_Sq_frombytes_1::ap_const_lv3_0 = "000";
const sc_lv<9> poly_Sq_frombytes_1::ap_const_lv9_1 = "1";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_CF = "11001111";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_D0 = "11010000";
const sc_lv<2> poly_Sq_frombytes_1::ap_const_lv2_0 = "00";
const sc_lv<9> poly_Sq_frombytes_1::ap_const_lv9_2 = "10";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_D1 = "11010001";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_D2 = "11010010";
const sc_lv<9> poly_Sq_frombytes_1::ap_const_lv9_3 = "11";
const sc_lv<9> poly_Sq_frombytes_1::ap_const_lv9_4 = "100";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_D3 = "11010011";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_D4 = "11010100";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_B = "1011";
const sc_lv<9> poly_Sq_frombytes_1::ap_const_lv9_5 = "101";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_D5 = "11010101";
const sc_lv<10> poly_Sq_frombytes_1::ap_const_lv10_D6 = "11010110";
const sc_lv<9> poly_Sq_frombytes_1::ap_const_lv9_6 = "110";
const sc_lv<9> poly_Sq_frombytes_1::ap_const_lv9_7 = "111";
const bool poly_Sq_frombytes_1::ap_const_boolean_1 = true;

poly_Sq_frombytes_1::poly_Sq_frombytes_1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_440_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( sum_cast_fu_458_p1 );
    sensitive << ( sum4_cast_fu_480_p1 );
    sensitive << ( sum8_cast_fu_569_p1 );
    sensitive << ( sum3_cast_fu_643_p1 );
    sensitive << ( sum7_cast_fu_736_p1 );
    sensitive << ( sum10_cast_fu_826_p1 );

    SC_METHOD(thread_a_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( sum2_cast_fu_469_p1 );
    sensitive << ( sum6_cast_fu_558_p1 );
    sensitive << ( sum1_cast_fu_632_p1 );
    sensitive << ( sum5_cast_fu_725_p1 );
    sensitive << ( sum9_cast_fu_815_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_440_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_a_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_exitcond_fu_440_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_396 );

    SC_METHOD(thread_grp_fu_420_p4);
    sensitive << ( a_q1 );

    SC_METHOD(thread_grp_fu_430_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_next_mul_fu_741_p2);
    sensitive << ( phi_mul_reg_408 );

    SC_METHOD(thread_r_coeffs_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_20_fu_509_p1 );
    sensitive << ( tmp_34_fu_621_p1 );
    sensitive << ( tmp_44_fu_706_p1 );
    sensitive << ( tmp_58_fu_852_p1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_coeffs_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_25_fu_537_p1 );
    sensitive << ( tmp_39_fu_669_p1 );
    sensitive << ( tmp_53_fu_794_p1 );
    sensitive << ( tmp_62_fu_885_p1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_coeffs_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_coeffs_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_18_fu_496_p1 );
    sensitive << ( tmp_51_cast_fu_611_p1 );
    sensitive << ( tmp_69_cast_fu_696_p1 );
    sensitive << ( tmp_92_cast_fu_842_p1 );
    sensitive << ( tmp_8_cast_fu_902_p1 );
    sensitive << ( tmp_17_cast_fu_970_p1 );

    SC_METHOD(thread_r_coeffs_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_37_cast_fu_526_p1 );
    sensitive << ( tmp_60_cast_fu_659_p1 );
    sensitive << ( tmp_83_cast_fu_784_p1 );
    sensitive << ( tmp_100_cast_fu_875_p1 );
    sensitive << ( tmp_12_cast_fu_954_p1 );
    sensitive << ( tmp_14_fu_987_p1 );

    SC_METHOD(thread_r_coeffs_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_coeffs_we1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_sum10_cast_fu_826_p1);
    sensitive << ( sum10_fu_820_p2 );

    SC_METHOD(thread_sum10_fu_820_p2);
    sensitive << ( phi_mul_reg_408 );

    SC_METHOD(thread_sum1_cast_fu_632_p1);
    sensitive << ( sum1_fu_626_p2 );

    SC_METHOD(thread_sum1_fu_626_p2);
    sensitive << ( phi_mul_reg_408 );

    SC_METHOD(thread_sum2_cast_fu_469_p1);
    sensitive << ( sum2_fu_463_p2 );

    SC_METHOD(thread_sum2_fu_463_p2);
    sensitive << ( phi_mul_reg_408 );

    SC_METHOD(thread_sum3_cast_fu_643_p1);
    sensitive << ( sum3_fu_637_p2 );

    SC_METHOD(thread_sum3_fu_637_p2);
    sensitive << ( phi_mul_reg_408 );

    SC_METHOD(thread_sum4_cast_fu_480_p1);
    sensitive << ( sum4_fu_474_p2 );

    SC_METHOD(thread_sum4_fu_474_p2);
    sensitive << ( phi_mul_reg_408 );

    SC_METHOD(thread_sum5_cast_fu_725_p1);
    sensitive << ( sum5_fu_719_p2 );

    SC_METHOD(thread_sum5_fu_719_p2);
    sensitive << ( phi_mul_reg_408 );

    SC_METHOD(thread_sum6_cast_fu_558_p1);
    sensitive << ( sum6_fu_552_p2 );

    SC_METHOD(thread_sum6_fu_552_p2);
    sensitive << ( phi_mul_reg_408 );

    SC_METHOD(thread_sum7_cast_fu_736_p1);
    sensitive << ( sum7_fu_730_p2 );

    SC_METHOD(thread_sum7_fu_730_p2);
    sensitive << ( phi_mul_reg_408 );

    SC_METHOD(thread_sum8_cast_fu_569_p1);
    sensitive << ( sum8_fu_563_p2 );

    SC_METHOD(thread_sum8_fu_563_p2);
    sensitive << ( phi_mul_reg_408 );

    SC_METHOD(thread_sum9_cast_fu_815_p1);
    sensitive << ( sum9_fu_809_p2 );

    SC_METHOD(thread_sum9_fu_809_p2);
    sensitive << ( phi_mul_reg_408 );

    SC_METHOD(thread_sum_cast_fu_458_p1);
    sensitive << ( sum_fu_452_p2 );

    SC_METHOD(thread_sum_fu_452_p2);
    sensitive << ( phi_mul_reg_408 );

    SC_METHOD(thread_tmp_100_cast_fu_875_p1);
    sensitive << ( tmp_60_fu_867_p3 );

    SC_METHOD(thread_tmp_10_fu_907_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_11_fu_963_p3);
    sensitive << ( tmp_12_reg_1125 );
    sensitive << ( grp_fu_420_p4 );

    SC_METHOD(thread_tmp_12_cast_fu_954_p1);
    sensitive << ( tmp_9_fu_947_p3 );

    SC_METHOD(thread_tmp_12_fu_959_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_13_fu_979_p3);
    sensitive << ( a_q0 );
    sensitive << ( tmp_15_fu_975_p1 );

    SC_METHOD(thread_tmp_14_fu_987_p1);
    sensitive << ( tmp_13_fu_979_p3 );

    SC_METHOD(thread_tmp_15_fu_975_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_16_fu_485_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_17_cast_fu_970_p1);
    sensitive << ( tmp_11_fu_963_p3 );

    SC_METHOD(thread_tmp_17_fu_489_p3);
    sensitive << ( a_load_6_reg_1015 );
    sensitive << ( tmp_16_fu_485_p1 );

    SC_METHOD(thread_tmp_18_fu_496_p1);
    sensitive << ( tmp_17_fu_489_p3 );

    SC_METHOD(thread_tmp_19_fu_501_p3);
    sensitive << ( i_reg_396 );

    SC_METHOD(thread_tmp_1_fu_911_p4);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_20_fu_509_p1);
    sensitive << ( tmp_19_fu_501_p3 );

    SC_METHOD(thread_tmp_22_fu_514_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_23_fu_518_p3);
    sensitive << ( tmp_22_fu_514_p1 );
    sensitive << ( grp_fu_420_p4 );

    SC_METHOD(thread_tmp_24_fu_531_p2);
    sensitive << ( tmp_19_fu_501_p3 );

    SC_METHOD(thread_tmp_25_fu_537_p1);
    sensitive << ( tmp_24_fu_531_p2 );

    SC_METHOD(thread_tmp_27_fu_574_p1);
    sensitive << ( tmp_26_reg_1040 );

    SC_METHOD(thread_tmp_28_fu_577_p3);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_29_fu_585_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_30_fu_589_p3);
    sensitive << ( tmp_27_fu_574_p1 );

    SC_METHOD(thread_tmp_31_fu_597_p2);
    sensitive << ( tmp_30_fu_589_p3 );
    sensitive << ( tmp_28_fu_577_p3 );

    SC_METHOD(thread_tmp_32_fu_603_p3);
    sensitive << ( tmp_29_fu_585_p1 );
    sensitive << ( tmp_31_fu_597_p2 );

    SC_METHOD(thread_tmp_33_fu_616_p2);
    sensitive << ( tmp_19_reg_1030 );

    SC_METHOD(thread_tmp_34_fu_621_p1);
    sensitive << ( tmp_33_fu_616_p2 );

    SC_METHOD(thread_tmp_36_fu_648_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_37_cast_fu_526_p1);
    sensitive << ( tmp_23_fu_518_p3 );

    SC_METHOD(thread_tmp_37_fu_652_p3);
    sensitive << ( tmp_35_reg_1055 );
    sensitive << ( tmp_36_fu_648_p1 );

    SC_METHOD(thread_tmp_38_fu_664_p2);
    sensitive << ( tmp_19_reg_1030 );

    SC_METHOD(thread_tmp_39_fu_669_p1);
    sensitive << ( tmp_38_fu_664_p2 );

    SC_METHOD(thread_tmp_3_fu_925_p3);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_40_fu_674_p4);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_41_fu_684_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_42_fu_688_p3);
    sensitive << ( tmp_41_fu_684_p1 );
    sensitive << ( tmp_40_fu_674_p4 );

    SC_METHOD(thread_tmp_43_fu_701_p2);
    sensitive << ( tmp_19_reg_1030 );

    SC_METHOD(thread_tmp_44_fu_706_p1);
    sensitive << ( tmp_43_fu_701_p2 );

    SC_METHOD(thread_tmp_46_fu_747_p1);
    sensitive << ( tmp_45_reg_1070 );

    SC_METHOD(thread_tmp_47_fu_750_p3);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_48_fu_758_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_49_fu_762_p3);
    sensitive << ( tmp_46_fu_747_p1 );

    SC_METHOD(thread_tmp_4_fu_446_p2);
    sensitive << ( i_reg_396 );

    SC_METHOD(thread_tmp_50_fu_770_p2);
    sensitive << ( tmp_49_fu_762_p3 );
    sensitive << ( tmp_47_fu_750_p3 );

    SC_METHOD(thread_tmp_51_cast_fu_611_p1);
    sensitive << ( tmp_32_fu_603_p3 );

    SC_METHOD(thread_tmp_51_fu_776_p3);
    sensitive << ( tmp_48_fu_758_p1 );
    sensitive << ( tmp_50_fu_770_p2 );

    SC_METHOD(thread_tmp_52_fu_789_p2);
    sensitive << ( tmp_19_reg_1030 );

    SC_METHOD(thread_tmp_53_fu_794_p1);
    sensitive << ( tmp_52_fu_789_p2 );

    SC_METHOD(thread_tmp_55_fu_831_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_56_fu_835_p3);
    sensitive << ( tmp_54_reg_1090 );
    sensitive << ( tmp_55_fu_831_p1 );

    SC_METHOD(thread_tmp_57_fu_847_p2);
    sensitive << ( tmp_19_reg_1030 );

    SC_METHOD(thread_tmp_58_fu_852_p1);
    sensitive << ( tmp_57_fu_847_p2 );

    SC_METHOD(thread_tmp_59_fu_857_p4);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_5_fu_933_p3);
    sensitive << ( tmp_6_fu_921_p1 );

    SC_METHOD(thread_tmp_60_cast_fu_659_p1);
    sensitive << ( tmp_37_fu_652_p3 );

    SC_METHOD(thread_tmp_60_fu_867_p3);
    sensitive << ( a_q0 );
    sensitive << ( tmp_59_fu_857_p4 );

    SC_METHOD(thread_tmp_61_fu_880_p2);
    sensitive << ( tmp_19_reg_1030 );

    SC_METHOD(thread_tmp_62_fu_885_p1);
    sensitive << ( tmp_61_fu_880_p2 );

    SC_METHOD(thread_tmp_69_cast_fu_696_p1);
    sensitive << ( tmp_42_fu_688_p3 );

    SC_METHOD(thread_tmp_6_fu_921_p1);
    sensitive << ( tmp_1_fu_911_p4 );

    SC_METHOD(thread_tmp_7_fu_941_p2);
    sensitive << ( tmp_5_fu_933_p3 );
    sensitive << ( tmp_3_fu_925_p3 );

    SC_METHOD(thread_tmp_83_cast_fu_784_p1);
    sensitive << ( tmp_51_fu_776_p3 );

    SC_METHOD(thread_tmp_8_cast_fu_902_p1);
    sensitive << ( tmp_8_fu_894_p3 );

    SC_METHOD(thread_tmp_8_fu_894_p3);
    sensitive << ( grp_fu_430_p4 );
    sensitive << ( tmp_fu_890_p1 );

    SC_METHOD(thread_tmp_92_cast_fu_842_p1);
    sensitive << ( tmp_56_fu_835_p3 );

    SC_METHOD(thread_tmp_9_fu_947_p3);
    sensitive << ( tmp_10_reg_1115 );
    sensitive << ( tmp_7_fu_941_p2 );

    SC_METHOD(thread_tmp_fu_890_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_440_p2 );

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "poly_Sq_frombytes_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_coeffs_address0, "(port)r_coeffs_address0");
    sc_trace(mVcdFile, r_coeffs_ce0, "(port)r_coeffs_ce0");
    sc_trace(mVcdFile, r_coeffs_we0, "(port)r_coeffs_we0");
    sc_trace(mVcdFile, r_coeffs_d0, "(port)r_coeffs_d0");
    sc_trace(mVcdFile, r_coeffs_address1, "(port)r_coeffs_address1");
    sc_trace(mVcdFile, r_coeffs_ce1, "(port)r_coeffs_ce1");
    sc_trace(mVcdFile, r_coeffs_we1, "(port)r_coeffs_we1");
    sc_trace(mVcdFile, r_coeffs_d1, "(port)r_coeffs_d1");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_q0, "(port)a_q0");
    sc_trace(mVcdFile, a_address1, "(port)a_address1");
    sc_trace(mVcdFile, a_ce1, "(port)a_ce1");
    sc_trace(mVcdFile, a_q1, "(port)a_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_4_fu_446_p2, "tmp_4_fu_446_p2");
    sc_trace(mVcdFile, tmp_4_reg_995, "tmp_4_reg_995");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_fu_440_p2, "exitcond_fu_440_p2");
    sc_trace(mVcdFile, a_load_6_reg_1015, "a_load_6_reg_1015");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_19_fu_501_p3, "tmp_19_fu_501_p3");
    sc_trace(mVcdFile, tmp_19_reg_1030, "tmp_19_reg_1030");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_26_reg_1040, "tmp_26_reg_1040");
    sc_trace(mVcdFile, grp_fu_430_p4, "grp_fu_430_p4");
    sc_trace(mVcdFile, tmp_35_reg_1055, "tmp_35_reg_1055");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_45_reg_1070, "tmp_45_reg_1070");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, next_mul_fu_741_p2, "next_mul_fu_741_p2");
    sc_trace(mVcdFile, next_mul_reg_1085, "next_mul_reg_1085");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_54_reg_1090, "tmp_54_reg_1090");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_10_fu_907_p1, "tmp_10_fu_907_p1");
    sc_trace(mVcdFile, tmp_10_reg_1115, "tmp_10_reg_1115");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_12_fu_959_p1, "tmp_12_fu_959_p1");
    sc_trace(mVcdFile, tmp_12_reg_1125, "tmp_12_reg_1125");
    sc_trace(mVcdFile, i_reg_396, "i_reg_396");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, phi_mul_reg_408, "phi_mul_reg_408");
    sc_trace(mVcdFile, sum_cast_fu_458_p1, "sum_cast_fu_458_p1");
    sc_trace(mVcdFile, sum2_cast_fu_469_p1, "sum2_cast_fu_469_p1");
    sc_trace(mVcdFile, sum4_cast_fu_480_p1, "sum4_cast_fu_480_p1");
    sc_trace(mVcdFile, tmp_20_fu_509_p1, "tmp_20_fu_509_p1");
    sc_trace(mVcdFile, tmp_25_fu_537_p1, "tmp_25_fu_537_p1");
    sc_trace(mVcdFile, sum6_cast_fu_558_p1, "sum6_cast_fu_558_p1");
    sc_trace(mVcdFile, sum8_cast_fu_569_p1, "sum8_cast_fu_569_p1");
    sc_trace(mVcdFile, tmp_34_fu_621_p1, "tmp_34_fu_621_p1");
    sc_trace(mVcdFile, sum1_cast_fu_632_p1, "sum1_cast_fu_632_p1");
    sc_trace(mVcdFile, sum3_cast_fu_643_p1, "sum3_cast_fu_643_p1");
    sc_trace(mVcdFile, tmp_39_fu_669_p1, "tmp_39_fu_669_p1");
    sc_trace(mVcdFile, tmp_44_fu_706_p1, "tmp_44_fu_706_p1");
    sc_trace(mVcdFile, sum5_cast_fu_725_p1, "sum5_cast_fu_725_p1");
    sc_trace(mVcdFile, sum7_cast_fu_736_p1, "sum7_cast_fu_736_p1");
    sc_trace(mVcdFile, tmp_53_fu_794_p1, "tmp_53_fu_794_p1");
    sc_trace(mVcdFile, sum9_cast_fu_815_p1, "sum9_cast_fu_815_p1");
    sc_trace(mVcdFile, sum10_cast_fu_826_p1, "sum10_cast_fu_826_p1");
    sc_trace(mVcdFile, tmp_58_fu_852_p1, "tmp_58_fu_852_p1");
    sc_trace(mVcdFile, tmp_62_fu_885_p1, "tmp_62_fu_885_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_18_fu_496_p1, "tmp_18_fu_496_p1");
    sc_trace(mVcdFile, tmp_37_cast_fu_526_p1, "tmp_37_cast_fu_526_p1");
    sc_trace(mVcdFile, tmp_51_cast_fu_611_p1, "tmp_51_cast_fu_611_p1");
    sc_trace(mVcdFile, tmp_60_cast_fu_659_p1, "tmp_60_cast_fu_659_p1");
    sc_trace(mVcdFile, tmp_69_cast_fu_696_p1, "tmp_69_cast_fu_696_p1");
    sc_trace(mVcdFile, tmp_83_cast_fu_784_p1, "tmp_83_cast_fu_784_p1");
    sc_trace(mVcdFile, tmp_92_cast_fu_842_p1, "tmp_92_cast_fu_842_p1");
    sc_trace(mVcdFile, tmp_100_cast_fu_875_p1, "tmp_100_cast_fu_875_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_902_p1, "tmp_8_cast_fu_902_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_954_p1, "tmp_12_cast_fu_954_p1");
    sc_trace(mVcdFile, tmp_17_cast_fu_970_p1, "tmp_17_cast_fu_970_p1");
    sc_trace(mVcdFile, tmp_14_fu_987_p1, "tmp_14_fu_987_p1");
    sc_trace(mVcdFile, sum_fu_452_p2, "sum_fu_452_p2");
    sc_trace(mVcdFile, sum2_fu_463_p2, "sum2_fu_463_p2");
    sc_trace(mVcdFile, sum4_fu_474_p2, "sum4_fu_474_p2");
    sc_trace(mVcdFile, tmp_16_fu_485_p1, "tmp_16_fu_485_p1");
    sc_trace(mVcdFile, tmp_17_fu_489_p3, "tmp_17_fu_489_p3");
    sc_trace(mVcdFile, tmp_22_fu_514_p1, "tmp_22_fu_514_p1");
    sc_trace(mVcdFile, grp_fu_420_p4, "grp_fu_420_p4");
    sc_trace(mVcdFile, tmp_23_fu_518_p3, "tmp_23_fu_518_p3");
    sc_trace(mVcdFile, tmp_24_fu_531_p2, "tmp_24_fu_531_p2");
    sc_trace(mVcdFile, sum6_fu_552_p2, "sum6_fu_552_p2");
    sc_trace(mVcdFile, sum8_fu_563_p2, "sum8_fu_563_p2");
    sc_trace(mVcdFile, tmp_27_fu_574_p1, "tmp_27_fu_574_p1");
    sc_trace(mVcdFile, tmp_30_fu_589_p3, "tmp_30_fu_589_p3");
    sc_trace(mVcdFile, tmp_28_fu_577_p3, "tmp_28_fu_577_p3");
    sc_trace(mVcdFile, tmp_29_fu_585_p1, "tmp_29_fu_585_p1");
    sc_trace(mVcdFile, tmp_31_fu_597_p2, "tmp_31_fu_597_p2");
    sc_trace(mVcdFile, tmp_32_fu_603_p3, "tmp_32_fu_603_p3");
    sc_trace(mVcdFile, tmp_33_fu_616_p2, "tmp_33_fu_616_p2");
    sc_trace(mVcdFile, sum1_fu_626_p2, "sum1_fu_626_p2");
    sc_trace(mVcdFile, sum3_fu_637_p2, "sum3_fu_637_p2");
    sc_trace(mVcdFile, tmp_36_fu_648_p1, "tmp_36_fu_648_p1");
    sc_trace(mVcdFile, tmp_37_fu_652_p3, "tmp_37_fu_652_p3");
    sc_trace(mVcdFile, tmp_38_fu_664_p2, "tmp_38_fu_664_p2");
    sc_trace(mVcdFile, tmp_41_fu_684_p1, "tmp_41_fu_684_p1");
    sc_trace(mVcdFile, tmp_40_fu_674_p4, "tmp_40_fu_674_p4");
    sc_trace(mVcdFile, tmp_42_fu_688_p3, "tmp_42_fu_688_p3");
    sc_trace(mVcdFile, tmp_43_fu_701_p2, "tmp_43_fu_701_p2");
    sc_trace(mVcdFile, sum5_fu_719_p2, "sum5_fu_719_p2");
    sc_trace(mVcdFile, sum7_fu_730_p2, "sum7_fu_730_p2");
    sc_trace(mVcdFile, tmp_46_fu_747_p1, "tmp_46_fu_747_p1");
    sc_trace(mVcdFile, tmp_49_fu_762_p3, "tmp_49_fu_762_p3");
    sc_trace(mVcdFile, tmp_47_fu_750_p3, "tmp_47_fu_750_p3");
    sc_trace(mVcdFile, tmp_48_fu_758_p1, "tmp_48_fu_758_p1");
    sc_trace(mVcdFile, tmp_50_fu_770_p2, "tmp_50_fu_770_p2");
    sc_trace(mVcdFile, tmp_51_fu_776_p3, "tmp_51_fu_776_p3");
    sc_trace(mVcdFile, tmp_52_fu_789_p2, "tmp_52_fu_789_p2");
    sc_trace(mVcdFile, sum9_fu_809_p2, "sum9_fu_809_p2");
    sc_trace(mVcdFile, sum10_fu_820_p2, "sum10_fu_820_p2");
    sc_trace(mVcdFile, tmp_55_fu_831_p1, "tmp_55_fu_831_p1");
    sc_trace(mVcdFile, tmp_56_fu_835_p3, "tmp_56_fu_835_p3");
    sc_trace(mVcdFile, tmp_57_fu_847_p2, "tmp_57_fu_847_p2");
    sc_trace(mVcdFile, tmp_59_fu_857_p4, "tmp_59_fu_857_p4");
    sc_trace(mVcdFile, tmp_60_fu_867_p3, "tmp_60_fu_867_p3");
    sc_trace(mVcdFile, tmp_61_fu_880_p2, "tmp_61_fu_880_p2");
    sc_trace(mVcdFile, tmp_fu_890_p1, "tmp_fu_890_p1");
    sc_trace(mVcdFile, tmp_8_fu_894_p3, "tmp_8_fu_894_p3");
    sc_trace(mVcdFile, tmp_1_fu_911_p4, "tmp_1_fu_911_p4");
    sc_trace(mVcdFile, tmp_6_fu_921_p1, "tmp_6_fu_921_p1");
    sc_trace(mVcdFile, tmp_5_fu_933_p3, "tmp_5_fu_933_p3");
    sc_trace(mVcdFile, tmp_3_fu_925_p3, "tmp_3_fu_925_p3");
    sc_trace(mVcdFile, tmp_7_fu_941_p2, "tmp_7_fu_941_p2");
    sc_trace(mVcdFile, tmp_9_fu_947_p3, "tmp_9_fu_947_p3");
    sc_trace(mVcdFile, tmp_11_fu_963_p3, "tmp_11_fu_963_p3");
    sc_trace(mVcdFile, tmp_15_fu_975_p1, "tmp_15_fu_975_p1");
    sc_trace(mVcdFile, tmp_13_fu_979_p3, "tmp_13_fu_979_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

poly_Sq_frombytes_1::~poly_Sq_frombytes_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void poly_Sq_frombytes_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_reg_396 = tmp_4_reg_995.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_396 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        phi_mul_reg_408 = next_mul_reg_1085.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_408 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_load_6_reg_1015 = a_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        next_mul_reg_1085 = next_mul_fu_741_p2.read();
        tmp_54_reg_1090 = a_q0.read().range(7, 2);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_10_reg_1115 = tmp_10_fu_907_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_12_reg_1125 = tmp_12_fu_959_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_19_reg_1030 = tmp_19_fu_501_p3.read();
        tmp_26_reg_1040 = a_q0.read().range(7, 6);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_35_reg_1055 = a_q0.read().range(7, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_45_reg_1070 = a_q0.read().range(7, 7);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_4_reg_995 = tmp_4_fu_446_p2.read();
    }
}

void poly_Sq_frombytes_1::thread_a_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        a_address0 =  (sc_lv<10>) (ap_const_lv64_381);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        a_address0 =  (sc_lv<10>) (ap_const_lv64_384);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        a_address0 =  (sc_lv<10>) (sum10_cast_fu_826_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        a_address0 =  (sc_lv<10>) (sum7_cast_fu_736_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_address0 =  (sc_lv<10>) (sum3_cast_fu_643_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_address0 =  (sc_lv<10>) (sum8_cast_fu_569_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_address0 =  (sc_lv<10>) (sum4_cast_fu_480_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_440_p2.read(), ap_const_lv1_1))) {
        a_address0 =  (sc_lv<10>) (ap_const_lv64_385);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_440_p2.read(), ap_const_lv1_0))) {
        a_address0 =  (sc_lv<10>) (sum_cast_fu_458_p1.read());
    } else {
        a_address0 = "XXXXXXXXXX";
    }
}

void poly_Sq_frombytes_1::thread_a_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        a_address1 =  (sc_lv<10>) (ap_const_lv64_382);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        a_address1 =  (sc_lv<10>) (ap_const_lv64_383);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        a_address1 =  (sc_lv<10>) (sum9_cast_fu_815_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        a_address1 =  (sc_lv<10>) (sum5_cast_fu_725_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_address1 =  (sc_lv<10>) (sum1_cast_fu_632_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_address1 =  (sc_lv<10>) (sum6_cast_fu_558_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_address1 =  (sc_lv<10>) (sum2_cast_fu_469_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_address1 =  (sc_lv<10>) (ap_const_lv64_386);
    } else {
        a_address1 = "XXXXXXXXXX";
    }
}

void poly_Sq_frombytes_1::thread_a_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_440_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_440_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes_1::thread_a_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        a_ce1 = ap_const_logic_1;
    } else {
        a_ce1 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void poly_Sq_frombytes_1::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void poly_Sq_frombytes_1::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void poly_Sq_frombytes_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void poly_Sq_frombytes_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void poly_Sq_frombytes_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void poly_Sq_frombytes_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void poly_Sq_frombytes_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void poly_Sq_frombytes_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void poly_Sq_frombytes_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void poly_Sq_frombytes_1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void poly_Sq_frombytes_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void poly_Sq_frombytes_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void poly_Sq_frombytes_1::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void poly_Sq_frombytes_1::thread_exitcond_fu_440_p2() {
    exitcond_fu_440_p2 = (!i_reg_396.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_396.read() == ap_const_lv6_3F);
}

void poly_Sq_frombytes_1::thread_grp_fu_420_p4() {
    grp_fu_420_p4 = a_q1.read().range(7, 3);
}

void poly_Sq_frombytes_1::thread_grp_fu_430_p4() {
    grp_fu_430_p4 = a_q0.read().range(7, 1);
}

void poly_Sq_frombytes_1::thread_next_mul_fu_741_p2() {
    next_mul_fu_741_p2 = (!ap_const_lv10_B.is_01() || !phi_mul_reg_408.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_B) + sc_biguint<10>(phi_mul_reg_408.read()));
}

void poly_Sq_frombytes_1::thread_r_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_coeffs_address0 =  (sc_lv<9>) (ap_const_lv64_1F9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_coeffs_address0 =  (sc_lv<9>) (ap_const_lv64_1FB);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_coeffs_address0 =  (sc_lv<9>) (tmp_58_fu_852_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_address0 =  (sc_lv<9>) (tmp_44_fu_706_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_coeffs_address0 =  (sc_lv<9>) (tmp_34_fu_621_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_coeffs_address0 =  (sc_lv<9>) (tmp_20_fu_509_p1.read());
    } else {
        r_coeffs_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void poly_Sq_frombytes_1::thread_r_coeffs_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_coeffs_address1 =  (sc_lv<9>) (ap_const_lv64_1F8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_coeffs_address1 =  (sc_lv<9>) (ap_const_lv64_1FA);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_coeffs_address1 =  (sc_lv<9>) (tmp_62_fu_885_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_coeffs_address1 =  (sc_lv<9>) (tmp_53_fu_794_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_address1 =  (sc_lv<9>) (tmp_39_fu_669_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_coeffs_address1 =  (sc_lv<9>) (tmp_25_fu_537_p1.read());
    } else {
        r_coeffs_address1 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void poly_Sq_frombytes_1::thread_r_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        r_coeffs_ce0 = ap_const_logic_1;
    } else {
        r_coeffs_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes_1::thread_r_coeffs_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        r_coeffs_ce1 = ap_const_logic_1;
    } else {
        r_coeffs_ce1 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes_1::thread_r_coeffs_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_coeffs_d0 = tmp_17_cast_fu_970_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_coeffs_d0 = tmp_8_cast_fu_902_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_coeffs_d0 = tmp_92_cast_fu_842_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_d0 = tmp_69_cast_fu_696_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_coeffs_d0 = tmp_51_cast_fu_611_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_coeffs_d0 = tmp_18_fu_496_p1.read();
    } else {
        r_coeffs_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void poly_Sq_frombytes_1::thread_r_coeffs_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_coeffs_d1 = tmp_14_fu_987_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_coeffs_d1 = tmp_12_cast_fu_954_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_coeffs_d1 = tmp_100_cast_fu_875_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_coeffs_d1 = tmp_83_cast_fu_784_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_d1 = tmp_60_cast_fu_659_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_coeffs_d1 = tmp_37_cast_fu_526_p1.read();
    } else {
        r_coeffs_d1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void poly_Sq_frombytes_1::thread_r_coeffs_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        r_coeffs_we0 = ap_const_logic_1;
    } else {
        r_coeffs_we0 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes_1::thread_r_coeffs_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        r_coeffs_we1 = ap_const_logic_1;
    } else {
        r_coeffs_we1 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes_1::thread_sum10_cast_fu_826_p1() {
    sum10_cast_fu_826_p1 = esl_zext<64,10>(sum10_fu_820_p2.read());
}

void poly_Sq_frombytes_1::thread_sum10_fu_820_p2() {
    sum10_fu_820_p2 = (!ap_const_lv10_D6.is_01() || !phi_mul_reg_408.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_D6) + sc_biguint<10>(phi_mul_reg_408.read()));
}

void poly_Sq_frombytes_1::thread_sum1_cast_fu_632_p1() {
    sum1_cast_fu_632_p1 = esl_zext<64,10>(sum1_fu_626_p2.read());
}

void poly_Sq_frombytes_1::thread_sum1_fu_626_p2() {
    sum1_fu_626_p2 = (!ap_const_lv10_D1.is_01() || !phi_mul_reg_408.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_D1) + sc_biguint<10>(phi_mul_reg_408.read()));
}

void poly_Sq_frombytes_1::thread_sum2_cast_fu_469_p1() {
    sum2_cast_fu_469_p1 = esl_zext<64,10>(sum2_fu_463_p2.read());
}

void poly_Sq_frombytes_1::thread_sum2_fu_463_p2() {
    sum2_fu_463_p2 = (!ap_const_lv10_CD.is_01() || !phi_mul_reg_408.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_CD) + sc_biguint<10>(phi_mul_reg_408.read()));
}

void poly_Sq_frombytes_1::thread_sum3_cast_fu_643_p1() {
    sum3_cast_fu_643_p1 = esl_zext<64,10>(sum3_fu_637_p2.read());
}

void poly_Sq_frombytes_1::thread_sum3_fu_637_p2() {
    sum3_fu_637_p2 = (!ap_const_lv10_D2.is_01() || !phi_mul_reg_408.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_D2) + sc_biguint<10>(phi_mul_reg_408.read()));
}

void poly_Sq_frombytes_1::thread_sum4_cast_fu_480_p1() {
    sum4_cast_fu_480_p1 = esl_zext<64,10>(sum4_fu_474_p2.read());
}

void poly_Sq_frombytes_1::thread_sum4_fu_474_p2() {
    sum4_fu_474_p2 = (!ap_const_lv10_CE.is_01() || !phi_mul_reg_408.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_CE) + sc_biguint<10>(phi_mul_reg_408.read()));
}

void poly_Sq_frombytes_1::thread_sum5_cast_fu_725_p1() {
    sum5_cast_fu_725_p1 = esl_zext<64,10>(sum5_fu_719_p2.read());
}

void poly_Sq_frombytes_1::thread_sum5_fu_719_p2() {
    sum5_fu_719_p2 = (!ap_const_lv10_D3.is_01() || !phi_mul_reg_408.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_D3) + sc_biguint<10>(phi_mul_reg_408.read()));
}

void poly_Sq_frombytes_1::thread_sum6_cast_fu_558_p1() {
    sum6_cast_fu_558_p1 = esl_zext<64,10>(sum6_fu_552_p2.read());
}

void poly_Sq_frombytes_1::thread_sum6_fu_552_p2() {
    sum6_fu_552_p2 = (!ap_const_lv10_CF.is_01() || !phi_mul_reg_408.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_CF) + sc_biguint<10>(phi_mul_reg_408.read()));
}

void poly_Sq_frombytes_1::thread_sum7_cast_fu_736_p1() {
    sum7_cast_fu_736_p1 = esl_zext<64,10>(sum7_fu_730_p2.read());
}

void poly_Sq_frombytes_1::thread_sum7_fu_730_p2() {
    sum7_fu_730_p2 = (!ap_const_lv10_D4.is_01() || !phi_mul_reg_408.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_D4) + sc_biguint<10>(phi_mul_reg_408.read()));
}

void poly_Sq_frombytes_1::thread_sum8_cast_fu_569_p1() {
    sum8_cast_fu_569_p1 = esl_zext<64,10>(sum8_fu_563_p2.read());
}

void poly_Sq_frombytes_1::thread_sum8_fu_563_p2() {
    sum8_fu_563_p2 = (!ap_const_lv10_D0.is_01() || !phi_mul_reg_408.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_D0) + sc_biguint<10>(phi_mul_reg_408.read()));
}

void poly_Sq_frombytes_1::thread_sum9_cast_fu_815_p1() {
    sum9_cast_fu_815_p1 = esl_zext<64,10>(sum9_fu_809_p2.read());
}

void poly_Sq_frombytes_1::thread_sum9_fu_809_p2() {
    sum9_fu_809_p2 = (!ap_const_lv10_D5.is_01() || !phi_mul_reg_408.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_D5) + sc_biguint<10>(phi_mul_reg_408.read()));
}

void poly_Sq_frombytes_1::thread_sum_cast_fu_458_p1() {
    sum_cast_fu_458_p1 = esl_zext<64,10>(sum_fu_452_p2.read());
}

void poly_Sq_frombytes_1::thread_sum_fu_452_p2() {
    sum_fu_452_p2 = (!ap_const_lv10_CC.is_01() || !phi_mul_reg_408.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_CC) + sc_biguint<10>(phi_mul_reg_408.read()));
}

void poly_Sq_frombytes_1::thread_tmp_100_cast_fu_875_p1() {
    tmp_100_cast_fu_875_p1 = esl_zext<16,11>(tmp_60_fu_867_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_10_fu_907_p1() {
    tmp_10_fu_907_p1 = a_q0.read().range(1-1, 0);
}

void poly_Sq_frombytes_1::thread_tmp_11_fu_963_p3() {
    tmp_11_fu_963_p3 = esl_concat<6,5>(tmp_12_reg_1125.read(), grp_fu_420_p4.read());
}

void poly_Sq_frombytes_1::thread_tmp_12_cast_fu_954_p1() {
    tmp_12_cast_fu_954_p1 = esl_zext<16,11>(tmp_9_fu_947_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_12_fu_959_p1() {
    tmp_12_fu_959_p1 = a_q1.read().range(6-1, 0);
}

void poly_Sq_frombytes_1::thread_tmp_13_fu_979_p3() {
    tmp_13_fu_979_p3 = esl_concat<3,8>(tmp_15_fu_975_p1.read(), a_q0.read());
}

void poly_Sq_frombytes_1::thread_tmp_14_fu_987_p1() {
    tmp_14_fu_987_p1 = esl_zext<16,11>(tmp_13_fu_979_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_15_fu_975_p1() {
    tmp_15_fu_975_p1 = a_q1.read().range(3-1, 0);
}

void poly_Sq_frombytes_1::thread_tmp_16_fu_485_p1() {
    tmp_16_fu_485_p1 = a_q1.read().range(3-1, 0);
}

void poly_Sq_frombytes_1::thread_tmp_17_cast_fu_970_p1() {
    tmp_17_cast_fu_970_p1 = esl_zext<16,11>(tmp_11_fu_963_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_17_fu_489_p3() {
    tmp_17_fu_489_p3 = esl_concat<3,8>(tmp_16_fu_485_p1.read(), a_load_6_reg_1015.read());
}

void poly_Sq_frombytes_1::thread_tmp_18_fu_496_p1() {
    tmp_18_fu_496_p1 = esl_zext<16,11>(tmp_17_fu_489_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_19_fu_501_p3() {
    tmp_19_fu_501_p3 = esl_concat<6,3>(i_reg_396.read(), ap_const_lv3_0);
}

void poly_Sq_frombytes_1::thread_tmp_1_fu_911_p4() {
    tmp_1_fu_911_p4 = a_q1.read().range(7, 6);
}

void poly_Sq_frombytes_1::thread_tmp_20_fu_509_p1() {
    tmp_20_fu_509_p1 = esl_zext<64,9>(tmp_19_fu_501_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_22_fu_514_p1() {
    tmp_22_fu_514_p1 = a_q0.read().range(6-1, 0);
}

void poly_Sq_frombytes_1::thread_tmp_23_fu_518_p3() {
    tmp_23_fu_518_p3 = esl_concat<6,5>(tmp_22_fu_514_p1.read(), grp_fu_420_p4.read());
}

void poly_Sq_frombytes_1::thread_tmp_24_fu_531_p2() {
    tmp_24_fu_531_p2 = (tmp_19_fu_501_p3.read() | ap_const_lv9_1);
}

void poly_Sq_frombytes_1::thread_tmp_25_fu_537_p1() {
    tmp_25_fu_537_p1 = esl_zext<64,9>(tmp_24_fu_531_p2.read());
}

void poly_Sq_frombytes_1::thread_tmp_27_fu_574_p1() {
    tmp_27_fu_574_p1 = esl_zext<8,2>(tmp_26_reg_1040.read());
}

void poly_Sq_frombytes_1::thread_tmp_28_fu_577_p3() {
    tmp_28_fu_577_p3 = esl_concat<8,2>(a_q1.read(), ap_const_lv2_0);
}

void poly_Sq_frombytes_1::thread_tmp_29_fu_585_p1() {
    tmp_29_fu_585_p1 = a_q0.read().range(1-1, 0);
}

void poly_Sq_frombytes_1::thread_tmp_30_fu_589_p3() {
    tmp_30_fu_589_p3 = esl_concat<2,8>(ap_const_lv2_0, tmp_27_fu_574_p1.read());
}

void poly_Sq_frombytes_1::thread_tmp_31_fu_597_p2() {
    tmp_31_fu_597_p2 = (tmp_30_fu_589_p3.read() | tmp_28_fu_577_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_32_fu_603_p3() {
    tmp_32_fu_603_p3 = esl_concat<1,10>(tmp_29_fu_585_p1.read(), tmp_31_fu_597_p2.read());
}

void poly_Sq_frombytes_1::thread_tmp_33_fu_616_p2() {
    tmp_33_fu_616_p2 = (tmp_19_reg_1030.read() | ap_const_lv9_2);
}

void poly_Sq_frombytes_1::thread_tmp_34_fu_621_p1() {
    tmp_34_fu_621_p1 = esl_zext<64,9>(tmp_33_fu_616_p2.read());
}

void poly_Sq_frombytes_1::thread_tmp_36_fu_648_p1() {
    tmp_36_fu_648_p1 = a_q1.read().range(4-1, 0);
}

void poly_Sq_frombytes_1::thread_tmp_37_cast_fu_526_p1() {
    tmp_37_cast_fu_526_p1 = esl_zext<16,11>(tmp_23_fu_518_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_37_fu_652_p3() {
    tmp_37_fu_652_p3 = esl_concat<4,7>(tmp_36_fu_648_p1.read(), tmp_35_reg_1055.read());
}

void poly_Sq_frombytes_1::thread_tmp_38_fu_664_p2() {
    tmp_38_fu_664_p2 = (tmp_19_reg_1030.read() | ap_const_lv9_3);
}

void poly_Sq_frombytes_1::thread_tmp_39_fu_669_p1() {
    tmp_39_fu_669_p1 = esl_zext<64,9>(tmp_38_fu_664_p2.read());
}

void poly_Sq_frombytes_1::thread_tmp_3_fu_925_p3() {
    tmp_3_fu_925_p3 = esl_concat<8,2>(a_q0.read(), ap_const_lv2_0);
}

void poly_Sq_frombytes_1::thread_tmp_40_fu_674_p4() {
    tmp_40_fu_674_p4 = a_q1.read().range(7, 4);
}

void poly_Sq_frombytes_1::thread_tmp_41_fu_684_p1() {
    tmp_41_fu_684_p1 = a_q0.read().range(7-1, 0);
}

void poly_Sq_frombytes_1::thread_tmp_42_fu_688_p3() {
    tmp_42_fu_688_p3 = esl_concat<7,4>(tmp_41_fu_684_p1.read(), tmp_40_fu_674_p4.read());
}

void poly_Sq_frombytes_1::thread_tmp_43_fu_701_p2() {
    tmp_43_fu_701_p2 = (tmp_19_reg_1030.read() | ap_const_lv9_4);
}

void poly_Sq_frombytes_1::thread_tmp_44_fu_706_p1() {
    tmp_44_fu_706_p1 = esl_zext<64,9>(tmp_43_fu_701_p2.read());
}

void poly_Sq_frombytes_1::thread_tmp_46_fu_747_p1() {
    tmp_46_fu_747_p1 = esl_zext<8,1>(tmp_45_reg_1070.read());
}

void poly_Sq_frombytes_1::thread_tmp_47_fu_750_p3() {
    tmp_47_fu_750_p3 = esl_concat<8,1>(a_q1.read(), ap_const_lv1_0);
}

void poly_Sq_frombytes_1::thread_tmp_48_fu_758_p1() {
    tmp_48_fu_758_p1 = a_q0.read().range(2-1, 0);
}

void poly_Sq_frombytes_1::thread_tmp_49_fu_762_p3() {
    tmp_49_fu_762_p3 = esl_concat<1,8>(ap_const_lv1_0, tmp_46_fu_747_p1.read());
}

void poly_Sq_frombytes_1::thread_tmp_4_fu_446_p2() {
    tmp_4_fu_446_p2 = (!i_reg_396.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_396.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void poly_Sq_frombytes_1::thread_tmp_50_fu_770_p2() {
    tmp_50_fu_770_p2 = (tmp_49_fu_762_p3.read() | tmp_47_fu_750_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_51_cast_fu_611_p1() {
    tmp_51_cast_fu_611_p1 = esl_zext<16,11>(tmp_32_fu_603_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_51_fu_776_p3() {
    tmp_51_fu_776_p3 = esl_concat<2,9>(tmp_48_fu_758_p1.read(), tmp_50_fu_770_p2.read());
}

void poly_Sq_frombytes_1::thread_tmp_52_fu_789_p2() {
    tmp_52_fu_789_p2 = (tmp_19_reg_1030.read() | ap_const_lv9_5);
}

void poly_Sq_frombytes_1::thread_tmp_53_fu_794_p1() {
    tmp_53_fu_794_p1 = esl_zext<64,9>(tmp_52_fu_789_p2.read());
}

void poly_Sq_frombytes_1::thread_tmp_55_fu_831_p1() {
    tmp_55_fu_831_p1 = a_q1.read().range(5-1, 0);
}

void poly_Sq_frombytes_1::thread_tmp_56_fu_835_p3() {
    tmp_56_fu_835_p3 = esl_concat<5,6>(tmp_55_fu_831_p1.read(), tmp_54_reg_1090.read());
}

void poly_Sq_frombytes_1::thread_tmp_57_fu_847_p2() {
    tmp_57_fu_847_p2 = (tmp_19_reg_1030.read() | ap_const_lv9_6);
}

void poly_Sq_frombytes_1::thread_tmp_58_fu_852_p1() {
    tmp_58_fu_852_p1 = esl_zext<64,9>(tmp_57_fu_847_p2.read());
}

void poly_Sq_frombytes_1::thread_tmp_59_fu_857_p4() {
    tmp_59_fu_857_p4 = a_q1.read().range(7, 5);
}

void poly_Sq_frombytes_1::thread_tmp_5_fu_933_p3() {
    tmp_5_fu_933_p3 = esl_concat<2,8>(ap_const_lv2_0, tmp_6_fu_921_p1.read());
}

void poly_Sq_frombytes_1::thread_tmp_60_cast_fu_659_p1() {
    tmp_60_cast_fu_659_p1 = esl_zext<16,11>(tmp_37_fu_652_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_60_fu_867_p3() {
    tmp_60_fu_867_p3 = esl_concat<8,3>(a_q0.read(), tmp_59_fu_857_p4.read());
}

void poly_Sq_frombytes_1::thread_tmp_61_fu_880_p2() {
    tmp_61_fu_880_p2 = (tmp_19_reg_1030.read() | ap_const_lv9_7);
}

void poly_Sq_frombytes_1::thread_tmp_62_fu_885_p1() {
    tmp_62_fu_885_p1 = esl_zext<64,9>(tmp_61_fu_880_p2.read());
}

void poly_Sq_frombytes_1::thread_tmp_69_cast_fu_696_p1() {
    tmp_69_cast_fu_696_p1 = esl_zext<16,11>(tmp_42_fu_688_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_6_fu_921_p1() {
    tmp_6_fu_921_p1 = esl_zext<8,2>(tmp_1_fu_911_p4.read());
}

void poly_Sq_frombytes_1::thread_tmp_7_fu_941_p2() {
    tmp_7_fu_941_p2 = (tmp_5_fu_933_p3.read() | tmp_3_fu_925_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_83_cast_fu_784_p1() {
    tmp_83_cast_fu_784_p1 = esl_zext<16,11>(tmp_51_fu_776_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_8_cast_fu_902_p1() {
    tmp_8_cast_fu_902_p1 = esl_zext<16,11>(tmp_8_fu_894_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_8_fu_894_p3() {
    tmp_8_fu_894_p3 = esl_concat<4,7>(tmp_fu_890_p1.read(), grp_fu_430_p4.read());
}

void poly_Sq_frombytes_1::thread_tmp_92_cast_fu_842_p1() {
    tmp_92_cast_fu_842_p1 = esl_zext<16,11>(tmp_56_fu_835_p3.read());
}

void poly_Sq_frombytes_1::thread_tmp_9_fu_947_p3() {
    tmp_9_fu_947_p3 = esl_concat<1,10>(tmp_10_reg_1115.read(), tmp_7_fu_941_p2.read());
}

void poly_Sq_frombytes_1::thread_tmp_fu_890_p1() {
    tmp_fu_890_p1 = a_q1.read().range(4-1, 0);
}

void poly_Sq_frombytes_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_440_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

