// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module owcpa_dec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rm_address0,
        rm_ce0,
        rm_we0,
        rm_d0,
        ciphertext_address0,
        ciphertext_ce0,
        ciphertext_q0,
        ciphertext_address1,
        ciphertext_ce1,
        ciphertext_q1,
        secretkey_address0,
        secretkey_ce0,
        secretkey_q0,
        secretkey_address1,
        secretkey_ce1,
        secretkey_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 36'd1;
parameter    ap_ST_fsm_state2 = 36'd2;
parameter    ap_ST_fsm_state3 = 36'd4;
parameter    ap_ST_fsm_state4 = 36'd8;
parameter    ap_ST_fsm_state5 = 36'd16;
parameter    ap_ST_fsm_state6 = 36'd32;
parameter    ap_ST_fsm_state7 = 36'd64;
parameter    ap_ST_fsm_state8 = 36'd128;
parameter    ap_ST_fsm_state9 = 36'd256;
parameter    ap_ST_fsm_state10 = 36'd512;
parameter    ap_ST_fsm_state11 = 36'd1024;
parameter    ap_ST_fsm_state12 = 36'd2048;
parameter    ap_ST_fsm_state13 = 36'd4096;
parameter    ap_ST_fsm_state14 = 36'd8192;
parameter    ap_ST_fsm_state15 = 36'd16384;
parameter    ap_ST_fsm_state16 = 36'd32768;
parameter    ap_ST_fsm_state17 = 36'd65536;
parameter    ap_ST_fsm_state18 = 36'd131072;
parameter    ap_ST_fsm_state19 = 36'd262144;
parameter    ap_ST_fsm_state20 = 36'd524288;
parameter    ap_ST_fsm_state21 = 36'd1048576;
parameter    ap_ST_fsm_state22 = 36'd2097152;
parameter    ap_ST_fsm_state23 = 36'd4194304;
parameter    ap_ST_fsm_state24 = 36'd8388608;
parameter    ap_ST_fsm_state25 = 36'd16777216;
parameter    ap_ST_fsm_state26 = 36'd33554432;
parameter    ap_ST_fsm_state27 = 36'd67108864;
parameter    ap_ST_fsm_state28 = 36'd134217728;
parameter    ap_ST_fsm_state29 = 36'd268435456;
parameter    ap_ST_fsm_state30 = 36'd536870912;
parameter    ap_ST_fsm_state31 = 36'd1073741824;
parameter    ap_ST_fsm_state32 = 36'd2147483648;
parameter    ap_ST_fsm_state33 = 36'd4294967296;
parameter    ap_ST_fsm_state34 = 36'd8589934592;
parameter    ap_ST_fsm_state35 = 36'd17179869184;
parameter    ap_ST_fsm_state36 = 36'd34359738368;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] rm_address0;
output   rm_ce0;
output   rm_we0;
output  [7:0] rm_d0;
output  [9:0] ciphertext_address0;
output   ciphertext_ce0;
input  [7:0] ciphertext_q0;
output  [9:0] ciphertext_address1;
output   ciphertext_ce1;
input  [7:0] ciphertext_q1;
output  [9:0] secretkey_address0;
output   secretkey_ce0;
input  [7:0] secretkey_q0;
output  [9:0] secretkey_address1;
output   secretkey_ce1;
input  [7:0] secretkey_q1;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rm_ce0;
reg rm_we0;
reg[9:0] secretkey_address0;
reg secretkey_ce0;
reg secretkey_ce1;

(* fsm_encoding = "none" *) reg   [35:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [8:0] b_coeffs_addr_reg_1012;
wire    ap_CS_fsm_state3;
wire   [8:0] i_12_fu_482_p2;
reg   [8:0] i_12_reg_1021;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond_i_fu_476_p2;
wire   [10:0] phitmp_fu_519_p2;
wire    ap_CS_fsm_state5;
wire   [8:0] i_13_fu_531_p2;
reg   [8:0] i_13_reg_1039;
wire    ap_CS_fsm_state7;
reg   [8:0] liftm_coeffs_addr_reg_1044;
wire   [0:0] exitcond_i7_fu_525_p2;
wire   [8:0] i_14_fu_567_p2;
reg   [8:0] i_14_reg_1052;
wire    ap_CS_fsm_state18;
wire   [0:0] exitcond_i1_fu_561_p2;
reg   [0:0] tmp_210_reg_1062;
wire   [8:0] p1_fu_676_p2;
wire    ap_CS_fsm_state19;
wire   [8:0] m1_fu_694_p2;
wire   [8:0] i_15_fu_706_p2;
reg   [8:0] i_15_reg_1080;
wire    ap_CS_fsm_state20;
wire   [63:0] tmp_i2_fu_712_p1;
reg   [63:0] tmp_i2_reg_1085;
wire   [0:0] exitcond_i2_fu_700_p2;
wire   [8:0] i_16_fu_723_p2;
reg   [8:0] i_16_reg_1098;
wire    ap_CS_fsm_state22;
reg   [8:0] liftm_coeffs_addr_2_reg_1103;
wire   [0:0] exitcond_i_i_fu_717_p2;
wire   [8:0] i_17_fu_759_p2;
reg   [8:0] i_17_reg_1111;
wire    ap_CS_fsm_state24;
reg   [8:0] b_coeffs_addr_4_reg_1116;
wire   [0:0] exitcond_fu_753_p2;
wire    ap_CS_fsm_state28;
wire    grp_poly_Rq_mul_fu_443_ap_ready;
wire    grp_poly_Rq_mul_fu_443_ap_done;
wire   [8:0] i_18_fu_792_p2;
reg   [8:0] i_18_reg_1135;
wire    ap_CS_fsm_state29;
reg   [8:0] r_coeffs_addr_25_reg_1140;
wire   [0:0] exitcond_i3_fu_786_p2;
wire   [8:0] i_19_fu_824_p2;
reg   [8:0] i_19_reg_1149;
wire    ap_CS_fsm_state31;
wire   [0:0] exitcond_i4_fu_818_p2;
wire   [63:0] t_2_fu_915_p3;
wire    ap_CS_fsm_state32;
wire   [0:0] fail_fu_965_p2;
reg   [0:0] fail_reg_1164;
wire    ap_CS_fsm_state33;
wire   [8:0] i_20_fu_976_p2;
reg   [8:0] i_20_reg_1171;
wire    ap_CS_fsm_state34;
reg   [8:0] r_coeffs_addr_27_reg_1176;
wire   [0:0] exitcond_i5_fu_970_p2;
reg   [8:0] x1_coeffs_address0;
reg    x1_coeffs_ce0;
reg    x1_coeffs_we0;
reg   [15:0] x1_coeffs_d0;
wire   [15:0] x1_coeffs_q0;
reg   [8:0] x1_coeffs_address1;
reg    x1_coeffs_ce1;
reg    x1_coeffs_we1;
reg   [15:0] x1_coeffs_d1;
wire   [15:0] x1_coeffs_q1;
reg   [8:0] x2_coeffs_address0;
reg    x2_coeffs_ce0;
reg    x2_coeffs_we0;
reg   [15:0] x2_coeffs_d0;
wire   [15:0] x2_coeffs_q0;
reg   [8:0] x2_coeffs_address1;
reg    x2_coeffs_ce1;
reg    x2_coeffs_we1;
reg   [15:0] x2_coeffs_d1;
wire   [15:0] x2_coeffs_q1;
reg   [8:0] x3_coeffs_address0;
reg    x3_coeffs_ce0;
reg    x3_coeffs_we0;
reg   [15:0] x3_coeffs_d0;
wire   [15:0] x3_coeffs_q0;
reg   [8:0] x3_coeffs_address1;
reg    x3_coeffs_ce1;
reg    x3_coeffs_we1;
reg   [15:0] x3_coeffs_d1;
reg   [8:0] x4_coeffs_address0;
reg    x4_coeffs_ce0;
reg    x4_coeffs_we0;
reg   [15:0] x4_coeffs_d0;
wire   [15:0] x4_coeffs_q0;
reg   [8:0] x4_coeffs_address1;
reg    x4_coeffs_ce1;
reg    x4_coeffs_we1;
reg   [15:0] x4_coeffs_d1;
wire   [15:0] x4_coeffs_q1;
wire    grp_poly_Sq_frombytes_1_fu_395_ap_start;
wire    grp_poly_Sq_frombytes_1_fu_395_ap_done;
wire    grp_poly_Sq_frombytes_1_fu_395_ap_idle;
wire    grp_poly_Sq_frombytes_1_fu_395_ap_ready;
wire   [8:0] grp_poly_Sq_frombytes_1_fu_395_r_coeffs_address0;
wire    grp_poly_Sq_frombytes_1_fu_395_r_coeffs_ce0;
wire    grp_poly_Sq_frombytes_1_fu_395_r_coeffs_we0;
wire   [15:0] grp_poly_Sq_frombytes_1_fu_395_r_coeffs_d0;
wire   [8:0] grp_poly_Sq_frombytes_1_fu_395_r_coeffs_address1;
wire    grp_poly_Sq_frombytes_1_fu_395_r_coeffs_ce1;
wire    grp_poly_Sq_frombytes_1_fu_395_r_coeffs_we1;
wire   [15:0] grp_poly_Sq_frombytes_1_fu_395_r_coeffs_d1;
wire   [9:0] grp_poly_Sq_frombytes_1_fu_395_a_address0;
wire    grp_poly_Sq_frombytes_1_fu_395_a_ce0;
wire   [9:0] grp_poly_Sq_frombytes_1_fu_395_a_address1;
wire    grp_poly_Sq_frombytes_1_fu_395_a_ce1;
wire    grp_poly_Sq_frombytes_fu_402_ap_start;
wire    grp_poly_Sq_frombytes_fu_402_ap_done;
wire    grp_poly_Sq_frombytes_fu_402_ap_idle;
wire    grp_poly_Sq_frombytes_fu_402_ap_ready;
wire   [8:0] grp_poly_Sq_frombytes_fu_402_r_coeffs_address0;
wire    grp_poly_Sq_frombytes_fu_402_r_coeffs_ce0;
wire    grp_poly_Sq_frombytes_fu_402_r_coeffs_we0;
wire   [15:0] grp_poly_Sq_frombytes_fu_402_r_coeffs_d0;
wire   [8:0] grp_poly_Sq_frombytes_fu_402_r_coeffs_address1;
wire    grp_poly_Sq_frombytes_fu_402_r_coeffs_ce1;
wire    grp_poly_Sq_frombytes_fu_402_r_coeffs_we1;
wire   [15:0] grp_poly_Sq_frombytes_fu_402_r_coeffs_d1;
wire   [9:0] grp_poly_Sq_frombytes_fu_402_a_address0;
wire    grp_poly_Sq_frombytes_fu_402_a_ce0;
wire   [9:0] grp_poly_Sq_frombytes_fu_402_a_address1;
wire    grp_poly_Sq_frombytes_fu_402_a_ce1;
wire    grp_poly_S3_frombytes_fu_410_ap_start;
wire    grp_poly_S3_frombytes_fu_410_ap_done;
wire    grp_poly_S3_frombytes_fu_410_ap_idle;
wire    grp_poly_S3_frombytes_fu_410_ap_ready;
wire   [8:0] grp_poly_S3_frombytes_fu_410_r_coeffs_address0;
wire    grp_poly_S3_frombytes_fu_410_r_coeffs_ce0;
wire    grp_poly_S3_frombytes_fu_410_r_coeffs_we0;
wire   [15:0] grp_poly_S3_frombytes_fu_410_r_coeffs_d0;
wire   [8:0] grp_poly_S3_frombytes_fu_410_r_coeffs_address1;
wire    grp_poly_S3_frombytes_fu_410_r_coeffs_ce1;
wire    grp_poly_S3_frombytes_fu_410_r_coeffs_we1;
wire   [15:0] grp_poly_S3_frombytes_fu_410_r_coeffs_d1;
wire   [9:0] grp_poly_S3_frombytes_fu_410_msg_address0;
wire    grp_poly_S3_frombytes_fu_410_msg_ce0;
reg   [8:0] grp_poly_S3_frombytes_fu_410_msg_offset;
wire    grp_poly_S3_mul_fu_420_ap_start;
wire    grp_poly_S3_mul_fu_420_ap_done;
wire    grp_poly_S3_mul_fu_420_ap_idle;
wire    grp_poly_S3_mul_fu_420_ap_ready;
wire   [8:0] grp_poly_S3_mul_fu_420_r_coeffs_address0;
wire    grp_poly_S3_mul_fu_420_r_coeffs_ce0;
wire    grp_poly_S3_mul_fu_420_r_coeffs_we0;
wire   [15:0] grp_poly_S3_mul_fu_420_r_coeffs_d0;
wire   [8:0] grp_poly_S3_mul_fu_420_r_coeffs_address1;
wire    grp_poly_S3_mul_fu_420_r_coeffs_ce1;
wire    grp_poly_S3_mul_fu_420_r_coeffs_we1;
wire   [15:0] grp_poly_S3_mul_fu_420_r_coeffs_d1;
wire   [8:0] grp_poly_S3_mul_fu_420_a_coeffs_address0;
wire    grp_poly_S3_mul_fu_420_a_coeffs_ce0;
wire   [8:0] grp_poly_S3_mul_fu_420_b_coeffs_address0;
wire    grp_poly_S3_mul_fu_420_b_coeffs_ce0;
wire    grp_poly_Rq_to_S3_fu_427_ap_start;
wire    grp_poly_Rq_to_S3_fu_427_ap_done;
wire    grp_poly_Rq_to_S3_fu_427_ap_idle;
wire    grp_poly_Rq_to_S3_fu_427_ap_ready;
wire   [8:0] grp_poly_Rq_to_S3_fu_427_r_coeffs_address0;
wire    grp_poly_Rq_to_S3_fu_427_r_coeffs_ce0;
wire    grp_poly_Rq_to_S3_fu_427_r_coeffs_we0;
wire   [15:0] grp_poly_Rq_to_S3_fu_427_r_coeffs_d0;
wire   [8:0] grp_poly_Rq_to_S3_fu_427_r_coeffs_address1;
wire    grp_poly_Rq_to_S3_fu_427_r_coeffs_ce1;
wire    grp_poly_Rq_to_S3_fu_427_r_coeffs_we1;
wire   [15:0] grp_poly_Rq_to_S3_fu_427_r_coeffs_d1;
wire   [8:0] grp_poly_Rq_to_S3_fu_427_a_coeffs_address0;
wire    grp_poly_Rq_to_S3_fu_427_a_coeffs_ce0;
wire    grp_poly_S3_tobytes_fu_433_ap_start;
wire    grp_poly_S3_tobytes_fu_433_ap_done;
wire    grp_poly_S3_tobytes_fu_433_ap_idle;
wire    grp_poly_S3_tobytes_fu_433_ap_ready;
wire   [7:0] grp_poly_S3_tobytes_fu_433_msg_address0;
wire    grp_poly_S3_tobytes_fu_433_msg_ce0;
wire    grp_poly_S3_tobytes_fu_433_msg_we0;
wire   [7:0] grp_poly_S3_tobytes_fu_433_msg_d0;
reg   [7:0] grp_poly_S3_tobytes_fu_433_msg_offset;
wire   [8:0] grp_poly_S3_tobytes_fu_433_a_coeffs_address0;
wire    grp_poly_S3_tobytes_fu_433_a_coeffs_ce0;
wire   [8:0] grp_poly_S3_tobytes_fu_433_a_coeffs_address1;
wire    grp_poly_S3_tobytes_fu_433_a_coeffs_ce1;
wire    grp_poly_Rq_mul_fu_443_ap_start;
wire    grp_poly_Rq_mul_fu_443_ap_idle;
wire   [8:0] grp_poly_Rq_mul_fu_443_r_coeffs_address0;
wire    grp_poly_Rq_mul_fu_443_r_coeffs_ce0;
wire    grp_poly_Rq_mul_fu_443_r_coeffs_we0;
wire   [15:0] grp_poly_Rq_mul_fu_443_r_coeffs_d0;
reg   [15:0] grp_poly_Rq_mul_fu_443_r_coeffs_q0;
wire   [8:0] grp_poly_Rq_mul_fu_443_a_coeffs_address0;
wire    grp_poly_Rq_mul_fu_443_a_coeffs_ce0;
wire   [8:0] grp_poly_Rq_mul_fu_443_b_coeffs_address0;
wire    grp_poly_Rq_mul_fu_443_b_coeffs_ce0;
reg   [15:0] grp_poly_Rq_mul_fu_443_b_coeffs_q0;
reg   [10:0] tmp_i_reg_249;
reg   [8:0] i_i_reg_260;
reg   [8:0] i_i6_reg_271;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
reg   [8:0] p1_i_reg_282;
wire    ap_CS_fsm_state17;
reg   [8:0] i_i1_reg_294;
reg   [8:0] m1_i_reg_305;
reg   [8:0] i_i2_reg_317;
wire    ap_CS_fsm_state21;
reg   [8:0] i_i_i_reg_328;
wire    ap_CS_fsm_state23;
reg   [8:0] i_reg_339;
wire    ap_CS_fsm_state25;
reg   [8:0] i_i3_reg_350;
wire    ap_CS_fsm_state30;
reg   [8:0] i_i4_reg_361;
reg   [63:0] t_i_reg_372;
reg   [8:0] i_i5_reg_384;
wire    ap_CS_fsm_state35;
reg    grp_poly_Sq_frombytes_1_fu_395_ap_start_reg;
wire    ap_CS_fsm_state26;
reg    grp_poly_Sq_frombytes_fu_402_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_poly_S3_frombytes_fu_410_ap_start_reg;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
reg    grp_poly_S3_mul_fu_420_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
reg    grp_poly_Rq_to_S3_fu_427_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_poly_S3_tobytes_fu_433_ap_start_reg;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state36;
reg    grp_poly_Rq_mul_fu_443_ap_start_reg;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_196_i_fu_488_p1;
wire   [63:0] tmp_i8_fu_537_p1;
wire   [63:0] tmp_225_i_fu_573_p1;
wire   [63:0] tmp_i_i_fu_729_p1;
wire   [63:0] tmp_s_fu_765_p1;
wire   [63:0] tmp_i3_fu_798_p1;
wire   [63:0] tmp_214_i_fu_830_p1;
wire   [63:0] tmp_i5_fu_982_p1;
wire   [15:0] tmp_195_i_cast_fu_499_p1;
wire   [15:0] tmp_197_i_fu_512_p2;
wire   [15:0] tmp_207_cast_fu_781_p1;
wire   [15:0] tmp_3_i_fu_552_p3;
wire   [15:0] tmp_3_i_i_fu_744_p3;
wire   [15:0] tmp_4_i_cast_fu_813_p1;
wire   [15:0] tmp_8_i_cast_fu_1007_p1;
wire   [10:0] grp_fu_450_p4;
wire   [10:0] tmp_i_cast_fu_493_p2;
wire   [10:0] tmp_200_fu_508_p1;
wire   [10:0] tmp_199_fu_504_p1;
wire   [10:0] tmp_205_fu_542_p1;
wire   [10:0] grp_fu_460_p2;
wire   [4:0] grp_fu_466_p4;
wire   [10:0] tmp_187_fu_546_p2;
wire   [9:0] m1_i_cast9_fu_582_p1;
wire   [9:0] p1_i_cast_fu_578_p1;
wire   [9:0] tmp_47_i_fu_592_p2;
wire   [8:0] tmp_189_fu_598_p2;
wire   [8:0] tmp_190_fu_610_p2;
wire   [8:0] tmp_i1_fu_586_p2;
wire   [9:0] tmp_48_i_fu_604_p2;
wire   [0:0] tmp_209_fu_622_p3;
wire   [8:0] tmp_191_fu_616_p2;
wire   [9:0] tmp_49_i_fu_630_p3;
wire   [15:0] tmp_49_i_cast_fu_638_p1;
wire   [31:0] tmp_51_i_fu_642_p3;
wire   [32:0] t_cast_fu_650_p1;
wire   [32:0] tmp_223_i_fu_654_p2;
wire   [0:0] tmp_211_fu_668_p1;
wire   [8:0] tmp_226_i_cast_fu_672_p1;
wire   [0:0] tmp_212_fu_682_p3;
wire   [8:0] tmp_228_i_cast_fu_690_p1;
wire   [10:0] tmp_213_fu_734_p1;
wire   [10:0] tmp_197_fu_738_p2;
wire   [15:0] tmp_201_fu_771_p2;
wire   [10:0] tmp_214_fu_777_p1;
wire   [15:0] tmp_i3_44_fu_803_p2;
wire   [10:0] tmp_215_fu_809_p1;
wire   [10:0] tmp_218_fu_835_p1;
wire   [2:0] tmp_219_fu_839_p1;
wire   [2:0] tmp_202_fu_849_p2;
wire   [2:0] tmp_218_i_fu_855_p2;
wire   [2:0] tmp_203_fu_861_p2;
wire   [10:0] tmp_216_i_cast_fu_843_p2;
wire   [7:0] tmp_204_fu_875_p4;
wire   [0:0] tmp_220_fu_867_p3;
wire   [10:0] tmp_221_fu_895_p1;
wire   [10:0] tmp_fu_885_p4;
wire   [52:0] tmp_207_fu_905_p4;
wire   [10:0] tmp_206_fu_899_p2;
wire   [15:0] tmp_216_fu_923_p1;
wire   [47:0] tmp_42_i_fu_933_p4;
wire   [15:0] tmp_41_i_fu_927_p2;
wire   [63:0] t_fu_943_p3;
wire   [63:0] tmp_i4_fu_951_p2;
wire   [0:0] tmp_217_fu_957_p3;
wire   [1:0] tmp_222_fu_997_p1;
wire   [1:0] tmp_208_fu_987_p4;
wire   [1:0] tmp_7_i_cast_fu_1001_p2;
reg   [35:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 36'd1;
#0 grp_poly_Sq_frombytes_1_fu_395_ap_start_reg = 1'b0;
#0 grp_poly_Sq_frombytes_fu_402_ap_start_reg = 1'b0;
#0 grp_poly_S3_frombytes_fu_410_ap_start_reg = 1'b0;
#0 grp_poly_S3_mul_fu_420_ap_start_reg = 1'b0;
#0 grp_poly_Rq_to_S3_fu_427_ap_start_reg = 1'b0;
#0 grp_poly_S3_tobytes_fu_433_ap_start_reg = 1'b0;
#0 grp_poly_Rq_mul_fu_443_ap_start_reg = 1'b0;
end

owcpa_dec_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 509 ),
    .AddressWidth( 9 ))
x1_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x1_coeffs_address0),
    .ce0(x1_coeffs_ce0),
    .we0(x1_coeffs_we0),
    .d0(x1_coeffs_d0),
    .q0(x1_coeffs_q0),
    .address1(x1_coeffs_address1),
    .ce1(x1_coeffs_ce1),
    .we1(x1_coeffs_we1),
    .d1(x1_coeffs_d1),
    .q1(x1_coeffs_q1)
);

owcpa_dec_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 509 ),
    .AddressWidth( 9 ))
x2_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x2_coeffs_address0),
    .ce0(x2_coeffs_ce0),
    .we0(x2_coeffs_we0),
    .d0(x2_coeffs_d0),
    .q0(x2_coeffs_q0),
    .address1(x2_coeffs_address1),
    .ce1(x2_coeffs_ce1),
    .we1(x2_coeffs_we1),
    .d1(x2_coeffs_d1),
    .q1(x2_coeffs_q1)
);

owcpa_dec_x3_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 509 ),
    .AddressWidth( 9 ))
x3_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x3_coeffs_address0),
    .ce0(x3_coeffs_ce0),
    .we0(x3_coeffs_we0),
    .d0(x3_coeffs_d0),
    .q0(x3_coeffs_q0),
    .address1(x3_coeffs_address1),
    .ce1(x3_coeffs_ce1),
    .we1(x3_coeffs_we1),
    .d1(x3_coeffs_d1)
);

owcpa_dec_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 509 ),
    .AddressWidth( 9 ))
x4_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x4_coeffs_address0),
    .ce0(x4_coeffs_ce0),
    .we0(x4_coeffs_we0),
    .d0(x4_coeffs_d0),
    .q0(x4_coeffs_q0),
    .address1(x4_coeffs_address1),
    .ce1(x4_coeffs_ce1),
    .we1(x4_coeffs_we1),
    .d1(x4_coeffs_d1),
    .q1(x4_coeffs_q1)
);

poly_Sq_frombytes_1 grp_poly_Sq_frombytes_1_fu_395(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Sq_frombytes_1_fu_395_ap_start),
    .ap_done(grp_poly_Sq_frombytes_1_fu_395_ap_done),
    .ap_idle(grp_poly_Sq_frombytes_1_fu_395_ap_idle),
    .ap_ready(grp_poly_Sq_frombytes_1_fu_395_ap_ready),
    .r_coeffs_address0(grp_poly_Sq_frombytes_1_fu_395_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Sq_frombytes_1_fu_395_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Sq_frombytes_1_fu_395_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Sq_frombytes_1_fu_395_r_coeffs_d0),
    .r_coeffs_address1(grp_poly_Sq_frombytes_1_fu_395_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_Sq_frombytes_1_fu_395_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_Sq_frombytes_1_fu_395_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_Sq_frombytes_1_fu_395_r_coeffs_d1),
    .a_address0(grp_poly_Sq_frombytes_1_fu_395_a_address0),
    .a_ce0(grp_poly_Sq_frombytes_1_fu_395_a_ce0),
    .a_q0(secretkey_q0),
    .a_address1(grp_poly_Sq_frombytes_1_fu_395_a_address1),
    .a_ce1(grp_poly_Sq_frombytes_1_fu_395_a_ce1),
    .a_q1(secretkey_q1)
);

poly_Sq_frombytes grp_poly_Sq_frombytes_fu_402(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Sq_frombytes_fu_402_ap_start),
    .ap_done(grp_poly_Sq_frombytes_fu_402_ap_done),
    .ap_idle(grp_poly_Sq_frombytes_fu_402_ap_idle),
    .ap_ready(grp_poly_Sq_frombytes_fu_402_ap_ready),
    .r_coeffs_address0(grp_poly_Sq_frombytes_fu_402_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Sq_frombytes_fu_402_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Sq_frombytes_fu_402_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Sq_frombytes_fu_402_r_coeffs_d0),
    .r_coeffs_address1(grp_poly_Sq_frombytes_fu_402_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_Sq_frombytes_fu_402_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_Sq_frombytes_fu_402_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_Sq_frombytes_fu_402_r_coeffs_d1),
    .a_address0(grp_poly_Sq_frombytes_fu_402_a_address0),
    .a_ce0(grp_poly_Sq_frombytes_fu_402_a_ce0),
    .a_q0(ciphertext_q0),
    .a_address1(grp_poly_Sq_frombytes_fu_402_a_address1),
    .a_ce1(grp_poly_Sq_frombytes_fu_402_a_ce1),
    .a_q1(ciphertext_q1)
);

poly_S3_frombytes grp_poly_S3_frombytes_fu_410(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_frombytes_fu_410_ap_start),
    .ap_done(grp_poly_S3_frombytes_fu_410_ap_done),
    .ap_idle(grp_poly_S3_frombytes_fu_410_ap_idle),
    .ap_ready(grp_poly_S3_frombytes_fu_410_ap_ready),
    .r_coeffs_address0(grp_poly_S3_frombytes_fu_410_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_S3_frombytes_fu_410_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_S3_frombytes_fu_410_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_S3_frombytes_fu_410_r_coeffs_d0),
    .r_coeffs_address1(grp_poly_S3_frombytes_fu_410_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_S3_frombytes_fu_410_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_S3_frombytes_fu_410_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_S3_frombytes_fu_410_r_coeffs_d1),
    .msg_address0(grp_poly_S3_frombytes_fu_410_msg_address0),
    .msg_ce0(grp_poly_S3_frombytes_fu_410_msg_ce0),
    .msg_q0(secretkey_q0),
    .msg_offset(grp_poly_S3_frombytes_fu_410_msg_offset)
);

poly_S3_mul grp_poly_S3_mul_fu_420(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_mul_fu_420_ap_start),
    .ap_done(grp_poly_S3_mul_fu_420_ap_done),
    .ap_idle(grp_poly_S3_mul_fu_420_ap_idle),
    .ap_ready(grp_poly_S3_mul_fu_420_ap_ready),
    .r_coeffs_address0(grp_poly_S3_mul_fu_420_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_S3_mul_fu_420_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_S3_mul_fu_420_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_S3_mul_fu_420_r_coeffs_d0),
    .r_coeffs_q0(x4_coeffs_q0),
    .r_coeffs_address1(grp_poly_S3_mul_fu_420_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_S3_mul_fu_420_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_S3_mul_fu_420_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_S3_mul_fu_420_r_coeffs_d1),
    .r_coeffs_q1(x4_coeffs_q1),
    .a_coeffs_address0(grp_poly_S3_mul_fu_420_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_mul_fu_420_a_coeffs_ce0),
    .a_coeffs_q0(x2_coeffs_q0),
    .b_coeffs_address0(grp_poly_S3_mul_fu_420_b_coeffs_address0),
    .b_coeffs_ce0(grp_poly_S3_mul_fu_420_b_coeffs_ce0),
    .b_coeffs_q0(x3_coeffs_q0)
);

poly_Rq_to_S3 grp_poly_Rq_to_S3_fu_427(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Rq_to_S3_fu_427_ap_start),
    .ap_done(grp_poly_Rq_to_S3_fu_427_ap_done),
    .ap_idle(grp_poly_Rq_to_S3_fu_427_ap_idle),
    .ap_ready(grp_poly_Rq_to_S3_fu_427_ap_ready),
    .r_coeffs_address0(grp_poly_Rq_to_S3_fu_427_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Rq_to_S3_fu_427_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Rq_to_S3_fu_427_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Rq_to_S3_fu_427_r_coeffs_d0),
    .r_coeffs_q0(x2_coeffs_q0),
    .r_coeffs_address1(grp_poly_Rq_to_S3_fu_427_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_Rq_to_S3_fu_427_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_Rq_to_S3_fu_427_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_Rq_to_S3_fu_427_r_coeffs_d1),
    .r_coeffs_q1(x2_coeffs_q1),
    .a_coeffs_address0(grp_poly_Rq_to_S3_fu_427_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Rq_to_S3_fu_427_a_coeffs_ce0),
    .a_coeffs_q0(x3_coeffs_q0)
);

poly_S3_tobytes grp_poly_S3_tobytes_fu_433(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_tobytes_fu_433_ap_start),
    .ap_done(grp_poly_S3_tobytes_fu_433_ap_done),
    .ap_idle(grp_poly_S3_tobytes_fu_433_ap_idle),
    .ap_ready(grp_poly_S3_tobytes_fu_433_ap_ready),
    .msg_address0(grp_poly_S3_tobytes_fu_433_msg_address0),
    .msg_ce0(grp_poly_S3_tobytes_fu_433_msg_ce0),
    .msg_we0(grp_poly_S3_tobytes_fu_433_msg_we0),
    .msg_d0(grp_poly_S3_tobytes_fu_433_msg_d0),
    .msg_offset(grp_poly_S3_tobytes_fu_433_msg_offset),
    .a_coeffs_address0(grp_poly_S3_tobytes_fu_433_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_tobytes_fu_433_a_coeffs_ce0),
    .a_coeffs_q0(x4_coeffs_q0),
    .a_coeffs_address1(grp_poly_S3_tobytes_fu_433_a_coeffs_address1),
    .a_coeffs_ce1(grp_poly_S3_tobytes_fu_433_a_coeffs_ce1),
    .a_coeffs_q1(x4_coeffs_q1)
);

poly_Rq_mul grp_poly_Rq_mul_fu_443(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Rq_mul_fu_443_ap_start),
    .ap_done(grp_poly_Rq_mul_fu_443_ap_done),
    .ap_idle(grp_poly_Rq_mul_fu_443_ap_idle),
    .ap_ready(grp_poly_Rq_mul_fu_443_ap_ready),
    .r_coeffs_address0(grp_poly_Rq_mul_fu_443_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Rq_mul_fu_443_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Rq_mul_fu_443_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Rq_mul_fu_443_r_coeffs_d0),
    .r_coeffs_q0(grp_poly_Rq_mul_fu_443_r_coeffs_q0),
    .a_coeffs_address0(grp_poly_Rq_mul_fu_443_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Rq_mul_fu_443_a_coeffs_ce0),
    .a_coeffs_q0(x1_coeffs_q0),
    .b_coeffs_address0(grp_poly_Rq_mul_fu_443_b_coeffs_address0),
    .b_coeffs_ce0(grp_poly_Rq_mul_fu_443_b_coeffs_ce0),
    .b_coeffs_q0(grp_poly_Rq_mul_fu_443_b_coeffs_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Rq_mul_fu_443_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_state7) & (exitcond_i7_fu_525_p2 == 1'd1)))) begin
            grp_poly_Rq_mul_fu_443_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Rq_mul_fu_443_ap_ready == 1'b1)) begin
            grp_poly_Rq_mul_fu_443_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Rq_to_S3_fu_427_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_poly_Rq_to_S3_fu_427_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Rq_to_S3_fu_427_ap_ready == 1'b1)) begin
            grp_poly_Rq_to_S3_fu_427_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_frombytes_fu_410_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state12) | ((exitcond_i_fu_476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
            grp_poly_S3_frombytes_fu_410_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_frombytes_fu_410_ap_ready == 1'b1)) begin
            grp_poly_S3_frombytes_fu_410_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_mul_fu_420_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_poly_S3_mul_fu_420_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_mul_fu_420_ap_ready == 1'b1)) begin
            grp_poly_S3_mul_fu_420_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_tobytes_fu_433_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state34) & (exitcond_i5_fu_970_p2 == 1'd1)))) begin
            grp_poly_S3_tobytes_fu_433_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_tobytes_fu_433_ap_ready == 1'b1)) begin
            grp_poly_S3_tobytes_fu_433_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Sq_frombytes_1_fu_395_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state24) & (exitcond_fu_753_p2 == 1'd1))) begin
            grp_poly_Sq_frombytes_1_fu_395_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Sq_frombytes_1_fu_395_ap_ready == 1'b1)) begin
            grp_poly_Sq_frombytes_1_fu_395_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Sq_frombytes_fu_402_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_poly_Sq_frombytes_fu_402_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Sq_frombytes_fu_402_ap_ready == 1'b1)) begin
            grp_poly_Sq_frombytes_fu_402_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_i1_reg_294 <= i_14_reg_1052;
    end else if (((grp_poly_S3_tobytes_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        i_i1_reg_294 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_i2_reg_317 <= i_15_reg_1080;
    end else if (((1'b1 == ap_CS_fsm_state18) & (exitcond_i1_fu_561_p2 == 1'd1))) begin
        i_i2_reg_317 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i_i3_reg_350 <= i_18_reg_1135;
    end else if (((1'b1 == ap_CS_fsm_state28) & (grp_poly_Rq_mul_fu_443_ap_done == 1'b1))) begin
        i_i3_reg_350 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (exitcond_i3_fu_786_p2 == 1'd1))) begin
        i_i4_reg_361 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        i_i4_reg_361 <= i_19_reg_1149;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        i_i5_reg_384 <= i_20_reg_1171;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        i_i5_reg_384 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_i6_reg_271 <= i_13_reg_1039;
    end else if (((grp_poly_S3_frombytes_fu_410_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_i6_reg_271 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (exitcond_i2_fu_700_p2 == 1'd1))) begin
        i_i_i_reg_328 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        i_i_i_reg_328 <= i_16_reg_1098;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_i_reg_260 <= i_12_reg_1021;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_i_reg_260 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i_i_fu_717_p2 == 1'd1))) begin
        i_reg_339 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        i_reg_339 <= i_17_reg_1111;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        m1_i_reg_305 <= m1_fu_694_p2;
    end else if (((grp_poly_S3_tobytes_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        m1_i_reg_305 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p1_i_reg_282 <= p1_fu_676_p2;
    end else if (((grp_poly_S3_tobytes_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        p1_i_reg_282 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (exitcond_i3_fu_786_p2 == 1'd1))) begin
        t_i_reg_372 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        t_i_reg_372 <= t_2_fu_915_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_i_reg_249 <= phitmp_fu_519_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_i_reg_249 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_753_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        b_coeffs_addr_4_reg_1116 <= tmp_s_fu_765_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        fail_reg_1164 <= fail_fu_965_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_12_reg_1021 <= i_12_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_13_reg_1039 <= i_13_fu_531_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_14_reg_1052 <= i_14_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_15_reg_1080 <= i_15_fu_706_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_16_reg_1098 <= i_16_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_17_reg_1111 <= i_17_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        i_18_reg_1135 <= i_18_fu_792_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_19_reg_1149 <= i_19_fu_824_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        i_20_reg_1171 <= i_20_fu_976_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_fu_717_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        liftm_coeffs_addr_2_reg_1103 <= tmp_i_i_fu_729_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i7_fu_525_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        liftm_coeffs_addr_reg_1044 <= tmp_i8_fu_537_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i3_fu_786_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        r_coeffs_addr_25_reg_1140 <= tmp_i3_fu_798_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i5_fu_970_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        r_coeffs_addr_27_reg_1176 <= tmp_i5_fu_982_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond_i1_fu_561_p2 == 1'd1))) begin
        tmp_210_reg_1062 <= tmp_223_i_fu_654_p2[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i2_fu_700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        tmp_i2_reg_1085[8 : 0] <= tmp_i2_fu_712_p1[8 : 0];
    end
end

always @ (*) begin
    if ((((grp_poly_S3_tobytes_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_poly_S3_tobytes_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_poly_Rq_mul_fu_443_b_coeffs_q0 = x3_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_poly_Rq_mul_fu_443_b_coeffs_q0 = x2_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_443_b_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_poly_Rq_mul_fu_443_r_coeffs_q0 = x4_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_poly_Rq_mul_fu_443_r_coeffs_q0 = x3_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_443_r_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_poly_S3_frombytes_fu_410_msg_offset = 9'd102;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_poly_S3_frombytes_fu_410_msg_offset = 9'd0;
    end else begin
        grp_poly_S3_frombytes_fu_410_msg_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_poly_S3_tobytes_fu_433_msg_offset = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_poly_S3_tobytes_fu_433_msg_offset = 8'd102;
    end else begin
        grp_poly_S3_tobytes_fu_433_msg_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17))) begin
        rm_ce0 = grp_poly_S3_tobytes_fu_433_msg_ce0;
    end else begin
        rm_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17))) begin
        rm_we0 = grp_poly_S3_tobytes_fu_433_msg_we0;
    end else begin
        rm_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        secretkey_address0 = grp_poly_S3_frombytes_fu_410_msg_address0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        secretkey_address0 = grp_poly_Sq_frombytes_1_fu_395_a_address0;
    end else begin
        secretkey_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        secretkey_ce0 = grp_poly_S3_frombytes_fu_410_msg_ce0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        secretkey_ce0 = grp_poly_Sq_frombytes_1_fu_395_a_ce0;
    end else begin
        secretkey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        secretkey_ce1 = grp_poly_Sq_frombytes_1_fu_395_a_ce1;
    end else begin
        secretkey_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        x1_coeffs_address0 = b_coeffs_addr_4_reg_1116;
    end else if (((exitcond_i_fu_476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        x1_coeffs_address0 = b_coeffs_addr_reg_1012;
    end else if (((exitcond_i_fu_476_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        x1_coeffs_address0 = tmp_196_i_fu_488_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        x1_coeffs_address0 = 64'd508;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state28))) begin
        x1_coeffs_address0 = grp_poly_Rq_mul_fu_443_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_address0 = grp_poly_Sq_frombytes_fu_402_r_coeffs_address0;
    end else begin
        x1_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        x1_coeffs_address1 = tmp_s_fu_765_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        x1_coeffs_address1 = 64'd508;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_address1 = grp_poly_Sq_frombytes_fu_402_r_coeffs_address1;
    end else begin
        x1_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state25) | ((exitcond_i_fu_476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((exitcond_i_fu_476_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        x1_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state28))) begin
        x1_coeffs_ce0 = grp_poly_Rq_mul_fu_443_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_ce0 = grp_poly_Sq_frombytes_fu_402_r_coeffs_ce0;
    end else begin
        x1_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state5))) begin
        x1_coeffs_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_ce1 = grp_poly_Sq_frombytes_fu_402_r_coeffs_ce1;
    end else begin
        x1_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        x1_coeffs_d0 = tmp_207_cast_fu_781_p1;
    end else if (((exitcond_i_fu_476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        x1_coeffs_d0 = tmp_195_i_cast_fu_499_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        x1_coeffs_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_d0 = grp_poly_Sq_frombytes_fu_402_r_coeffs_d0;
    end else begin
        x1_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        x1_coeffs_d1 = tmp_197_i_fu_512_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_d1 = grp_poly_Sq_frombytes_fu_402_r_coeffs_d1;
    end else begin
        x1_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state25) | ((exitcond_i_fu_476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        x1_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_we0 = grp_poly_Sq_frombytes_fu_402_r_coeffs_we0;
    end else begin
        x1_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        x1_coeffs_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_we1 = grp_poly_Sq_frombytes_fu_402_r_coeffs_we1;
    end else begin
        x1_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        x2_coeffs_address0 = tmp_s_fu_765_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        x2_coeffs_address0 = liftm_coeffs_addr_2_reg_1103;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        x2_coeffs_address0 = tmp_i_i_fu_729_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        x2_coeffs_address0 = tmp_i2_reg_1085;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x2_coeffs_address0 = liftm_coeffs_addr_reg_1044;
    end else if (((exitcond_i7_fu_525_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        x2_coeffs_address0 = tmp_i8_fu_537_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x2_coeffs_address0 = grp_poly_Rq_mul_fu_443_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_address0 = grp_poly_Rq_to_S3_fu_427_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x2_coeffs_address0 = grp_poly_S3_mul_fu_420_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_address0 = grp_poly_S3_frombytes_fu_410_r_coeffs_address0;
    end else begin
        x2_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_address1 = grp_poly_Rq_to_S3_fu_427_r_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_address1 = grp_poly_S3_frombytes_fu_410_r_coeffs_address1;
    end else begin
        x2_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | ((exitcond_i7_fu_525_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        x2_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x2_coeffs_ce0 = grp_poly_Rq_mul_fu_443_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_ce0 = grp_poly_Rq_to_S3_fu_427_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x2_coeffs_ce0 = grp_poly_S3_mul_fu_420_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_ce0 = grp_poly_S3_frombytes_fu_410_r_coeffs_ce0;
    end else begin
        x2_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_ce1 = grp_poly_Rq_to_S3_fu_427_r_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_ce1 = grp_poly_S3_frombytes_fu_410_r_coeffs_ce1;
    end else begin
        x2_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        x2_coeffs_d0 = tmp_3_i_i_fu_744_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        x2_coeffs_d0 = x4_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x2_coeffs_d0 = tmp_3_i_fu_552_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_d0 = grp_poly_Rq_to_S3_fu_427_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_d0 = grp_poly_S3_frombytes_fu_410_r_coeffs_d0;
    end else begin
        x2_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_d1 = grp_poly_Rq_to_S3_fu_427_r_coeffs_d1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_d1 = grp_poly_S3_frombytes_fu_410_r_coeffs_d1;
    end else begin
        x2_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state8))) begin
        x2_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_we0 = grp_poly_Rq_to_S3_fu_427_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_we0 = grp_poly_S3_frombytes_fu_410_r_coeffs_we0;
    end else begin
        x2_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_we1 = grp_poly_Rq_to_S3_fu_427_r_coeffs_we1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_we1 = grp_poly_S3_frombytes_fu_410_r_coeffs_we1;
    end else begin
        x2_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        x3_coeffs_address0 = grp_poly_Rq_mul_fu_443_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_address0 = grp_poly_Rq_mul_fu_443_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x3_coeffs_address0 = grp_poly_Rq_to_S3_fu_427_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x3_coeffs_address0 = grp_poly_S3_mul_fu_420_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_address0 = grp_poly_S3_frombytes_fu_410_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_address0 = grp_poly_Sq_frombytes_1_fu_395_r_coeffs_address0;
    end else begin
        x3_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_address1 = grp_poly_S3_frombytes_fu_410_r_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_address1 = grp_poly_Sq_frombytes_1_fu_395_r_coeffs_address1;
    end else begin
        x3_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        x3_coeffs_ce0 = grp_poly_Rq_mul_fu_443_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_ce0 = grp_poly_Rq_mul_fu_443_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x3_coeffs_ce0 = grp_poly_Rq_to_S3_fu_427_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x3_coeffs_ce0 = grp_poly_S3_mul_fu_420_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_ce0 = grp_poly_S3_frombytes_fu_410_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_ce0 = grp_poly_Sq_frombytes_1_fu_395_r_coeffs_ce0;
    end else begin
        x3_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_ce1 = grp_poly_S3_frombytes_fu_410_r_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_ce1 = grp_poly_Sq_frombytes_1_fu_395_r_coeffs_ce1;
    end else begin
        x3_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_d0 = grp_poly_Rq_mul_fu_443_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_d0 = grp_poly_S3_frombytes_fu_410_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_d0 = grp_poly_Sq_frombytes_1_fu_395_r_coeffs_d0;
    end else begin
        x3_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_d1 = grp_poly_S3_frombytes_fu_410_r_coeffs_d1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_d1 = grp_poly_Sq_frombytes_1_fu_395_r_coeffs_d1;
    end else begin
        x3_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_we0 = grp_poly_Rq_mul_fu_443_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_we0 = grp_poly_S3_frombytes_fu_410_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_we0 = grp_poly_Sq_frombytes_1_fu_395_r_coeffs_we0;
    end else begin
        x3_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_we1 = grp_poly_S3_frombytes_fu_410_r_coeffs_we1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_we1 = grp_poly_Sq_frombytes_1_fu_395_r_coeffs_we1;
    end else begin
        x3_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        x4_coeffs_address0 = r_coeffs_addr_27_reg_1176;
    end else if (((exitcond_i5_fu_970_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        x4_coeffs_address0 = tmp_i5_fu_982_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        x4_coeffs_address0 = tmp_i3_fu_798_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        x4_coeffs_address0 = tmp_i2_fu_712_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        x4_coeffs_address0 = tmp_225_i_fu_573_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_443_r_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17))) begin
        x4_coeffs_address0 = grp_poly_S3_tobytes_fu_433_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_address0 = grp_poly_S3_mul_fu_420_r_coeffs_address0;
    end else begin
        x4_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_i4_fu_818_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        x4_coeffs_address1 = tmp_214_i_fu_830_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        x4_coeffs_address1 = r_coeffs_addr_25_reg_1140;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state31) & (exitcond_i4_fu_818_p2 == 1'd1)))) begin
        x4_coeffs_address1 = 64'd508;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17))) begin
        x4_coeffs_address1 = grp_poly_S3_tobytes_fu_433_a_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_address1 = grp_poly_S3_mul_fu_420_r_coeffs_address1;
    end else begin
        x4_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | ((exitcond_i5_fu_970_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34)))) begin
        x4_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_443_r_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17))) begin
        x4_coeffs_ce0 = grp_poly_S3_tobytes_fu_433_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_ce0 = grp_poly_S3_mul_fu_420_r_coeffs_ce0;
    end else begin
        x4_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state31) & (exitcond_i4_fu_818_p2 == 1'd1)) | ((exitcond_i4_fu_818_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)))) begin
        x4_coeffs_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17))) begin
        x4_coeffs_ce1 = grp_poly_S3_tobytes_fu_433_a_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_ce1 = grp_poly_S3_mul_fu_420_r_coeffs_ce1;
    end else begin
        x4_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        x4_coeffs_d0 = tmp_8_i_cast_fu_1007_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        x4_coeffs_d0 = grp_poly_Rq_mul_fu_443_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_d0 = grp_poly_S3_mul_fu_420_r_coeffs_d0;
    end else begin
        x4_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        x4_coeffs_d1 = tmp_4_i_cast_fu_813_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_d1 = grp_poly_S3_mul_fu_420_r_coeffs_d1;
    end else begin
        x4_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        x4_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        x4_coeffs_we0 = grp_poly_Rq_mul_fu_443_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_we0 = grp_poly_S3_mul_fu_420_r_coeffs_we0;
    end else begin
        x4_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        x4_coeffs_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_we1 = grp_poly_S3_mul_fu_420_r_coeffs_we1;
    end else begin
        x4_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_poly_Sq_frombytes_fu_402_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond_i_fu_476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_poly_S3_frombytes_fu_410_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond_i7_fu_525_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_poly_Rq_mul_fu_443_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_poly_Rq_to_S3_fu_427_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_poly_S3_frombytes_fu_410_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_poly_S3_mul_fu_420_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_poly_S3_tobytes_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (exitcond_i1_fu_561_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (exitcond_i2_fu_700_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i_i_fu_717_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (exitcond_fu_753_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_poly_Sq_frombytes_1_fu_395_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (grp_poly_Rq_mul_fu_443_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (exitcond_i3_fu_786_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (exitcond_i4_fu_818_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (exitcond_i5_fu_970_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_poly_S3_tobytes_fu_433_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = fail_reg_1164;

assign b_coeffs_addr_reg_1012 = 64'd508;

assign ciphertext_address0 = grp_poly_Sq_frombytes_fu_402_a_address0;

assign ciphertext_address1 = grp_poly_Sq_frombytes_fu_402_a_address1;

assign ciphertext_ce0 = grp_poly_Sq_frombytes_fu_402_a_ce0;

assign ciphertext_ce1 = grp_poly_Sq_frombytes_fu_402_a_ce1;

assign exitcond_fu_753_p2 = ((i_reg_339 == 9'd509) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_561_p2 = ((i_i1_reg_294 == 9'd509) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_700_p2 = ((i_i2_reg_317 == 9'd509) ? 1'b1 : 1'b0);

assign exitcond_i3_fu_786_p2 = ((i_i3_reg_350 == 9'd509) ? 1'b1 : 1'b0);

assign exitcond_i4_fu_818_p2 = ((i_i4_reg_361 == 9'd509) ? 1'b1 : 1'b0);

assign exitcond_i5_fu_970_p2 = ((i_i5_reg_384 == 9'd509) ? 1'b1 : 1'b0);

assign exitcond_i7_fu_525_p2 = ((i_i6_reg_271 == 9'd509) ? 1'b1 : 1'b0);

assign exitcond_i_fu_476_p2 = ((i_i_reg_260 == 9'd508) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_717_p2 = ((i_i_i_reg_328 == 9'd509) ? 1'b1 : 1'b0);

assign fail_fu_965_p2 = (tmp_217_fu_957_p3 | tmp_210_reg_1062);

assign grp_fu_450_p4 = {{x2_coeffs_q0[11:1]}};

assign grp_fu_460_p2 = (11'd0 - grp_fu_450_p4);

assign grp_fu_466_p4 = {{x2_coeffs_q0[15:11]}};

assign grp_poly_Rq_mul_fu_443_ap_start = grp_poly_Rq_mul_fu_443_ap_start_reg;

assign grp_poly_Rq_to_S3_fu_427_ap_start = grp_poly_Rq_to_S3_fu_427_ap_start_reg;

assign grp_poly_S3_frombytes_fu_410_ap_start = grp_poly_S3_frombytes_fu_410_ap_start_reg;

assign grp_poly_S3_mul_fu_420_ap_start = grp_poly_S3_mul_fu_420_ap_start_reg;

assign grp_poly_S3_tobytes_fu_433_ap_start = grp_poly_S3_tobytes_fu_433_ap_start_reg;

assign grp_poly_Sq_frombytes_1_fu_395_ap_start = grp_poly_Sq_frombytes_1_fu_395_ap_start_reg;

assign grp_poly_Sq_frombytes_fu_402_ap_start = grp_poly_Sq_frombytes_fu_402_ap_start_reg;

assign i_12_fu_482_p2 = (i_i_reg_260 + 9'd1);

assign i_13_fu_531_p2 = (i_i6_reg_271 + 9'd1);

assign i_14_fu_567_p2 = (i_i1_reg_294 + 9'd1);

assign i_15_fu_706_p2 = (i_i2_reg_317 + 9'd1);

assign i_16_fu_723_p2 = (i_i_i_reg_328 + 9'd1);

assign i_17_fu_759_p2 = (i_reg_339 + 9'd1);

assign i_18_fu_792_p2 = (i_i3_reg_350 + 9'd1);

assign i_19_fu_824_p2 = (i_i4_reg_361 + 9'd1);

assign i_20_fu_976_p2 = (i_i5_reg_384 + 9'd1);

assign m1_fu_694_p2 = (tmp_228_i_cast_fu_690_p1 + m1_i_reg_305);

assign m1_i_cast9_fu_582_p1 = m1_i_reg_305;

assign p1_fu_676_p2 = (tmp_226_i_cast_fu_672_p1 + p1_i_reg_282);

assign p1_i_cast_fu_578_p1 = p1_i_reg_282;

assign phitmp_fu_519_p2 = (tmp_200_fu_508_p1 + tmp_199_fu_504_p1);

assign rm_address0 = grp_poly_S3_tobytes_fu_433_msg_address0;

assign rm_d0 = grp_poly_S3_tobytes_fu_433_msg_d0;

assign secretkey_address1 = grp_poly_Sq_frombytes_1_fu_395_a_address1;

assign t_2_fu_915_p3 = {{tmp_207_fu_905_p4}, {tmp_206_fu_899_p2}};

assign t_cast_fu_650_p1 = tmp_51_i_fu_642_p3;

assign t_fu_943_p3 = {{tmp_42_i_fu_933_p4}, {tmp_41_i_fu_927_p2}};

assign tmp_187_fu_546_p2 = (tmp_205_fu_542_p1 | grp_fu_460_p2);

assign tmp_189_fu_598_p2 = (p1_i_reg_282 + m1_i_reg_305);

assign tmp_190_fu_610_p2 = (tmp_189_fu_598_p2 ^ 9'd254);

assign tmp_191_fu_616_p2 = (tmp_i1_fu_586_p2 | tmp_190_fu_610_p2);

assign tmp_195_i_cast_fu_499_p1 = tmp_i_cast_fu_493_p2;

assign tmp_196_i_fu_488_p1 = i_i_reg_260;

assign tmp_197_fu_738_p2 = (tmp_213_fu_734_p1 | grp_fu_460_p2);

assign tmp_197_i_fu_512_p2 = (x1_coeffs_q1 + x1_coeffs_q0);

assign tmp_199_fu_504_p1 = x1_coeffs_q1[10:0];

assign tmp_200_fu_508_p1 = x1_coeffs_q0[10:0];

assign tmp_201_fu_771_p2 = (x1_coeffs_q1 - x2_coeffs_q0);

assign tmp_202_fu_849_p2 = (3'd1 + tmp_219_fu_839_p1);

assign tmp_203_fu_861_p2 = (tmp_218_i_fu_855_p2 | tmp_202_fu_849_p2);

assign tmp_204_fu_875_p4 = {{tmp_216_i_cast_fu_843_p2[10:3]}};

assign tmp_205_fu_542_p1 = x2_coeffs_q0[10:0];

assign tmp_206_fu_899_p2 = (tmp_fu_885_p4 | tmp_221_fu_895_p1);

assign tmp_207_cast_fu_781_p1 = tmp_214_fu_777_p1;

assign tmp_207_fu_905_p4 = {{t_i_reg_372[63:11]}};

assign tmp_208_fu_987_p4 = {{x4_coeffs_q0[11:10]}};

assign tmp_209_fu_622_p3 = tmp_48_i_fu_604_p2[32'd9];

assign tmp_211_fu_668_p1 = x4_coeffs_q0[0:0];

assign tmp_212_fu_682_p3 = x4_coeffs_q0[32'd1];

assign tmp_213_fu_734_p1 = x2_coeffs_q0[10:0];

assign tmp_214_fu_777_p1 = tmp_201_fu_771_p2[10:0];

assign tmp_214_i_fu_830_p1 = i_i4_reg_361;

assign tmp_215_fu_809_p1 = tmp_i3_44_fu_803_p2[10:0];

assign tmp_216_fu_923_p1 = t_i_reg_372[15:0];

assign tmp_216_i_cast_fu_843_p2 = (11'd1 + tmp_218_fu_835_p1);

assign tmp_217_fu_957_p3 = tmp_i4_fu_951_p2[32'd63];

assign tmp_218_fu_835_p1 = x4_coeffs_q1[10:0];

assign tmp_218_i_fu_855_p2 = (3'd2 + tmp_219_fu_839_p1);

assign tmp_219_fu_839_p1 = x4_coeffs_q1[2:0];

assign tmp_220_fu_867_p3 = tmp_203_fu_861_p2[32'd2];

assign tmp_221_fu_895_p1 = t_i_reg_372[10:0];

assign tmp_222_fu_997_p1 = x4_coeffs_q0[1:0];

assign tmp_223_i_fu_654_p2 = (33'd0 - t_cast_fu_650_p1);

assign tmp_225_i_fu_573_p1 = i_i1_reg_294;

assign tmp_226_i_cast_fu_672_p1 = tmp_211_fu_668_p1;

assign tmp_228_i_cast_fu_690_p1 = tmp_212_fu_682_p3;

assign tmp_3_i_fu_552_p3 = {{grp_fu_466_p4}, {tmp_187_fu_546_p2}};

assign tmp_3_i_i_fu_744_p3 = {{grp_fu_466_p4}, {tmp_197_fu_738_p2}};

assign tmp_41_i_fu_927_p2 = (x4_coeffs_q1 | tmp_216_fu_923_p1);

assign tmp_42_i_fu_933_p4 = {{t_i_reg_372[63:16]}};

assign tmp_47_i_fu_592_p2 = (m1_i_cast9_fu_582_p1 + p1_i_cast_fu_578_p1);

assign tmp_48_i_fu_604_p2 = (tmp_47_i_fu_592_p2 ^ 10'd254);

assign tmp_49_i_cast_fu_638_p1 = tmp_49_i_fu_630_p3;

assign tmp_49_i_fu_630_p3 = {{tmp_209_fu_622_p3}, {tmp_191_fu_616_p2}};

assign tmp_4_i_cast_fu_813_p1 = tmp_215_fu_809_p1;

assign tmp_51_i_fu_642_p3 = {{16'd0}, {tmp_49_i_cast_fu_638_p1}};

assign tmp_7_i_cast_fu_1001_p2 = (tmp_222_fu_997_p1 ^ tmp_208_fu_987_p4);

assign tmp_8_i_cast_fu_1007_p1 = tmp_7_i_cast_fu_1001_p2;

assign tmp_fu_885_p4 = {{{tmp_204_fu_875_p4}, {tmp_220_fu_867_p3}}, {2'd0}};

assign tmp_i1_fu_586_p2 = (p1_i_reg_282 ^ m1_i_reg_305);

assign tmp_i2_fu_712_p1 = i_i2_reg_317;

assign tmp_i3_44_fu_803_p2 = (x4_coeffs_q0 - x4_coeffs_q1);

assign tmp_i3_fu_798_p1 = i_i3_reg_350;

assign tmp_i4_fu_951_p2 = (64'd0 - t_fu_943_p3);

assign tmp_i5_fu_982_p1 = i_i5_reg_384;

assign tmp_i8_fu_537_p1 = i_i6_reg_271;

assign tmp_i_cast_fu_493_p2 = (11'd0 - tmp_i_reg_249);

assign tmp_i_i_fu_729_p1 = i_i_i_reg_328;

assign tmp_s_fu_765_p1 = i_reg_339;

always @ (posedge ap_clk) begin
    tmp_i2_reg_1085[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //owcpa_dec
