// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module keccak_absorb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        s_address0,
        s_ce0,
        s_we0,
        s_d0,
        s_q0,
        s_address1,
        s_ce1,
        s_we1,
        s_d1,
        s_q1,
        m_address0,
        m_ce0,
        m_q0
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_state9 = 15'd256;
parameter    ap_ST_fsm_state10 = 15'd512;
parameter    ap_ST_fsm_state11 = 15'd1024;
parameter    ap_ST_fsm_state12 = 15'd2048;
parameter    ap_ST_fsm_state13 = 15'd4096;
parameter    ap_ST_fsm_state14 = 15'd8192;
parameter    ap_ST_fsm_state15 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] s_address0;
output   s_ce0;
output   s_we0;
output  [63:0] s_d0;
input  [63:0] s_q0;
output  [4:0] s_address1;
output   s_ce1;
output   s_we1;
output  [63:0] s_d1;
input  [63:0] s_q1;
output  [7:0] m_address0;
output   m_ce0;
input  [7:0] m_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] s_address0;
reg s_ce0;
reg s_we0;
reg[63:0] s_d0;
reg s_ce1;
reg s_we1;
reg[7:0] m_address0;
reg m_ce0;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] i_6_fu_288_p2;
wire    ap_CS_fsm_state2;
wire   [63:0] i_1_cast_fu_294_p1;
reg   [63:0] i_1_cast_reg_535;
wire    ap_CS_fsm_state3;
wire   [4:0] i_s_fu_304_p2;
reg   [4:0] i_s_reg_543;
wire   [7:0] tmp_223_fu_310_p3;
reg   [7:0] tmp_223_reg_548;
wire   [0:0] exitcond4_fu_298_p2;
wire   [3:0] i_8_fu_328_p2;
reg   [3:0] i_8_reg_556;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_i_fu_322_p2;
reg   [4:0] s_addr_7_reg_566;
wire   [63:0] r_fu_370_p2;
wire    ap_CS_fsm_state5;
wire   [7:0] i_7_fu_394_p2;
wire    ap_CS_fsm_state8;
wire   [63:0] i_3_cast5_fu_400_p1;
reg   [63:0] i_3_cast5_reg_584;
wire    ap_CS_fsm_state9;
wire   [6:0] tmp_225_fu_414_p2;
reg   [6:0] tmp_225_reg_592;
wire   [0:0] exitcond2_fu_408_p2;
wire   [63:0] i_4_cast4_fu_438_p1;
reg   [63:0] i_4_cast4_reg_608;
wire    ap_CS_fsm_state12;
wire   [4:0] i_5_fu_448_p2;
reg   [4:0] i_5_reg_616;
wire   [7:0] tmp_226_fu_454_p3;
reg   [7:0] tmp_226_reg_621;
wire   [0:0] exitcond_fu_442_p2;
wire   [3:0] i_9_fu_472_p2;
reg   [3:0] i_9_reg_629;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_i2_fu_466_p2;
reg   [4:0] s_addr_8_reg_639;
wire   [63:0] r_3_fu_514_p2;
wire    ap_CS_fsm_state14;
reg   [7:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [7:0] t_d0;
wire   [7:0] t_q0;
reg   [7:0] t_address1;
reg    t_ce1;
reg    t_we1;
wire   [7:0] t_d1;
wire   [7:0] t_q1;
wire    grp_KeccakF1600_StatePer_fu_269_ap_start;
wire    grp_KeccakF1600_StatePer_fu_269_ap_done;
wire    grp_KeccakF1600_StatePer_fu_269_ap_idle;
wire    grp_KeccakF1600_StatePer_fu_269_ap_ready;
wire   [4:0] grp_KeccakF1600_StatePer_fu_269_state_address0;
wire    grp_KeccakF1600_StatePer_fu_269_state_ce0;
wire    grp_KeccakF1600_StatePer_fu_269_state_we0;
wire   [63:0] grp_KeccakF1600_StatePer_fu_269_state_d0;
wire   [4:0] grp_KeccakF1600_StatePer_fu_269_state_address1;
wire    grp_KeccakF1600_StatePer_fu_269_state_ce1;
wire    grp_KeccakF1600_StatePer_fu_269_state_we1;
wire   [63:0] grp_KeccakF1600_StatePer_fu_269_state_d1;
reg   [4:0] i_reg_166;
wire   [0:0] tmp_fu_282_p2;
reg   [4:0] i_1_reg_177;
wire    ap_CS_fsm_state6;
reg   [63:0] r_i_reg_188;
reg   [3:0] i_i_reg_200;
reg   [7:0] i_2_reg_212;
wire   [0:0] exitcond3_fu_388_p2;
wire    ap_CS_fsm_state7;
reg   [6:0] i_3_reg_223;
wire    ap_CS_fsm_state10;
reg   [4:0] i_4_reg_234;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state15;
reg   [63:0] r_i1_reg_245;
reg   [3:0] i_i2_reg_257;
reg    grp_KeccakF1600_StatePer_fu_269_ap_start_reg;
wire   [63:0] i_cast_fu_277_p1;
wire   [63:0] sum_i_cast_fu_339_p1;
wire   [63:0] i_2_cast6_fu_383_p1;
wire   [63:0] sum9_cast_fu_426_p1;
wire   [63:0] sum_i1_cast_fu_483_p1;
wire   [63:0] tmp_224_fu_376_p2;
wire   [63:0] tmp_227_fu_520_p2;
wire   [7:0] i_i_cast8_fu_318_p1;
wire   [7:0] sum_i_fu_334_p2;
wire   [2:0] tmp_222_fu_348_p1;
wire   [5:0] tmp_358_i_fu_352_p3;
wire   [63:0] tmp_i_44_fu_344_p1;
wire   [63:0] tmp_358_i_cast_fu_360_p1;
wire   [63:0] tmp_359_i_fu_364_p2;
wire   [7:0] i_3_cast_fu_404_p1;
wire   [7:0] sum9_fu_420_p2;
wire   [7:0] i_i2_cast2_fu_462_p1;
wire   [7:0] sum_i1_fu_478_p2;
wire   [2:0] tmp_228_fu_492_p1;
wire   [5:0] tmp_360_i_fu_496_p3;
wire   [63:0] tmp_i1_fu_488_p1;
wire   [63:0] tmp_360_i_cast_fu_504_p1;
wire   [63:0] tmp_361_i_fu_508_p2;
reg   [14:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 grp_KeccakF1600_StatePer_fu_269_ap_start_reg = 1'b0;
end

keccak_absorb_t #(
    .DataWidth( 8 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0),
    .address1(t_address1),
    .ce1(t_ce1),
    .we1(t_we1),
    .d1(t_d1),
    .q1(t_q1)
);

KeccakF1600_StatePer grp_KeccakF1600_StatePer_fu_269(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_KeccakF1600_StatePer_fu_269_ap_start),
    .ap_done(grp_KeccakF1600_StatePer_fu_269_ap_done),
    .ap_idle(grp_KeccakF1600_StatePer_fu_269_ap_idle),
    .ap_ready(grp_KeccakF1600_StatePer_fu_269_ap_ready),
    .state_address0(grp_KeccakF1600_StatePer_fu_269_state_address0),
    .state_ce0(grp_KeccakF1600_StatePer_fu_269_state_ce0),
    .state_we0(grp_KeccakF1600_StatePer_fu_269_state_we0),
    .state_d0(grp_KeccakF1600_StatePer_fu_269_state_d0),
    .state_q0(s_q0),
    .state_address1(grp_KeccakF1600_StatePer_fu_269_state_address1),
    .state_ce1(grp_KeccakF1600_StatePer_fu_269_state_ce1),
    .state_we1(grp_KeccakF1600_StatePer_fu_269_state_we1),
    .state_d1(grp_KeccakF1600_StatePer_fu_269_state_d1),
    .state_q1(s_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_KeccakF1600_StatePer_fu_269_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond4_fu_298_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_KeccakF1600_StatePer_fu_269_ap_start_reg <= 1'b1;
        end else if ((grp_KeccakF1600_StatePer_fu_269_ap_ready == 1'b1)) begin
            grp_KeccakF1600_StatePer_fu_269_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_177 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_1_reg_177 <= i_s_reg_543;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_KeccakF1600_StatePer_fu_269_ap_done == 1'b1))) begin
        i_2_reg_212 <= 8'd0;
    end else if (((exitcond3_fu_388_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        i_2_reg_212 <= i_7_fu_394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_3_reg_223 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i_3_reg_223 <= tmp_225_reg_592;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_4_reg_234 <= i_5_reg_616;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i_4_reg_234 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_i2_reg_257 <= i_9_reg_629;
    end else if (((exitcond_fu_442_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i_i2_reg_257 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_i_reg_200 <= i_8_reg_556;
    end else if (((exitcond4_fu_298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_i_reg_200 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_282_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_166 <= i_6_fu_288_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_166 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        r_i1_reg_245 <= r_3_fu_514_p2;
    end else if (((exitcond_fu_442_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        r_i1_reg_245 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        r_i_reg_188 <= r_fu_370_p2;
    end else if (((exitcond4_fu_298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        r_i_reg_188 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_1_cast_reg_535[4 : 0] <= i_1_cast_fu_294_p1[4 : 0];
        i_s_reg_543 <= i_s_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_3_cast5_reg_584[6 : 0] <= i_3_cast5_fu_400_p1[6 : 0];
        tmp_225_reg_592 <= tmp_225_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_4_cast4_reg_608[4 : 0] <= i_4_cast4_fu_438_p1[4 : 0];
        i_5_reg_616 <= i_5_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_8_reg_556 <= i_8_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_9_reg_629 <= i_9_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_322_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        s_addr_7_reg_566 <= i_1_cast_reg_535;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i2_fu_466_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        s_addr_8_reg_639 <= i_4_cast4_reg_608;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_223_reg_548[7 : 3] <= tmp_223_fu_310_p3[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_442_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        tmp_226_reg_621[7 : 3] <= tmp_226_fu_454_p3[7 : 3];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond_fu_442_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_442_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        m_address0 = sum9_cast_fu_426_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        m_address0 = sum_i_cast_fu_339_p1;
    end else begin
        m_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9))) begin
        m_ce0 = 1'b1;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        s_address0 = s_addr_8_reg_639;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        s_address0 = i_4_cast4_reg_608;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_address0 = s_addr_7_reg_566;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        s_address0 = i_1_cast_reg_535;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s_address0 = i_cast_fu_277_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_address0 = grp_KeccakF1600_StatePer_fu_269_state_address0;
    end else begin
        s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state13))) begin
        s_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_ce0 = grp_KeccakF1600_StatePer_fu_269_state_ce0;
    end else begin
        s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        s_ce1 = grp_KeccakF1600_StatePer_fu_269_state_ce1;
    end else begin
        s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        s_d0 = tmp_227_fu_520_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        s_d0 = tmp_224_fu_376_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        s_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_d0 = grp_KeccakF1600_StatePer_fu_269_state_d0;
    end else begin
        s_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state6) | ((tmp_fu_282_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        s_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        s_we0 = grp_KeccakF1600_StatePer_fu_269_state_we0;
    end else begin
        s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        s_we1 = grp_KeccakF1600_StatePer_fu_269_state_we1;
    end else begin
        s_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        t_address0 = 64'd68;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        t_address0 = i_3_cast5_reg_584;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        t_address0 = 64'd135;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_address0 = i_2_cast6_fu_383_p1;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        t_address1 = sum_i1_cast_fu_483_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        t_address1 = 64'd135;
    end else begin
        t_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        t_ce1 = 1'b1;
    end else begin
        t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        t_d0 = 8'd6;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        t_d0 = m_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_d0 = 8'd0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | ((exitcond3_fu_388_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        t_we1 = 1'b1;
    end else begin
        t_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_282_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond4_fu_298_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((tmp_i_fu_322_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_KeccakF1600_StatePer_fu_269_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((exitcond3_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((exitcond2_fu_408_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((exitcond_fu_442_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((tmp_i2_fu_466_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond2_fu_408_p2 = ((i_3_reg_223 == 7'd68) ? 1'b1 : 1'b0);

assign exitcond3_fu_388_p2 = ((i_2_reg_212 == 8'd136) ? 1'b1 : 1'b0);

assign exitcond4_fu_298_p2 = ((i_1_reg_177 == 5'd17) ? 1'b1 : 1'b0);

assign exitcond_fu_442_p2 = ((i_4_reg_234 == 5'd17) ? 1'b1 : 1'b0);

assign grp_KeccakF1600_StatePer_fu_269_ap_start = grp_KeccakF1600_StatePer_fu_269_ap_start_reg;

assign i_1_cast_fu_294_p1 = i_1_reg_177;

assign i_2_cast6_fu_383_p1 = i_2_reg_212;

assign i_3_cast5_fu_400_p1 = i_3_reg_223;

assign i_3_cast_fu_404_p1 = i_3_reg_223;

assign i_4_cast4_fu_438_p1 = i_4_reg_234;

assign i_5_fu_448_p2 = (i_4_reg_234 + 5'd1);

assign i_6_fu_288_p2 = (i_reg_166 + 5'd1);

assign i_7_fu_394_p2 = (i_2_reg_212 + 8'd1);

assign i_8_fu_328_p2 = (i_i_reg_200 + 4'd1);

assign i_9_fu_472_p2 = (i_i2_reg_257 + 4'd1);

assign i_cast_fu_277_p1 = i_reg_166;

assign i_i2_cast2_fu_462_p1 = i_i2_reg_257;

assign i_i_cast8_fu_318_p1 = i_i_reg_200;

assign i_s_fu_304_p2 = (i_1_reg_177 + 5'd1);

assign r_3_fu_514_p2 = (tmp_361_i_fu_508_p2 | r_i1_reg_245);

assign r_fu_370_p2 = (tmp_359_i_fu_364_p2 | r_i_reg_188);

assign s_address1 = grp_KeccakF1600_StatePer_fu_269_state_address1;

assign s_d1 = grp_KeccakF1600_StatePer_fu_269_state_d1;

assign sum9_cast_fu_426_p1 = sum9_fu_420_p2;

assign sum9_fu_420_p2 = ($signed(i_3_cast_fu_404_p1) + $signed(8'd136));

assign sum_i1_cast_fu_483_p1 = sum_i1_fu_478_p2;

assign sum_i1_fu_478_p2 = (tmp_226_reg_621 + i_i2_cast2_fu_462_p1);

assign sum_i_cast_fu_339_p1 = sum_i_fu_334_p2;

assign sum_i_fu_334_p2 = (tmp_223_reg_548 + i_i_cast8_fu_318_p1);

assign t_d1 = (t_q0 | 8'd128);

assign tmp_222_fu_348_p1 = i_i_reg_200[2:0];

assign tmp_223_fu_310_p3 = {{i_1_reg_177}, {3'd0}};

assign tmp_224_fu_376_p2 = (s_q0 ^ r_i_reg_188);

assign tmp_225_fu_414_p2 = (i_3_reg_223 + 7'd1);

assign tmp_226_fu_454_p3 = {{i_4_reg_234}, {3'd0}};

assign tmp_227_fu_520_p2 = (s_q0 ^ r_i1_reg_245);

assign tmp_228_fu_492_p1 = i_i2_reg_257[2:0];

assign tmp_358_i_cast_fu_360_p1 = tmp_358_i_fu_352_p3;

assign tmp_358_i_fu_352_p3 = {{tmp_222_fu_348_p1}, {3'd0}};

assign tmp_359_i_fu_364_p2 = tmp_i_44_fu_344_p1 << tmp_358_i_cast_fu_360_p1;

assign tmp_360_i_cast_fu_504_p1 = tmp_360_i_fu_496_p3;

assign tmp_360_i_fu_496_p3 = {{tmp_228_fu_492_p1}, {3'd0}};

assign tmp_361_i_fu_508_p2 = tmp_i1_fu_488_p1 << tmp_360_i_cast_fu_504_p1;

assign tmp_fu_282_p2 = ((i_reg_166 == 5'd25) ? 1'b1 : 1'b0);

assign tmp_i1_fu_488_p1 = t_q1;

assign tmp_i2_fu_466_p2 = ((i_i2_reg_257 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_i_44_fu_344_p1 = m_q0;

assign tmp_i_fu_322_p2 = ((i_i_reg_200 == 4'd8) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    i_1_cast_reg_535[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_223_reg_548[2:0] <= 3'b000;
    i_3_cast5_reg_584[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    i_4_cast4_reg_608[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_226_reg_621[2:0] <= 3'b000;
end

endmodule //keccak_absorb
