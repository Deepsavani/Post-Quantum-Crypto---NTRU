// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _KeyExpansion_HH_
#define _KeyExpansion_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeyExpansion_sbox.h"
#include "KeyExpansion_Rcon.h"

namespace ap_rtl {

struct KeyExpansion : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > RoundKey_address0;
    sc_out< sc_logic > RoundKey_ce0;
    sc_out< sc_logic > RoundKey_we0;
    sc_out< sc_lv<8> > RoundKey_d0;
    sc_in< sc_lv<8> > RoundKey_q0;
    sc_out< sc_lv<8> > RoundKey_address1;
    sc_out< sc_logic > RoundKey_ce1;
    sc_out< sc_logic > RoundKey_we1;
    sc_out< sc_lv<8> > RoundKey_d1;
    sc_in< sc_lv<8> > RoundKey_q1;
    sc_out< sc_lv<5> > Key_address0;
    sc_out< sc_logic > Key_ce0;
    sc_in< sc_lv<8> > Key_q0;
    sc_out< sc_lv<5> > Key_address1;
    sc_out< sc_logic > Key_ce1;
    sc_in< sc_lv<8> > Key_q1;


    // Module declarations
    KeyExpansion(sc_module_name name);
    SC_HAS_PROCESS(KeyExpansion);

    ~KeyExpansion();

    sc_trace_file* mVcdFile;

    KeyExpansion_sbox* sbox_U;
    KeyExpansion_Rcon* Rcon_U;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > sbox_address1;
    sc_signal< sc_logic > sbox_ce1;
    sc_signal< sc_lv<8> > sbox_q1;
    sc_signal< sc_lv<8> > sbox_address2;
    sc_signal< sc_logic > sbox_ce2;
    sc_signal< sc_lv<8> > sbox_q2;
    sc_signal< sc_lv<8> > sbox_address3;
    sc_signal< sc_logic > sbox_ce3;
    sc_signal< sc_lv<8> > sbox_q3;
    sc_signal< sc_lv<4> > Rcon_address0;
    sc_signal< sc_logic > Rcon_ce0;
    sc_signal< sc_lv<8> > Rcon_q0;
    sc_signal< sc_lv<8> > reg_368;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<4> > i_21_fu_379_p2;
    sc_signal< sc_lv<4> > i_21_reg_723;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > tmp_s_fu_389_p3;
    sc_signal< sc_lv<5> > tmp_s_reg_728;
    sc_signal< sc_lv<1> > tmp_fu_373_p2;
    sc_signal< sc_lv<64> > tmp_250_fu_397_p1;
    sc_signal< sc_lv<64> > tmp_250_reg_734;
    sc_signal< sc_lv<64> > tmp_252_fu_408_p1;
    sc_signal< sc_lv<64> > tmp_252_reg_744;
    sc_signal< sc_lv<64> > tmp_254_fu_418_p1;
    sc_signal< sc_lv<64> > tmp_254_reg_754;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_256_fu_428_p1;
    sc_signal< sc_lv<64> > tmp_256_reg_764;
    sc_signal< sc_lv<8> > j_fu_439_p3;
    sc_signal< sc_lv<8> > j_reg_777;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond_fu_433_p2;
    sc_signal< sc_lv<1> > tmp_265_fu_473_p2;
    sc_signal< sc_lv<1> > tmp_265_reg_801;
    sc_signal< sc_lv<3> > tmp_270_reg_809;
    sc_signal< sc_lv<1> > tmp_272_fu_489_p2;
    sc_signal< sc_lv<1> > tmp_272_reg_814;
    sc_signal< sc_lv<6> > i_22_fu_495_p2;
    sc_signal< sc_lv<6> > i_22_reg_822;
    sc_signal< sc_lv<8> > tempa_1_reg_827;
    sc_signal< sc_lv<8> > tempa_3_reg_852;
    sc_signal< sc_lv<8> > tempa_0_2_fu_551_p3;
    sc_signal< sc_lv<8> > tempa_0_2_reg_872;
    sc_signal< sc_lv<8> > tempa_3_2_fu_583_p3;
    sc_signal< sc_lv<8> > tempa_3_2_reg_892;
    sc_signal< sc_lv<8> > tempa_2_2_fu_589_p3;
    sc_signal< sc_lv<8> > tempa_2_2_reg_897;
    sc_signal< sc_lv<8> > tempa_1_2_fu_596_p3;
    sc_signal< sc_lv<8> > tempa_1_2_reg_902;
    sc_signal< sc_lv<8> > tmp_279_fu_623_p2;
    sc_signal< sc_lv<8> > tmp_279_reg_922;
    sc_signal< sc_lv<8> > tmp_288_fu_688_p2;
    sc_signal< sc_lv<8> > tmp_288_reg_937;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > tmp_293_fu_694_p2;
    sc_signal< sc_lv<8> > tmp_293_reg_942;
    sc_signal< sc_lv<4> > i_reg_346;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > i_1_reg_357;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > tmp_258_fu_453_p1;
    sc_signal< sc_lv<64> > tmp_260_fu_464_p1;
    sc_signal< sc_lv<64> > tmp_262_fu_506_p1;
    sc_signal< sc_lv<64> > tmp_264_fu_516_p1;
    sc_signal< sc_lv<64> > tmp_266_fu_521_p1;
    sc_signal< sc_lv<64> > tmp_271_fu_526_p1;
    sc_signal< sc_lv<64> > tmp_267_fu_530_p1;
    sc_signal< sc_lv<64> > tmp_268_fu_535_p1;
    sc_signal< sc_lv<64> > tmp_269_fu_540_p1;
    sc_signal< sc_lv<64> > tmp_273_fu_558_p1;
    sc_signal< sc_lv<64> > tmp_278_fu_568_p1;
    sc_signal< sc_lv<64> > tmp_282_fu_578_p1;
    sc_signal< sc_lv<64> > tmp_274_fu_602_p1;
    sc_signal< sc_lv<64> > tmp_275_fu_607_p1;
    sc_signal< sc_lv<64> > tmp_276_fu_612_p1;
    sc_signal< sc_lv<64> > tmp_287_fu_634_p1;
    sc_signal< sc_lv<64> > tmp_292_fu_644_p1;
    sc_signal< sc_lv<64> > tmp_280_fu_667_p1;
    sc_signal< sc_lv<64> > tmp_285_fu_683_p1;
    sc_signal< sc_lv<64> > tmp_290_fu_705_p1;
    sc_signal< sc_lv<64> > tmp_295_fu_715_p1;
    sc_signal< sc_lv<8> > tmp_283_fu_671_p2;
    sc_signal< sc_lv<3> > tmp_297_fu_385_p1;
    sc_signal< sc_lv<5> > tmp_251_fu_402_p2;
    sc_signal< sc_lv<5> > tmp_253_fu_413_p2;
    sc_signal< sc_lv<5> > tmp_255_fu_423_p2;
    sc_signal< sc_lv<8> > tmp_257_fu_447_p2;
    sc_signal< sc_lv<8> > tmp_259_fu_458_p2;
    sc_signal< sc_lv<3> > tmp_298_fu_469_p1;
    sc_signal< sc_lv<8> > tmp_261_fu_501_p2;
    sc_signal< sc_lv<8> > tmp_263_fu_511_p2;
    sc_signal< sc_lv<8> > tempa_0_fu_545_p2;
    sc_signal< sc_lv<8> > tmp_277_fu_563_p2;
    sc_signal< sc_lv<8> > tmp_281_fu_573_p2;
    sc_signal< sc_lv<8> > tempa_0_4_fu_617_p3;
    sc_signal< sc_lv<8> > tmp_286_fu_629_p2;
    sc_signal< sc_lv<8> > tmp_291_fu_639_p2;
    sc_signal< sc_lv<8> > tempa_1_4_fu_661_p3;
    sc_signal< sc_lv<8> > tmp_284_fu_678_p2;
    sc_signal< sc_lv<8> > tempa_2_4_fu_655_p3;
    sc_signal< sc_lv<8> > tempa_3_4_fu_649_p3;
    sc_signal< sc_lv<8> > tmp_289_fu_700_p2;
    sc_signal< sc_lv<8> > tmp_294_fu_710_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<6> ap_const_lv6_8;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<6> ap_const_lv6_3C;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_E0;
    static const sc_lv<8> ap_const_lv8_E1;
    static const sc_lv<8> ap_const_lv8_E2;
    static const sc_lv<8> ap_const_lv8_E3;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Key_address0();
    void thread_Key_address1();
    void thread_Key_ce0();
    void thread_Key_ce1();
    void thread_Rcon_address0();
    void thread_Rcon_ce0();
    void thread_RoundKey_address0();
    void thread_RoundKey_address1();
    void thread_RoundKey_ce0();
    void thread_RoundKey_ce1();
    void thread_RoundKey_d0();
    void thread_RoundKey_d1();
    void thread_RoundKey_we0();
    void thread_RoundKey_we1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond_fu_433_p2();
    void thread_i_21_fu_379_p2();
    void thread_i_22_fu_495_p2();
    void thread_j_fu_439_p3();
    void thread_sbox_address0();
    void thread_sbox_address1();
    void thread_sbox_address2();
    void thread_sbox_address3();
    void thread_sbox_ce0();
    void thread_sbox_ce1();
    void thread_sbox_ce2();
    void thread_sbox_ce3();
    void thread_tempa_0_2_fu_551_p3();
    void thread_tempa_0_4_fu_617_p3();
    void thread_tempa_0_fu_545_p2();
    void thread_tempa_1_2_fu_596_p3();
    void thread_tempa_1_4_fu_661_p3();
    void thread_tempa_2_2_fu_589_p3();
    void thread_tempa_2_4_fu_655_p3();
    void thread_tempa_3_2_fu_583_p3();
    void thread_tempa_3_4_fu_649_p3();
    void thread_tmp_250_fu_397_p1();
    void thread_tmp_251_fu_402_p2();
    void thread_tmp_252_fu_408_p1();
    void thread_tmp_253_fu_413_p2();
    void thread_tmp_254_fu_418_p1();
    void thread_tmp_255_fu_423_p2();
    void thread_tmp_256_fu_428_p1();
    void thread_tmp_257_fu_447_p2();
    void thread_tmp_258_fu_453_p1();
    void thread_tmp_259_fu_458_p2();
    void thread_tmp_260_fu_464_p1();
    void thread_tmp_261_fu_501_p2();
    void thread_tmp_262_fu_506_p1();
    void thread_tmp_263_fu_511_p2();
    void thread_tmp_264_fu_516_p1();
    void thread_tmp_265_fu_473_p2();
    void thread_tmp_266_fu_521_p1();
    void thread_tmp_267_fu_530_p1();
    void thread_tmp_268_fu_535_p1();
    void thread_tmp_269_fu_540_p1();
    void thread_tmp_271_fu_526_p1();
    void thread_tmp_272_fu_489_p2();
    void thread_tmp_273_fu_558_p1();
    void thread_tmp_274_fu_602_p1();
    void thread_tmp_275_fu_607_p1();
    void thread_tmp_276_fu_612_p1();
    void thread_tmp_277_fu_563_p2();
    void thread_tmp_278_fu_568_p1();
    void thread_tmp_279_fu_623_p2();
    void thread_tmp_280_fu_667_p1();
    void thread_tmp_281_fu_573_p2();
    void thread_tmp_282_fu_578_p1();
    void thread_tmp_283_fu_671_p2();
    void thread_tmp_284_fu_678_p2();
    void thread_tmp_285_fu_683_p1();
    void thread_tmp_286_fu_629_p2();
    void thread_tmp_287_fu_634_p1();
    void thread_tmp_288_fu_688_p2();
    void thread_tmp_289_fu_700_p2();
    void thread_tmp_290_fu_705_p1();
    void thread_tmp_291_fu_639_p2();
    void thread_tmp_292_fu_644_p1();
    void thread_tmp_293_fu_694_p2();
    void thread_tmp_294_fu_710_p2();
    void thread_tmp_295_fu_715_p1();
    void thread_tmp_297_fu_385_p1();
    void thread_tmp_298_fu_469_p1();
    void thread_tmp_fu_373_p2();
    void thread_tmp_s_fu_389_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
