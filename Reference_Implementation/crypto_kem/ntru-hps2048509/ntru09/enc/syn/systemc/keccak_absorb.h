// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _keccak_absorb_HH_
#define _keccak_absorb_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeccakF1600_StatePer.h"
#include "keccak_absorb_t.h"

namespace ap_rtl {

struct keccak_absorb : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > s_address0;
    sc_out< sc_logic > s_ce0;
    sc_out< sc_logic > s_we0;
    sc_out< sc_lv<64> > s_d0;
    sc_in< sc_lv<64> > s_q0;
    sc_out< sc_lv<5> > s_address1;
    sc_out< sc_logic > s_ce1;
    sc_out< sc_logic > s_we1;
    sc_out< sc_lv<64> > s_d1;
    sc_in< sc_lv<64> > s_q1;
    sc_out< sc_lv<8> > m_address0;
    sc_out< sc_logic > m_ce0;
    sc_in< sc_lv<8> > m_q0;


    // Module declarations
    keccak_absorb(sc_module_name name);
    SC_HAS_PROCESS(keccak_absorb);

    ~keccak_absorb();

    sc_trace_file* mVcdFile;

    keccak_absorb_t* t_U;
    KeccakF1600_StatePer* grp_KeccakF1600_StatePer_fu_269;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > i_6_fu_288_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > i_1_cast_fu_294_p1;
    sc_signal< sc_lv<64> > i_1_cast_reg_535;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > i_s_fu_304_p2;
    sc_signal< sc_lv<5> > i_s_reg_543;
    sc_signal< sc_lv<8> > tmp_223_fu_310_p3;
    sc_signal< sc_lv<8> > tmp_223_reg_548;
    sc_signal< sc_lv<1> > exitcond4_fu_298_p2;
    sc_signal< sc_lv<4> > i_8_fu_328_p2;
    sc_signal< sc_lv<4> > i_8_reg_556;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_i_fu_322_p2;
    sc_signal< sc_lv<5> > s_addr_7_reg_566;
    sc_signal< sc_lv<64> > r_fu_370_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > i_7_fu_394_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > i_3_cast5_fu_400_p1;
    sc_signal< sc_lv<64> > i_3_cast5_reg_584;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<7> > tmp_225_fu_414_p2;
    sc_signal< sc_lv<7> > tmp_225_reg_592;
    sc_signal< sc_lv<1> > exitcond2_fu_408_p2;
    sc_signal< sc_lv<64> > i_4_cast4_fu_438_p1;
    sc_signal< sc_lv<64> > i_4_cast4_reg_608;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<5> > i_5_fu_448_p2;
    sc_signal< sc_lv<5> > i_5_reg_616;
    sc_signal< sc_lv<8> > tmp_226_fu_454_p3;
    sc_signal< sc_lv<8> > tmp_226_reg_621;
    sc_signal< sc_lv<1> > exitcond_fu_442_p2;
    sc_signal< sc_lv<4> > i_9_fu_472_p2;
    sc_signal< sc_lv<4> > i_9_reg_629;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<1> > tmp_i2_fu_466_p2;
    sc_signal< sc_lv<5> > s_addr_8_reg_639;
    sc_signal< sc_lv<64> > r_3_fu_514_p2;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<8> > t_address0;
    sc_signal< sc_logic > t_ce0;
    sc_signal< sc_logic > t_we0;
    sc_signal< sc_lv<8> > t_d0;
    sc_signal< sc_lv<8> > t_q0;
    sc_signal< sc_lv<8> > t_address1;
    sc_signal< sc_logic > t_ce1;
    sc_signal< sc_logic > t_we1;
    sc_signal< sc_lv<8> > t_d1;
    sc_signal< sc_lv<8> > t_q1;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_269_ap_start;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_269_ap_done;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_269_ap_idle;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_269_ap_ready;
    sc_signal< sc_lv<5> > grp_KeccakF1600_StatePer_fu_269_state_address0;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_269_state_ce0;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_269_state_we0;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_269_state_d0;
    sc_signal< sc_lv<5> > grp_KeccakF1600_StatePer_fu_269_state_address1;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_269_state_ce1;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_269_state_we1;
    sc_signal< sc_lv<64> > grp_KeccakF1600_StatePer_fu_269_state_d1;
    sc_signal< sc_lv<5> > i_reg_166;
    sc_signal< sc_lv<1> > tmp_fu_282_p2;
    sc_signal< sc_lv<5> > i_1_reg_177;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > r_i_reg_188;
    sc_signal< sc_lv<4> > i_i_reg_200;
    sc_signal< sc_lv<8> > i_2_reg_212;
    sc_signal< sc_lv<1> > exitcond3_fu_388_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<7> > i_3_reg_223;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<5> > i_4_reg_234;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<64> > r_i1_reg_245;
    sc_signal< sc_lv<4> > i_i2_reg_257;
    sc_signal< sc_logic > grp_KeccakF1600_StatePer_fu_269_ap_start_reg;
    sc_signal< sc_lv<64> > i_cast_fu_277_p1;
    sc_signal< sc_lv<64> > sum_i_cast_fu_339_p1;
    sc_signal< sc_lv<64> > i_2_cast6_fu_383_p1;
    sc_signal< sc_lv<64> > sum9_cast_fu_426_p1;
    sc_signal< sc_lv<64> > sum_i1_cast_fu_483_p1;
    sc_signal< sc_lv<64> > tmp_224_fu_376_p2;
    sc_signal< sc_lv<64> > tmp_227_fu_520_p2;
    sc_signal< sc_lv<8> > i_i_cast8_fu_318_p1;
    sc_signal< sc_lv<8> > sum_i_fu_334_p2;
    sc_signal< sc_lv<3> > tmp_222_fu_348_p1;
    sc_signal< sc_lv<6> > tmp_358_i_fu_352_p3;
    sc_signal< sc_lv<64> > tmp_i_44_fu_344_p1;
    sc_signal< sc_lv<64> > tmp_358_i_cast_fu_360_p1;
    sc_signal< sc_lv<64> > tmp_359_i_fu_364_p2;
    sc_signal< sc_lv<8> > i_3_cast_fu_404_p1;
    sc_signal< sc_lv<8> > sum9_fu_420_p2;
    sc_signal< sc_lv<8> > i_i2_cast2_fu_462_p1;
    sc_signal< sc_lv<8> > sum_i1_fu_478_p2;
    sc_signal< sc_lv<3> > tmp_228_fu_492_p1;
    sc_signal< sc_lv<6> > tmp_360_i_fu_496_p3;
    sc_signal< sc_lv<64> > tmp_i1_fu_488_p1;
    sc_signal< sc_lv<64> > tmp_360_i_cast_fu_504_p1;
    sc_signal< sc_lv<64> > tmp_361_i_fu_508_p2;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<64> ap_const_lv64_87;
    static const sc_lv<64> ap_const_lv64_44;
    static const sc_lv<8> ap_const_lv8_6;
    static const sc_lv<5> ap_const_lv5_19;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<8> ap_const_lv8_88;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<7> ap_const_lv7_44;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<8> ap_const_lv8_80;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond2_fu_408_p2();
    void thread_exitcond3_fu_388_p2();
    void thread_exitcond4_fu_298_p2();
    void thread_exitcond_fu_442_p2();
    void thread_grp_KeccakF1600_StatePer_fu_269_ap_start();
    void thread_i_1_cast_fu_294_p1();
    void thread_i_2_cast6_fu_383_p1();
    void thread_i_3_cast5_fu_400_p1();
    void thread_i_3_cast_fu_404_p1();
    void thread_i_4_cast4_fu_438_p1();
    void thread_i_5_fu_448_p2();
    void thread_i_6_fu_288_p2();
    void thread_i_7_fu_394_p2();
    void thread_i_8_fu_328_p2();
    void thread_i_9_fu_472_p2();
    void thread_i_cast_fu_277_p1();
    void thread_i_i2_cast2_fu_462_p1();
    void thread_i_i_cast8_fu_318_p1();
    void thread_i_s_fu_304_p2();
    void thread_m_address0();
    void thread_m_ce0();
    void thread_r_3_fu_514_p2();
    void thread_r_fu_370_p2();
    void thread_s_address0();
    void thread_s_address1();
    void thread_s_ce0();
    void thread_s_ce1();
    void thread_s_d0();
    void thread_s_d1();
    void thread_s_we0();
    void thread_s_we1();
    void thread_sum9_cast_fu_426_p1();
    void thread_sum9_fu_420_p2();
    void thread_sum_i1_cast_fu_483_p1();
    void thread_sum_i1_fu_478_p2();
    void thread_sum_i_cast_fu_339_p1();
    void thread_sum_i_fu_334_p2();
    void thread_t_address0();
    void thread_t_address1();
    void thread_t_ce0();
    void thread_t_ce1();
    void thread_t_d0();
    void thread_t_d1();
    void thread_t_we0();
    void thread_t_we1();
    void thread_tmp_222_fu_348_p1();
    void thread_tmp_223_fu_310_p3();
    void thread_tmp_224_fu_376_p2();
    void thread_tmp_225_fu_414_p2();
    void thread_tmp_226_fu_454_p3();
    void thread_tmp_227_fu_520_p2();
    void thread_tmp_228_fu_492_p1();
    void thread_tmp_358_i_cast_fu_360_p1();
    void thread_tmp_358_i_fu_352_p3();
    void thread_tmp_359_i_fu_364_p2();
    void thread_tmp_360_i_cast_fu_504_p1();
    void thread_tmp_360_i_fu_496_p3();
    void thread_tmp_361_i_fu_508_p2();
    void thread_tmp_fu_282_p2();
    void thread_tmp_i1_fu_488_p1();
    void thread_tmp_i2_fu_466_p2();
    void thread_tmp_i_44_fu_344_p1();
    void thread_tmp_i_fu_322_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
