// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mod3 (
        ap_ready,
        a,
        ap_return
);


output   ap_ready;
input  [7:0] a;
output  [15:0] ap_return;

wire   [3:0] tmp_167_fu_38_p4;
wire   [3:0] tmp_fu_52_p1;
wire   [4:0] tmp_343_cast_fu_56_p1;
wire   [4:0] tmp_342_cast_fu_48_p1;
wire   [4:0] r_fu_66_p2;
wire   [2:0] tmp_169_fu_72_p4;
wire   [1:0] tmp_69_fu_90_p4;
wire   [1:0] tmp_220_fu_86_p1;
wire   [1:0] fold1_cast_fu_100_p2;
wire   [3:0] tmp_345_cast_fu_106_p1;
wire   [3:0] tmp_344_cast_fu_82_p1;
wire   [3:0] r_1_fu_110_p2;
wire   [1:0] tmp_170_fu_116_p4;
wire   [3:0] tmp_168_fu_60_p2;
wire   [1:0] tmp_70_fu_130_p4;
wire   [1:0] fold2_cast_fu_140_p2;
wire   [2:0] tmp_347_cast_fu_146_p1;
wire   [2:0] tmp_346_cast_fu_126_p1;
wire   [2:0] r_2_fu_150_p2;
wire   [2:0] t_fu_156_p2;
wire   [0:0] tmp_221_fu_162_p3;
wire   [2:0] c_cast_fu_170_p3;
wire   [2:0] tmp_s_fu_178_p2;
wire   [0:0] not_tmp_s_fu_188_p2;
wire   [2:0] tmp_349_cast_cast_fu_194_p3;
wire   [2:0] tmp_219_fu_202_p2;
wire   [15:0] tmp_348_cast_fu_184_p1;
wire  signed [15:0] tmp_350_cast_fu_208_p1;

assign ap_ready = 1'b1;

assign ap_return = (tmp_350_cast_fu_208_p1 ^ tmp_348_cast_fu_184_p1);

assign c_cast_fu_170_p3 = ((tmp_221_fu_162_p3[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign fold1_cast_fu_100_p2 = (tmp_69_fu_90_p4 + tmp_220_fu_86_p1);

assign fold2_cast_fu_140_p2 = (fold1_cast_fu_100_p2 + tmp_70_fu_130_p4);

assign not_tmp_s_fu_188_p2 = (tmp_221_fu_162_p3 ^ 1'd1);

assign r_1_fu_110_p2 = (tmp_345_cast_fu_106_p1 + tmp_344_cast_fu_82_p1);

assign r_2_fu_150_p2 = (tmp_347_cast_fu_146_p1 + tmp_346_cast_fu_126_p1);

assign r_fu_66_p2 = (tmp_343_cast_fu_56_p1 + tmp_342_cast_fu_48_p1);

assign t_fu_156_p2 = ($signed(3'd5) + $signed(r_2_fu_150_p2));

assign tmp_167_fu_38_p4 = {{a[7:4]}};

assign tmp_168_fu_60_p2 = (tmp_167_fu_38_p4 + tmp_fu_52_p1);

assign tmp_169_fu_72_p4 = {{r_fu_66_p2[4:2]}};

assign tmp_170_fu_116_p4 = {{r_1_fu_110_p2[3:2]}};

assign tmp_219_fu_202_p2 = (tmp_349_cast_cast_fu_194_p3 & t_fu_156_p2);

assign tmp_220_fu_86_p1 = a[1:0];

assign tmp_221_fu_162_p3 = t_fu_156_p2[32'd2];

assign tmp_342_cast_fu_48_p1 = tmp_167_fu_38_p4;

assign tmp_343_cast_fu_56_p1 = tmp_fu_52_p1;

assign tmp_344_cast_fu_82_p1 = tmp_169_fu_72_p4;

assign tmp_345_cast_fu_106_p1 = fold1_cast_fu_100_p2;

assign tmp_346_cast_fu_126_p1 = tmp_170_fu_116_p4;

assign tmp_347_cast_fu_146_p1 = fold2_cast_fu_140_p2;

assign tmp_348_cast_fu_184_p1 = tmp_s_fu_178_p2;

assign tmp_349_cast_cast_fu_194_p3 = ((not_tmp_s_fu_188_p2[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign tmp_350_cast_fu_208_p1 = $signed(tmp_219_fu_202_p2);

assign tmp_69_fu_90_p4 = {{a[5:4]}};

assign tmp_70_fu_130_p4 = {{tmp_168_fu_60_p2[3:2]}};

assign tmp_fu_52_p1 = a[3:0];

assign tmp_s_fu_178_p2 = (r_2_fu_150_p2 & c_cast_fu_170_p3);

endmodule //mod3
