

================================================================
== Vivado HLS Report for 'poly_Rq_to_S3'
================================================================
* Date:           Tue Aug 25 09:27:40 2020

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        ntru77
* Solution:       dec
* Product family: artix7
* Target device:  xc7a200tfbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.733|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  3389|  3389|  3389|  3389|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  1354|  1354|         2|          -|          -|   677|    no    |
        |- Loop 2  |  2031|  2031|         3|          -|          -|   677|    no    |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
	4  / (exitcond1)
3 --> 
	2  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / (!exitcond)
7 --> 
	8  / true
8 --> 
	6  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 9 [1/1] (1.35ns)   --->   "br label %1" [poly.c:157]   --->   Operation 9 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 2.77>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%i = phi i10 [ 0, %0 ], [ %i_8, %2 ]"   --->   Operation 10 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (1.43ns)   --->   "%exitcond1 = icmp eq i10 %i, -347" [poly.c:157]   --->   Operation 11 'icmp' 'exitcond1' <Predicate = true> <Delay = 1.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 677, i64 677, i64 677)"   --->   Operation 12 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (1.74ns)   --->   "%i_8 = add i10 %i, 1" [poly.c:157]   --->   Operation 13 'add' 'i_8' <Predicate = true> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %3, label %2" [poly.c:157]   --->   Operation 14 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_s = zext i10 %i to i64" [poly.c:159]   --->   Operation 15 'zext' 'tmp_s' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%a_coeffs_addr = getelementptr [677 x i16]* %a_coeffs, i64 0, i64 %tmp_s" [poly.c:159]   --->   Operation 16 'getelementptr' 'a_coeffs_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 17 [2/2] (2.77ns)   --->   "%a_coeffs_load = load i16* %a_coeffs_addr, align 2" [poly.c:159]   --->   Operation 17 'load' 'a_coeffs_load' <Predicate = (!exitcond1)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 677> <RAM>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%r_coeffs_addr = getelementptr [677 x i16]* %r_coeffs, i64 0, i64 676" [poly.c:163]   --->   Operation 18 'getelementptr' 'r_coeffs_addr' <Predicate = (exitcond1)> <Delay = 0.00>
ST_2 : Operation 19 [2/2] (2.77ns)   --->   "%r_coeffs_load_5 = load i16* %r_coeffs_addr, align 2" [poly.c:163]   --->   Operation 19 'load' 'r_coeffs_load_5' <Predicate = (exitcond1)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 677> <RAM>

State 3 <SV = 2> <Delay = 7.38>
ST_3 : Operation 20 [1/2] (2.77ns)   --->   "%a_coeffs_load = load i16* %a_coeffs_addr, align 2" [poly.c:159]   --->   Operation 20 'load' 'a_coeffs_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 677> <RAM>
ST_3 : Operation 21 [1/1] (0.00ns) (grouped into LUT with out node tmp_175)   --->   "%tmp_125 = call i5 @_ssdm_op_PartSelect.i5.i16.i32.i32(i16 %a_coeffs_load, i32 10, i32 14)" [poly.c:159]   --->   Operation 21 'partselect' 'tmp_125' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node tmp_175)   --->   "%tmp_171 = call i16 @_ssdm_op_BitConcatenate.i16.i5.i11(i5 %tmp_125, i11 0)" [poly.c:159]   --->   Operation 22 'bitconcatenate' 'tmp_171' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node tmp_175)   --->   "%tmp_172 = xor i16 %tmp_171, 6144" [poly.c:159]   --->   Operation 23 'xor' 'tmp_172' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%r_coeffs_addr_21 = getelementptr [677 x i16]* %r_coeffs, i64 0, i64 %tmp_s" [poly.c:159]   --->   Operation 24 'getelementptr' 'r_coeffs_addr_21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (1.84ns) (out node of the LUT)   --->   "%tmp_175 = add i16 %tmp_172, %a_coeffs_load" [poly.c:160]   --->   Operation 25 'add' 'tmp_175' <Predicate = true> <Delay = 1.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (2.77ns)   --->   "store i16 %tmp_175, i16* %r_coeffs_addr_21, align 2" [poly.c:160]   --->   Operation 26 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 677> <RAM>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "br label %1" [poly.c:157]   --->   Operation 27 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 7.66>
ST_4 : Operation 28 [1/2] (2.77ns)   --->   "%r_coeffs_load_5 = load i16* %r_coeffs_addr, align 2" [poly.c:163]   --->   Operation 28 'load' 'r_coeffs_load_5' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 677> <RAM>
ST_4 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_179 = trunc i16 %r_coeffs_load_5 to i8" [poly.c:5->poly.c:163]   --->   Operation 29 'trunc' 'tmp_179' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_121 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %r_coeffs_load_5, i32 8, i32 15)" [poly.c:10->poly.c:163]   --->   Operation 30 'partselect' 'tmp_121' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_i_cast = zext i8 %tmp_121 to i9" [poly.c:10->poly.c:163]   --->   Operation 31 'zext' 'tmp_i_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_i_cast_32 = zext i8 %tmp_179 to i9" [poly.c:10->poly.c:163]   --->   Operation 32 'zext' 'tmp_i_cast_32' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (1.71ns)   --->   "%tmp_122 = add i8 %tmp_121, %tmp_179" [poly.c:10->poly.c:163]   --->   Operation 33 'add' 'tmp_122' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 34 [1/1] (1.71ns)   --->   "%r = add i9 %tmp_i_cast_32, %tmp_i_cast" [poly.c:10->poly.c:163]   --->   Operation 34 'add' 'r' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_123 = call i5 @_ssdm_op_PartSelect.i5.i9.i32.i32(i9 %r, i32 4, i32 8)" [poly.c:11->poly.c:163]   --->   Operation 35 'partselect' 'tmp_123' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_217_i_cast = zext i5 %tmp_123 to i6" [poly.c:11->poly.c:163]   --->   Operation 36 'zext' 'tmp_217_i_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%tmp = call i4 @_ssdm_op_PartSelect.i4.i16.i32.i32(i16 %r_coeffs_load_5, i32 8, i32 11)" [poly.c:163]   --->   Operation 37 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_180 = trunc i16 %r_coeffs_load_5 to i4" [poly.c:163]   --->   Operation 38 'trunc' 'tmp_180' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_188 = trunc i16 %r_coeffs_load_5 to i2" [poly.c:163]   --->   Operation 39 'trunc' 'tmp_188' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_163 = call i2 @_ssdm_op_PartSelect.i2.i16.i32.i32(i16 %r_coeffs_load_5, i32 8, i32 9)" [poly.c:163]   --->   Operation 40 'partselect' 'tmp_163' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (1.49ns)   --->   "%fold_i_cast = add i4 %tmp_180, %tmp" [poly.c:11->poly.c:163]   --->   Operation 41 'add' 'fold_i_cast' <Predicate = true> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_218_i_cast = zext i4 %fold_i_cast to i6" [poly.c:11->poly.c:163]   --->   Operation 42 'zext' 'tmp_218_i_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (1.54ns)   --->   "%r_4 = add i6 %tmp_218_i_cast, %tmp_217_i_cast" [poly.c:11->poly.c:163]   --->   Operation 43 'add' 'r_4' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_219_i_cast = call i4 @_ssdm_op_PartSelect.i4.i6.i32.i32(i6 %r_4, i32 2, i32 5)" [poly.c:12->poly.c:163]   --->   Operation 44 'partselect' 'tmp_219_i_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_164 = add i2 %tmp_188, %tmp_163" [poly.c:163]   --->   Operation 45 'add' 'tmp_164' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_165 = call i2 @_ssdm_op_PartSelect.i2.i8.i32.i32(i8 %tmp_122, i32 4, i32 5)" [poly.c:10->poly.c:163]   --->   Operation 46 'partselect' 'tmp_165' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (1.67ns) (root node of TernaryAdder)   --->   "%fold1_i_cast = add i2 %tmp_165, %tmp_164" [poly.c:12->poly.c:163]   --->   Operation 47 'add' 'fold1_i_cast' <Predicate = true> <Delay = 1.67> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_220_i_cast = zext i2 %fold1_i_cast to i4" [poly.c:12->poly.c:163]   --->   Operation 48 'zext' 'tmp_220_i_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (1.49ns)   --->   "%r_5 = add i4 %tmp_220_i_cast, %tmp_219_i_cast" [poly.c:12->poly.c:163]   --->   Operation 49 'add' 'r_5' <Predicate = true> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_124 = call i2 @_ssdm_op_PartSelect.i2.i4.i32.i32(i4 %r_5, i32 2, i32 3)" [poly.c:13->poly.c:163]   --->   Operation 50 'partselect' 'tmp_124' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_166 = call i2 @_ssdm_op_PartSelect.i2.i6.i32.i32(i6 %r_4, i32 2, i32 3)" [poly.c:13->poly.c:163]   --->   Operation 51 'partselect' 'tmp_166' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (1.20ns)   --->   "%fold2_i_cast = add i2 %fold1_i_cast, %tmp_166" [poly.c:13->poly.c:163]   --->   Operation 52 'add' 'fold2_i_cast' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 3> <Delay = 6.13>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_221_i_cast = zext i2 %tmp_124 to i3" [poly.c:13->poly.c:163]   --->   Operation 53 'zext' 'tmp_221_i_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_222_i_cast = zext i2 %fold2_i_cast to i3" [poly.c:13->poly.c:163]   --->   Operation 54 'zext' 'tmp_222_i_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (1.20ns)   --->   "%r_6 = add i3 %tmp_222_i_cast, %tmp_221_i_cast" [poly.c:13->poly.c:163]   --->   Operation 55 'add' 'r_6' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 56 [1/1] (1.34ns)   --->   "%t = add i3 -3, %r_6" [poly.c:15->poly.c:163]   --->   Operation 56 'add' 't' <Predicate = true> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_189 = call i1 @_ssdm_op_BitSelect.i1.i3.i32(i3 %t, i32 2)" [poly.c:16->poly.c:163]   --->   Operation 57 'bitselect' 'tmp_189' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i)   --->   "%c_cast = select i1 %tmp_189, i3 -1, i3 0" [poly.c:16->poly.c:163]   --->   Operation 58 'select' 'c_cast' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i)   --->   "%tmp_223_i = and i3 %r_6, %c_cast" [poly.c:18->poly.c:163]   --->   Operation 59 'and' 'tmp_223_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i)   --->   "%tmp_223_i_cast = zext i3 %tmp_223_i to i16" [poly.c:18->poly.c:163]   --->   Operation 60 'zext' 'tmp_223_i_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i)   --->   "%not_tmp_53_i = xor i1 %tmp_189, true" [poly.c:16->poly.c:163]   --->   Operation 61 'xor' 'not_tmp_53_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i)   --->   "%tmp_224_i_cast_cast = select i1 %not_tmp_53_i, i3 -1, i3 0" [poly.c:18->poly.c:163]   --->   Operation 62 'select' 'tmp_224_i_cast_cast' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i)   --->   "%tmp_225_i = and i3 %t, %tmp_224_i_cast_cast" [poly.c:18->poly.c:163]   --->   Operation 63 'and' 'tmp_225_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i)   --->   "%tmp_225_i_cast = sext i3 %tmp_225_i to i16" [poly.c:18->poly.c:163]   --->   Operation 64 'sext' 'tmp_225_i_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.81ns) (out node of the LUT)   --->   "%tmp_226_i = xor i16 %tmp_223_i_cast, %tmp_225_i_cast" [poly.c:18->poly.c:163]   --->   Operation 65 'xor' 'tmp_226_i' <Predicate = true> <Delay = 0.81> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (2.77ns)   --->   "store i16 %tmp_226_i, i16* %r_coeffs_addr, align 2" [poly.c:163]   --->   Operation 66 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 677> <RAM>
ST_5 : Operation 67 [1/1] (1.35ns)   --->   "br label %4" [poly.c:164]   --->   Operation 67 'br' <Predicate = true> <Delay = 1.35>

State 6 <SV = 4> <Delay = 2.77>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%i_1 = phi i10 [ 0, %3 ], [ %i_9, %5 ]"   --->   Operation 68 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 69 [1/1] (1.43ns)   --->   "%exitcond = icmp eq i10 %i_1, -347" [poly.c:164]   --->   Operation 69 'icmp' 'exitcond' <Predicate = true> <Delay = 1.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%empty_33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 677, i64 677, i64 677)"   --->   Operation 70 'speclooptripcount' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (1.74ns)   --->   "%i_9 = add i10 %i_1, 1" [poly.c:164]   --->   Operation 71 'add' 'i_9' <Predicate = true> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %6, label %5" [poly.c:164]   --->   Operation 72 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_176 = zext i10 %i_1 to i64" [poly.c:165]   --->   Operation 73 'zext' 'tmp_176' <Predicate = (!exitcond)> <Delay = 0.00>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%r_coeffs_addr_22 = getelementptr [677 x i16]* %r_coeffs, i64 0, i64 %tmp_176" [poly.c:165]   --->   Operation 74 'getelementptr' 'r_coeffs_addr_22' <Predicate = (!exitcond)> <Delay = 0.00>
ST_6 : Operation 75 [2/2] (2.77ns)   --->   "%r_coeffs_load = load i16* %r_coeffs_addr_22, align 2" [poly.c:165]   --->   Operation 75 'load' 'r_coeffs_load' <Predicate = (!exitcond)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 677> <RAM>
ST_6 : Operation 76 [2/2] (2.77ns)   --->   "%r_coeffs_load_4 = load i16* %r_coeffs_addr, align 2" [poly.c:165]   --->   Operation 76 'load' 'r_coeffs_load_4' <Predicate = (!exitcond)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 677> <RAM>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "ret void" [poly.c:166]   --->   Operation 77 'ret' <Predicate = (exitcond)> <Delay = 0.00>

State 7 <SV = 5> <Delay = 8.73>
ST_7 : Operation 78 [1/2] (2.77ns)   --->   "%r_coeffs_load = load i16* %r_coeffs_addr_22, align 2" [poly.c:165]   --->   Operation 78 'load' 'r_coeffs_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 677> <RAM>
ST_7 : Operation 79 [1/2] (2.77ns)   --->   "%r_coeffs_load_4 = load i16* %r_coeffs_addr, align 2" [poly.c:165]   --->   Operation 79 'load' 'r_coeffs_load_4' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 677> <RAM>
ST_7 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node a_assign_1)   --->   "%tmp_190 = shl i16 %r_coeffs_load_4, 1" [poly.c:165]   --->   Operation 80 'shl' 'tmp_190' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_191 = trunc i16 %r_coeffs_load_4 to i7" [poly.c:165]   --->   Operation 81 'trunc' 'tmp_191' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_170 = call i8 @_ssdm_op_BitConcatenate.i8.i7.i1(i7 %tmp_191, i1 false)" [poly.c:165]   --->   Operation 82 'bitconcatenate' 'tmp_170' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_192 = trunc i16 %r_coeffs_load to i8" [poly.c:165]   --->   Operation 83 'trunc' 'tmp_192' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_193 = trunc i16 %r_coeffs_load to i4" [poly.c:165]   --->   Operation 84 'trunc' 'tmp_193' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_194 = trunc i16 %r_coeffs_load_4 to i3" [poly.c:165]   --->   Operation 85 'trunc' 'tmp_194' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_173 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %tmp_194, i1 false)" [poly.c:165]   --->   Operation 86 'bitconcatenate' 'tmp_173' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_195 = trunc i16 %r_coeffs_load_4 to i1" [poly.c:165]   --->   Operation 87 'trunc' 'tmp_195' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_174 = call i2 @_ssdm_op_BitConcatenate.i2.i1.i1(i1 %tmp_195, i1 false)" [poly.c:165]   --->   Operation 88 'bitconcatenate' 'tmp_174' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_196 = trunc i16 %r_coeffs_load to i2" [poly.c:165]   --->   Operation 89 'trunc' 'tmp_196' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 90 [1/1] (1.84ns) (out node of the LUT)   --->   "%a_assign_1 = add i16 %r_coeffs_load, %tmp_190" [poly.c:165]   --->   Operation 90 'add' 'a_assign_1' <Predicate = true> <Delay = 1.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 91 [1/1] (1.71ns)   --->   "%a_assign_1_cast = add i8 %tmp_170, %tmp_192" [poly.c:5->poly.c:165]   --->   Operation 91 'add' 'a_assign_1_cast' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_130 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %a_assign_1, i32 8, i32 15)" [poly.c:10->poly.c:165]   --->   Operation 92 'partselect' 'tmp_130' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_i1_cast = zext i8 %tmp_130 to i9" [poly.c:10->poly.c:165]   --->   Operation 93 'zext' 'tmp_i1_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_i2_cast = zext i8 %a_assign_1_cast to i9" [poly.c:10->poly.c:165]   --->   Operation 94 'zext' 'tmp_i2_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 95 [1/1] (1.71ns)   --->   "%tmp_131 = add i8 %a_assign_1_cast, %tmp_130" [poly.c:5->poly.c:165]   --->   Operation 95 'add' 'tmp_131' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 96 [1/1] (1.71ns)   --->   "%r_7 = add i9 %tmp_i1_cast, %tmp_i2_cast" [poly.c:10->poly.c:165]   --->   Operation 96 'add' 'r_7' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_132 = call i5 @_ssdm_op_PartSelect.i5.i9.i32.i32(i9 %r_7, i32 4, i32 8)" [poly.c:11->poly.c:165]   --->   Operation 97 'partselect' 'tmp_132' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_217_i4_cast = zext i5 %tmp_132 to i6" [poly.c:11->poly.c:165]   --->   Operation 98 'zext' 'tmp_217_i4_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 99 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_177 = add i4 %tmp_173, %tmp_193" [poly.c:165]   --->   Operation 99 'add' 'tmp_177' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_178 = call i4 @_ssdm_op_PartSelect.i4.i16.i32.i32(i16 %a_assign_1, i32 8, i32 11)" [poly.c:165]   --->   Operation 100 'partselect' 'tmp_178' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_181 = call i2 @_ssdm_op_PartSelect.i2.i16.i32.i32(i16 %a_assign_1, i32 8, i32 9)" [poly.c:165]   --->   Operation 101 'partselect' 'tmp_181' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 102 [1/1] (1.20ns)   --->   "%tmp_182 = add i2 %tmp_174, %tmp_196" [poly.c:165]   --->   Operation 102 'add' 'tmp_182' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 103 [1/1] (2.57ns) (root node of TernaryAdder)   --->   "%fold_i5_cast = add i4 %tmp_177, %tmp_178" [poly.c:11->poly.c:165]   --->   Operation 103 'add' 'fold_i5_cast' <Predicate = true> <Delay = 2.57> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_218_i6_cast = zext i4 %fold_i5_cast to i6" [poly.c:11->poly.c:165]   --->   Operation 104 'zext' 'tmp_218_i6_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 105 [1/1] (1.54ns)   --->   "%r_8 = add i6 %tmp_217_i4_cast, %tmp_218_i6_cast" [poly.c:11->poly.c:165]   --->   Operation 105 'add' 'r_8' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_219_i8_cast = call i4 @_ssdm_op_PartSelect.i4.i6.i32.i32(i6 %r_8, i32 2, i32 5)" [poly.c:12->poly.c:165]   --->   Operation 106 'partselect' 'tmp_219_i8_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 107 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_183 = add i2 %tmp_182, %tmp_181" [poly.c:165]   --->   Operation 107 'add' 'tmp_183' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_184 = call i2 @_ssdm_op_PartSelect.i2.i8.i32.i32(i8 %tmp_131, i32 4, i32 5)" [poly.c:5->poly.c:165]   --->   Operation 108 'partselect' 'tmp_184' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 109 [1/1] (1.67ns) (root node of TernaryAdder)   --->   "%fold1_i9_cast = add i2 %tmp_183, %tmp_184" [poly.c:12->poly.c:165]   --->   Operation 109 'add' 'fold1_i9_cast' <Predicate = true> <Delay = 1.67> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.83> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 110 [1/1] (0.00ns)   --->   "%tmp_185 = call i2 @_ssdm_op_PartSelect.i2.i6.i32.i32(i6 %r_8, i32 2, i32 3)" [poly.c:13->poly.c:165]   --->   Operation 110 'partselect' 'tmp_185' <Predicate = true> <Delay = 0.00>

State 8 <SV = 6> <Delay = 7.62>
ST_8 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_220_i1_cast = zext i2 %fold1_i9_cast to i4" [poly.c:12->poly.c:165]   --->   Operation 111 'zext' 'tmp_220_i1_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 112 [1/1] (1.49ns)   --->   "%r_9 = add i4 %tmp_219_i8_cast, %tmp_220_i1_cast" [poly.c:12->poly.c:165]   --->   Operation 112 'add' 'r_9' <Predicate = true> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_133 = call i2 @_ssdm_op_PartSelect.i2.i4.i32.i32(i4 %r_9, i32 2, i32 3)" [poly.c:13->poly.c:165]   --->   Operation 113 'partselect' 'tmp_133' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "%tmp_221_i1_cast = zext i2 %tmp_133 to i3" [poly.c:13->poly.c:165]   --->   Operation 114 'zext' 'tmp_221_i1_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (1.20ns)   --->   "%fold2_i1_cast = add i2 %tmp_185, %fold1_i9_cast" [poly.c:13->poly.c:165]   --->   Operation 115 'add' 'fold2_i1_cast' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_222_i1_cast = zext i2 %fold2_i1_cast to i3" [poly.c:13->poly.c:165]   --->   Operation 116 'zext' 'tmp_222_i1_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 117 [1/1] (1.20ns)   --->   "%r_10 = add i3 %tmp_221_i1_cast, %tmp_222_i1_cast" [poly.c:13->poly.c:165]   --->   Operation 117 'add' 'r_10' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 118 [1/1] (1.34ns)   --->   "%t_1 = add i3 -3, %r_10" [poly.c:15->poly.c:165]   --->   Operation 118 'add' 't_1' <Predicate = true> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_197 = call i1 @_ssdm_op_BitSelect.i1.i3.i32(i3 %t_1, i32 2)" [poly.c:16->poly.c:165]   --->   Operation 119 'bitselect' 'tmp_197' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i1)   --->   "%c_6_cast = select i1 %tmp_197, i3 -1, i3 0" [poly.c:16->poly.c:165]   --->   Operation 120 'select' 'c_6_cast' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i1)   --->   "%tmp_223_i1 = and i3 %r_10, %c_6_cast" [poly.c:18->poly.c:165]   --->   Operation 121 'and' 'tmp_223_i1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i1)   --->   "%tmp_223_i1_cast = zext i3 %tmp_223_i1 to i16" [poly.c:18->poly.c:165]   --->   Operation 122 'zext' 'tmp_223_i1_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i1)   --->   "%not_tmp_53_i1 = xor i1 %tmp_197, true" [poly.c:16->poly.c:165]   --->   Operation 123 'xor' 'not_tmp_53_i1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i1)   --->   "%tmp_224_i1_cast_cast = select i1 %not_tmp_53_i1, i3 -1, i3 0" [poly.c:18->poly.c:165]   --->   Operation 124 'select' 'tmp_224_i1_cast_cast' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i1)   --->   "%tmp_225_i1 = and i3 %t_1, %tmp_224_i1_cast_cast" [poly.c:18->poly.c:165]   --->   Operation 125 'and' 'tmp_225_i1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node tmp_226_i1)   --->   "%tmp_225_i1_cast = sext i3 %tmp_225_i1 to i16" [poly.c:18->poly.c:165]   --->   Operation 126 'sext' 'tmp_225_i1_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 127 [1/1] (0.81ns) (out node of the LUT)   --->   "%tmp_226_i1 = xor i16 %tmp_223_i1_cast, %tmp_225_i1_cast" [poly.c:18->poly.c:165]   --->   Operation 127 'xor' 'tmp_226_i1' <Predicate = true> <Delay = 0.81> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 128 [1/1] (2.77ns)   --->   "store i16 %tmp_226_i1, i16* %r_coeffs_addr_22, align 2" [poly.c:165]   --->   Operation 128 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 677> <RAM>
ST_8 : Operation 129 [1/1] (0.00ns)   --->   "br label %4" [poly.c:164]   --->   Operation 129 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', poly.c:157) [5]  (1.35 ns)

 <State 2>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', poly.c:157) [5]  (0 ns)
	'getelementptr' operation ('a_coeffs_addr', poly.c:159) [12]  (0 ns)
	'load' operation ('a_coeffs_load', poly.c:159) on array 'a_coeffs' [13]  (2.77 ns)

 <State 3>: 7.38ns
The critical path consists of the following:
	'load' operation ('a_coeffs_load', poly.c:159) on array 'a_coeffs' [13]  (2.77 ns)
	'add' operation ('tmp_175', poly.c:160) [18]  (1.84 ns)
	'store' operation (poly.c:160) of variable 'tmp_175', poly.c:160 on array 'r_coeffs' [19]  (2.77 ns)

 <State 4>: 7.66ns
The critical path consists of the following:
	'load' operation ('a', poly.c:163) on array 'r_coeffs' [23]  (2.77 ns)
	'add' operation ('tmp_122', poly.c:10->poly.c:163) [28]  (1.72 ns)
	'add' operation ('fold1_i_cast', poly.c:12->poly.c:163) [42]  (1.68 ns)
	'add' operation ('r', poly.c:12->poly.c:163) [44]  (1.49 ns)

 <State 5>: 6.13ns
The critical path consists of the following:
	'add' operation ('r', poly.c:13->poly.c:163) [50]  (1.2 ns)
	'add' operation ('t', poly.c:15->poly.c:163) [51]  (1.35 ns)
	'select' operation ('c_cast', poly.c:16->poly.c:163) [53]  (0 ns)
	'and' operation ('tmp_223_i', poly.c:18->poly.c:163) [54]  (0 ns)
	'xor' operation ('tmp_226_i', poly.c:18->poly.c:163) [60]  (0.813 ns)
	'store' operation (poly.c:163) of variable 'tmp_226_i', poly.c:18->poly.c:163 on array 'r_coeffs' [61]  (2.77 ns)

 <State 6>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', poly.c:164) [64]  (0 ns)
	'getelementptr' operation ('r_coeffs_addr_22', poly.c:165) [71]  (0 ns)
	'load' operation ('r_coeffs_load', poly.c:165) on array 'r_coeffs' [72]  (2.77 ns)

 <State 7>: 8.73ns
The critical path consists of the following:
	'load' operation ('r_coeffs_load', poly.c:165) on array 'r_coeffs' [72]  (2.77 ns)
	'add' operation ('a', poly.c:165) [84]  (1.84 ns)
	'add' operation ('fold_i5_cast', poly.c:11->poly.c:165) [97]  (2.57 ns)
	'add' operation ('r', poly.c:11->poly.c:165) [99]  (1.55 ns)

 <State 8>: 7.62ns
The critical path consists of the following:
	'add' operation ('r', poly.c:12->poly.c:165) [105]  (1.49 ns)
	'add' operation ('r', poly.c:13->poly.c:165) [111]  (1.2 ns)
	'add' operation ('t', poly.c:15->poly.c:165) [112]  (1.35 ns)
	'select' operation ('c_6_cast', poly.c:16->poly.c:165) [114]  (0 ns)
	'and' operation ('tmp_223_i1', poly.c:18->poly.c:165) [115]  (0 ns)
	'xor' operation ('tmp_226_i1', poly.c:18->poly.c:165) [121]  (0.813 ns)
	'store' operation (poly.c:165) of variable 'tmp_226_i1', poly.c:18->poly.c:165 on array 'r_coeffs' [122]  (2.77 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
