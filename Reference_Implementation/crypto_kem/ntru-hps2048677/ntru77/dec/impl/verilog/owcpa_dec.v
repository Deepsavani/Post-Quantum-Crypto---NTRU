// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module owcpa_dec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rm_address0,
        rm_ce0,
        rm_we0,
        rm_d0,
        ciphertext_address0,
        ciphertext_ce0,
        ciphertext_q0,
        ciphertext_address1,
        ciphertext_ce1,
        ciphertext_q1,
        secretkey_address0,
        secretkey_ce0,
        secretkey_q0,
        secretkey_address1,
        secretkey_ce1,
        secretkey_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 36'd1;
parameter    ap_ST_fsm_state2 = 36'd2;
parameter    ap_ST_fsm_state3 = 36'd4;
parameter    ap_ST_fsm_state4 = 36'd8;
parameter    ap_ST_fsm_state5 = 36'd16;
parameter    ap_ST_fsm_state6 = 36'd32;
parameter    ap_ST_fsm_state7 = 36'd64;
parameter    ap_ST_fsm_state8 = 36'd128;
parameter    ap_ST_fsm_state9 = 36'd256;
parameter    ap_ST_fsm_state10 = 36'd512;
parameter    ap_ST_fsm_state11 = 36'd1024;
parameter    ap_ST_fsm_state12 = 36'd2048;
parameter    ap_ST_fsm_state13 = 36'd4096;
parameter    ap_ST_fsm_state14 = 36'd8192;
parameter    ap_ST_fsm_state15 = 36'd16384;
parameter    ap_ST_fsm_state16 = 36'd32768;
parameter    ap_ST_fsm_state17 = 36'd65536;
parameter    ap_ST_fsm_state18 = 36'd131072;
parameter    ap_ST_fsm_state19 = 36'd262144;
parameter    ap_ST_fsm_state20 = 36'd524288;
parameter    ap_ST_fsm_state21 = 36'd1048576;
parameter    ap_ST_fsm_state22 = 36'd2097152;
parameter    ap_ST_fsm_state23 = 36'd4194304;
parameter    ap_ST_fsm_state24 = 36'd8388608;
parameter    ap_ST_fsm_state25 = 36'd16777216;
parameter    ap_ST_fsm_state26 = 36'd33554432;
parameter    ap_ST_fsm_state27 = 36'd67108864;
parameter    ap_ST_fsm_state28 = 36'd134217728;
parameter    ap_ST_fsm_state29 = 36'd268435456;
parameter    ap_ST_fsm_state30 = 36'd536870912;
parameter    ap_ST_fsm_state31 = 36'd1073741824;
parameter    ap_ST_fsm_state32 = 36'd2147483648;
parameter    ap_ST_fsm_state33 = 36'd4294967296;
parameter    ap_ST_fsm_state34 = 36'd8589934592;
parameter    ap_ST_fsm_state35 = 36'd17179869184;
parameter    ap_ST_fsm_state36 = 36'd34359738368;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] rm_address0;
output   rm_ce0;
output   rm_we0;
output  [7:0] rm_d0;
output  [9:0] ciphertext_address0;
output   ciphertext_ce0;
input  [7:0] ciphertext_q0;
output  [9:0] ciphertext_address1;
output   ciphertext_ce1;
input  [7:0] ciphertext_q1;
output  [10:0] secretkey_address0;
output   secretkey_ce0;
input  [7:0] secretkey_q0;
output  [10:0] secretkey_address1;
output   secretkey_ce1;
input  [7:0] secretkey_q1;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rm_ce0;
reg rm_we0;
reg[10:0] secretkey_address0;
reg secretkey_ce0;
reg secretkey_ce1;

(* fsm_encoding = "none" *) reg   [35:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] b_coeffs_addr_reg_1010;
wire    ap_CS_fsm_state3;
wire   [9:0] i_12_fu_480_p2;
reg   [9:0] i_12_reg_1019;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond_i_fu_474_p2;
wire   [10:0] phitmp_fu_517_p2;
wire    ap_CS_fsm_state5;
wire   [9:0] i_13_fu_529_p2;
reg   [9:0] i_13_reg_1037;
wire    ap_CS_fsm_state7;
reg   [9:0] liftm_coeffs_addr_reg_1042;
wire   [0:0] exitcond_i7_fu_523_p2;
wire   [9:0] i_14_fu_565_p2;
reg   [9:0] i_14_reg_1050;
wire    ap_CS_fsm_state18;
wire   [0:0] exitcond_i1_fu_559_p2;
reg   [0:0] tmp_209_reg_1060;
wire   [9:0] p1_fu_674_p2;
wire    ap_CS_fsm_state19;
wire   [9:0] m1_fu_692_p2;
wire   [9:0] i_15_fu_704_p2;
reg   [9:0] i_15_reg_1078;
wire    ap_CS_fsm_state20;
wire   [63:0] tmp_i2_fu_710_p1;
reg   [63:0] tmp_i2_reg_1083;
wire   [0:0] exitcond_i2_fu_698_p2;
wire   [9:0] i_16_fu_721_p2;
reg   [9:0] i_16_reg_1096;
wire    ap_CS_fsm_state22;
reg   [9:0] liftm_coeffs_addr_2_reg_1101;
wire   [0:0] exitcond_i_i_fu_715_p2;
wire   [9:0] i_17_fu_757_p2;
reg   [9:0] i_17_reg_1109;
wire    ap_CS_fsm_state24;
reg   [9:0] b_coeffs_addr_4_reg_1114;
wire   [0:0] exitcond_fu_751_p2;
wire    ap_CS_fsm_state28;
wire    grp_poly_Rq_mul_fu_431_ap_ready;
wire    grp_poly_Rq_mul_fu_431_ap_done;
wire   [9:0] i_18_fu_790_p2;
reg   [9:0] i_18_reg_1133;
wire    ap_CS_fsm_state29;
reg   [9:0] r_coeffs_addr_25_reg_1138;
wire   [0:0] exitcond_i3_fu_784_p2;
wire   [9:0] i_19_fu_822_p2;
reg   [9:0] i_19_reg_1147;
wire    ap_CS_fsm_state31;
wire   [0:0] exitcond_i4_fu_816_p2;
wire   [63:0] t_2_fu_913_p3;
wire    ap_CS_fsm_state32;
wire   [0:0] fail_fu_963_p2;
reg   [0:0] fail_reg_1162;
wire    ap_CS_fsm_state33;
wire   [9:0] i_20_fu_974_p2;
reg   [9:0] i_20_reg_1169;
wire    ap_CS_fsm_state34;
reg   [9:0] r_coeffs_addr_27_reg_1174;
wire   [0:0] exitcond_i5_fu_968_p2;
reg   [9:0] x1_coeffs_address0;
reg    x1_coeffs_ce0;
reg    x1_coeffs_we0;
reg   [15:0] x1_coeffs_d0;
wire   [15:0] x1_coeffs_q0;
reg   [9:0] x1_coeffs_address1;
reg    x1_coeffs_ce1;
reg    x1_coeffs_we1;
reg   [15:0] x1_coeffs_d1;
wire   [15:0] x1_coeffs_q1;
reg   [9:0] x2_coeffs_address0;
reg    x2_coeffs_ce0;
reg    x2_coeffs_we0;
reg   [15:0] x2_coeffs_d0;
wire   [15:0] x2_coeffs_q0;
reg   [9:0] x2_coeffs_address1;
reg    x2_coeffs_ce1;
reg    x2_coeffs_we1;
reg   [15:0] x2_coeffs_d1;
wire   [15:0] x2_coeffs_q1;
reg   [9:0] x3_coeffs_address0;
reg    x3_coeffs_ce0;
reg    x3_coeffs_we0;
reg   [15:0] x3_coeffs_d0;
wire   [15:0] x3_coeffs_q0;
reg   [9:0] x3_coeffs_address1;
reg    x3_coeffs_ce1;
reg    x3_coeffs_we1;
reg   [15:0] x3_coeffs_d1;
reg   [9:0] x4_coeffs_address0;
reg    x4_coeffs_ce0;
reg    x4_coeffs_we0;
reg   [15:0] x4_coeffs_d0;
wire   [15:0] x4_coeffs_q0;
reg   [9:0] x4_coeffs_address1;
reg    x4_coeffs_ce1;
reg    x4_coeffs_we1;
reg   [15:0] x4_coeffs_d1;
wire   [15:0] x4_coeffs_q1;
wire    grp_poly_Sq_frombytes_1_fu_393_ap_start;
wire    grp_poly_Sq_frombytes_1_fu_393_ap_done;
wire    grp_poly_Sq_frombytes_1_fu_393_ap_idle;
wire    grp_poly_Sq_frombytes_1_fu_393_ap_ready;
wire   [9:0] grp_poly_Sq_frombytes_1_fu_393_r_coeffs_address0;
wire    grp_poly_Sq_frombytes_1_fu_393_r_coeffs_ce0;
wire    grp_poly_Sq_frombytes_1_fu_393_r_coeffs_we0;
wire   [15:0] grp_poly_Sq_frombytes_1_fu_393_r_coeffs_d0;
wire   [9:0] grp_poly_Sq_frombytes_1_fu_393_r_coeffs_address1;
wire    grp_poly_Sq_frombytes_1_fu_393_r_coeffs_ce1;
wire    grp_poly_Sq_frombytes_1_fu_393_r_coeffs_we1;
wire   [15:0] grp_poly_Sq_frombytes_1_fu_393_r_coeffs_d1;
wire   [10:0] grp_poly_Sq_frombytes_1_fu_393_a_address0;
wire    grp_poly_Sq_frombytes_1_fu_393_a_ce0;
wire   [10:0] grp_poly_Sq_frombytes_1_fu_393_a_address1;
wire    grp_poly_Sq_frombytes_1_fu_393_a_ce1;
wire    grp_poly_Sq_frombytes_fu_400_ap_start;
wire    grp_poly_Sq_frombytes_fu_400_ap_done;
wire    grp_poly_Sq_frombytes_fu_400_ap_idle;
wire    grp_poly_Sq_frombytes_fu_400_ap_ready;
wire   [9:0] grp_poly_Sq_frombytes_fu_400_r_coeffs_address0;
wire    grp_poly_Sq_frombytes_fu_400_r_coeffs_ce0;
wire    grp_poly_Sq_frombytes_fu_400_r_coeffs_we0;
wire   [15:0] grp_poly_Sq_frombytes_fu_400_r_coeffs_d0;
wire   [9:0] grp_poly_Sq_frombytes_fu_400_r_coeffs_address1;
wire    grp_poly_Sq_frombytes_fu_400_r_coeffs_ce1;
wire    grp_poly_Sq_frombytes_fu_400_r_coeffs_we1;
wire   [15:0] grp_poly_Sq_frombytes_fu_400_r_coeffs_d1;
wire   [9:0] grp_poly_Sq_frombytes_fu_400_a_address0;
wire    grp_poly_Sq_frombytes_fu_400_a_ce0;
wire   [9:0] grp_poly_Sq_frombytes_fu_400_a_address1;
wire    grp_poly_Sq_frombytes_fu_400_a_ce1;
wire    grp_poly_S3_mul_fu_408_ap_start;
wire    grp_poly_S3_mul_fu_408_ap_done;
wire    grp_poly_S3_mul_fu_408_ap_idle;
wire    grp_poly_S3_mul_fu_408_ap_ready;
wire   [9:0] grp_poly_S3_mul_fu_408_r_coeffs_address0;
wire    grp_poly_S3_mul_fu_408_r_coeffs_ce0;
wire    grp_poly_S3_mul_fu_408_r_coeffs_we0;
wire   [15:0] grp_poly_S3_mul_fu_408_r_coeffs_d0;
wire   [9:0] grp_poly_S3_mul_fu_408_r_coeffs_address1;
wire    grp_poly_S3_mul_fu_408_r_coeffs_ce1;
wire    grp_poly_S3_mul_fu_408_r_coeffs_we1;
wire   [15:0] grp_poly_S3_mul_fu_408_r_coeffs_d1;
wire   [9:0] grp_poly_S3_mul_fu_408_a_coeffs_address0;
wire    grp_poly_S3_mul_fu_408_a_coeffs_ce0;
wire   [9:0] grp_poly_S3_mul_fu_408_b_coeffs_address0;
wire    grp_poly_S3_mul_fu_408_b_coeffs_ce0;
wire    grp_poly_S3_frombytes_fu_415_ap_start;
wire    grp_poly_S3_frombytes_fu_415_ap_done;
wire    grp_poly_S3_frombytes_fu_415_ap_idle;
wire    grp_poly_S3_frombytes_fu_415_ap_ready;
wire   [9:0] grp_poly_S3_frombytes_fu_415_r_coeffs_address0;
wire    grp_poly_S3_frombytes_fu_415_r_coeffs_ce0;
wire    grp_poly_S3_frombytes_fu_415_r_coeffs_we0;
wire   [15:0] grp_poly_S3_frombytes_fu_415_r_coeffs_d0;
wire   [9:0] grp_poly_S3_frombytes_fu_415_r_coeffs_address1;
wire    grp_poly_S3_frombytes_fu_415_r_coeffs_ce1;
wire    grp_poly_S3_frombytes_fu_415_r_coeffs_we1;
wire   [15:0] grp_poly_S3_frombytes_fu_415_r_coeffs_d1;
wire   [10:0] grp_poly_S3_frombytes_fu_415_msg_address0;
wire    grp_poly_S3_frombytes_fu_415_msg_ce0;
reg   [9:0] grp_poly_S3_frombytes_fu_415_msg_offset;
wire    grp_poly_Rq_to_S3_fu_425_ap_start;
wire    grp_poly_Rq_to_S3_fu_425_ap_done;
wire    grp_poly_Rq_to_S3_fu_425_ap_idle;
wire    grp_poly_Rq_to_S3_fu_425_ap_ready;
wire   [9:0] grp_poly_Rq_to_S3_fu_425_r_coeffs_address0;
wire    grp_poly_Rq_to_S3_fu_425_r_coeffs_ce0;
wire    grp_poly_Rq_to_S3_fu_425_r_coeffs_we0;
wire   [15:0] grp_poly_Rq_to_S3_fu_425_r_coeffs_d0;
wire   [9:0] grp_poly_Rq_to_S3_fu_425_r_coeffs_address1;
wire    grp_poly_Rq_to_S3_fu_425_r_coeffs_ce1;
wire    grp_poly_Rq_to_S3_fu_425_r_coeffs_we1;
wire   [15:0] grp_poly_Rq_to_S3_fu_425_r_coeffs_d1;
wire   [9:0] grp_poly_Rq_to_S3_fu_425_a_coeffs_address0;
wire    grp_poly_Rq_to_S3_fu_425_a_coeffs_ce0;
wire    grp_poly_Rq_mul_fu_431_ap_start;
wire    grp_poly_Rq_mul_fu_431_ap_idle;
wire   [9:0] grp_poly_Rq_mul_fu_431_r_coeffs_address0;
wire    grp_poly_Rq_mul_fu_431_r_coeffs_ce0;
wire    grp_poly_Rq_mul_fu_431_r_coeffs_we0;
wire   [15:0] grp_poly_Rq_mul_fu_431_r_coeffs_d0;
reg   [15:0] grp_poly_Rq_mul_fu_431_r_coeffs_q0;
wire   [9:0] grp_poly_Rq_mul_fu_431_a_coeffs_address0;
wire    grp_poly_Rq_mul_fu_431_a_coeffs_ce0;
wire   [9:0] grp_poly_Rq_mul_fu_431_b_coeffs_address0;
wire    grp_poly_Rq_mul_fu_431_b_coeffs_ce0;
reg   [15:0] grp_poly_Rq_mul_fu_431_b_coeffs_q0;
wire    grp_poly_S3_tobytes_fu_438_ap_start;
wire    grp_poly_S3_tobytes_fu_438_ap_done;
wire    grp_poly_S3_tobytes_fu_438_ap_idle;
wire    grp_poly_S3_tobytes_fu_438_ap_ready;
wire   [8:0] grp_poly_S3_tobytes_fu_438_msg_address0;
wire    grp_poly_S3_tobytes_fu_438_msg_ce0;
wire    grp_poly_S3_tobytes_fu_438_msg_we0;
wire   [7:0] grp_poly_S3_tobytes_fu_438_msg_d0;
reg   [8:0] grp_poly_S3_tobytes_fu_438_msg_offset;
wire   [9:0] grp_poly_S3_tobytes_fu_438_a_coeffs_address0;
wire    grp_poly_S3_tobytes_fu_438_a_coeffs_ce0;
wire   [9:0] grp_poly_S3_tobytes_fu_438_a_coeffs_address1;
wire    grp_poly_S3_tobytes_fu_438_a_coeffs_ce1;
reg   [10:0] tmp_i_reg_247;
reg   [9:0] i_i_reg_258;
reg   [9:0] i_i6_reg_269;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
reg   [9:0] p1_i_reg_280;
wire    ap_CS_fsm_state17;
reg   [9:0] i_i1_reg_292;
reg   [9:0] m1_i_reg_303;
reg   [9:0] i_i2_reg_315;
wire    ap_CS_fsm_state21;
reg   [9:0] i_i_i_reg_326;
wire    ap_CS_fsm_state23;
reg   [9:0] i_reg_337;
wire    ap_CS_fsm_state25;
reg   [9:0] i_i3_reg_348;
wire    ap_CS_fsm_state30;
reg   [9:0] i_i4_reg_359;
reg   [63:0] t_i_reg_370;
reg   [9:0] i_i5_reg_382;
wire    ap_CS_fsm_state35;
reg    grp_poly_Sq_frombytes_1_fu_393_ap_start_reg;
wire    ap_CS_fsm_state26;
reg    grp_poly_Sq_frombytes_fu_400_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_poly_S3_mul_fu_408_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
reg    grp_poly_S3_frombytes_fu_415_ap_start_reg;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
reg    grp_poly_Rq_to_S3_fu_425_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_poly_Rq_mul_fu_431_ap_start_reg;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state9;
reg    grp_poly_S3_tobytes_fu_438_ap_start_reg;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state36;
wire   [63:0] tmp_184_i_fu_486_p1;
wire   [63:0] tmp_i8_fu_535_p1;
wire   [63:0] tmp_213_i_fu_571_p1;
wire   [63:0] tmp_i_i_fu_727_p1;
wire   [63:0] tmp_s_fu_763_p1;
wire   [63:0] tmp_i3_fu_796_p1;
wire   [63:0] tmp_202_i_fu_828_p1;
wire   [63:0] tmp_i5_fu_980_p1;
wire   [15:0] tmp_183_i_cast_fu_497_p1;
wire   [15:0] tmp_185_i_fu_510_p2;
wire   [15:0] tmp_196_cast_fu_779_p1;
wire   [15:0] tmp_3_i_fu_550_p3;
wire   [15:0] tmp_3_i_i_fu_742_p3;
wire   [15:0] tmp_4_i_cast_fu_811_p1;
wire   [15:0] tmp_8_i_cast_fu_1005_p1;
wire   [10:0] grp_fu_448_p4;
wire   [10:0] tmp_i_cast_fu_491_p2;
wire   [10:0] tmp_203_fu_506_p1;
wire   [10:0] tmp_202_fu_502_p1;
wire   [10:0] tmp_205_fu_540_p1;
wire   [10:0] grp_fu_458_p2;
wire   [4:0] grp_fu_464_p4;
wire   [10:0] tmp_194_fu_544_p2;
wire   [10:0] m1_i_cast9_fu_580_p1;
wire   [10:0] p1_i_cast_fu_576_p1;
wire   [10:0] tmp_47_i_fu_590_p2;
wire   [9:0] tmp_197_fu_596_p2;
wire   [9:0] tmp_198_fu_608_p2;
wire   [9:0] tmp_i1_fu_584_p2;
wire   [10:0] tmp_48_i_fu_602_p2;
wire   [0:0] tmp_208_fu_620_p3;
wire   [9:0] tmp_199_fu_614_p2;
wire   [10:0] tmp_49_i_fu_628_p3;
wire   [15:0] tmp_49_i_cast_fu_636_p1;
wire   [31:0] tmp_51_i_fu_640_p3;
wire   [32:0] t_cast_fu_648_p1;
wire   [32:0] tmp_211_i_fu_652_p2;
wire   [0:0] tmp_213_fu_666_p1;
wire   [9:0] tmp_214_i_cast_fu_670_p1;
wire   [0:0] tmp_217_fu_680_p3;
wire   [9:0] tmp_216_i_cast_fu_688_p1;
wire   [10:0] tmp_218_fu_732_p1;
wire   [10:0] tmp_201_fu_736_p2;
wire   [15:0] tmp_195_fu_769_p2;
wire   [10:0] tmp_219_fu_775_p1;
wire   [15:0] tmp_i3_42_fu_801_p2;
wire   [10:0] tmp_220_fu_807_p1;
wire   [10:0] tmp_223_fu_833_p1;
wire   [2:0] tmp_224_fu_837_p1;
wire   [2:0] tmp_206_fu_847_p2;
wire   [2:0] tmp_206_i_fu_853_p2;
wire   [2:0] tmp_207_fu_859_p2;
wire   [10:0] tmp_204_i_cast_fu_841_p2;
wire   [7:0] tmp_210_fu_873_p4;
wire   [0:0] tmp_225_fu_865_p3;
wire   [10:0] tmp_226_fu_893_p1;
wire   [10:0] tmp_fu_883_p4;
wire   [52:0] tmp_212_fu_903_p4;
wire   [10:0] tmp_211_fu_897_p2;
wire   [15:0] tmp_221_fu_921_p1;
wire   [47:0] tmp_42_i_fu_931_p4;
wire   [15:0] tmp_41_i_fu_925_p2;
wire   [63:0] t_fu_941_p3;
wire   [63:0] tmp_i4_fu_949_p2;
wire   [0:0] tmp_222_fu_955_p3;
wire   [1:0] tmp_227_fu_995_p1;
wire   [1:0] tmp_214_fu_985_p4;
wire   [1:0] tmp_7_i_cast_fu_999_p2;
reg   [35:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 36'd1;
#0 grp_poly_Sq_frombytes_1_fu_393_ap_start_reg = 1'b0;
#0 grp_poly_Sq_frombytes_fu_400_ap_start_reg = 1'b0;
#0 grp_poly_S3_mul_fu_408_ap_start_reg = 1'b0;
#0 grp_poly_S3_frombytes_fu_415_ap_start_reg = 1'b0;
#0 grp_poly_Rq_to_S3_fu_425_ap_start_reg = 1'b0;
#0 grp_poly_Rq_mul_fu_431_ap_start_reg = 1'b0;
#0 grp_poly_S3_tobytes_fu_438_ap_start_reg = 1'b0;
end

owcpa_dec_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
x1_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x1_coeffs_address0),
    .ce0(x1_coeffs_ce0),
    .we0(x1_coeffs_we0),
    .d0(x1_coeffs_d0),
    .q0(x1_coeffs_q0),
    .address1(x1_coeffs_address1),
    .ce1(x1_coeffs_ce1),
    .we1(x1_coeffs_we1),
    .d1(x1_coeffs_d1),
    .q1(x1_coeffs_q1)
);

owcpa_dec_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
x2_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x2_coeffs_address0),
    .ce0(x2_coeffs_ce0),
    .we0(x2_coeffs_we0),
    .d0(x2_coeffs_d0),
    .q0(x2_coeffs_q0),
    .address1(x2_coeffs_address1),
    .ce1(x2_coeffs_ce1),
    .we1(x2_coeffs_we1),
    .d1(x2_coeffs_d1),
    .q1(x2_coeffs_q1)
);

owcpa_dec_x3_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
x3_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x3_coeffs_address0),
    .ce0(x3_coeffs_ce0),
    .we0(x3_coeffs_we0),
    .d0(x3_coeffs_d0),
    .q0(x3_coeffs_q0),
    .address1(x3_coeffs_address1),
    .ce1(x3_coeffs_ce1),
    .we1(x3_coeffs_we1),
    .d1(x3_coeffs_d1)
);

owcpa_dec_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
x4_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x4_coeffs_address0),
    .ce0(x4_coeffs_ce0),
    .we0(x4_coeffs_we0),
    .d0(x4_coeffs_d0),
    .q0(x4_coeffs_q0),
    .address1(x4_coeffs_address1),
    .ce1(x4_coeffs_ce1),
    .we1(x4_coeffs_we1),
    .d1(x4_coeffs_d1),
    .q1(x4_coeffs_q1)
);

poly_Sq_frombytes_1 grp_poly_Sq_frombytes_1_fu_393(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Sq_frombytes_1_fu_393_ap_start),
    .ap_done(grp_poly_Sq_frombytes_1_fu_393_ap_done),
    .ap_idle(grp_poly_Sq_frombytes_1_fu_393_ap_idle),
    .ap_ready(grp_poly_Sq_frombytes_1_fu_393_ap_ready),
    .r_coeffs_address0(grp_poly_Sq_frombytes_1_fu_393_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Sq_frombytes_1_fu_393_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Sq_frombytes_1_fu_393_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Sq_frombytes_1_fu_393_r_coeffs_d0),
    .r_coeffs_address1(grp_poly_Sq_frombytes_1_fu_393_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_Sq_frombytes_1_fu_393_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_Sq_frombytes_1_fu_393_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_Sq_frombytes_1_fu_393_r_coeffs_d1),
    .a_address0(grp_poly_Sq_frombytes_1_fu_393_a_address0),
    .a_ce0(grp_poly_Sq_frombytes_1_fu_393_a_ce0),
    .a_q0(secretkey_q0),
    .a_address1(grp_poly_Sq_frombytes_1_fu_393_a_address1),
    .a_ce1(grp_poly_Sq_frombytes_1_fu_393_a_ce1),
    .a_q1(secretkey_q1)
);

poly_Sq_frombytes grp_poly_Sq_frombytes_fu_400(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Sq_frombytes_fu_400_ap_start),
    .ap_done(grp_poly_Sq_frombytes_fu_400_ap_done),
    .ap_idle(grp_poly_Sq_frombytes_fu_400_ap_idle),
    .ap_ready(grp_poly_Sq_frombytes_fu_400_ap_ready),
    .r_coeffs_address0(grp_poly_Sq_frombytes_fu_400_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Sq_frombytes_fu_400_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Sq_frombytes_fu_400_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Sq_frombytes_fu_400_r_coeffs_d0),
    .r_coeffs_address1(grp_poly_Sq_frombytes_fu_400_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_Sq_frombytes_fu_400_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_Sq_frombytes_fu_400_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_Sq_frombytes_fu_400_r_coeffs_d1),
    .a_address0(grp_poly_Sq_frombytes_fu_400_a_address0),
    .a_ce0(grp_poly_Sq_frombytes_fu_400_a_ce0),
    .a_q0(ciphertext_q0),
    .a_address1(grp_poly_Sq_frombytes_fu_400_a_address1),
    .a_ce1(grp_poly_Sq_frombytes_fu_400_a_ce1),
    .a_q1(ciphertext_q1)
);

poly_S3_mul grp_poly_S3_mul_fu_408(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_mul_fu_408_ap_start),
    .ap_done(grp_poly_S3_mul_fu_408_ap_done),
    .ap_idle(grp_poly_S3_mul_fu_408_ap_idle),
    .ap_ready(grp_poly_S3_mul_fu_408_ap_ready),
    .r_coeffs_address0(grp_poly_S3_mul_fu_408_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_S3_mul_fu_408_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_S3_mul_fu_408_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_S3_mul_fu_408_r_coeffs_d0),
    .r_coeffs_q0(x4_coeffs_q0),
    .r_coeffs_address1(grp_poly_S3_mul_fu_408_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_S3_mul_fu_408_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_S3_mul_fu_408_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_S3_mul_fu_408_r_coeffs_d1),
    .r_coeffs_q1(x4_coeffs_q1),
    .a_coeffs_address0(grp_poly_S3_mul_fu_408_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_mul_fu_408_a_coeffs_ce0),
    .a_coeffs_q0(x2_coeffs_q0),
    .b_coeffs_address0(grp_poly_S3_mul_fu_408_b_coeffs_address0),
    .b_coeffs_ce0(grp_poly_S3_mul_fu_408_b_coeffs_ce0),
    .b_coeffs_q0(x3_coeffs_q0)
);

poly_S3_frombytes grp_poly_S3_frombytes_fu_415(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_frombytes_fu_415_ap_start),
    .ap_done(grp_poly_S3_frombytes_fu_415_ap_done),
    .ap_idle(grp_poly_S3_frombytes_fu_415_ap_idle),
    .ap_ready(grp_poly_S3_frombytes_fu_415_ap_ready),
    .r_coeffs_address0(grp_poly_S3_frombytes_fu_415_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_S3_frombytes_fu_415_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_S3_frombytes_fu_415_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_S3_frombytes_fu_415_r_coeffs_d0),
    .r_coeffs_address1(grp_poly_S3_frombytes_fu_415_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_S3_frombytes_fu_415_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_S3_frombytes_fu_415_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_S3_frombytes_fu_415_r_coeffs_d1),
    .msg_address0(grp_poly_S3_frombytes_fu_415_msg_address0),
    .msg_ce0(grp_poly_S3_frombytes_fu_415_msg_ce0),
    .msg_q0(secretkey_q0),
    .msg_offset(grp_poly_S3_frombytes_fu_415_msg_offset)
);

poly_Rq_to_S3 grp_poly_Rq_to_S3_fu_425(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Rq_to_S3_fu_425_ap_start),
    .ap_done(grp_poly_Rq_to_S3_fu_425_ap_done),
    .ap_idle(grp_poly_Rq_to_S3_fu_425_ap_idle),
    .ap_ready(grp_poly_Rq_to_S3_fu_425_ap_ready),
    .r_coeffs_address0(grp_poly_Rq_to_S3_fu_425_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Rq_to_S3_fu_425_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Rq_to_S3_fu_425_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Rq_to_S3_fu_425_r_coeffs_d0),
    .r_coeffs_q0(x2_coeffs_q0),
    .r_coeffs_address1(grp_poly_Rq_to_S3_fu_425_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_Rq_to_S3_fu_425_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_Rq_to_S3_fu_425_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_Rq_to_S3_fu_425_r_coeffs_d1),
    .r_coeffs_q1(x2_coeffs_q1),
    .a_coeffs_address0(grp_poly_Rq_to_S3_fu_425_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Rq_to_S3_fu_425_a_coeffs_ce0),
    .a_coeffs_q0(x3_coeffs_q0)
);

poly_Rq_mul grp_poly_Rq_mul_fu_431(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Rq_mul_fu_431_ap_start),
    .ap_done(grp_poly_Rq_mul_fu_431_ap_done),
    .ap_idle(grp_poly_Rq_mul_fu_431_ap_idle),
    .ap_ready(grp_poly_Rq_mul_fu_431_ap_ready),
    .r_coeffs_address0(grp_poly_Rq_mul_fu_431_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Rq_mul_fu_431_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Rq_mul_fu_431_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Rq_mul_fu_431_r_coeffs_d0),
    .r_coeffs_q0(grp_poly_Rq_mul_fu_431_r_coeffs_q0),
    .a_coeffs_address0(grp_poly_Rq_mul_fu_431_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Rq_mul_fu_431_a_coeffs_ce0),
    .a_coeffs_q0(x1_coeffs_q0),
    .b_coeffs_address0(grp_poly_Rq_mul_fu_431_b_coeffs_address0),
    .b_coeffs_ce0(grp_poly_Rq_mul_fu_431_b_coeffs_ce0),
    .b_coeffs_q0(grp_poly_Rq_mul_fu_431_b_coeffs_q0)
);

poly_S3_tobytes grp_poly_S3_tobytes_fu_438(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_tobytes_fu_438_ap_start),
    .ap_done(grp_poly_S3_tobytes_fu_438_ap_done),
    .ap_idle(grp_poly_S3_tobytes_fu_438_ap_idle),
    .ap_ready(grp_poly_S3_tobytes_fu_438_ap_ready),
    .msg_address0(grp_poly_S3_tobytes_fu_438_msg_address0),
    .msg_ce0(grp_poly_S3_tobytes_fu_438_msg_ce0),
    .msg_we0(grp_poly_S3_tobytes_fu_438_msg_we0),
    .msg_d0(grp_poly_S3_tobytes_fu_438_msg_d0),
    .msg_offset(grp_poly_S3_tobytes_fu_438_msg_offset),
    .a_coeffs_address0(grp_poly_S3_tobytes_fu_438_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_tobytes_fu_438_a_coeffs_ce0),
    .a_coeffs_q0(x4_coeffs_q0),
    .a_coeffs_address1(grp_poly_S3_tobytes_fu_438_a_coeffs_address1),
    .a_coeffs_ce1(grp_poly_S3_tobytes_fu_438_a_coeffs_ce1),
    .a_coeffs_q1(x4_coeffs_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Rq_mul_fu_431_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_state7) & (exitcond_i7_fu_523_p2 == 1'd1)))) begin
            grp_poly_Rq_mul_fu_431_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Rq_mul_fu_431_ap_ready == 1'b1)) begin
            grp_poly_Rq_mul_fu_431_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Rq_to_S3_fu_425_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_poly_Rq_to_S3_fu_425_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Rq_to_S3_fu_425_ap_ready == 1'b1)) begin
            grp_poly_Rq_to_S3_fu_425_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_frombytes_fu_415_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state12) | ((exitcond_i_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
            grp_poly_S3_frombytes_fu_415_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_frombytes_fu_415_ap_ready == 1'b1)) begin
            grp_poly_S3_frombytes_fu_415_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_mul_fu_408_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_poly_S3_mul_fu_408_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_mul_fu_408_ap_ready == 1'b1)) begin
            grp_poly_S3_mul_fu_408_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_tobytes_fu_438_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state34) & (exitcond_i5_fu_968_p2 == 1'd1)))) begin
            grp_poly_S3_tobytes_fu_438_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_tobytes_fu_438_ap_ready == 1'b1)) begin
            grp_poly_S3_tobytes_fu_438_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Sq_frombytes_1_fu_393_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state24) & (exitcond_fu_751_p2 == 1'd1))) begin
            grp_poly_Sq_frombytes_1_fu_393_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Sq_frombytes_1_fu_393_ap_ready == 1'b1)) begin
            grp_poly_Sq_frombytes_1_fu_393_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Sq_frombytes_fu_400_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_poly_Sq_frombytes_fu_400_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Sq_frombytes_fu_400_ap_ready == 1'b1)) begin
            grp_poly_Sq_frombytes_fu_400_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_i1_reg_292 <= i_14_reg_1050;
    end else if (((grp_poly_S3_tobytes_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        i_i1_reg_292 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_i2_reg_315 <= i_15_reg_1078;
    end else if (((1'b1 == ap_CS_fsm_state18) & (exitcond_i1_fu_559_p2 == 1'd1))) begin
        i_i2_reg_315 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i_i3_reg_348 <= i_18_reg_1133;
    end else if (((1'b1 == ap_CS_fsm_state28) & (grp_poly_Rq_mul_fu_431_ap_done == 1'b1))) begin
        i_i3_reg_348 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (exitcond_i3_fu_784_p2 == 1'd1))) begin
        i_i4_reg_359 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        i_i4_reg_359 <= i_19_reg_1147;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        i_i5_reg_382 <= i_20_reg_1169;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        i_i5_reg_382 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_i6_reg_269 <= i_13_reg_1037;
    end else if (((grp_poly_S3_frombytes_fu_415_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_i6_reg_269 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (exitcond_i2_fu_698_p2 == 1'd1))) begin
        i_i_i_reg_326 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        i_i_i_reg_326 <= i_16_reg_1096;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_i_reg_258 <= i_12_reg_1019;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_i_reg_258 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i_i_fu_715_p2 == 1'd1))) begin
        i_reg_337 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        i_reg_337 <= i_17_reg_1109;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        m1_i_reg_303 <= m1_fu_692_p2;
    end else if (((grp_poly_S3_tobytes_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        m1_i_reg_303 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p1_i_reg_280 <= p1_fu_674_p2;
    end else if (((grp_poly_S3_tobytes_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        p1_i_reg_280 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (exitcond_i3_fu_784_p2 == 1'd1))) begin
        t_i_reg_370 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        t_i_reg_370 <= t_2_fu_913_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_i_reg_247 <= phitmp_fu_517_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_i_reg_247 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_751_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        b_coeffs_addr_4_reg_1114 <= tmp_s_fu_763_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        fail_reg_1162 <= fail_fu_963_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_12_reg_1019 <= i_12_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_13_reg_1037 <= i_13_fu_529_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_14_reg_1050 <= i_14_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_15_reg_1078 <= i_15_fu_704_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_16_reg_1096 <= i_16_fu_721_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_17_reg_1109 <= i_17_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        i_18_reg_1133 <= i_18_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_19_reg_1147 <= i_19_fu_822_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        i_20_reg_1169 <= i_20_fu_974_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_fu_715_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        liftm_coeffs_addr_2_reg_1101 <= tmp_i_i_fu_727_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i7_fu_523_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        liftm_coeffs_addr_reg_1042 <= tmp_i8_fu_535_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i3_fu_784_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        r_coeffs_addr_25_reg_1138 <= tmp_i3_fu_796_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i5_fu_968_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        r_coeffs_addr_27_reg_1174 <= tmp_i5_fu_980_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond_i1_fu_559_p2 == 1'd1))) begin
        tmp_209_reg_1060 <= tmp_211_i_fu_652_p2[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i2_fu_698_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        tmp_i2_reg_1083[9 : 0] <= tmp_i2_fu_710_p1[9 : 0];
    end
end

always @ (*) begin
    if ((((grp_poly_S3_tobytes_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_poly_S3_tobytes_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_poly_Rq_mul_fu_431_b_coeffs_q0 = x3_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_poly_Rq_mul_fu_431_b_coeffs_q0 = x2_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_431_b_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_poly_Rq_mul_fu_431_r_coeffs_q0 = x4_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_poly_Rq_mul_fu_431_r_coeffs_q0 = x3_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_431_r_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_poly_S3_frombytes_fu_415_msg_offset = 10'd136;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_poly_S3_frombytes_fu_415_msg_offset = 10'd0;
    end else begin
        grp_poly_S3_frombytes_fu_415_msg_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_poly_S3_tobytes_fu_438_msg_offset = 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_poly_S3_tobytes_fu_438_msg_offset = 9'd136;
    end else begin
        grp_poly_S3_tobytes_fu_438_msg_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17))) begin
        rm_ce0 = grp_poly_S3_tobytes_fu_438_msg_ce0;
    end else begin
        rm_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17))) begin
        rm_we0 = grp_poly_S3_tobytes_fu_438_msg_we0;
    end else begin
        rm_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        secretkey_address0 = grp_poly_S3_frombytes_fu_415_msg_address0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        secretkey_address0 = grp_poly_Sq_frombytes_1_fu_393_a_address0;
    end else begin
        secretkey_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        secretkey_ce0 = grp_poly_S3_frombytes_fu_415_msg_ce0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        secretkey_ce0 = grp_poly_Sq_frombytes_1_fu_393_a_ce0;
    end else begin
        secretkey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        secretkey_ce1 = grp_poly_Sq_frombytes_1_fu_393_a_ce1;
    end else begin
        secretkey_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        x1_coeffs_address0 = b_coeffs_addr_4_reg_1114;
    end else if (((exitcond_i_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        x1_coeffs_address0 = b_coeffs_addr_reg_1010;
    end else if (((exitcond_i_fu_474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        x1_coeffs_address0 = tmp_184_i_fu_486_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        x1_coeffs_address0 = 64'd676;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state28))) begin
        x1_coeffs_address0 = grp_poly_Rq_mul_fu_431_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_address0 = grp_poly_Sq_frombytes_fu_400_r_coeffs_address0;
    end else begin
        x1_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        x1_coeffs_address1 = tmp_s_fu_763_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        x1_coeffs_address1 = 64'd676;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_address1 = grp_poly_Sq_frombytes_fu_400_r_coeffs_address1;
    end else begin
        x1_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state25) | ((exitcond_i_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((exitcond_i_fu_474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        x1_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state28))) begin
        x1_coeffs_ce0 = grp_poly_Rq_mul_fu_431_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_ce0 = grp_poly_Sq_frombytes_fu_400_r_coeffs_ce0;
    end else begin
        x1_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state5))) begin
        x1_coeffs_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_ce1 = grp_poly_Sq_frombytes_fu_400_r_coeffs_ce1;
    end else begin
        x1_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        x1_coeffs_d0 = tmp_196_cast_fu_779_p1;
    end else if (((exitcond_i_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        x1_coeffs_d0 = tmp_183_i_cast_fu_497_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        x1_coeffs_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_d0 = grp_poly_Sq_frombytes_fu_400_r_coeffs_d0;
    end else begin
        x1_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        x1_coeffs_d1 = tmp_185_i_fu_510_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_d1 = grp_poly_Sq_frombytes_fu_400_r_coeffs_d1;
    end else begin
        x1_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state25) | ((exitcond_i_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        x1_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_we0 = grp_poly_Sq_frombytes_fu_400_r_coeffs_we0;
    end else begin
        x1_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        x1_coeffs_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_we1 = grp_poly_Sq_frombytes_fu_400_r_coeffs_we1;
    end else begin
        x1_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        x2_coeffs_address0 = tmp_s_fu_763_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        x2_coeffs_address0 = liftm_coeffs_addr_2_reg_1101;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        x2_coeffs_address0 = tmp_i_i_fu_727_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        x2_coeffs_address0 = tmp_i2_reg_1083;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x2_coeffs_address0 = liftm_coeffs_addr_reg_1042;
    end else if (((exitcond_i7_fu_523_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        x2_coeffs_address0 = tmp_i8_fu_535_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x2_coeffs_address0 = grp_poly_Rq_mul_fu_431_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_address0 = grp_poly_Rq_to_S3_fu_425_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_address0 = grp_poly_S3_frombytes_fu_415_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x2_coeffs_address0 = grp_poly_S3_mul_fu_408_a_coeffs_address0;
    end else begin
        x2_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_address1 = grp_poly_Rq_to_S3_fu_425_r_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_address1 = grp_poly_S3_frombytes_fu_415_r_coeffs_address1;
    end else begin
        x2_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | ((exitcond_i7_fu_523_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        x2_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x2_coeffs_ce0 = grp_poly_Rq_mul_fu_431_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_ce0 = grp_poly_Rq_to_S3_fu_425_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_ce0 = grp_poly_S3_frombytes_fu_415_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x2_coeffs_ce0 = grp_poly_S3_mul_fu_408_a_coeffs_ce0;
    end else begin
        x2_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_ce1 = grp_poly_Rq_to_S3_fu_425_r_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_ce1 = grp_poly_S3_frombytes_fu_415_r_coeffs_ce1;
    end else begin
        x2_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        x2_coeffs_d0 = tmp_3_i_i_fu_742_p3;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        x2_coeffs_d0 = x4_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x2_coeffs_d0 = tmp_3_i_fu_550_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_d0 = grp_poly_Rq_to_S3_fu_425_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_d0 = grp_poly_S3_frombytes_fu_415_r_coeffs_d0;
    end else begin
        x2_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_d1 = grp_poly_Rq_to_S3_fu_425_r_coeffs_d1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_d1 = grp_poly_S3_frombytes_fu_415_r_coeffs_d1;
    end else begin
        x2_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state8))) begin
        x2_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_we0 = grp_poly_Rq_to_S3_fu_425_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_we0 = grp_poly_S3_frombytes_fu_415_r_coeffs_we0;
    end else begin
        x2_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_we1 = grp_poly_Rq_to_S3_fu_425_r_coeffs_we1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_we1 = grp_poly_S3_frombytes_fu_415_r_coeffs_we1;
    end else begin
        x2_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        x3_coeffs_address0 = grp_poly_Rq_mul_fu_431_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_address0 = grp_poly_Rq_mul_fu_431_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x3_coeffs_address0 = grp_poly_Rq_to_S3_fu_425_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_address0 = grp_poly_S3_frombytes_fu_415_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x3_coeffs_address0 = grp_poly_S3_mul_fu_408_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_address0 = grp_poly_Sq_frombytes_1_fu_393_r_coeffs_address0;
    end else begin
        x3_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_address1 = grp_poly_S3_frombytes_fu_415_r_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_address1 = grp_poly_Sq_frombytes_1_fu_393_r_coeffs_address1;
    end else begin
        x3_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        x3_coeffs_ce0 = grp_poly_Rq_mul_fu_431_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_ce0 = grp_poly_Rq_mul_fu_431_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x3_coeffs_ce0 = grp_poly_Rq_to_S3_fu_425_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_ce0 = grp_poly_S3_frombytes_fu_415_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x3_coeffs_ce0 = grp_poly_S3_mul_fu_408_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_ce0 = grp_poly_Sq_frombytes_1_fu_393_r_coeffs_ce0;
    end else begin
        x3_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_ce1 = grp_poly_S3_frombytes_fu_415_r_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_ce1 = grp_poly_Sq_frombytes_1_fu_393_r_coeffs_ce1;
    end else begin
        x3_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_d0 = grp_poly_Rq_mul_fu_431_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_d0 = grp_poly_S3_frombytes_fu_415_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_d0 = grp_poly_Sq_frombytes_1_fu_393_r_coeffs_d0;
    end else begin
        x3_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_d1 = grp_poly_S3_frombytes_fu_415_r_coeffs_d1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_d1 = grp_poly_Sq_frombytes_1_fu_393_r_coeffs_d1;
    end else begin
        x3_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_we0 = grp_poly_Rq_mul_fu_431_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_we0 = grp_poly_S3_frombytes_fu_415_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_we0 = grp_poly_Sq_frombytes_1_fu_393_r_coeffs_we0;
    end else begin
        x3_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_we1 = grp_poly_S3_frombytes_fu_415_r_coeffs_we1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x3_coeffs_we1 = grp_poly_Sq_frombytes_1_fu_393_r_coeffs_we1;
    end else begin
        x3_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        x4_coeffs_address0 = r_coeffs_addr_27_reg_1174;
    end else if (((exitcond_i5_fu_968_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        x4_coeffs_address0 = tmp_i5_fu_980_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        x4_coeffs_address0 = tmp_i3_fu_796_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        x4_coeffs_address0 = tmp_i2_fu_710_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        x4_coeffs_address0 = tmp_213_i_fu_571_p1;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17))) begin
        x4_coeffs_address0 = grp_poly_S3_tobytes_fu_438_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_431_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_address0 = grp_poly_S3_mul_fu_408_r_coeffs_address0;
    end else begin
        x4_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_i4_fu_816_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        x4_coeffs_address1 = tmp_202_i_fu_828_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        x4_coeffs_address1 = r_coeffs_addr_25_reg_1138;
    end else if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state31) & (exitcond_i4_fu_816_p2 == 1'd1)))) begin
        x4_coeffs_address1 = 64'd676;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17))) begin
        x4_coeffs_address1 = grp_poly_S3_tobytes_fu_438_a_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_address1 = grp_poly_S3_mul_fu_408_r_coeffs_address1;
    end else begin
        x4_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | ((exitcond_i5_fu_968_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34)))) begin
        x4_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17))) begin
        x4_coeffs_ce0 = grp_poly_S3_tobytes_fu_438_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_431_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_ce0 = grp_poly_S3_mul_fu_408_r_coeffs_ce0;
    end else begin
        x4_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state31) & (exitcond_i4_fu_816_p2 == 1'd1)) | ((exitcond_i4_fu_816_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)))) begin
        x4_coeffs_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state17))) begin
        x4_coeffs_ce1 = grp_poly_S3_tobytes_fu_438_a_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_ce1 = grp_poly_S3_mul_fu_408_r_coeffs_ce1;
    end else begin
        x4_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        x4_coeffs_d0 = tmp_8_i_cast_fu_1005_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        x4_coeffs_d0 = grp_poly_Rq_mul_fu_431_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_d0 = grp_poly_S3_mul_fu_408_r_coeffs_d0;
    end else begin
        x4_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        x4_coeffs_d1 = tmp_4_i_cast_fu_811_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_d1 = grp_poly_S3_mul_fu_408_r_coeffs_d1;
    end else begin
        x4_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        x4_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        x4_coeffs_we0 = grp_poly_Rq_mul_fu_431_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_we0 = grp_poly_S3_mul_fu_408_r_coeffs_we0;
    end else begin
        x4_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        x4_coeffs_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_we1 = grp_poly_S3_mul_fu_408_r_coeffs_we1;
    end else begin
        x4_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_poly_Sq_frombytes_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond_i_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_poly_S3_frombytes_fu_415_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond_i7_fu_523_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_poly_Rq_mul_fu_431_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_poly_Rq_to_S3_fu_425_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_poly_S3_frombytes_fu_415_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_poly_S3_mul_fu_408_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_poly_S3_tobytes_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (exitcond_i1_fu_559_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (exitcond_i2_fu_698_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i_i_fu_715_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (exitcond_fu_751_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_poly_Sq_frombytes_1_fu_393_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (grp_poly_Rq_mul_fu_431_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (exitcond_i3_fu_784_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (exitcond_i4_fu_816_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (exitcond_i5_fu_968_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_poly_S3_tobytes_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = fail_reg_1162;

assign b_coeffs_addr_reg_1010 = 64'd676;

assign ciphertext_address0 = grp_poly_Sq_frombytes_fu_400_a_address0;

assign ciphertext_address1 = grp_poly_Sq_frombytes_fu_400_a_address1;

assign ciphertext_ce0 = grp_poly_Sq_frombytes_fu_400_a_ce0;

assign ciphertext_ce1 = grp_poly_Sq_frombytes_fu_400_a_ce1;

assign exitcond_fu_751_p2 = ((i_reg_337 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_559_p2 = ((i_i1_reg_292 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_698_p2 = ((i_i2_reg_315 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_i3_fu_784_p2 = ((i_i3_reg_348 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_i4_fu_816_p2 = ((i_i4_reg_359 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_i5_fu_968_p2 = ((i_i5_reg_382 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_i7_fu_523_p2 = ((i_i6_reg_269 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_i_fu_474_p2 = ((i_i_reg_258 == 10'd676) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_715_p2 = ((i_i_i_reg_326 == 10'd677) ? 1'b1 : 1'b0);

assign fail_fu_963_p2 = (tmp_222_fu_955_p3 | tmp_209_reg_1060);

assign grp_fu_448_p4 = {{x2_coeffs_q0[11:1]}};

assign grp_fu_458_p2 = (11'd0 - grp_fu_448_p4);

assign grp_fu_464_p4 = {{x2_coeffs_q0[15:11]}};

assign grp_poly_Rq_mul_fu_431_ap_start = grp_poly_Rq_mul_fu_431_ap_start_reg;

assign grp_poly_Rq_to_S3_fu_425_ap_start = grp_poly_Rq_to_S3_fu_425_ap_start_reg;

assign grp_poly_S3_frombytes_fu_415_ap_start = grp_poly_S3_frombytes_fu_415_ap_start_reg;

assign grp_poly_S3_mul_fu_408_ap_start = grp_poly_S3_mul_fu_408_ap_start_reg;

assign grp_poly_S3_tobytes_fu_438_ap_start = grp_poly_S3_tobytes_fu_438_ap_start_reg;

assign grp_poly_Sq_frombytes_1_fu_393_ap_start = grp_poly_Sq_frombytes_1_fu_393_ap_start_reg;

assign grp_poly_Sq_frombytes_fu_400_ap_start = grp_poly_Sq_frombytes_fu_400_ap_start_reg;

assign i_12_fu_480_p2 = (i_i_reg_258 + 10'd1);

assign i_13_fu_529_p2 = (i_i6_reg_269 + 10'd1);

assign i_14_fu_565_p2 = (i_i1_reg_292 + 10'd1);

assign i_15_fu_704_p2 = (i_i2_reg_315 + 10'd1);

assign i_16_fu_721_p2 = (i_i_i_reg_326 + 10'd1);

assign i_17_fu_757_p2 = (i_reg_337 + 10'd1);

assign i_18_fu_790_p2 = (i_i3_reg_348 + 10'd1);

assign i_19_fu_822_p2 = (i_i4_reg_359 + 10'd1);

assign i_20_fu_974_p2 = (i_i5_reg_382 + 10'd1);

assign m1_fu_692_p2 = (tmp_216_i_cast_fu_688_p1 + m1_i_reg_303);

assign m1_i_cast9_fu_580_p1 = m1_i_reg_303;

assign p1_fu_674_p2 = (tmp_214_i_cast_fu_670_p1 + p1_i_reg_280);

assign p1_i_cast_fu_576_p1 = p1_i_reg_280;

assign phitmp_fu_517_p2 = (tmp_203_fu_506_p1 + tmp_202_fu_502_p1);

assign rm_address0 = grp_poly_S3_tobytes_fu_438_msg_address0;

assign rm_d0 = grp_poly_S3_tobytes_fu_438_msg_d0;

assign secretkey_address1 = grp_poly_Sq_frombytes_1_fu_393_a_address1;

assign t_2_fu_913_p3 = {{tmp_212_fu_903_p4}, {tmp_211_fu_897_p2}};

assign t_cast_fu_648_p1 = tmp_51_i_fu_640_p3;

assign t_fu_941_p3 = {{tmp_42_i_fu_931_p4}, {tmp_41_i_fu_925_p2}};

assign tmp_183_i_cast_fu_497_p1 = tmp_i_cast_fu_491_p2;

assign tmp_184_i_fu_486_p1 = i_i_reg_258;

assign tmp_185_i_fu_510_p2 = (x1_coeffs_q1 + x1_coeffs_q0);

assign tmp_194_fu_544_p2 = (tmp_205_fu_540_p1 | grp_fu_458_p2);

assign tmp_195_fu_769_p2 = (x1_coeffs_q1 - x2_coeffs_q0);

assign tmp_196_cast_fu_779_p1 = tmp_219_fu_775_p1;

assign tmp_197_fu_596_p2 = (p1_i_reg_280 + m1_i_reg_303);

assign tmp_198_fu_608_p2 = (tmp_197_fu_596_p2 ^ 10'd254);

assign tmp_199_fu_614_p2 = (tmp_i1_fu_584_p2 | tmp_198_fu_608_p2);

assign tmp_201_fu_736_p2 = (tmp_218_fu_732_p1 | grp_fu_458_p2);

assign tmp_202_fu_502_p1 = x1_coeffs_q1[10:0];

assign tmp_202_i_fu_828_p1 = i_i4_reg_359;

assign tmp_203_fu_506_p1 = x1_coeffs_q0[10:0];

assign tmp_204_i_cast_fu_841_p2 = (11'd1 + tmp_223_fu_833_p1);

assign tmp_205_fu_540_p1 = x2_coeffs_q0[10:0];

assign tmp_206_fu_847_p2 = (3'd1 + tmp_224_fu_837_p1);

assign tmp_206_i_fu_853_p2 = (3'd2 + tmp_224_fu_837_p1);

assign tmp_207_fu_859_p2 = (tmp_206_i_fu_853_p2 | tmp_206_fu_847_p2);

assign tmp_208_fu_620_p3 = tmp_48_i_fu_602_p2[32'd10];

assign tmp_210_fu_873_p4 = {{tmp_204_i_cast_fu_841_p2[10:3]}};

assign tmp_211_fu_897_p2 = (tmp_fu_883_p4 | tmp_226_fu_893_p1);

assign tmp_211_i_fu_652_p2 = (33'd0 - t_cast_fu_648_p1);

assign tmp_212_fu_903_p4 = {{t_i_reg_370[63:11]}};

assign tmp_213_fu_666_p1 = x4_coeffs_q0[0:0];

assign tmp_213_i_fu_571_p1 = i_i1_reg_292;

assign tmp_214_fu_985_p4 = {{x4_coeffs_q0[11:10]}};

assign tmp_214_i_cast_fu_670_p1 = tmp_213_fu_666_p1;

assign tmp_216_i_cast_fu_688_p1 = tmp_217_fu_680_p3;

assign tmp_217_fu_680_p3 = x4_coeffs_q0[32'd1];

assign tmp_218_fu_732_p1 = x2_coeffs_q0[10:0];

assign tmp_219_fu_775_p1 = tmp_195_fu_769_p2[10:0];

assign tmp_220_fu_807_p1 = tmp_i3_42_fu_801_p2[10:0];

assign tmp_221_fu_921_p1 = t_i_reg_370[15:0];

assign tmp_222_fu_955_p3 = tmp_i4_fu_949_p2[32'd63];

assign tmp_223_fu_833_p1 = x4_coeffs_q1[10:0];

assign tmp_224_fu_837_p1 = x4_coeffs_q1[2:0];

assign tmp_225_fu_865_p3 = tmp_207_fu_859_p2[32'd2];

assign tmp_226_fu_893_p1 = t_i_reg_370[10:0];

assign tmp_227_fu_995_p1 = x4_coeffs_q0[1:0];

assign tmp_3_i_fu_550_p3 = {{grp_fu_464_p4}, {tmp_194_fu_544_p2}};

assign tmp_3_i_i_fu_742_p3 = {{grp_fu_464_p4}, {tmp_201_fu_736_p2}};

assign tmp_41_i_fu_925_p2 = (x4_coeffs_q1 | tmp_221_fu_921_p1);

assign tmp_42_i_fu_931_p4 = {{t_i_reg_370[63:16]}};

assign tmp_47_i_fu_590_p2 = (m1_i_cast9_fu_580_p1 + p1_i_cast_fu_576_p1);

assign tmp_48_i_fu_602_p2 = (tmp_47_i_fu_590_p2 ^ 11'd254);

assign tmp_49_i_cast_fu_636_p1 = tmp_49_i_fu_628_p3;

assign tmp_49_i_fu_628_p3 = {{tmp_208_fu_620_p3}, {tmp_199_fu_614_p2}};

assign tmp_4_i_cast_fu_811_p1 = tmp_220_fu_807_p1;

assign tmp_51_i_fu_640_p3 = {{16'd0}, {tmp_49_i_cast_fu_636_p1}};

assign tmp_7_i_cast_fu_999_p2 = (tmp_227_fu_995_p1 ^ tmp_214_fu_985_p4);

assign tmp_8_i_cast_fu_1005_p1 = tmp_7_i_cast_fu_999_p2;

assign tmp_fu_883_p4 = {{{tmp_210_fu_873_p4}, {tmp_225_fu_865_p3}}, {2'd0}};

assign tmp_i1_fu_584_p2 = (p1_i_reg_280 ^ m1_i_reg_303);

assign tmp_i2_fu_710_p1 = i_i2_reg_315;

assign tmp_i3_42_fu_801_p2 = (x4_coeffs_q0 - x4_coeffs_q1);

assign tmp_i3_fu_796_p1 = i_i3_reg_348;

assign tmp_i4_fu_949_p2 = (64'd0 - t_fu_941_p3);

assign tmp_i5_fu_980_p1 = i_i5_reg_382;

assign tmp_i8_fu_535_p1 = i_i6_reg_269;

assign tmp_i_cast_fu_491_p2 = (11'd0 - tmp_i_reg_247);

assign tmp_i_i_fu_727_p1 = i_i_i_reg_326;

assign tmp_s_fu_763_p1 = i_reg_337;

always @ (posedge ap_clk) begin
    tmp_i2_reg_1083[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //owcpa_dec
