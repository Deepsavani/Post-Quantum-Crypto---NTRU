// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mod3 (
        ap_ready,
        a,
        ap_return
);


output   ap_ready;
input  [7:0] a;
output  [15:0] ap_return;

wire   [3:0] tmp_fu_38_p4;
wire   [3:0] trunc_ln11_fu_52_p1;
wire   [4:0] zext_ln11_fu_56_p1;
wire   [4:0] zext_ln11_4_fu_48_p1;
wire   [4:0] r_fu_66_p2;
wire   [2:0] tmp_s_fu_72_p4;
wire   [1:0] trunc_ln12_6_fu_90_p4;
wire   [1:0] trunc_ln12_fu_86_p1;
wire   [1:0] add_ln12_fu_100_p2;
wire   [3:0] zext_ln12_fu_106_p1;
wire   [3:0] zext_ln12_2_fu_82_p1;
wire   [3:0] r_11_fu_110_p2;
wire   [1:0] tmp_19_fu_116_p4;
wire   [3:0] add_ln11_fu_60_p2;
wire   [1:0] trunc_ln13_5_fu_130_p4;
wire   [1:0] add_ln13_fu_140_p2;
wire   [2:0] zext_ln13_fu_146_p1;
wire   [2:0] zext_ln13_4_fu_126_p1;
wire   [2:0] r_12_fu_150_p2;
wire   [2:0] t_fu_156_p2;
wire   [0:0] tmp_8_fu_162_p3;
wire   [2:0] select_ln16_fu_170_p3;
wire   [2:0] and_ln18_fu_178_p2;
wire   [0:0] xor_ln18_4_fu_188_p2;
wire   [2:0] select_ln18_fu_194_p3;
wire   [2:0] and_ln18_1_fu_202_p2;
wire   [15:0] zext_ln18_fu_184_p1;
wire  signed [15:0] sext_ln18_fu_208_p1;

assign add_ln11_fu_60_p2 = (tmp_fu_38_p4 + trunc_ln11_fu_52_p1);

assign add_ln12_fu_100_p2 = (trunc_ln12_6_fu_90_p4 + trunc_ln12_fu_86_p1);

assign add_ln13_fu_140_p2 = (add_ln12_fu_100_p2 + trunc_ln13_5_fu_130_p4);

assign and_ln18_1_fu_202_p2 = (t_fu_156_p2 & select_ln18_fu_194_p3);

assign and_ln18_fu_178_p2 = (select_ln16_fu_170_p3 & r_12_fu_150_p2);

assign ap_ready = 1'b1;

assign ap_return = (zext_ln18_fu_184_p1 ^ sext_ln18_fu_208_p1);

assign r_11_fu_110_p2 = (zext_ln12_fu_106_p1 + zext_ln12_2_fu_82_p1);

assign r_12_fu_150_p2 = (zext_ln13_fu_146_p1 + zext_ln13_4_fu_126_p1);

assign r_fu_66_p2 = (zext_ln11_fu_56_p1 + zext_ln11_4_fu_48_p1);

assign select_ln16_fu_170_p3 = ((tmp_8_fu_162_p3[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign select_ln18_fu_194_p3 = ((xor_ln18_4_fu_188_p2[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign sext_ln18_fu_208_p1 = $signed(and_ln18_1_fu_202_p2);

assign t_fu_156_p2 = ($signed(3'd5) + $signed(r_12_fu_150_p2));

assign tmp_19_fu_116_p4 = {{r_11_fu_110_p2[3:2]}};

assign tmp_8_fu_162_p3 = t_fu_156_p2[32'd2];

assign tmp_fu_38_p4 = {{a[7:4]}};

assign tmp_s_fu_72_p4 = {{r_fu_66_p2[4:2]}};

assign trunc_ln11_fu_52_p1 = a[3:0];

assign trunc_ln12_6_fu_90_p4 = {{a[5:4]}};

assign trunc_ln12_fu_86_p1 = a[1:0];

assign trunc_ln13_5_fu_130_p4 = {{add_ln11_fu_60_p2[3:2]}};

assign xor_ln18_4_fu_188_p2 = (tmp_8_fu_162_p3 ^ 1'd1);

assign zext_ln11_4_fu_48_p1 = tmp_fu_38_p4;

assign zext_ln11_fu_56_p1 = trunc_ln11_fu_52_p1;

assign zext_ln12_2_fu_82_p1 = tmp_s_fu_72_p4;

assign zext_ln12_fu_106_p1 = add_ln12_fu_100_p2;

assign zext_ln13_4_fu_126_p1 = tmp_19_fu_116_p4;

assign zext_ln13_fu_146_p1 = add_ln13_fu_140_p2;

assign zext_ln18_fu_184_p1 = and_ln18_fu_178_p2;

endmodule //mod3
