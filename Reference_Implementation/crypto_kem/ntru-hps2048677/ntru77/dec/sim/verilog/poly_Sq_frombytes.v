// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module poly_Sq_frombytes (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        r_coeffs_address0,
        r_coeffs_ce0,
        r_coeffs_we0,
        r_coeffs_d0,
        r_coeffs_address1,
        r_coeffs_ce1,
        r_coeffs_we1,
        r_coeffs_d1,
        a_address0,
        a_ce0,
        a_q0,
        a_address1,
        a_ce1,
        a_q1
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] r_coeffs_address0;
output   r_coeffs_ce0;
output   r_coeffs_we0;
output  [15:0] r_coeffs_d0;
output  [9:0] r_coeffs_address1;
output   r_coeffs_ce1;
output   r_coeffs_we1;
output  [15:0] r_coeffs_d1;
output  [9:0] a_address0;
output   a_ce0;
input  [7:0] a_q0;
output  [9:0] a_address1;
output   a_ce1;
input  [7:0] a_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] r_coeffs_address0;
reg r_coeffs_ce0;
reg r_coeffs_we0;
reg[15:0] r_coeffs_d0;
reg[9:0] r_coeffs_address1;
reg r_coeffs_ce1;
reg r_coeffs_we1;
reg[15:0] r_coeffs_d1;
reg[9:0] a_address0;
reg a_ce0;
reg[9:0] a_address1;
reg a_ce1;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] add_ln53_fu_430_p2;
reg   [6:0] add_ln53_reg_973;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln53_fu_424_p2;
reg   [7:0] a_load_9_reg_993;
wire    ap_CS_fsm_state3;
wire   [9:0] shl_ln4_fu_479_p3;
reg   [9:0] shl_ln4_reg_1008;
wire    ap_CS_fsm_state4;
reg   [1:0] lshr_ln4_reg_1018;
wire   [6:0] grp_fu_414_p4;
reg   [6:0] lshr_ln5_reg_1033;
wire    ap_CS_fsm_state5;
reg   [0:0] tmp_reg_1048;
wire    ap_CS_fsm_state6;
wire   [9:0] add_ln55_4_fu_719_p2;
reg   [9:0] add_ln55_4_reg_1063;
wire    ap_CS_fsm_state7;
reg   [5:0] lshr_ln7_reg_1068;
wire    ap_CS_fsm_state9;
wire   [0:0] trunc_ln72_fu_885_p1;
reg   [0:0] trunc_ln72_reg_1093;
wire    ap_CS_fsm_state10;
wire   [5:0] trunc_ln75_fu_937_p1;
reg   [5:0] trunc_ln75_reg_1103;
reg   [6:0] i_0_reg_380;
wire    ap_CS_fsm_state8;
reg   [9:0] phi_mul_reg_392;
wire   [63:0] zext_ln55_fu_436_p1;
wire   [63:0] zext_ln55_5_fu_447_p1;
wire   [63:0] zext_ln56_fu_458_p1;
wire   [63:0] zext_ln55_7_fu_487_p1;
wire   [63:0] zext_ln56_3_fu_515_p1;
wire   [63:0] zext_ln57_fu_536_p1;
wire   [63:0] zext_ln57_5_fu_547_p1;
wire   [63:0] zext_ln57_6_fu_599_p1;
wire   [63:0] zext_ln58_fu_610_p1;
wire   [63:0] zext_ln59_fu_621_p1;
wire   [63:0] zext_ln58_3_fu_647_p1;
wire   [63:0] zext_ln59_3_fu_684_p1;
wire   [63:0] zext_ln60_fu_703_p1;
wire   [63:0] zext_ln60_5_fu_714_p1;
wire   [63:0] zext_ln60_6_fu_772_p1;
wire   [63:0] zext_ln61_fu_793_p1;
wire   [63:0] zext_ln62_fu_804_p1;
wire   [63:0] zext_ln61_3_fu_830_p1;
wire   [63:0] zext_ln62_3_fu_863_p1;
wire    ap_CS_fsm_state11;
wire   [15:0] zext_ln55_6_fu_474_p1;
wire   [15:0] zext_ln56_4_fu_504_p1;
wire   [15:0] zext_ln57_8_fu_589_p1;
wire   [15:0] zext_ln58_4_fu_637_p1;
wire   [15:0] zext_ln59_4_fu_674_p1;
wire   [15:0] zext_ln60_8_fu_762_p1;
wire   [15:0] zext_ln61_4_fu_820_p1;
wire   [15:0] zext_ln62_4_fu_853_p1;
wire   [15:0] zext_ln71_fu_880_p1;
wire   [15:0] zext_ln72_2_fu_932_p1;
wire   [15:0] zext_ln75_fu_948_p1;
wire   [15:0] zext_ln76_fu_965_p1;
wire   [9:0] add_ln55_fu_441_p2;
wire   [9:0] add_ln56_fu_452_p2;
wire   [2:0] trunc_ln55_fu_463_p1;
wire   [10:0] tmp_6_fu_467_p3;
wire   [5:0] trunc_ln56_fu_492_p1;
wire   [4:0] grp_fu_404_p4;
wire   [10:0] or_ln8_fu_496_p3;
wire   [9:0] or_ln56_fu_509_p2;
wire   [9:0] add_ln57_fu_530_p2;
wire   [9:0] add_ln57_1_fu_541_p2;
wire   [7:0] zext_ln57_7_fu_552_p1;
wire   [9:0] tmp_3_fu_567_p3;
wire   [9:0] shl_ln5_fu_555_p3;
wire   [0:0] trunc_ln57_fu_563_p1;
wire   [9:0] or_ln57_fu_575_p2;
wire   [10:0] or_ln57_1_fu_581_p3;
wire   [9:0] or_ln57_2_fu_594_p2;
wire   [9:0] add_ln58_fu_604_p2;
wire   [9:0] add_ln59_fu_615_p2;
wire   [3:0] trunc_ln58_fu_626_p1;
wire   [10:0] or_ln9_fu_630_p3;
wire   [9:0] or_ln58_fu_642_p2;
wire   [6:0] trunc_ln59_fu_662_p1;
wire   [3:0] lshr_ln6_fu_652_p4;
wire   [10:0] or_ln1_fu_666_p3;
wire   [9:0] or_ln59_fu_679_p2;
wire   [9:0] add_ln60_fu_697_p2;
wire   [9:0] add_ln60_1_fu_708_p2;
wire   [7:0] zext_ln60_7_fu_725_p1;
wire   [8:0] tmp_5_fu_740_p3;
wire   [8:0] shl_ln6_fu_728_p3;
wire   [1:0] trunc_ln60_fu_736_p1;
wire   [8:0] or_ln60_fu_748_p2;
wire   [10:0] or_ln60_1_fu_754_p3;
wire   [9:0] or_ln60_2_fu_767_p2;
wire   [9:0] add_ln61_fu_787_p2;
wire   [9:0] add_ln62_fu_798_p2;
wire   [4:0] trunc_ln61_fu_809_p1;
wire   [10:0] or_ln2_fu_813_p3;
wire   [9:0] or_ln61_fu_825_p2;
wire   [2:0] lshr_ln8_fu_835_p4;
wire   [10:0] or_ln3_fu_845_p3;
wire   [9:0] or_ln62_fu_858_p2;
wire   [3:0] trunc_ln71_fu_868_p1;
wire   [10:0] or_ln_fu_872_p3;
wire   [1:0] lshr_ln1_fu_889_p4;
wire   [7:0] zext_ln72_fu_899_p1;
wire   [9:0] tmp_s_fu_911_p3;
wire   [9:0] shl_ln_fu_903_p3;
wire   [9:0] or_ln72_fu_919_p2;
wire   [10:0] or_ln72_1_fu_925_p3;
wire   [10:0] or_ln7_fu_941_p3;
wire   [2:0] trunc_ln76_fu_953_p1;
wire   [10:0] tmp_4_fu_957_p3;
reg   [10:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_0_reg_380 <= add_ln53_reg_973;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_380 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        phi_mul_reg_392 <= add_ln55_4_reg_1063;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_mul_reg_392 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        a_load_9_reg_993 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln53_reg_973 <= add_ln53_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln55_4_reg_1063 <= add_ln55_4_fu_719_p2;
        lshr_ln7_reg_1068 <= {{a_q0[7:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lshr_ln4_reg_1018 <= {{a_q0[7:6]}};
        shl_ln4_reg_1008[9 : 3] <= shl_ln4_fu_479_p3[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lshr_ln5_reg_1033 <= {{a_q0[7:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_reg_1048 <= a_q0[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        trunc_ln72_reg_1093 <= trunc_ln72_fu_885_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        trunc_ln75_reg_1103 <= trunc_ln75_fu_937_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_address0 = 64'd924;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        a_address0 = 64'd927;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        a_address0 = zext_ln62_fu_804_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_address0 = zext_ln60_5_fu_714_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address0 = zext_ln59_fu_621_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        a_address0 = zext_ln57_5_fu_547_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_address0 = zext_ln56_fu_458_p1;
    end else if (((icmp_ln53_fu_424_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        a_address0 = 64'd928;
    end else if (((icmp_ln53_fu_424_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        a_address0 = zext_ln55_fu_436_p1;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        a_address1 = 64'd925;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        a_address1 = 64'd926;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        a_address1 = zext_ln61_fu_793_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_address1 = zext_ln60_fu_703_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address1 = zext_ln58_fu_610_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        a_address1 = zext_ln57_fu_536_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_address1 = zext_ln55_5_fu_447_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        a_address1 = 64'd929;
    end else begin
        a_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((icmp_ln53_fu_424_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln53_fu_424_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        a_ce1 = 1'b1;
    end else begin
        a_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        r_coeffs_address0 = 64'd673;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_coeffs_address0 = 64'd675;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_coeffs_address0 = zext_ln61_3_fu_830_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_coeffs_address0 = zext_ln59_3_fu_684_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_coeffs_address0 = zext_ln57_6_fu_599_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_coeffs_address0 = zext_ln55_7_fu_487_p1;
    end else begin
        r_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        r_coeffs_address1 = 64'd672;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_coeffs_address1 = 64'd674;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_coeffs_address1 = zext_ln62_3_fu_863_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_coeffs_address1 = zext_ln60_6_fu_772_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_coeffs_address1 = zext_ln58_3_fu_647_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_coeffs_address1 = zext_ln56_3_fu_515_p1;
    end else begin
        r_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        r_coeffs_ce0 = 1'b1;
    end else begin
        r_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        r_coeffs_ce1 = 1'b1;
    end else begin
        r_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        r_coeffs_d0 = zext_ln75_fu_948_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_coeffs_d0 = zext_ln71_fu_880_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_coeffs_d0 = zext_ln61_4_fu_820_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_coeffs_d0 = zext_ln59_4_fu_674_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_coeffs_d0 = zext_ln57_8_fu_589_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_coeffs_d0 = zext_ln55_6_fu_474_p1;
    end else begin
        r_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        r_coeffs_d1 = zext_ln76_fu_965_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_coeffs_d1 = zext_ln72_2_fu_932_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_coeffs_d1 = zext_ln62_4_fu_853_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_coeffs_d1 = zext_ln60_8_fu_762_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_coeffs_d1 = zext_ln58_4_fu_637_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_coeffs_d1 = zext_ln56_4_fu_504_p1;
    end else begin
        r_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        r_coeffs_we0 = 1'b1;
    end else begin
        r_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        r_coeffs_we1 = 1'b1;
    end else begin
        r_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln53_fu_424_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln53_fu_430_p2 = (i_0_reg_380 + 7'd1);

assign add_ln55_4_fu_719_p2 = (10'd11 + phi_mul_reg_392);

assign add_ln55_fu_441_p2 = (10'd1 + phi_mul_reg_392);

assign add_ln56_fu_452_p2 = (10'd2 + phi_mul_reg_392);

assign add_ln57_1_fu_541_p2 = (10'd4 + phi_mul_reg_392);

assign add_ln57_fu_530_p2 = (10'd3 + phi_mul_reg_392);

assign add_ln58_fu_604_p2 = (10'd5 + phi_mul_reg_392);

assign add_ln59_fu_615_p2 = (10'd6 + phi_mul_reg_392);

assign add_ln60_1_fu_708_p2 = (10'd8 + phi_mul_reg_392);

assign add_ln60_fu_697_p2 = (10'd7 + phi_mul_reg_392);

assign add_ln61_fu_787_p2 = (10'd9 + phi_mul_reg_392);

assign add_ln62_fu_798_p2 = (10'd10 + phi_mul_reg_392);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_404_p4 = {{a_q1[7:3]}};

assign grp_fu_414_p4 = {{a_q0[7:1]}};

assign icmp_ln53_fu_424_p2 = ((i_0_reg_380 == 7'd84) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_889_p4 = {{a_q1[7:6]}};

assign lshr_ln6_fu_652_p4 = {{a_q1[7:4]}};

assign lshr_ln8_fu_835_p4 = {{a_q1[7:5]}};

assign or_ln1_fu_666_p3 = {{trunc_ln59_fu_662_p1}, {lshr_ln6_fu_652_p4}};

assign or_ln2_fu_813_p3 = {{trunc_ln61_fu_809_p1}, {lshr_ln7_reg_1068}};

assign or_ln3_fu_845_p3 = {{a_q0}, {lshr_ln8_fu_835_p4}};

assign or_ln56_fu_509_p2 = (shl_ln4_fu_479_p3 | 10'd1);

assign or_ln57_1_fu_581_p3 = {{trunc_ln57_fu_563_p1}, {or_ln57_fu_575_p2}};

assign or_ln57_2_fu_594_p2 = (shl_ln4_reg_1008 | 10'd2);

assign or_ln57_fu_575_p2 = (tmp_3_fu_567_p3 | shl_ln5_fu_555_p3);

assign or_ln58_fu_642_p2 = (shl_ln4_reg_1008 | 10'd3);

assign or_ln59_fu_679_p2 = (shl_ln4_reg_1008 | 10'd4);

assign or_ln60_1_fu_754_p3 = {{trunc_ln60_fu_736_p1}, {or_ln60_fu_748_p2}};

assign or_ln60_2_fu_767_p2 = (shl_ln4_reg_1008 | 10'd5);

assign or_ln60_fu_748_p2 = (tmp_5_fu_740_p3 | shl_ln6_fu_728_p3);

assign or_ln61_fu_825_p2 = (shl_ln4_reg_1008 | 10'd6);

assign or_ln62_fu_858_p2 = (shl_ln4_reg_1008 | 10'd7);

assign or_ln72_1_fu_925_p3 = {{trunc_ln72_reg_1093}, {or_ln72_fu_919_p2}};

assign or_ln72_fu_919_p2 = (tmp_s_fu_911_p3 | shl_ln_fu_903_p3);

assign or_ln7_fu_941_p3 = {{trunc_ln75_reg_1103}, {grp_fu_404_p4}};

assign or_ln8_fu_496_p3 = {{trunc_ln56_fu_492_p1}, {grp_fu_404_p4}};

assign or_ln9_fu_630_p3 = {{trunc_ln58_fu_626_p1}, {lshr_ln5_reg_1033}};

assign or_ln_fu_872_p3 = {{trunc_ln71_fu_868_p1}, {grp_fu_414_p4}};

assign shl_ln4_fu_479_p3 = {{i_0_reg_380}, {3'd0}};

assign shl_ln5_fu_555_p3 = {{a_q1}, {2'd0}};

assign shl_ln6_fu_728_p3 = {{a_q1}, {1'd0}};

assign shl_ln_fu_903_p3 = {{a_q0}, {2'd0}};

assign tmp_3_fu_567_p3 = {{2'd0}, {zext_ln57_7_fu_552_p1}};

assign tmp_4_fu_957_p3 = {{trunc_ln76_fu_953_p1}, {a_q0}};

assign tmp_5_fu_740_p3 = {{1'd0}, {zext_ln60_7_fu_725_p1}};

assign tmp_6_fu_467_p3 = {{trunc_ln55_fu_463_p1}, {a_load_9_reg_993}};

assign tmp_s_fu_911_p3 = {{2'd0}, {zext_ln72_fu_899_p1}};

assign trunc_ln55_fu_463_p1 = a_q1[2:0];

assign trunc_ln56_fu_492_p1 = a_q0[5:0];

assign trunc_ln57_fu_563_p1 = a_q0[0:0];

assign trunc_ln58_fu_626_p1 = a_q1[3:0];

assign trunc_ln59_fu_662_p1 = a_q0[6:0];

assign trunc_ln60_fu_736_p1 = a_q0[1:0];

assign trunc_ln61_fu_809_p1 = a_q1[4:0];

assign trunc_ln71_fu_868_p1 = a_q1[3:0];

assign trunc_ln72_fu_885_p1 = a_q0[0:0];

assign trunc_ln75_fu_937_p1 = a_q1[5:0];

assign trunc_ln76_fu_953_p1 = a_q1[2:0];

assign zext_ln55_5_fu_447_p1 = add_ln55_fu_441_p2;

assign zext_ln55_6_fu_474_p1 = tmp_6_fu_467_p3;

assign zext_ln55_7_fu_487_p1 = shl_ln4_fu_479_p3;

assign zext_ln55_fu_436_p1 = phi_mul_reg_392;

assign zext_ln56_3_fu_515_p1 = or_ln56_fu_509_p2;

assign zext_ln56_4_fu_504_p1 = or_ln8_fu_496_p3;

assign zext_ln56_fu_458_p1 = add_ln56_fu_452_p2;

assign zext_ln57_5_fu_547_p1 = add_ln57_1_fu_541_p2;

assign zext_ln57_6_fu_599_p1 = or_ln57_2_fu_594_p2;

assign zext_ln57_7_fu_552_p1 = lshr_ln4_reg_1018;

assign zext_ln57_8_fu_589_p1 = or_ln57_1_fu_581_p3;

assign zext_ln57_fu_536_p1 = add_ln57_fu_530_p2;

assign zext_ln58_3_fu_647_p1 = or_ln58_fu_642_p2;

assign zext_ln58_4_fu_637_p1 = or_ln9_fu_630_p3;

assign zext_ln58_fu_610_p1 = add_ln58_fu_604_p2;

assign zext_ln59_3_fu_684_p1 = or_ln59_fu_679_p2;

assign zext_ln59_4_fu_674_p1 = or_ln1_fu_666_p3;

assign zext_ln59_fu_621_p1 = add_ln59_fu_615_p2;

assign zext_ln60_5_fu_714_p1 = add_ln60_1_fu_708_p2;

assign zext_ln60_6_fu_772_p1 = or_ln60_2_fu_767_p2;

assign zext_ln60_7_fu_725_p1 = tmp_reg_1048;

assign zext_ln60_8_fu_762_p1 = or_ln60_1_fu_754_p3;

assign zext_ln60_fu_703_p1 = add_ln60_fu_697_p2;

assign zext_ln61_3_fu_830_p1 = or_ln61_fu_825_p2;

assign zext_ln61_4_fu_820_p1 = or_ln2_fu_813_p3;

assign zext_ln61_fu_793_p1 = add_ln61_fu_787_p2;

assign zext_ln62_3_fu_863_p1 = or_ln62_fu_858_p2;

assign zext_ln62_4_fu_853_p1 = or_ln3_fu_845_p3;

assign zext_ln62_fu_804_p1 = add_ln62_fu_798_p2;

assign zext_ln71_fu_880_p1 = or_ln_fu_872_p3;

assign zext_ln72_2_fu_932_p1 = or_ln72_1_fu_925_p3;

assign zext_ln72_fu_899_p1 = lshr_ln1_fu_889_p4;

assign zext_ln75_fu_948_p1 = or_ln7_fu_941_p3;

assign zext_ln76_fu_965_p1 = tmp_4_fu_957_p3;

always @ (posedge ap_clk) begin
    shl_ln4_reg_1008[2:0] <= 3'b000;
end

endmodule //poly_Sq_frombytes
