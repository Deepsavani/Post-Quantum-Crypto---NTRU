// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _poly_S3_tobytes_HH_
#define _poly_S3_tobytes_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct poly_S3_tobytes : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > msg_address0;
    sc_out< sc_logic > msg_ce0;
    sc_out< sc_logic > msg_we0;
    sc_out< sc_lv<8> > msg_d0;
    sc_in< sc_lv<9> > msg_offset;
    sc_out< sc_lv<10> > a_coeffs_address0;
    sc_out< sc_logic > a_coeffs_ce0;
    sc_in< sc_lv<16> > a_coeffs_q0;
    sc_out< sc_lv<10> > a_coeffs_address1;
    sc_out< sc_logic > a_coeffs_ce1;
    sc_in< sc_lv<16> > a_coeffs_q1;


    // Module declarations
    poly_S3_tobytes(sc_module_name name);
    SC_HAS_PROCESS(poly_S3_tobytes);

    ~poly_S3_tobytes();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > i_4_fu_147_p2;
    sc_signal< sc_lv<8> > i_4_reg_342;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > tmp_fu_161_p2;
    sc_signal< sc_lv<10> > tmp_reg_347;
    sc_signal< sc_lv<1> > exitcond_fu_141_p2;
    sc_signal< sc_lv<8> > c_1_fu_215_p2;
    sc_signal< sc_lv<8> > c_1_reg_369;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > sum_fu_235_p2;
    sc_signal< sc_lv<9> > sum_reg_380;
    sc_signal< sc_lv<8> > c_2_fu_254_p2;
    sc_signal< sc_lv<8> > c_2_reg_385;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > c_3_fu_288_p2;
    sc_signal< sc_lv<8> > c_3_reg_401;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > tmp_138_fu_294_p1;
    sc_signal< sc_lv<8> > tmp_138_reg_407;
    sc_signal< sc_lv<8> > i_reg_125;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > tmp_115_fu_173_p1;
    sc_signal< sc_lv<64> > tmp_118_fu_184_p1;
    sc_signal< sc_lv<64> > tmp_122_fu_226_p1;
    sc_signal< sc_lv<64> > tmp_125_fu_265_p1;
    sc_signal< sc_lv<64> > tmp_127_fu_270_p1;
    sc_signal< sc_lv<64> > sum_cast_fu_314_p1;
    sc_signal< sc_lv<64> > sum2_cast_fu_328_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > c_4_fu_308_p2;
    sc_signal< sc_lv<8> > tmp_121_fu_318_p1;
    sc_signal< sc_lv<10> > p_shl7_fu_153_p3;
    sc_signal< sc_lv<10> > i_cast1_fu_137_p1;
    sc_signal< sc_lv<10> > tmp_s_fu_167_p2;
    sc_signal< sc_lv<10> > tmp_117_fu_178_p2;
    sc_signal< sc_lv<6> > tmp_129_fu_193_p1;
    sc_signal< sc_lv<8> > p_shl6_fu_197_p3;
    sc_signal< sc_lv<8> > c_fu_189_p1;
    sc_signal< sc_lv<8> > tmp_116_fu_205_p2;
    sc_signal< sc_lv<8> > tmp_132_fu_211_p1;
    sc_signal< sc_lv<10> > tmp_120_fu_221_p2;
    sc_signal< sc_lv<9> > tmp_135_cast_fu_231_p1;
    sc_signal< sc_lv<8> > tmp_133_fu_240_p2;
    sc_signal< sc_lv<8> > tmp_134_fu_250_p1;
    sc_signal< sc_lv<8> > tmp_119_fu_245_p2;
    sc_signal< sc_lv<10> > tmp_124_fu_260_p2;
    sc_signal< sc_lv<8> > tmp_135_fu_274_p2;
    sc_signal< sc_lv<8> > tmp_136_fu_284_p1;
    sc_signal< sc_lv<8> > tmp_123_fu_279_p2;
    sc_signal< sc_lv<8> > tmp_137_fu_298_p2;
    sc_signal< sc_lv<8> > tmp_126_fu_303_p2;
    sc_signal< sc_lv<9> > sum2_fu_323_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<64> ap_const_lv64_2A3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<8> ap_const_lv8_87;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<10> ap_const_lv10_4;
    static const sc_lv<10> ap_const_lv10_3;
    static const sc_lv<10> ap_const_lv10_2;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<9> ap_const_lv9_87;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_coeffs_address0();
    void thread_a_coeffs_address1();
    void thread_a_coeffs_ce0();
    void thread_a_coeffs_ce1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_1_fu_215_p2();
    void thread_c_2_fu_254_p2();
    void thread_c_3_fu_288_p2();
    void thread_c_4_fu_308_p2();
    void thread_c_fu_189_p1();
    void thread_exitcond_fu_141_p2();
    void thread_i_4_fu_147_p2();
    void thread_i_cast1_fu_137_p1();
    void thread_msg_address0();
    void thread_msg_ce0();
    void thread_msg_d0();
    void thread_msg_we0();
    void thread_p_shl6_fu_197_p3();
    void thread_p_shl7_fu_153_p3();
    void thread_sum2_cast_fu_328_p1();
    void thread_sum2_fu_323_p2();
    void thread_sum_cast_fu_314_p1();
    void thread_sum_fu_235_p2();
    void thread_tmp_115_fu_173_p1();
    void thread_tmp_116_fu_205_p2();
    void thread_tmp_117_fu_178_p2();
    void thread_tmp_118_fu_184_p1();
    void thread_tmp_119_fu_245_p2();
    void thread_tmp_120_fu_221_p2();
    void thread_tmp_121_fu_318_p1();
    void thread_tmp_122_fu_226_p1();
    void thread_tmp_123_fu_279_p2();
    void thread_tmp_124_fu_260_p2();
    void thread_tmp_125_fu_265_p1();
    void thread_tmp_126_fu_303_p2();
    void thread_tmp_127_fu_270_p1();
    void thread_tmp_129_fu_193_p1();
    void thread_tmp_132_fu_211_p1();
    void thread_tmp_133_fu_240_p2();
    void thread_tmp_134_fu_250_p1();
    void thread_tmp_135_cast_fu_231_p1();
    void thread_tmp_135_fu_274_p2();
    void thread_tmp_136_fu_284_p1();
    void thread_tmp_137_fu_298_p2();
    void thread_tmp_138_fu_294_p1();
    void thread_tmp_fu_161_p2();
    void thread_tmp_s_fu_167_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
