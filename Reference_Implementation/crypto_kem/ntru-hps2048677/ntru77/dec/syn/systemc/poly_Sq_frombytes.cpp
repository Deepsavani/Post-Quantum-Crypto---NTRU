// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "poly_Sq_frombytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic poly_Sq_frombytes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic poly_Sq_frombytes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> poly_Sq_frombytes::ap_ST_fsm_state1 = "1";
const sc_lv<11> poly_Sq_frombytes::ap_ST_fsm_state2 = "10";
const sc_lv<11> poly_Sq_frombytes::ap_ST_fsm_state3 = "100";
const sc_lv<11> poly_Sq_frombytes::ap_ST_fsm_state4 = "1000";
const sc_lv<11> poly_Sq_frombytes::ap_ST_fsm_state5 = "10000";
const sc_lv<11> poly_Sq_frombytes::ap_ST_fsm_state6 = "100000";
const sc_lv<11> poly_Sq_frombytes::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> poly_Sq_frombytes::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> poly_Sq_frombytes::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> poly_Sq_frombytes::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> poly_Sq_frombytes::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_1 = "1";
const sc_lv<1> poly_Sq_frombytes::ap_const_lv1_0 = "0";
const sc_lv<1> poly_Sq_frombytes::ap_const_lv1_1 = "1";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_2 = "10";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_3 = "11";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_4 = "100";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_5 = "101";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_6 = "110";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_8 = "1000";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_9 = "1001";
const sc_lv<7> poly_Sq_frombytes::ap_const_lv7_0 = "0000000";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_7 = "111";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_0 = "0000000000";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_3A0 = "1110100000";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_3A1 = "1110100001";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_2A3 = "1010100011";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_39E = "1110011110";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_39F = "1110011111";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_2A2 = "1010100010";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_39D = "1110011101";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_39C = "1110011100";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_2A1 = "1010100001";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_A = "1010";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_2A0 = "1010100000";
const sc_lv<7> poly_Sq_frombytes::ap_const_lv7_54 = "1010100";
const sc_lv<7> poly_Sq_frombytes::ap_const_lv7_1 = "1";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_1 = "1";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_2 = "10";
const sc_lv<3> poly_Sq_frombytes::ap_const_lv3_0 = "000";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_3 = "11";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_4 = "100";
const sc_lv<2> poly_Sq_frombytes::ap_const_lv2_0 = "00";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_5 = "101";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_6 = "110";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_7 = "111";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_8 = "1000";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_B = "1011";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_9 = "1001";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_A = "1010";
const bool poly_Sq_frombytes::ap_const_boolean_1 = true;

poly_Sq_frombytes::poly_Sq_frombytes(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_424_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_30_fu_436_p1 );
    sensitive << ( tmp_43_fu_458_p1 );
    sensitive << ( tmp_57_fu_547_p1 );
    sensitive << ( tmp_78_fu_621_p1 );
    sensitive << ( tmp_92_fu_714_p1 );
    sensitive << ( tmp_111_fu_804_p1 );

    SC_METHOD(thread_a_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_33_fu_447_p1 );
    sensitive << ( tmp_53_fu_536_p1 );
    sensitive << ( tmp_68_fu_610_p1 );
    sensitive << ( tmp_88_fu_703_p1 );
    sensitive << ( tmp_103_fu_793_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_424_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_a_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_exitcond_fu_424_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_380 );

    SC_METHOD(thread_grp_fu_404_p4);
    sensitive << ( a_q1 );

    SC_METHOD(thread_grp_fu_414_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_next_mul_fu_719_p2);
    sensitive << ( phi_mul_reg_392 );

    SC_METHOD(thread_r_coeffs_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_39_fu_487_p1 );
    sensitive << ( tmp_64_fu_599_p1 );
    sensitive << ( tmp_84_fu_684_p1 );
    sensitive << ( tmp_108_fu_830_p1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_coeffs_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_49_fu_515_p1 );
    sensitive << ( tmp_74_fu_647_p1 );
    sensitive << ( tmp_99_fu_772_p1 );
    sensitive << ( tmp_114_fu_863_p1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_coeffs_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_coeffs_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_37_fu_474_p1 );
    sensitive << ( tmp_62_cast_fu_589_p1 );
    sensitive << ( tmp_82_cast_fu_674_p1 );
    sensitive << ( tmp_107_cast_fu_820_p1 );
    sensitive << ( tmp_8_cast_fu_880_p1 );
    sensitive << ( tmp_23_cast_fu_948_p1 );

    SC_METHOD(thread_r_coeffs_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_47_cast_fu_504_p1 );
    sensitive << ( tmp_72_cast_fu_637_p1 );
    sensitive << ( tmp_97_cast_fu_762_p1 );
    sensitive << ( tmp_115_cast_fu_853_p1 );
    sensitive << ( tmp_17_cast_fu_932_p1 );
    sensitive << ( tmp_28_fu_965_p1 );

    SC_METHOD(thread_r_coeffs_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_coeffs_we1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_tmp_100_fu_740_p3);
    sensitive << ( tmp_95_fu_725_p1 );

    SC_METHOD(thread_tmp_102_fu_787_p2);
    sensitive << ( phi_mul_reg_392 );

    SC_METHOD(thread_tmp_103_fu_793_p1);
    sensitive << ( tmp_102_fu_787_p2 );

    SC_METHOD(thread_tmp_104_fu_748_p2);
    sensitive << ( tmp_100_fu_740_p3 );
    sensitive << ( tmp_90_fu_728_p3 );

    SC_METHOD(thread_tmp_105_fu_662_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_106_fu_813_p3);
    sensitive << ( tmp_101_reg_1068 );
    sensitive << ( tmp_117_fu_809_p1 );

    SC_METHOD(thread_tmp_107_cast_fu_820_p1);
    sensitive << ( tmp_106_fu_813_p3 );

    SC_METHOD(thread_tmp_107_fu_825_p2);
    sensitive << ( tmp_38_reg_1008 );

    SC_METHOD(thread_tmp_108_fu_830_p1);
    sensitive << ( tmp_107_fu_825_p2 );

    SC_METHOD(thread_tmp_109_fu_835_p4);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_10_fu_889_p4);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_110_fu_798_p2);
    sensitive << ( phi_mul_reg_392 );

    SC_METHOD(thread_tmp_111_fu_804_p1);
    sensitive << ( tmp_110_fu_798_p2 );

    SC_METHOD(thread_tmp_112_fu_845_p3);
    sensitive << ( a_q0 );
    sensitive << ( tmp_109_fu_835_p4 );

    SC_METHOD(thread_tmp_113_fu_858_p2);
    sensitive << ( tmp_38_reg_1008 );

    SC_METHOD(thread_tmp_114_fu_863_p1);
    sensitive << ( tmp_113_fu_858_p2 );

    SC_METHOD(thread_tmp_115_cast_fu_853_p1);
    sensitive << ( tmp_112_fu_845_p3 );

    SC_METHOD(thread_tmp_116_fu_736_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_117_fu_809_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_12_fu_903_p3);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_17_cast_fu_932_p1);
    sensitive << ( tmp_17_fu_925_p3 );

    SC_METHOD(thread_tmp_17_fu_925_p3);
    sensitive << ( tmp_69_reg_1093 );
    sensitive << ( tmp_80_fu_919_p2 );

    SC_METHOD(thread_tmp_23_cast_fu_948_p1);
    sensitive << ( tmp_23_fu_941_p3 );

    SC_METHOD(thread_tmp_23_fu_941_p3);
    sensitive << ( tmp_70_reg_1103 );
    sensitive << ( grp_fu_404_p4 );

    SC_METHOD(thread_tmp_28_fu_965_p1);
    sensitive << ( tmp_35_fu_957_p3 );

    SC_METHOD(thread_tmp_30_fu_436_p1);
    sensitive << ( phi_mul_reg_392 );

    SC_METHOD(thread_tmp_32_fu_441_p2);
    sensitive << ( phi_mul_reg_392 );

    SC_METHOD(thread_tmp_33_fu_447_p1);
    sensitive << ( tmp_32_fu_441_p2 );

    SC_METHOD(thread_tmp_35_fu_957_p3);
    sensitive << ( a_q0 );
    sensitive << ( tmp_81_fu_953_p1 );

    SC_METHOD(thread_tmp_37_fu_474_p1);
    sensitive << ( tmp_40_fu_467_p3 );

    SC_METHOD(thread_tmp_38_fu_479_p3);
    sensitive << ( i_reg_380 );

    SC_METHOD(thread_tmp_39_fu_487_p1);
    sensitive << ( tmp_38_fu_479_p3 );

    SC_METHOD(thread_tmp_40_fu_467_p3);
    sensitive << ( a_load_9_reg_993 );
    sensitive << ( tmp_86_fu_463_p1 );

    SC_METHOD(thread_tmp_42_fu_452_p2);
    sensitive << ( phi_mul_reg_392 );

    SC_METHOD(thread_tmp_43_fu_458_p1);
    sensitive << ( tmp_42_fu_452_p2 );

    SC_METHOD(thread_tmp_47_cast_fu_504_p1);
    sensitive << ( tmp_47_fu_496_p3 );

    SC_METHOD(thread_tmp_47_fu_496_p3);
    sensitive << ( tmp_93_fu_492_p1 );
    sensitive << ( grp_fu_404_p4 );

    SC_METHOD(thread_tmp_48_fu_509_p2);
    sensitive << ( tmp_38_fu_479_p3 );

    SC_METHOD(thread_tmp_49_fu_515_p1);
    sensitive << ( tmp_48_fu_509_p2 );

    SC_METHOD(thread_tmp_52_fu_530_p2);
    sensitive << ( phi_mul_reg_392 );

    SC_METHOD(thread_tmp_53_fu_536_p1);
    sensitive << ( tmp_52_fu_530_p2 );

    SC_METHOD(thread_tmp_55_fu_555_p3);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_56_fu_541_p2);
    sensitive << ( phi_mul_reg_392 );

    SC_METHOD(thread_tmp_57_fu_547_p1);
    sensitive << ( tmp_56_fu_541_p2 );

    SC_METHOD(thread_tmp_62_cast_fu_589_p1);
    sensitive << ( tmp_62_fu_581_p3 );

    SC_METHOD(thread_tmp_62_fu_581_p3);
    sensitive << ( tmp_94_fu_563_p1 );
    sensitive << ( tmp_89_fu_575_p2 );

    SC_METHOD(thread_tmp_63_fu_594_p2);
    sensitive << ( tmp_38_reg_1008 );

    SC_METHOD(thread_tmp_64_fu_599_p1);
    sensitive << ( tmp_63_fu_594_p2 );

    SC_METHOD(thread_tmp_65_fu_899_p1);
    sensitive << ( tmp_10_fu_889_p4 );

    SC_METHOD(thread_tmp_67_fu_604_p2);
    sensitive << ( phi_mul_reg_392 );

    SC_METHOD(thread_tmp_68_fu_610_p1);
    sensitive << ( tmp_67_fu_604_p2 );

    SC_METHOD(thread_tmp_69_fu_885_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_70_fu_937_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_71_fu_552_p1);
    sensitive << ( tmp_51_reg_1018 );

    SC_METHOD(thread_tmp_72_cast_fu_637_p1);
    sensitive << ( tmp_72_fu_630_p3 );

    SC_METHOD(thread_tmp_72_fu_630_p3);
    sensitive << ( tmp_66_reg_1033 );
    sensitive << ( tmp_96_fu_626_p1 );

    SC_METHOD(thread_tmp_73_fu_642_p2);
    sensitive << ( tmp_38_reg_1008 );

    SC_METHOD(thread_tmp_74_fu_647_p1);
    sensitive << ( tmp_73_fu_642_p2 );

    SC_METHOD(thread_tmp_75_fu_430_p2);
    sensitive << ( i_reg_380 );

    SC_METHOD(thread_tmp_76_fu_652_p4);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_77_fu_615_p2);
    sensitive << ( phi_mul_reg_392 );

    SC_METHOD(thread_tmp_78_fu_621_p1);
    sensitive << ( tmp_77_fu_615_p2 );

    SC_METHOD(thread_tmp_79_fu_911_p3);
    sensitive << ( tmp_65_fu_899_p1 );

    SC_METHOD(thread_tmp_80_fu_919_p2);
    sensitive << ( tmp_79_fu_911_p3 );
    sensitive << ( tmp_12_fu_903_p3 );

    SC_METHOD(thread_tmp_81_fu_953_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_82_cast_fu_674_p1);
    sensitive << ( tmp_82_fu_666_p3 );

    SC_METHOD(thread_tmp_82_fu_666_p3);
    sensitive << ( tmp_105_fu_662_p1 );
    sensitive << ( tmp_76_fu_652_p4 );

    SC_METHOD(thread_tmp_83_fu_679_p2);
    sensitive << ( tmp_38_reg_1008 );

    SC_METHOD(thread_tmp_84_fu_684_p1);
    sensitive << ( tmp_83_fu_679_p2 );

    SC_METHOD(thread_tmp_85_fu_567_p3);
    sensitive << ( tmp_71_fu_552_p1 );

    SC_METHOD(thread_tmp_86_fu_463_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_87_fu_697_p2);
    sensitive << ( phi_mul_reg_392 );

    SC_METHOD(thread_tmp_88_fu_703_p1);
    sensitive << ( tmp_87_fu_697_p2 );

    SC_METHOD(thread_tmp_89_fu_575_p2);
    sensitive << ( tmp_85_fu_567_p3 );
    sensitive << ( tmp_55_fu_555_p3 );

    SC_METHOD(thread_tmp_8_cast_fu_880_p1);
    sensitive << ( tmp_8_fu_872_p3 );

    SC_METHOD(thread_tmp_8_fu_872_p3);
    sensitive << ( grp_fu_414_p4 );
    sensitive << ( tmp_fu_868_p1 );

    SC_METHOD(thread_tmp_90_fu_728_p3);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_91_fu_708_p2);
    sensitive << ( phi_mul_reg_392 );

    SC_METHOD(thread_tmp_92_fu_714_p1);
    sensitive << ( tmp_91_fu_708_p2 );

    SC_METHOD(thread_tmp_93_fu_492_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_94_fu_563_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_95_fu_725_p1);
    sensitive << ( tmp_115_reg_1048 );

    SC_METHOD(thread_tmp_96_fu_626_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_97_cast_fu_762_p1);
    sensitive << ( tmp_97_fu_754_p3 );

    SC_METHOD(thread_tmp_97_fu_754_p3);
    sensitive << ( tmp_116_fu_736_p1 );
    sensitive << ( tmp_104_fu_748_p2 );

    SC_METHOD(thread_tmp_98_fu_767_p2);
    sensitive << ( tmp_38_reg_1008 );

    SC_METHOD(thread_tmp_99_fu_772_p1);
    sensitive << ( tmp_98_fu_767_p2 );

    SC_METHOD(thread_tmp_fu_868_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_424_p2 );

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "poly_Sq_frombytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_coeffs_address0, "(port)r_coeffs_address0");
    sc_trace(mVcdFile, r_coeffs_ce0, "(port)r_coeffs_ce0");
    sc_trace(mVcdFile, r_coeffs_we0, "(port)r_coeffs_we0");
    sc_trace(mVcdFile, r_coeffs_d0, "(port)r_coeffs_d0");
    sc_trace(mVcdFile, r_coeffs_address1, "(port)r_coeffs_address1");
    sc_trace(mVcdFile, r_coeffs_ce1, "(port)r_coeffs_ce1");
    sc_trace(mVcdFile, r_coeffs_we1, "(port)r_coeffs_we1");
    sc_trace(mVcdFile, r_coeffs_d1, "(port)r_coeffs_d1");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_q0, "(port)a_q0");
    sc_trace(mVcdFile, a_address1, "(port)a_address1");
    sc_trace(mVcdFile, a_ce1, "(port)a_ce1");
    sc_trace(mVcdFile, a_q1, "(port)a_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_75_fu_430_p2, "tmp_75_fu_430_p2");
    sc_trace(mVcdFile, tmp_75_reg_973, "tmp_75_reg_973");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_fu_424_p2, "exitcond_fu_424_p2");
    sc_trace(mVcdFile, a_load_9_reg_993, "a_load_9_reg_993");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_38_fu_479_p3, "tmp_38_fu_479_p3");
    sc_trace(mVcdFile, tmp_38_reg_1008, "tmp_38_reg_1008");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_51_reg_1018, "tmp_51_reg_1018");
    sc_trace(mVcdFile, grp_fu_414_p4, "grp_fu_414_p4");
    sc_trace(mVcdFile, tmp_66_reg_1033, "tmp_66_reg_1033");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_115_reg_1048, "tmp_115_reg_1048");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, next_mul_fu_719_p2, "next_mul_fu_719_p2");
    sc_trace(mVcdFile, next_mul_reg_1063, "next_mul_reg_1063");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_101_reg_1068, "tmp_101_reg_1068");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_69_fu_885_p1, "tmp_69_fu_885_p1");
    sc_trace(mVcdFile, tmp_69_reg_1093, "tmp_69_reg_1093");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_70_fu_937_p1, "tmp_70_fu_937_p1");
    sc_trace(mVcdFile, tmp_70_reg_1103, "tmp_70_reg_1103");
    sc_trace(mVcdFile, i_reg_380, "i_reg_380");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, phi_mul_reg_392, "phi_mul_reg_392");
    sc_trace(mVcdFile, tmp_30_fu_436_p1, "tmp_30_fu_436_p1");
    sc_trace(mVcdFile, tmp_33_fu_447_p1, "tmp_33_fu_447_p1");
    sc_trace(mVcdFile, tmp_43_fu_458_p1, "tmp_43_fu_458_p1");
    sc_trace(mVcdFile, tmp_39_fu_487_p1, "tmp_39_fu_487_p1");
    sc_trace(mVcdFile, tmp_49_fu_515_p1, "tmp_49_fu_515_p1");
    sc_trace(mVcdFile, tmp_53_fu_536_p1, "tmp_53_fu_536_p1");
    sc_trace(mVcdFile, tmp_57_fu_547_p1, "tmp_57_fu_547_p1");
    sc_trace(mVcdFile, tmp_64_fu_599_p1, "tmp_64_fu_599_p1");
    sc_trace(mVcdFile, tmp_68_fu_610_p1, "tmp_68_fu_610_p1");
    sc_trace(mVcdFile, tmp_78_fu_621_p1, "tmp_78_fu_621_p1");
    sc_trace(mVcdFile, tmp_74_fu_647_p1, "tmp_74_fu_647_p1");
    sc_trace(mVcdFile, tmp_84_fu_684_p1, "tmp_84_fu_684_p1");
    sc_trace(mVcdFile, tmp_88_fu_703_p1, "tmp_88_fu_703_p1");
    sc_trace(mVcdFile, tmp_92_fu_714_p1, "tmp_92_fu_714_p1");
    sc_trace(mVcdFile, tmp_99_fu_772_p1, "tmp_99_fu_772_p1");
    sc_trace(mVcdFile, tmp_103_fu_793_p1, "tmp_103_fu_793_p1");
    sc_trace(mVcdFile, tmp_111_fu_804_p1, "tmp_111_fu_804_p1");
    sc_trace(mVcdFile, tmp_108_fu_830_p1, "tmp_108_fu_830_p1");
    sc_trace(mVcdFile, tmp_114_fu_863_p1, "tmp_114_fu_863_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_37_fu_474_p1, "tmp_37_fu_474_p1");
    sc_trace(mVcdFile, tmp_47_cast_fu_504_p1, "tmp_47_cast_fu_504_p1");
    sc_trace(mVcdFile, tmp_62_cast_fu_589_p1, "tmp_62_cast_fu_589_p1");
    sc_trace(mVcdFile, tmp_72_cast_fu_637_p1, "tmp_72_cast_fu_637_p1");
    sc_trace(mVcdFile, tmp_82_cast_fu_674_p1, "tmp_82_cast_fu_674_p1");
    sc_trace(mVcdFile, tmp_97_cast_fu_762_p1, "tmp_97_cast_fu_762_p1");
    sc_trace(mVcdFile, tmp_107_cast_fu_820_p1, "tmp_107_cast_fu_820_p1");
    sc_trace(mVcdFile, tmp_115_cast_fu_853_p1, "tmp_115_cast_fu_853_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_880_p1, "tmp_8_cast_fu_880_p1");
    sc_trace(mVcdFile, tmp_17_cast_fu_932_p1, "tmp_17_cast_fu_932_p1");
    sc_trace(mVcdFile, tmp_23_cast_fu_948_p1, "tmp_23_cast_fu_948_p1");
    sc_trace(mVcdFile, tmp_28_fu_965_p1, "tmp_28_fu_965_p1");
    sc_trace(mVcdFile, tmp_32_fu_441_p2, "tmp_32_fu_441_p2");
    sc_trace(mVcdFile, tmp_42_fu_452_p2, "tmp_42_fu_452_p2");
    sc_trace(mVcdFile, tmp_86_fu_463_p1, "tmp_86_fu_463_p1");
    sc_trace(mVcdFile, tmp_40_fu_467_p3, "tmp_40_fu_467_p3");
    sc_trace(mVcdFile, tmp_93_fu_492_p1, "tmp_93_fu_492_p1");
    sc_trace(mVcdFile, grp_fu_404_p4, "grp_fu_404_p4");
    sc_trace(mVcdFile, tmp_47_fu_496_p3, "tmp_47_fu_496_p3");
    sc_trace(mVcdFile, tmp_48_fu_509_p2, "tmp_48_fu_509_p2");
    sc_trace(mVcdFile, tmp_52_fu_530_p2, "tmp_52_fu_530_p2");
    sc_trace(mVcdFile, tmp_56_fu_541_p2, "tmp_56_fu_541_p2");
    sc_trace(mVcdFile, tmp_71_fu_552_p1, "tmp_71_fu_552_p1");
    sc_trace(mVcdFile, tmp_85_fu_567_p3, "tmp_85_fu_567_p3");
    sc_trace(mVcdFile, tmp_55_fu_555_p3, "tmp_55_fu_555_p3");
    sc_trace(mVcdFile, tmp_94_fu_563_p1, "tmp_94_fu_563_p1");
    sc_trace(mVcdFile, tmp_89_fu_575_p2, "tmp_89_fu_575_p2");
    sc_trace(mVcdFile, tmp_62_fu_581_p3, "tmp_62_fu_581_p3");
    sc_trace(mVcdFile, tmp_63_fu_594_p2, "tmp_63_fu_594_p2");
    sc_trace(mVcdFile, tmp_67_fu_604_p2, "tmp_67_fu_604_p2");
    sc_trace(mVcdFile, tmp_77_fu_615_p2, "tmp_77_fu_615_p2");
    sc_trace(mVcdFile, tmp_96_fu_626_p1, "tmp_96_fu_626_p1");
    sc_trace(mVcdFile, tmp_72_fu_630_p3, "tmp_72_fu_630_p3");
    sc_trace(mVcdFile, tmp_73_fu_642_p2, "tmp_73_fu_642_p2");
    sc_trace(mVcdFile, tmp_105_fu_662_p1, "tmp_105_fu_662_p1");
    sc_trace(mVcdFile, tmp_76_fu_652_p4, "tmp_76_fu_652_p4");
    sc_trace(mVcdFile, tmp_82_fu_666_p3, "tmp_82_fu_666_p3");
    sc_trace(mVcdFile, tmp_83_fu_679_p2, "tmp_83_fu_679_p2");
    sc_trace(mVcdFile, tmp_87_fu_697_p2, "tmp_87_fu_697_p2");
    sc_trace(mVcdFile, tmp_91_fu_708_p2, "tmp_91_fu_708_p2");
    sc_trace(mVcdFile, tmp_95_fu_725_p1, "tmp_95_fu_725_p1");
    sc_trace(mVcdFile, tmp_100_fu_740_p3, "tmp_100_fu_740_p3");
    sc_trace(mVcdFile, tmp_90_fu_728_p3, "tmp_90_fu_728_p3");
    sc_trace(mVcdFile, tmp_116_fu_736_p1, "tmp_116_fu_736_p1");
    sc_trace(mVcdFile, tmp_104_fu_748_p2, "tmp_104_fu_748_p2");
    sc_trace(mVcdFile, tmp_97_fu_754_p3, "tmp_97_fu_754_p3");
    sc_trace(mVcdFile, tmp_98_fu_767_p2, "tmp_98_fu_767_p2");
    sc_trace(mVcdFile, tmp_102_fu_787_p2, "tmp_102_fu_787_p2");
    sc_trace(mVcdFile, tmp_110_fu_798_p2, "tmp_110_fu_798_p2");
    sc_trace(mVcdFile, tmp_117_fu_809_p1, "tmp_117_fu_809_p1");
    sc_trace(mVcdFile, tmp_106_fu_813_p3, "tmp_106_fu_813_p3");
    sc_trace(mVcdFile, tmp_107_fu_825_p2, "tmp_107_fu_825_p2");
    sc_trace(mVcdFile, tmp_109_fu_835_p4, "tmp_109_fu_835_p4");
    sc_trace(mVcdFile, tmp_112_fu_845_p3, "tmp_112_fu_845_p3");
    sc_trace(mVcdFile, tmp_113_fu_858_p2, "tmp_113_fu_858_p2");
    sc_trace(mVcdFile, tmp_fu_868_p1, "tmp_fu_868_p1");
    sc_trace(mVcdFile, tmp_8_fu_872_p3, "tmp_8_fu_872_p3");
    sc_trace(mVcdFile, tmp_10_fu_889_p4, "tmp_10_fu_889_p4");
    sc_trace(mVcdFile, tmp_65_fu_899_p1, "tmp_65_fu_899_p1");
    sc_trace(mVcdFile, tmp_79_fu_911_p3, "tmp_79_fu_911_p3");
    sc_trace(mVcdFile, tmp_12_fu_903_p3, "tmp_12_fu_903_p3");
    sc_trace(mVcdFile, tmp_80_fu_919_p2, "tmp_80_fu_919_p2");
    sc_trace(mVcdFile, tmp_17_fu_925_p3, "tmp_17_fu_925_p3");
    sc_trace(mVcdFile, tmp_23_fu_941_p3, "tmp_23_fu_941_p3");
    sc_trace(mVcdFile, tmp_81_fu_953_p1, "tmp_81_fu_953_p1");
    sc_trace(mVcdFile, tmp_35_fu_957_p3, "tmp_35_fu_957_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

poly_Sq_frombytes::~poly_Sq_frombytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void poly_Sq_frombytes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_reg_380 = tmp_75_reg_973.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_380 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        phi_mul_reg_392 = next_mul_reg_1063.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_392 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_load_9_reg_993 = a_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        next_mul_reg_1063 = next_mul_fu_719_p2.read();
        tmp_101_reg_1068 = a_q0.read().range(7, 2);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_115_reg_1048 = a_q0.read().range(7, 7);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_38_reg_1008 = tmp_38_fu_479_p3.read();
        tmp_51_reg_1018 = a_q0.read().range(7, 6);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_66_reg_1033 = a_q0.read().range(7, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_69_reg_1093 = tmp_69_fu_885_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_70_reg_1103 = tmp_70_fu_937_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_75_reg_973 = tmp_75_fu_430_p2.read();
    }
}

void poly_Sq_frombytes::thread_a_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        a_address0 =  (sc_lv<10>) (ap_const_lv64_39C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        a_address0 =  (sc_lv<10>) (ap_const_lv64_39F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        a_address0 =  (sc_lv<10>) (tmp_111_fu_804_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        a_address0 =  (sc_lv<10>) (tmp_92_fu_714_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_address0 =  (sc_lv<10>) (tmp_78_fu_621_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_address0 =  (sc_lv<10>) (tmp_57_fu_547_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_address0 =  (sc_lv<10>) (tmp_43_fu_458_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_424_p2.read(), ap_const_lv1_1))) {
        a_address0 =  (sc_lv<10>) (ap_const_lv64_3A0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_424_p2.read(), ap_const_lv1_0))) {
        a_address0 =  (sc_lv<10>) (tmp_30_fu_436_p1.read());
    } else {
        a_address0 = "XXXXXXXXXX";
    }
}

void poly_Sq_frombytes::thread_a_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        a_address1 =  (sc_lv<10>) (ap_const_lv64_39D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        a_address1 =  (sc_lv<10>) (ap_const_lv64_39E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        a_address1 =  (sc_lv<10>) (tmp_103_fu_793_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        a_address1 =  (sc_lv<10>) (tmp_88_fu_703_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_address1 =  (sc_lv<10>) (tmp_68_fu_610_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_address1 =  (sc_lv<10>) (tmp_53_fu_536_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_address1 =  (sc_lv<10>) (tmp_33_fu_447_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_address1 =  (sc_lv<10>) (ap_const_lv64_3A1);
    } else {
        a_address1 = "XXXXXXXXXX";
    }
}

void poly_Sq_frombytes::thread_a_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_424_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_424_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_a_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        a_ce1 = ap_const_logic_1;
    } else {
        a_ce1 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void poly_Sq_frombytes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_exitcond_fu_424_p2() {
    exitcond_fu_424_p2 = (!i_reg_380.read().is_01() || !ap_const_lv7_54.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_380.read() == ap_const_lv7_54);
}

void poly_Sq_frombytes::thread_grp_fu_404_p4() {
    grp_fu_404_p4 = a_q1.read().range(7, 3);
}

void poly_Sq_frombytes::thread_grp_fu_414_p4() {
    grp_fu_414_p4 = a_q0.read().range(7, 1);
}

void poly_Sq_frombytes::thread_next_mul_fu_719_p2() {
    next_mul_fu_719_p2 = (!ap_const_lv10_B.is_01() || !phi_mul_reg_392.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_B) + sc_biguint<10>(phi_mul_reg_392.read()));
}

void poly_Sq_frombytes::thread_r_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (ap_const_lv64_2A1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (ap_const_lv64_2A3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_108_fu_830_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_84_fu_684_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_64_fu_599_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_39_fu_487_p1.read());
    } else {
        r_coeffs_address0 = "XXXXXXXXXX";
    }
}

void poly_Sq_frombytes::thread_r_coeffs_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (ap_const_lv64_2A0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (ap_const_lv64_2A2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (tmp_114_fu_863_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (tmp_99_fu_772_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (tmp_74_fu_647_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (tmp_49_fu_515_p1.read());
    } else {
        r_coeffs_address1 = "XXXXXXXXXX";
    }
}

void poly_Sq_frombytes::thread_r_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        r_coeffs_ce0 = ap_const_logic_1;
    } else {
        r_coeffs_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_r_coeffs_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        r_coeffs_ce1 = ap_const_logic_1;
    } else {
        r_coeffs_ce1 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_r_coeffs_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_coeffs_d0 = tmp_23_cast_fu_948_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_coeffs_d0 = tmp_8_cast_fu_880_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_coeffs_d0 = tmp_107_cast_fu_820_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_d0 = tmp_82_cast_fu_674_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_coeffs_d0 = tmp_62_cast_fu_589_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_coeffs_d0 = tmp_37_fu_474_p1.read();
    } else {
        r_coeffs_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void poly_Sq_frombytes::thread_r_coeffs_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_coeffs_d1 = tmp_28_fu_965_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_coeffs_d1 = tmp_17_cast_fu_932_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_coeffs_d1 = tmp_115_cast_fu_853_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_coeffs_d1 = tmp_97_cast_fu_762_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_d1 = tmp_72_cast_fu_637_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_coeffs_d1 = tmp_47_cast_fu_504_p1.read();
    } else {
        r_coeffs_d1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void poly_Sq_frombytes::thread_r_coeffs_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        r_coeffs_we0 = ap_const_logic_1;
    } else {
        r_coeffs_we0 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_r_coeffs_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        r_coeffs_we1 = ap_const_logic_1;
    } else {
        r_coeffs_we1 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_tmp_100_fu_740_p3() {
    tmp_100_fu_740_p3 = esl_concat<1,8>(ap_const_lv1_0, tmp_95_fu_725_p1.read());
}

void poly_Sq_frombytes::thread_tmp_102_fu_787_p2() {
    tmp_102_fu_787_p2 = (!ap_const_lv10_9.is_01() || !phi_mul_reg_392.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_9) + sc_biguint<10>(phi_mul_reg_392.read()));
}

void poly_Sq_frombytes::thread_tmp_103_fu_793_p1() {
    tmp_103_fu_793_p1 = esl_zext<64,10>(tmp_102_fu_787_p2.read());
}

void poly_Sq_frombytes::thread_tmp_104_fu_748_p2() {
    tmp_104_fu_748_p2 = (tmp_100_fu_740_p3.read() | tmp_90_fu_728_p3.read());
}

void poly_Sq_frombytes::thread_tmp_105_fu_662_p1() {
    tmp_105_fu_662_p1 = a_q0.read().range(7-1, 0);
}

void poly_Sq_frombytes::thread_tmp_106_fu_813_p3() {
    tmp_106_fu_813_p3 = esl_concat<5,6>(tmp_117_fu_809_p1.read(), tmp_101_reg_1068.read());
}

void poly_Sq_frombytes::thread_tmp_107_cast_fu_820_p1() {
    tmp_107_cast_fu_820_p1 = esl_zext<16,11>(tmp_106_fu_813_p3.read());
}

void poly_Sq_frombytes::thread_tmp_107_fu_825_p2() {
    tmp_107_fu_825_p2 = (tmp_38_reg_1008.read() | ap_const_lv10_6);
}

void poly_Sq_frombytes::thread_tmp_108_fu_830_p1() {
    tmp_108_fu_830_p1 = esl_zext<64,10>(tmp_107_fu_825_p2.read());
}

void poly_Sq_frombytes::thread_tmp_109_fu_835_p4() {
    tmp_109_fu_835_p4 = a_q1.read().range(7, 5);
}

void poly_Sq_frombytes::thread_tmp_10_fu_889_p4() {
    tmp_10_fu_889_p4 = a_q1.read().range(7, 6);
}

void poly_Sq_frombytes::thread_tmp_110_fu_798_p2() {
    tmp_110_fu_798_p2 = (!ap_const_lv10_A.is_01() || !phi_mul_reg_392.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_A) + sc_biguint<10>(phi_mul_reg_392.read()));
}

void poly_Sq_frombytes::thread_tmp_111_fu_804_p1() {
    tmp_111_fu_804_p1 = esl_zext<64,10>(tmp_110_fu_798_p2.read());
}

void poly_Sq_frombytes::thread_tmp_112_fu_845_p3() {
    tmp_112_fu_845_p3 = esl_concat<8,3>(a_q0.read(), tmp_109_fu_835_p4.read());
}

void poly_Sq_frombytes::thread_tmp_113_fu_858_p2() {
    tmp_113_fu_858_p2 = (tmp_38_reg_1008.read() | ap_const_lv10_7);
}

void poly_Sq_frombytes::thread_tmp_114_fu_863_p1() {
    tmp_114_fu_863_p1 = esl_zext<64,10>(tmp_113_fu_858_p2.read());
}

void poly_Sq_frombytes::thread_tmp_115_cast_fu_853_p1() {
    tmp_115_cast_fu_853_p1 = esl_zext<16,11>(tmp_112_fu_845_p3.read());
}

void poly_Sq_frombytes::thread_tmp_116_fu_736_p1() {
    tmp_116_fu_736_p1 = a_q0.read().range(2-1, 0);
}

void poly_Sq_frombytes::thread_tmp_117_fu_809_p1() {
    tmp_117_fu_809_p1 = a_q1.read().range(5-1, 0);
}

void poly_Sq_frombytes::thread_tmp_12_fu_903_p3() {
    tmp_12_fu_903_p3 = esl_concat<8,2>(a_q0.read(), ap_const_lv2_0);
}

void poly_Sq_frombytes::thread_tmp_17_cast_fu_932_p1() {
    tmp_17_cast_fu_932_p1 = esl_zext<16,11>(tmp_17_fu_925_p3.read());
}

void poly_Sq_frombytes::thread_tmp_17_fu_925_p3() {
    tmp_17_fu_925_p3 = esl_concat<1,10>(tmp_69_reg_1093.read(), tmp_80_fu_919_p2.read());
}

void poly_Sq_frombytes::thread_tmp_23_cast_fu_948_p1() {
    tmp_23_cast_fu_948_p1 = esl_zext<16,11>(tmp_23_fu_941_p3.read());
}

void poly_Sq_frombytes::thread_tmp_23_fu_941_p3() {
    tmp_23_fu_941_p3 = esl_concat<6,5>(tmp_70_reg_1103.read(), grp_fu_404_p4.read());
}

void poly_Sq_frombytes::thread_tmp_28_fu_965_p1() {
    tmp_28_fu_965_p1 = esl_zext<16,11>(tmp_35_fu_957_p3.read());
}

void poly_Sq_frombytes::thread_tmp_30_fu_436_p1() {
    tmp_30_fu_436_p1 = esl_zext<64,10>(phi_mul_reg_392.read());
}

void poly_Sq_frombytes::thread_tmp_32_fu_441_p2() {
    tmp_32_fu_441_p2 = (!ap_const_lv10_1.is_01() || !phi_mul_reg_392.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(phi_mul_reg_392.read()));
}

void poly_Sq_frombytes::thread_tmp_33_fu_447_p1() {
    tmp_33_fu_447_p1 = esl_zext<64,10>(tmp_32_fu_441_p2.read());
}

void poly_Sq_frombytes::thread_tmp_35_fu_957_p3() {
    tmp_35_fu_957_p3 = esl_concat<3,8>(tmp_81_fu_953_p1.read(), a_q0.read());
}

void poly_Sq_frombytes::thread_tmp_37_fu_474_p1() {
    tmp_37_fu_474_p1 = esl_zext<16,11>(tmp_40_fu_467_p3.read());
}

void poly_Sq_frombytes::thread_tmp_38_fu_479_p3() {
    tmp_38_fu_479_p3 = esl_concat<7,3>(i_reg_380.read(), ap_const_lv3_0);
}

void poly_Sq_frombytes::thread_tmp_39_fu_487_p1() {
    tmp_39_fu_487_p1 = esl_zext<64,10>(tmp_38_fu_479_p3.read());
}

void poly_Sq_frombytes::thread_tmp_40_fu_467_p3() {
    tmp_40_fu_467_p3 = esl_concat<3,8>(tmp_86_fu_463_p1.read(), a_load_9_reg_993.read());
}

void poly_Sq_frombytes::thread_tmp_42_fu_452_p2() {
    tmp_42_fu_452_p2 = (!ap_const_lv10_2.is_01() || !phi_mul_reg_392.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_2) + sc_biguint<10>(phi_mul_reg_392.read()));
}

void poly_Sq_frombytes::thread_tmp_43_fu_458_p1() {
    tmp_43_fu_458_p1 = esl_zext<64,10>(tmp_42_fu_452_p2.read());
}

void poly_Sq_frombytes::thread_tmp_47_cast_fu_504_p1() {
    tmp_47_cast_fu_504_p1 = esl_zext<16,11>(tmp_47_fu_496_p3.read());
}

void poly_Sq_frombytes::thread_tmp_47_fu_496_p3() {
    tmp_47_fu_496_p3 = esl_concat<6,5>(tmp_93_fu_492_p1.read(), grp_fu_404_p4.read());
}

void poly_Sq_frombytes::thread_tmp_48_fu_509_p2() {
    tmp_48_fu_509_p2 = (tmp_38_fu_479_p3.read() | ap_const_lv10_1);
}

void poly_Sq_frombytes::thread_tmp_49_fu_515_p1() {
    tmp_49_fu_515_p1 = esl_zext<64,10>(tmp_48_fu_509_p2.read());
}

void poly_Sq_frombytes::thread_tmp_52_fu_530_p2() {
    tmp_52_fu_530_p2 = (!ap_const_lv10_3.is_01() || !phi_mul_reg_392.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_3) + sc_biguint<10>(phi_mul_reg_392.read()));
}

void poly_Sq_frombytes::thread_tmp_53_fu_536_p1() {
    tmp_53_fu_536_p1 = esl_zext<64,10>(tmp_52_fu_530_p2.read());
}

void poly_Sq_frombytes::thread_tmp_55_fu_555_p3() {
    tmp_55_fu_555_p3 = esl_concat<8,2>(a_q1.read(), ap_const_lv2_0);
}

void poly_Sq_frombytes::thread_tmp_56_fu_541_p2() {
    tmp_56_fu_541_p2 = (!ap_const_lv10_4.is_01() || !phi_mul_reg_392.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_4) + sc_biguint<10>(phi_mul_reg_392.read()));
}

void poly_Sq_frombytes::thread_tmp_57_fu_547_p1() {
    tmp_57_fu_547_p1 = esl_zext<64,10>(tmp_56_fu_541_p2.read());
}

void poly_Sq_frombytes::thread_tmp_62_cast_fu_589_p1() {
    tmp_62_cast_fu_589_p1 = esl_zext<16,11>(tmp_62_fu_581_p3.read());
}

void poly_Sq_frombytes::thread_tmp_62_fu_581_p3() {
    tmp_62_fu_581_p3 = esl_concat<1,10>(tmp_94_fu_563_p1.read(), tmp_89_fu_575_p2.read());
}

void poly_Sq_frombytes::thread_tmp_63_fu_594_p2() {
    tmp_63_fu_594_p2 = (tmp_38_reg_1008.read() | ap_const_lv10_2);
}

void poly_Sq_frombytes::thread_tmp_64_fu_599_p1() {
    tmp_64_fu_599_p1 = esl_zext<64,10>(tmp_63_fu_594_p2.read());
}

void poly_Sq_frombytes::thread_tmp_65_fu_899_p1() {
    tmp_65_fu_899_p1 = esl_zext<8,2>(tmp_10_fu_889_p4.read());
}

void poly_Sq_frombytes::thread_tmp_67_fu_604_p2() {
    tmp_67_fu_604_p2 = (!ap_const_lv10_5.is_01() || !phi_mul_reg_392.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_5) + sc_biguint<10>(phi_mul_reg_392.read()));
}

void poly_Sq_frombytes::thread_tmp_68_fu_610_p1() {
    tmp_68_fu_610_p1 = esl_zext<64,10>(tmp_67_fu_604_p2.read());
}

void poly_Sq_frombytes::thread_tmp_69_fu_885_p1() {
    tmp_69_fu_885_p1 = a_q0.read().range(1-1, 0);
}

void poly_Sq_frombytes::thread_tmp_70_fu_937_p1() {
    tmp_70_fu_937_p1 = a_q1.read().range(6-1, 0);
}

void poly_Sq_frombytes::thread_tmp_71_fu_552_p1() {
    tmp_71_fu_552_p1 = esl_zext<8,2>(tmp_51_reg_1018.read());
}

void poly_Sq_frombytes::thread_tmp_72_cast_fu_637_p1() {
    tmp_72_cast_fu_637_p1 = esl_zext<16,11>(tmp_72_fu_630_p3.read());
}

void poly_Sq_frombytes::thread_tmp_72_fu_630_p3() {
    tmp_72_fu_630_p3 = esl_concat<4,7>(tmp_96_fu_626_p1.read(), tmp_66_reg_1033.read());
}

void poly_Sq_frombytes::thread_tmp_73_fu_642_p2() {
    tmp_73_fu_642_p2 = (tmp_38_reg_1008.read() | ap_const_lv10_3);
}

void poly_Sq_frombytes::thread_tmp_74_fu_647_p1() {
    tmp_74_fu_647_p1 = esl_zext<64,10>(tmp_73_fu_642_p2.read());
}

void poly_Sq_frombytes::thread_tmp_75_fu_430_p2() {
    tmp_75_fu_430_p2 = (!i_reg_380.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_reg_380.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void poly_Sq_frombytes::thread_tmp_76_fu_652_p4() {
    tmp_76_fu_652_p4 = a_q1.read().range(7, 4);
}

void poly_Sq_frombytes::thread_tmp_77_fu_615_p2() {
    tmp_77_fu_615_p2 = (!ap_const_lv10_6.is_01() || !phi_mul_reg_392.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_6) + sc_biguint<10>(phi_mul_reg_392.read()));
}

void poly_Sq_frombytes::thread_tmp_78_fu_621_p1() {
    tmp_78_fu_621_p1 = esl_zext<64,10>(tmp_77_fu_615_p2.read());
}

void poly_Sq_frombytes::thread_tmp_79_fu_911_p3() {
    tmp_79_fu_911_p3 = esl_concat<2,8>(ap_const_lv2_0, tmp_65_fu_899_p1.read());
}

void poly_Sq_frombytes::thread_tmp_80_fu_919_p2() {
    tmp_80_fu_919_p2 = (tmp_79_fu_911_p3.read() | tmp_12_fu_903_p3.read());
}

void poly_Sq_frombytes::thread_tmp_81_fu_953_p1() {
    tmp_81_fu_953_p1 = a_q1.read().range(3-1, 0);
}

void poly_Sq_frombytes::thread_tmp_82_cast_fu_674_p1() {
    tmp_82_cast_fu_674_p1 = esl_zext<16,11>(tmp_82_fu_666_p3.read());
}

void poly_Sq_frombytes::thread_tmp_82_fu_666_p3() {
    tmp_82_fu_666_p3 = esl_concat<7,4>(tmp_105_fu_662_p1.read(), tmp_76_fu_652_p4.read());
}

void poly_Sq_frombytes::thread_tmp_83_fu_679_p2() {
    tmp_83_fu_679_p2 = (tmp_38_reg_1008.read() | ap_const_lv10_4);
}

void poly_Sq_frombytes::thread_tmp_84_fu_684_p1() {
    tmp_84_fu_684_p1 = esl_zext<64,10>(tmp_83_fu_679_p2.read());
}

void poly_Sq_frombytes::thread_tmp_85_fu_567_p3() {
    tmp_85_fu_567_p3 = esl_concat<2,8>(ap_const_lv2_0, tmp_71_fu_552_p1.read());
}

void poly_Sq_frombytes::thread_tmp_86_fu_463_p1() {
    tmp_86_fu_463_p1 = a_q1.read().range(3-1, 0);
}

void poly_Sq_frombytes::thread_tmp_87_fu_697_p2() {
    tmp_87_fu_697_p2 = (!ap_const_lv10_7.is_01() || !phi_mul_reg_392.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_7) + sc_biguint<10>(phi_mul_reg_392.read()));
}

void poly_Sq_frombytes::thread_tmp_88_fu_703_p1() {
    tmp_88_fu_703_p1 = esl_zext<64,10>(tmp_87_fu_697_p2.read());
}

void poly_Sq_frombytes::thread_tmp_89_fu_575_p2() {
    tmp_89_fu_575_p2 = (tmp_85_fu_567_p3.read() | tmp_55_fu_555_p3.read());
}

void poly_Sq_frombytes::thread_tmp_8_cast_fu_880_p1() {
    tmp_8_cast_fu_880_p1 = esl_zext<16,11>(tmp_8_fu_872_p3.read());
}

void poly_Sq_frombytes::thread_tmp_8_fu_872_p3() {
    tmp_8_fu_872_p3 = esl_concat<4,7>(tmp_fu_868_p1.read(), grp_fu_414_p4.read());
}

void poly_Sq_frombytes::thread_tmp_90_fu_728_p3() {
    tmp_90_fu_728_p3 = esl_concat<8,1>(a_q1.read(), ap_const_lv1_0);
}

void poly_Sq_frombytes::thread_tmp_91_fu_708_p2() {
    tmp_91_fu_708_p2 = (!ap_const_lv10_8.is_01() || !phi_mul_reg_392.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_8) + sc_biguint<10>(phi_mul_reg_392.read()));
}

void poly_Sq_frombytes::thread_tmp_92_fu_714_p1() {
    tmp_92_fu_714_p1 = esl_zext<64,10>(tmp_91_fu_708_p2.read());
}

void poly_Sq_frombytes::thread_tmp_93_fu_492_p1() {
    tmp_93_fu_492_p1 = a_q0.read().range(6-1, 0);
}

void poly_Sq_frombytes::thread_tmp_94_fu_563_p1() {
    tmp_94_fu_563_p1 = a_q0.read().range(1-1, 0);
}

void poly_Sq_frombytes::thread_tmp_95_fu_725_p1() {
    tmp_95_fu_725_p1 = esl_zext<8,1>(tmp_115_reg_1048.read());
}

void poly_Sq_frombytes::thread_tmp_96_fu_626_p1() {
    tmp_96_fu_626_p1 = a_q1.read().range(4-1, 0);
}

void poly_Sq_frombytes::thread_tmp_97_cast_fu_762_p1() {
    tmp_97_cast_fu_762_p1 = esl_zext<16,11>(tmp_97_fu_754_p3.read());
}

void poly_Sq_frombytes::thread_tmp_97_fu_754_p3() {
    tmp_97_fu_754_p3 = esl_concat<2,9>(tmp_116_fu_736_p1.read(), tmp_104_fu_748_p2.read());
}

void poly_Sq_frombytes::thread_tmp_98_fu_767_p2() {
    tmp_98_fu_767_p2 = (tmp_38_reg_1008.read() | ap_const_lv10_5);
}

void poly_Sq_frombytes::thread_tmp_99_fu_772_p1() {
    tmp_99_fu_772_p1 = esl_zext<64,10>(tmp_98_fu_767_p2.read());
}

void poly_Sq_frombytes::thread_tmp_fu_868_p1() {
    tmp_fu_868_p1 = a_q1.read().range(4-1, 0);
}

void poly_Sq_frombytes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_424_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

