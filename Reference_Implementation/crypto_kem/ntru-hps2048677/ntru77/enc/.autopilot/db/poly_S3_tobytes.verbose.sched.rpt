

================================================================
== Vivado HLS Report for 'poly_S3_tobytes'
================================================================
* Date:           Tue Aug 25 11:15:03 2020

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        ntru77
* Solution:       enc
* Product family: artix7
* Target device:  xc7a200tfbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     6.271|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  677|  677|  677|  677|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |  675|  675|         5|          -|          -|   135|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond)
	7  / (exitcond)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	2  / true
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%msg_offset_read = call i10 @_ssdm_op_Read.ap_auto.i10(i10 %msg_offset)" [pack3.c:3]   --->   Operation 8 'read' 'msg_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%tmp_170 = trunc i10 %msg_offset_read to i9" [pack3.c:18]   --->   Operation 9 'trunc' 'tmp_170' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.35ns)   --->   "br label %1" [pack3.c:11]   --->   Operation 10 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 6.27>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%i = phi i8 [ 0, %0 ], [ %i_9, %2 ]"   --->   Operation 11 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%i_cast1 = zext i8 %i to i10" [pack3.c:11]   --->   Operation 12 'zext' 'i_cast1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (1.24ns)   --->   "%exitcond = icmp eq i8 %i, -121" [pack3.c:11]   --->   Operation 13 'icmp' 'exitcond' <Predicate = true> <Delay = 1.24> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 135, i64 135, i64 135)"   --->   Operation 14 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.71ns)   --->   "%i_9 = add i8 %i, 1" [pack3.c:11]   --->   Operation 15 'add' 'i_9' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %.preheader.0, label %2" [pack3.c:11]   --->   Operation 16 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%p_shl7 = call i10 @_ssdm_op_BitConcatenate.i10.i8.i2(i8 %i, i2 0)" [pack3.c:13]   --->   Operation 17 'bitconcatenate' 'p_shl7' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.74ns)   --->   "%tmp = add i10 %p_shl7, %i_cast1" [pack3.c:13]   --->   Operation 18 'add' 'tmp' <Predicate = (!exitcond)> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (1.74ns)   --->   "%tmp_s = add i10 4, %tmp" [pack3.c:13]   --->   Operation 19 'add' 'tmp_s' <Predicate = (!exitcond)> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_160 = zext i10 %tmp_s to i64" [pack3.c:13]   --->   Operation 20 'zext' 'tmp_160' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%a_coeffs_addr = getelementptr [677 x i16]* %a_coeffs, i64 0, i64 %tmp_160" [pack3.c:13]   --->   Operation 21 'getelementptr' 'a_coeffs_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 22 [2/2] (2.77ns)   --->   "%a_coeffs_load = load i16* %a_coeffs_addr, align 2" [pack3.c:13]   --->   Operation 22 'load' 'a_coeffs_load' <Predicate = (!exitcond)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>
ST_2 : Operation 23 [1/1] (1.74ns)   --->   "%tmp_162 = add i10 3, %tmp" [pack3.c:14]   --->   Operation 23 'add' 'tmp_162' <Predicate = (!exitcond)> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_163 = zext i10 %tmp_162 to i64" [pack3.c:14]   --->   Operation 24 'zext' 'tmp_163' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%a_coeffs_addr_2 = getelementptr [677 x i16]* %a_coeffs, i64 0, i64 %tmp_163" [pack3.c:14]   --->   Operation 25 'getelementptr' 'a_coeffs_addr_2' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 26 [2/2] (2.77ns)   --->   "%a_coeffs_load_2 = load i16* %a_coeffs_addr_2, align 2" [pack3.c:14]   --->   Operation 26 'load' 'a_coeffs_load_2' <Predicate = (!exitcond)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%a_coeffs_addr_6 = getelementptr [677 x i16]* %a_coeffs, i64 0, i64 675" [pack3.c:24]   --->   Operation 27 'getelementptr' 'a_coeffs_addr_6' <Predicate = (exitcond)> <Delay = 0.00>
ST_2 : Operation 28 [2/2] (2.77ns)   --->   "%a_coeffs_load_6 = load i16* %a_coeffs_addr_6, align 2" [pack3.c:24]   --->   Operation 28 'load' 'a_coeffs_load_6' <Predicate = (exitcond)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>

State 3 <SV = 2> <Delay = 5.79>
ST_3 : Operation 29 [1/2] (2.77ns)   --->   "%a_coeffs_load = load i16* %a_coeffs_addr, align 2" [pack3.c:13]   --->   Operation 29 'load' 'a_coeffs_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%c = trunc i16 %a_coeffs_load to i8" [pack3.c:13]   --->   Operation 30 'trunc' 'c' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_178 = trunc i16 %a_coeffs_load to i6" [pack3.c:13]   --->   Operation 31 'trunc' 'tmp_178' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%p_shl6 = call i8 @_ssdm_op_BitConcatenate.i8.i6.i2(i6 %tmp_178, i2 0)" [pack3.c:14]   --->   Operation 32 'bitconcatenate' 'p_shl6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_161 = sub i8 %p_shl6, %c" [pack3.c:14]   --->   Operation 33 'sub' 'tmp_161' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.51> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 34 [1/2] (2.77ns)   --->   "%a_coeffs_load_2 = load i16* %a_coeffs_addr_2, align 2" [pack3.c:14]   --->   Operation 34 'load' 'a_coeffs_load_2' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_179 = trunc i16 %a_coeffs_load_2 to i8" [pack3.c:14]   --->   Operation 35 'trunc' 'tmp_179' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (3.02ns) (root node of TernaryAdder)   --->   "%c_1 = add i8 %tmp_161, %tmp_179" [pack3.c:14]   --->   Operation 36 'add' 'c_1' <Predicate = true> <Delay = 3.02> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.51> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 37 [1/1] (1.74ns)   --->   "%tmp_165 = add i10 2, %tmp" [pack3.c:15]   --->   Operation 37 'add' 'tmp_165' <Predicate = true> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_166 = zext i10 %tmp_165 to i64" [pack3.c:15]   --->   Operation 38 'zext' 'tmp_166' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%a_coeffs_addr_3 = getelementptr [677 x i16]* %a_coeffs, i64 0, i64 %tmp_166" [pack3.c:15]   --->   Operation 39 'getelementptr' 'a_coeffs_addr_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [2/2] (2.77ns)   --->   "%a_coeffs_load_3 = load i16* %a_coeffs_addr_3, align 2" [pack3.c:15]   --->   Operation 40 'load' 'a_coeffs_load_3' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_293_cast = zext i8 %i to i9" [pack3.c:18]   --->   Operation 41 'zext' 'tmp_293_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (1.73ns)   --->   "%sum = add i9 %tmp_293_cast, %tmp_170" [pack3.c:18]   --->   Operation 42 'add' 'sum' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 5.79>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_180 = shl i8 %c_1, 2" [pack3.c:15]   --->   Operation 43 'shl' 'tmp_180' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_164 = sub i8 %tmp_180, %c_1" [pack3.c:15]   --->   Operation 44 'sub' 'tmp_164' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.51> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 45 [1/2] (2.77ns)   --->   "%a_coeffs_load_3 = load i16* %a_coeffs_addr_3, align 2" [pack3.c:15]   --->   Operation 45 'load' 'a_coeffs_load_3' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_181 = trunc i16 %a_coeffs_load_3 to i8" [pack3.c:15]   --->   Operation 46 'trunc' 'tmp_181' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (3.02ns) (root node of TernaryAdder)   --->   "%c_2 = add i8 %tmp_181, %tmp_164" [pack3.c:15]   --->   Operation 47 'add' 'c_2' <Predicate = true> <Delay = 3.02> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.51> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 48 [1/1] (1.74ns)   --->   "%tmp_168 = add i10 1, %tmp" [pack3.c:16]   --->   Operation 48 'add' 'tmp_168' <Predicate = true> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_169 = zext i10 %tmp_168 to i64" [pack3.c:16]   --->   Operation 49 'zext' 'tmp_169' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%a_coeffs_addr_4 = getelementptr [677 x i16]* %a_coeffs, i64 0, i64 %tmp_169" [pack3.c:16]   --->   Operation 50 'getelementptr' 'a_coeffs_addr_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [2/2] (2.77ns)   --->   "%a_coeffs_load_4 = load i16* %a_coeffs_addr_4, align 2" [pack3.c:16]   --->   Operation 51 'load' 'a_coeffs_load_4' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_172 = zext i10 %tmp to i64" [pack3.c:17]   --->   Operation 52 'zext' 'tmp_172' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%a_coeffs_addr_5 = getelementptr [677 x i16]* %a_coeffs, i64 0, i64 %tmp_172" [pack3.c:17]   --->   Operation 53 'getelementptr' 'a_coeffs_addr_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [2/2] (2.77ns)   --->   "%a_coeffs_load_5 = load i16* %a_coeffs_addr_5, align 2" [pack3.c:17]   --->   Operation 54 'load' 'a_coeffs_load_5' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>

State 5 <SV = 4> <Delay = 5.79>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_182 = shl i8 %c_2, 2" [pack3.c:16]   --->   Operation 55 'shl' 'tmp_182' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_167 = sub i8 %tmp_182, %c_2" [pack3.c:16]   --->   Operation 56 'sub' 'tmp_167' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.51> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 57 [1/2] (2.77ns)   --->   "%a_coeffs_load_4 = load i16* %a_coeffs_addr_4, align 2" [pack3.c:16]   --->   Operation 57 'load' 'a_coeffs_load_4' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_183 = trunc i16 %a_coeffs_load_4 to i8" [pack3.c:16]   --->   Operation 58 'trunc' 'tmp_183' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (3.02ns) (root node of TernaryAdder)   --->   "%c_3 = add i8 %tmp_183, %tmp_167" [pack3.c:16]   --->   Operation 59 'add' 'c_3' <Predicate = true> <Delay = 3.02> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.51> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 60 [1/2] (2.77ns)   --->   "%a_coeffs_load_5 = load i16* %a_coeffs_addr_5, align 2" [pack3.c:17]   --->   Operation 60 'load' 'a_coeffs_load_5' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_185 = trunc i16 %a_coeffs_load_5 to i8" [pack3.c:17]   --->   Operation 61 'trunc' 'tmp_185' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 5.79>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_184 = shl i8 %c_3, 2" [pack3.c:17]   --->   Operation 62 'shl' 'tmp_184' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_171 = sub i8 %tmp_184, %c_3" [pack3.c:17]   --->   Operation 63 'sub' 'tmp_171' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.51> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 64 [1/1] (3.02ns) (root node of TernaryAdder)   --->   "%c_4 = add i8 %tmp_185, %tmp_171" [pack3.c:17]   --->   Operation 64 'add' 'c_4' <Predicate = true> <Delay = 3.02> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.51> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%sum_cast = zext i9 %sum to i64" [pack3.c:18]   --->   Operation 65 'zext' 'sum_cast' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%msg_addr_1 = getelementptr [272 x i8]* %msg, i64 0, i64 %sum_cast" [pack3.c:18]   --->   Operation 66 'getelementptr' 'msg_addr_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (2.77ns)   --->   "store i8 %c_4, i8* %msg_addr_1, align 1" [pack3.c:18]   --->   Operation 67 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "br label %1" [pack3.c:11]   --->   Operation 68 'br' <Predicate = true> <Delay = 0.00>

State 7 <SV = 2> <Delay = 5.54>
ST_7 : Operation 69 [1/2] (2.77ns)   --->   "%a_coeffs_load_6 = load i16* %a_coeffs_addr_6, align 2" [pack3.c:24]   --->   Operation 69 'load' 'a_coeffs_load_6' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_174 = trunc i16 %a_coeffs_load_6 to i8" [pack3.c:24]   --->   Operation 70 'trunc' 'tmp_174' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 71 [1/1] (1.73ns)   --->   "%sum2 = add i9 135, %tmp_170" [pack3.c:25]   --->   Operation 71 'add' 'sum2' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%sum2_cast = zext i9 %sum2 to i64" [pack3.c:25]   --->   Operation 72 'zext' 'sum2_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "%msg_addr = getelementptr [272 x i8]* %msg, i64 0, i64 %sum2_cast" [pack3.c:25]   --->   Operation 73 'getelementptr' 'msg_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 74 [1/1] (2.77ns)   --->   "store i8 %tmp_174, i8* %msg_addr, align 1" [pack3.c:25]   --->   Operation 74 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 272> <RAM>
ST_7 : Operation 75 [1/1] (0.00ns)   --->   "ret void" [pack3.c:27]   --->   Operation 75 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', pack3.c:11) [8]  (1.35 ns)

 <State 2>: 6.27ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', pack3.c:11) [8]  (0 ns)
	'add' operation ('tmp', pack3.c:13) [16]  (1.75 ns)
	'add' operation ('tmp_s', pack3.c:13) [17]  (1.75 ns)
	'getelementptr' operation ('a_coeffs_addr', pack3.c:13) [19]  (0 ns)
	'load' operation ('a_coeffs_load', pack3.c:13) on array 'a_coeffs' [20]  (2.77 ns)

 <State 3>: 5.79ns
The critical path consists of the following:
	'load' operation ('a_coeffs_load', pack3.c:13) on array 'a_coeffs' [20]  (2.77 ns)
	'sub' operation ('tmp_161', pack3.c:14) [24]  (0 ns)
	'add' operation ('c', pack3.c:14) [30]  (3.02 ns)

 <State 4>: 5.79ns
The critical path consists of the following:
	'load' operation ('a_coeffs_load_3', pack3.c:15) on array 'a_coeffs' [36]  (2.77 ns)
	'add' operation ('c', pack3.c:15) [38]  (3.02 ns)

 <State 5>: 5.79ns
The critical path consists of the following:
	'load' operation ('a_coeffs_load_4', pack3.c:16) on array 'a_coeffs' [44]  (2.77 ns)
	'add' operation ('c', pack3.c:16) [46]  (3.02 ns)

 <State 6>: 5.79ns
The critical path consists of the following:
	'shl' operation ('tmp_184', pack3.c:17) [47]  (0 ns)
	'sub' operation ('tmp_171', pack3.c:17) [48]  (0 ns)
	'add' operation ('c', pack3.c:17) [53]  (3.02 ns)
	'store' operation (pack3.c:18) of variable 'c', pack3.c:17 on array 'msg' [58]  (2.77 ns)

 <State 7>: 5.54ns
The critical path consists of the following:
	'load' operation ('a_coeffs_load_6', pack3.c:24) on array 'a_coeffs' [62]  (2.77 ns)
	'store' operation (pack3.c:25) of variable 'tmp_174', pack3.c:24 on array 'msg' [67]  (2.77 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
