// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "keccak_absorb.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic keccak_absorb::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic keccak_absorb::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> keccak_absorb::ap_ST_fsm_state1 = "1";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state2 = "10";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state3 = "100";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state4 = "1000";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state5 = "10000";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state6 = "100000";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> keccak_absorb::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_1 = "1";
const sc_lv<32> keccak_absorb::ap_const_lv32_3 = "11";
const sc_lv<1> keccak_absorb::ap_const_lv1_0 = "0";
const sc_lv<1> keccak_absorb::ap_const_lv1_1 = "1";
const sc_lv<32> keccak_absorb::ap_const_lv32_4 = "100";
const sc_lv<32> keccak_absorb::ap_const_lv32_5 = "101";
const sc_lv<32> keccak_absorb::ap_const_lv32_7 = "111";
const sc_lv<32> keccak_absorb::ap_const_lv32_8 = "1000";
const sc_lv<32> keccak_absorb::ap_const_lv32_A = "1010";
const sc_lv<32> keccak_absorb::ap_const_lv32_B = "1011";
const sc_lv<32> keccak_absorb::ap_const_lv32_C = "1100";
const sc_lv<5> keccak_absorb::ap_const_lv5_0 = "00000";
const sc_lv<9> keccak_absorb::ap_const_lv9_110 = "100010000";
const sc_lv<9> keccak_absorb::ap_const_lv9_0 = "000000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_6 = "110";
const sc_lv<32> keccak_absorb::ap_const_lv32_2 = "10";
const sc_lv<64> keccak_absorb::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<4> keccak_absorb::ap_const_lv4_0 = "0000";
const sc_lv<8> keccak_absorb::ap_const_lv8_0 = "00000000";
const sc_lv<32> keccak_absorb::ap_const_lv32_9 = "1001";
const sc_lv<32> keccak_absorb::ap_const_lv32_D = "1101";
const sc_lv<64> keccak_absorb::ap_const_lv64_87 = "10000111";
const sc_lv<8> keccak_absorb::ap_const_lv8_6 = "110";
const sc_lv<5> keccak_absorb::ap_const_lv5_19 = "11001";
const sc_lv<5> keccak_absorb::ap_const_lv5_1 = "1";
const sc_lv<9> keccak_absorb::ap_const_lv9_88 = "10001000";
const sc_lv<5> keccak_absorb::ap_const_lv5_11 = "10001";
const sc_lv<3> keccak_absorb::ap_const_lv3_0 = "000";
const sc_lv<9> keccak_absorb::ap_const_lv9_178 = "101111000";
const sc_lv<4> keccak_absorb::ap_const_lv4_8 = "1000";
const sc_lv<4> keccak_absorb::ap_const_lv4_1 = "1";
const sc_lv<8> keccak_absorb::ap_const_lv8_88 = "10001000";
const sc_lv<8> keccak_absorb::ap_const_lv8_1 = "1";
const sc_lv<8> keccak_absorb::ap_const_lv8_80 = "10000000";
const bool keccak_absorb::ap_const_boolean_1 = true;

keccak_absorb::keccak_absorb(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new keccak_absorb_t("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    t_U->address1(t_address1);
    t_U->ce1(t_ce1);
    t_U->we1(t_we1);
    t_U->d1(t_d1);
    t_U->q1(t_q1);
    grp_KeccakF1600_StatePer_fu_268 = new KeccakF1600_StatePer("grp_KeccakF1600_StatePer_fu_268");
    grp_KeccakF1600_StatePer_fu_268->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_fu_268->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_fu_268->ap_start(grp_KeccakF1600_StatePer_fu_268_ap_start);
    grp_KeccakF1600_StatePer_fu_268->ap_done(grp_KeccakF1600_StatePer_fu_268_ap_done);
    grp_KeccakF1600_StatePer_fu_268->ap_idle(grp_KeccakF1600_StatePer_fu_268_ap_idle);
    grp_KeccakF1600_StatePer_fu_268->ap_ready(grp_KeccakF1600_StatePer_fu_268_ap_ready);
    grp_KeccakF1600_StatePer_fu_268->state_address0(grp_KeccakF1600_StatePer_fu_268_state_address0);
    grp_KeccakF1600_StatePer_fu_268->state_ce0(grp_KeccakF1600_StatePer_fu_268_state_ce0);
    grp_KeccakF1600_StatePer_fu_268->state_we0(grp_KeccakF1600_StatePer_fu_268_state_we0);
    grp_KeccakF1600_StatePer_fu_268->state_d0(grp_KeccakF1600_StatePer_fu_268_state_d0);
    grp_KeccakF1600_StatePer_fu_268->state_q0(s_q0);
    grp_KeccakF1600_StatePer_fu_268->state_address1(grp_KeccakF1600_StatePer_fu_268_state_address1);
    grp_KeccakF1600_StatePer_fu_268->state_ce1(grp_KeccakF1600_StatePer_fu_268_state_ce1);
    grp_KeccakF1600_StatePer_fu_268->state_we1(grp_KeccakF1600_StatePer_fu_268_state_we1);
    grp_KeccakF1600_StatePer_fu_268->state_d1(grp_KeccakF1600_StatePer_fu_268_state_d1);
    grp_KeccakF1600_StatePer_fu_268->state_q1(s_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_438_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_438_p2 );

    SC_METHOD(thread_exitcond3_fu_415_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_2_reg_222 );

    SC_METHOD(thread_exitcond4_fu_303_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_reg_187 );

    SC_METHOD(thread_exitcond_fu_438_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_4_reg_233 );

    SC_METHOD(thread_grp_KeccakF1600_StatePer_fu_268_ap_start);
    sensitive << ( grp_KeccakF1600_StatePer_fu_268_ap_start_reg );

    SC_METHOD(thread_i_18_fu_287_p2);
    sensitive << ( i_reg_152 );

    SC_METHOD(thread_i_1_cast_fu_299_p1);
    sensitive << ( i_1_reg_187 );

    SC_METHOD(thread_i_20_fu_421_p2);
    sensitive << ( i_2_reg_222 );

    SC_METHOD(thread_i_21_fu_444_p2);
    sensitive << ( i_4_reg_233 );

    SC_METHOD(thread_i_2_cast6_fu_410_p1);
    sensitive << ( i_2_reg_222 );

    SC_METHOD(thread_i_3_fu_309_p2);
    sensitive << ( i_1_reg_187 );

    SC_METHOD(thread_i_4_cast5_fu_434_p1);
    sensitive << ( i_4_reg_233 );

    SC_METHOD(thread_i_5_fu_343_p2);
    sensitive << ( i_i_reg_210 );

    SC_METHOD(thread_i_6_fu_468_p2);
    sensitive << ( i_i2_reg_256 );

    SC_METHOD(thread_i_cast_fu_276_p1);
    sensitive << ( i_reg_152 );

    SC_METHOD(thread_i_i2_cast3_fu_458_p1);
    sensitive << ( i_i2_reg_256 );

    SC_METHOD(thread_i_i_cast8_fu_333_p1);
    sensitive << ( i_i_reg_210 );

    SC_METHOD(thread_indvars_iv_next_fu_327_p2);
    sensitive << ( i_19_reg_163 );

    SC_METHOD(thread_m_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sum_i_cast_fu_360_p1 );

    SC_METHOD(thread_m_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_p_rec_fu_404_p2);
    sensitive << ( p_01_rec_reg_175 );

    SC_METHOD(thread_r_3_fu_510_p2);
    sensitive << ( r_i1_reg_244 );
    sensitive << ( tmp_349_i_fu_504_p2 );

    SC_METHOD(thread_r_fu_391_p2);
    sensitive << ( r_i_reg_198 );
    sensitive << ( tmp_347_i_fu_385_p2 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_1_cast_reg_534 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( s_addr_7_reg_570 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_4_cast5_reg_599 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( s_addr_8_reg_630 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_268_state_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( i_cast_fu_276_p1 );

    SC_METHOD(thread_s_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_268_state_address1 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_268_state_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_268_state_ce1 );

    SC_METHOD(thread_s_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_268_state_d0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_213_fu_397_p2 );
    sensitive << ( tmp_214_fu_516_p2 );

    SC_METHOD(thread_s_d1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_268_state_d1 );

    SC_METHOD(thread_s_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_268_state_we0 );
    sensitive << ( tmp_fu_281_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_s_we1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_268_state_we1 );

    SC_METHOD(thread_sum_i1_cast_fu_479_p1);
    sensitive << ( sum_i1_fu_474_p2 );

    SC_METHOD(thread_sum_i1_fu_474_p2);
    sensitive << ( tmp_212_reg_612 );
    sensitive << ( i_i2_cast3_fu_458_p1 );

    SC_METHOD(thread_sum_i_cast_fu_360_p1);
    sensitive << ( sum_i_fu_355_p2 );

    SC_METHOD(thread_sum_i_fu_355_p2);
    sensitive << ( tmp_344_cast_reg_547 );
    sensitive << ( tmp1_fu_349_p2 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond3_fu_415_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i_2_cast6_fu_410_p1 );

    SC_METHOD(thread_t_address1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( sum_i1_cast_fu_479_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond3_fu_415_p2 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_t_ce1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_t_d0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond3_fu_415_p2 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_t_d1);
    sensitive << ( t_q0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond3_fu_415_p2 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_t_we1);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_tmp1_fu_349_p2);
    sensitive << ( p_01_rec_reg_175 );
    sensitive << ( i_i_cast8_fu_333_p1 );

    SC_METHOD(thread_tmp_209_fu_369_p1);
    sensitive << ( i_i_reg_210 );

    SC_METHOD(thread_tmp_211_fu_315_p3);
    sensitive << ( i_1_reg_187 );

    SC_METHOD(thread_tmp_212_fu_450_p3);
    sensitive << ( i_4_reg_233 );

    SC_METHOD(thread_tmp_213_fu_397_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_i_reg_198 );

    SC_METHOD(thread_tmp_214_fu_516_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_i1_reg_244 );

    SC_METHOD(thread_tmp_215_fu_488_p1);
    sensitive << ( i_i2_reg_256 );

    SC_METHOD(thread_tmp_344_cast_fu_323_p1);
    sensitive << ( tmp_211_fu_315_p3 );

    SC_METHOD(thread_tmp_346_i_cast_fu_381_p1);
    sensitive << ( tmp_346_i_fu_373_p3 );

    SC_METHOD(thread_tmp_346_i_fu_373_p3);
    sensitive << ( tmp_209_fu_369_p1 );

    SC_METHOD(thread_tmp_347_i_fu_385_p2);
    sensitive << ( tmp_i_43_fu_365_p1 );
    sensitive << ( tmp_346_i_cast_fu_381_p1 );

    SC_METHOD(thread_tmp_348_i_cast_fu_500_p1);
    sensitive << ( tmp_348_i_fu_492_p3 );

    SC_METHOD(thread_tmp_348_i_fu_492_p3);
    sensitive << ( tmp_215_fu_488_p1 );

    SC_METHOD(thread_tmp_349_i_fu_504_p2);
    sensitive << ( tmp_i1_fu_484_p1 );
    sensitive << ( tmp_348_i_cast_fu_500_p1 );

    SC_METHOD(thread_tmp_fu_281_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_152 );

    SC_METHOD(thread_tmp_i1_fu_484_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_i2_fu_462_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( i_i2_reg_256 );

    SC_METHOD(thread_tmp_i_43_fu_365_p1);
    sensitive << ( m_q0 );

    SC_METHOD(thread_tmp_i_fu_337_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_i_reg_210 );

    SC_METHOD(thread_tmp_s_fu_293_p2);
    sensitive << ( i_19_reg_163 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond4_fu_303_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_i_fu_337_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_268_ap_done );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond3_fu_415_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_438_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_i2_fu_462_p2 );
    sensitive << ( tmp_fu_281_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_s_fu_293_p2 );

    ap_CS_fsm = "00000000000001";
    grp_KeccakF1600_StatePer_fu_268_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "keccak_absorb_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, s_address0, "(port)s_address0");
    sc_trace(mVcdFile, s_ce0, "(port)s_ce0");
    sc_trace(mVcdFile, s_we0, "(port)s_we0");
    sc_trace(mVcdFile, s_d0, "(port)s_d0");
    sc_trace(mVcdFile, s_q0, "(port)s_q0");
    sc_trace(mVcdFile, s_address1, "(port)s_address1");
    sc_trace(mVcdFile, s_ce1, "(port)s_ce1");
    sc_trace(mVcdFile, s_we1, "(port)s_we1");
    sc_trace(mVcdFile, s_d1, "(port)s_d1");
    sc_trace(mVcdFile, s_q1, "(port)s_q1");
    sc_trace(mVcdFile, m_address0, "(port)m_address0");
    sc_trace(mVcdFile, m_ce0, "(port)m_ce0");
    sc_trace(mVcdFile, m_q0, "(port)m_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_18_fu_287_p2, "i_18_fu_287_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_cast_fu_299_p1, "i_1_cast_fu_299_p1");
    sc_trace(mVcdFile, i_1_cast_reg_534, "i_1_cast_reg_534");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_3_fu_309_p2, "i_3_fu_309_p2");
    sc_trace(mVcdFile, i_3_reg_542, "i_3_reg_542");
    sc_trace(mVcdFile, tmp_344_cast_fu_323_p1, "tmp_344_cast_fu_323_p1");
    sc_trace(mVcdFile, tmp_344_cast_reg_547, "tmp_344_cast_reg_547");
    sc_trace(mVcdFile, exitcond4_fu_303_p2, "exitcond4_fu_303_p2");
    sc_trace(mVcdFile, indvars_iv_next_fu_327_p2, "indvars_iv_next_fu_327_p2");
    sc_trace(mVcdFile, indvars_iv_next_reg_552, "indvars_iv_next_reg_552");
    sc_trace(mVcdFile, i_5_fu_343_p2, "i_5_fu_343_p2");
    sc_trace(mVcdFile, i_5_reg_560, "i_5_reg_560");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_i_fu_337_p2, "tmp_i_fu_337_p2");
    sc_trace(mVcdFile, s_addr_7_reg_570, "s_addr_7_reg_570");
    sc_trace(mVcdFile, r_fu_391_p2, "r_fu_391_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, p_rec_fu_404_p2, "p_rec_fu_404_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_ap_ready, "grp_KeccakF1600_StatePer_fu_268_ap_ready");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_ap_done, "grp_KeccakF1600_StatePer_fu_268_ap_done");
    sc_trace(mVcdFile, i_20_fu_421_p2, "i_20_fu_421_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exitcond3_fu_415_p2, "exitcond3_fu_415_p2");
    sc_trace(mVcdFile, i_4_cast5_fu_434_p1, "i_4_cast5_fu_434_p1");
    sc_trace(mVcdFile, i_4_cast5_reg_599, "i_4_cast5_reg_599");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_21_fu_444_p2, "i_21_fu_444_p2");
    sc_trace(mVcdFile, i_21_reg_607, "i_21_reg_607");
    sc_trace(mVcdFile, tmp_212_fu_450_p3, "tmp_212_fu_450_p3");
    sc_trace(mVcdFile, tmp_212_reg_612, "tmp_212_reg_612");
    sc_trace(mVcdFile, exitcond_fu_438_p2, "exitcond_fu_438_p2");
    sc_trace(mVcdFile, i_6_fu_468_p2, "i_6_fu_468_p2");
    sc_trace(mVcdFile, i_6_reg_620, "i_6_reg_620");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_i2_fu_462_p2, "tmp_i2_fu_462_p2");
    sc_trace(mVcdFile, s_addr_8_reg_630, "s_addr_8_reg_630");
    sc_trace(mVcdFile, r_3_fu_510_p2, "r_3_fu_510_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, t_address1, "t_address1");
    sc_trace(mVcdFile, t_ce1, "t_ce1");
    sc_trace(mVcdFile, t_we1, "t_we1");
    sc_trace(mVcdFile, t_d1, "t_d1");
    sc_trace(mVcdFile, t_q1, "t_q1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_ap_start, "grp_KeccakF1600_StatePer_fu_268_ap_start");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_ap_idle, "grp_KeccakF1600_StatePer_fu_268_ap_idle");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_state_address0, "grp_KeccakF1600_StatePer_fu_268_state_address0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_state_ce0, "grp_KeccakF1600_StatePer_fu_268_state_ce0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_state_we0, "grp_KeccakF1600_StatePer_fu_268_state_we0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_state_d0, "grp_KeccakF1600_StatePer_fu_268_state_d0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_state_address1, "grp_KeccakF1600_StatePer_fu_268_state_address1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_state_ce1, "grp_KeccakF1600_StatePer_fu_268_state_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_state_we1, "grp_KeccakF1600_StatePer_fu_268_state_we1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_state_d1, "grp_KeccakF1600_StatePer_fu_268_state_d1");
    sc_trace(mVcdFile, i_reg_152, "i_reg_152");
    sc_trace(mVcdFile, tmp_fu_281_p2, "tmp_fu_281_p2");
    sc_trace(mVcdFile, i_19_reg_163, "i_19_reg_163");
    sc_trace(mVcdFile, p_01_rec_reg_175, "p_01_rec_reg_175");
    sc_trace(mVcdFile, i_1_reg_187, "i_1_reg_187");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_s_fu_293_p2, "tmp_s_fu_293_p2");
    sc_trace(mVcdFile, r_i_reg_198, "r_i_reg_198");
    sc_trace(mVcdFile, i_i_reg_210, "i_i_reg_210");
    sc_trace(mVcdFile, i_2_reg_222, "i_2_reg_222");
    sc_trace(mVcdFile, i_4_reg_233, "i_4_reg_233");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, r_i1_reg_244, "r_i1_reg_244");
    sc_trace(mVcdFile, i_i2_reg_256, "i_i2_reg_256");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_268_ap_start_reg, "grp_KeccakF1600_StatePer_fu_268_ap_start_reg");
    sc_trace(mVcdFile, i_cast_fu_276_p1, "i_cast_fu_276_p1");
    sc_trace(mVcdFile, sum_i_cast_fu_360_p1, "sum_i_cast_fu_360_p1");
    sc_trace(mVcdFile, i_2_cast6_fu_410_p1, "i_2_cast6_fu_410_p1");
    sc_trace(mVcdFile, sum_i1_cast_fu_479_p1, "sum_i1_cast_fu_479_p1");
    sc_trace(mVcdFile, tmp_213_fu_397_p2, "tmp_213_fu_397_p2");
    sc_trace(mVcdFile, tmp_214_fu_516_p2, "tmp_214_fu_516_p2");
    sc_trace(mVcdFile, tmp_211_fu_315_p3, "tmp_211_fu_315_p3");
    sc_trace(mVcdFile, i_i_cast8_fu_333_p1, "i_i_cast8_fu_333_p1");
    sc_trace(mVcdFile, tmp1_fu_349_p2, "tmp1_fu_349_p2");
    sc_trace(mVcdFile, sum_i_fu_355_p2, "sum_i_fu_355_p2");
    sc_trace(mVcdFile, tmp_209_fu_369_p1, "tmp_209_fu_369_p1");
    sc_trace(mVcdFile, tmp_346_i_fu_373_p3, "tmp_346_i_fu_373_p3");
    sc_trace(mVcdFile, tmp_i_43_fu_365_p1, "tmp_i_43_fu_365_p1");
    sc_trace(mVcdFile, tmp_346_i_cast_fu_381_p1, "tmp_346_i_cast_fu_381_p1");
    sc_trace(mVcdFile, tmp_347_i_fu_385_p2, "tmp_347_i_fu_385_p2");
    sc_trace(mVcdFile, i_i2_cast3_fu_458_p1, "i_i2_cast3_fu_458_p1");
    sc_trace(mVcdFile, sum_i1_fu_474_p2, "sum_i1_fu_474_p2");
    sc_trace(mVcdFile, tmp_215_fu_488_p1, "tmp_215_fu_488_p1");
    sc_trace(mVcdFile, tmp_348_i_fu_492_p3, "tmp_348_i_fu_492_p3");
    sc_trace(mVcdFile, tmp_i1_fu_484_p1, "tmp_i1_fu_484_p1");
    sc_trace(mVcdFile, tmp_348_i_cast_fu_500_p1, "tmp_348_i_cast_fu_500_p1");
    sc_trace(mVcdFile, tmp_349_i_fu_504_p2, "tmp_349_i_fu_504_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

keccak_absorb::~keccak_absorb() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
    delete grp_KeccakF1600_StatePer_fu_268;
}

void keccak_absorb::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakF1600_StatePer_fu_268_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
             esl_seteq<1,1,1>(exitcond4_fu_303_p2.read(), ap_const_lv1_1))) {
            grp_KeccakF1600_StatePer_fu_268_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakF1600_StatePer_fu_268_ap_ready.read())) {
            grp_KeccakF1600_StatePer_fu_268_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_281_p2.read()))) {
        i_19_reg_163 = ap_const_lv9_110;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_268_ap_done.read(), ap_const_logic_1))) {
        i_19_reg_163 = indvars_iv_next_reg_552.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_293_p2.read()))) {
        i_1_reg_187 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_1_reg_187 = i_3_reg_542.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_293_p2.read()))) {
        i_2_reg_222 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_415_p2.read()))) {
        i_2_reg_222 = i_20_fu_421_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_4_reg_233 = i_21_reg_607.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_4_reg_233 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_i2_reg_256 = i_6_reg_620.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()))) {
        i_i2_reg_256 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_i_reg_210 = i_5_reg_560.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_303_p2.read(), ap_const_lv1_0))) {
        i_i_reg_210 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_281_p2.read()))) {
        i_reg_152 = i_18_fu_287_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_152 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_281_p2.read()))) {
        p_01_rec_reg_175 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_268_ap_done.read(), ap_const_logic_1))) {
        p_01_rec_reg_175 = p_rec_fu_404_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        r_i1_reg_244 = r_3_fu_510_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()))) {
        r_i1_reg_244 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_i_reg_198 = r_fu_391_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_303_p2.read(), ap_const_lv1_0))) {
        r_i_reg_198 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_1_cast_reg_534 = i_1_cast_fu_299_p1.read();
        i_3_reg_542 = i_3_fu_309_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_21_reg_607 = i_21_fu_444_p2.read();
        i_4_cast5_reg_599 = i_4_cast5_fu_434_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_5_reg_560 = i_5_fu_343_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_6_reg_620 = i_6_fu_468_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond4_fu_303_p2.read(), ap_const_lv1_1))) {
        indvars_iv_next_reg_552 = indvars_iv_next_fu_327_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_337_p2.read()))) {
        s_addr_7_reg_570 =  (sc_lv<5>) (i_1_cast_reg_534.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i2_fu_462_p2.read()))) {
        s_addr_8_reg_630 =  (sc_lv<5>) (i_4_cast5_reg_599.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()))) {
        tmp_212_reg_612 = tmp_212_fu_450_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond4_fu_303_p2.read(), ap_const_lv1_0))) {
        tmp_344_cast_reg_547 = tmp_344_cast_fu_323_p1.read();
    }
}

void keccak_absorb::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void keccak_absorb::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void keccak_absorb::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void keccak_absorb::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void keccak_absorb::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void keccak_absorb::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void keccak_absorb::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void keccak_absorb::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void keccak_absorb::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void keccak_absorb::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void keccak_absorb::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void keccak_absorb::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void keccak_absorb::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void keccak_absorb::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void keccak_absorb::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_438_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void keccak_absorb::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_438_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void keccak_absorb::thread_exitcond3_fu_415_p2() {
    exitcond3_fu_415_p2 = (!i_2_reg_222.read().is_01() || !ap_const_lv8_88.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_222.read() == ap_const_lv8_88);
}

void keccak_absorb::thread_exitcond4_fu_303_p2() {
    exitcond4_fu_303_p2 = (!i_1_reg_187.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_187.read() == ap_const_lv5_11);
}

void keccak_absorb::thread_exitcond_fu_438_p2() {
    exitcond_fu_438_p2 = (!i_4_reg_233.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_4_reg_233.read() == ap_const_lv5_11);
}

void keccak_absorb::thread_grp_KeccakF1600_StatePer_fu_268_ap_start() {
    grp_KeccakF1600_StatePer_fu_268_ap_start = grp_KeccakF1600_StatePer_fu_268_ap_start_reg.read();
}

void keccak_absorb::thread_i_18_fu_287_p2() {
    i_18_fu_287_p2 = (!i_reg_152.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_152.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_i_1_cast_fu_299_p1() {
    i_1_cast_fu_299_p1 = esl_zext<64,5>(i_1_reg_187.read());
}

void keccak_absorb::thread_i_20_fu_421_p2() {
    i_20_fu_421_p2 = (!i_2_reg_222.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_2_reg_222.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void keccak_absorb::thread_i_21_fu_444_p2() {
    i_21_fu_444_p2 = (!i_4_reg_233.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_4_reg_233.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_i_2_cast6_fu_410_p1() {
    i_2_cast6_fu_410_p1 = esl_zext<64,8>(i_2_reg_222.read());
}

void keccak_absorb::thread_i_3_fu_309_p2() {
    i_3_fu_309_p2 = (!i_1_reg_187.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_1_reg_187.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb::thread_i_4_cast5_fu_434_p1() {
    i_4_cast5_fu_434_p1 = esl_zext<64,5>(i_4_reg_233.read());
}

void keccak_absorb::thread_i_5_fu_343_p2() {
    i_5_fu_343_p2 = (!i_i_reg_210.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i_reg_210.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void keccak_absorb::thread_i_6_fu_468_p2() {
    i_6_fu_468_p2 = (!i_i2_reg_256.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i2_reg_256.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void keccak_absorb::thread_i_cast_fu_276_p1() {
    i_cast_fu_276_p1 = esl_zext<64,5>(i_reg_152.read());
}

void keccak_absorb::thread_i_i2_cast3_fu_458_p1() {
    i_i2_cast3_fu_458_p1 = esl_zext<8,4>(i_i2_reg_256.read());
}

void keccak_absorb::thread_i_i_cast8_fu_333_p1() {
    i_i_cast8_fu_333_p1 = esl_zext<9,4>(i_i_reg_210.read());
}

void keccak_absorb::thread_indvars_iv_next_fu_327_p2() {
    indvars_iv_next_fu_327_p2 = (!i_19_reg_163.read().is_01() || !ap_const_lv9_178.is_01())? sc_lv<9>(): (sc_biguint<9>(i_19_reg_163.read()) + sc_bigint<9>(ap_const_lv9_178));
}

void keccak_absorb::thread_m_address0() {
    m_address0 =  (sc_lv<9>) (sum_i_cast_fu_360_p1.read());
}

void keccak_absorb::thread_m_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_ce0 = ap_const_logic_1;
    } else {
        m_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_p_rec_fu_404_p2() {
    p_rec_fu_404_p2 = (!p_01_rec_reg_175.read().is_01() || !ap_const_lv9_88.is_01())? sc_lv<9>(): (sc_biguint<9>(p_01_rec_reg_175.read()) + sc_biguint<9>(ap_const_lv9_88));
}

void keccak_absorb::thread_r_3_fu_510_p2() {
    r_3_fu_510_p2 = (tmp_349_i_fu_504_p2.read() | r_i1_reg_244.read());
}

void keccak_absorb::thread_r_fu_391_p2() {
    r_fu_391_p2 = (tmp_347_i_fu_385_p2.read() | r_i_reg_198.read());
}

void keccak_absorb::thread_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        s_address0 = s_addr_8_reg_630.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        s_address0 =  (sc_lv<5>) (i_4_cast5_reg_599.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_address0 = s_addr_7_reg_570.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        s_address0 =  (sc_lv<5>) (i_1_cast_reg_534.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_address0 =  (sc_lv<5>) (i_cast_fu_276_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_address0 = grp_KeccakF1600_StatePer_fu_268_state_address0.read();
    } else {
        s_address0 = "XXXXX";
    }
}

void keccak_absorb::thread_s_address1() {
    s_address1 = grp_KeccakF1600_StatePer_fu_268_state_address1.read();
}

void keccak_absorb::thread_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        s_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_ce0 = grp_KeccakF1600_StatePer_fu_268_state_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_ce1 = grp_KeccakF1600_StatePer_fu_268_state_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        s_d0 = tmp_214_fu_516_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_d0 = tmp_213_fu_397_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_d0 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_d0 = grp_KeccakF1600_StatePer_fu_268_state_d0.read();
    } else {
        s_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void keccak_absorb::thread_s_d1() {
    s_d1 = grp_KeccakF1600_StatePer_fu_268_state_d1.read();
}

void keccak_absorb::thread_s_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_281_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        s_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_we0 = grp_KeccakF1600_StatePer_fu_268_state_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_s_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_we1 = grp_KeccakF1600_StatePer_fu_268_state_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_sum_i1_cast_fu_479_p1() {
    sum_i1_cast_fu_479_p1 = esl_zext<64,8>(sum_i1_fu_474_p2.read());
}

void keccak_absorb::thread_sum_i1_fu_474_p2() {
    sum_i1_fu_474_p2 = (!tmp_212_reg_612.read().is_01() || !i_i2_cast3_fu_458_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_212_reg_612.read()) + sc_biguint<8>(i_i2_cast3_fu_458_p1.read()));
}

void keccak_absorb::thread_sum_i_cast_fu_360_p1() {
    sum_i_cast_fu_360_p1 = esl_zext<64,9>(sum_i_fu_355_p2.read());
}

void keccak_absorb::thread_sum_i_fu_355_p2() {
    sum_i_fu_355_p2 = (!tmp_344_cast_reg_547.read().is_01() || !tmp1_fu_349_p2.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_344_cast_reg_547.read()) + sc_biguint<9>(tmp1_fu_349_p2.read()));
}

void keccak_absorb::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_address0 =  (sc_lv<8>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_415_p2.read()))) {
        t_address0 =  (sc_lv<8>) (ap_const_lv64_87);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_415_p2.read()))) {
        t_address0 =  (sc_lv<8>) (i_2_cast6_fu_410_p1.read());
    } else {
        t_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_address1 =  (sc_lv<8>) (sum_i1_cast_fu_479_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_address1 =  (sc_lv<8>) (ap_const_lv64_87);
    } else {
        t_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_415_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_415_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        t_ce1 = ap_const_logic_1;
    } else {
        t_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_d0 = ap_const_lv8_6;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_415_p2.read()))) {
        t_d0 = ap_const_lv8_0;
    } else {
        t_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb::thread_t_d1() {
    t_d1 = (t_q0.read() | ap_const_lv8_80);
}

void keccak_absorb::thread_t_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_415_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_t_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_we1 = ap_const_logic_1;
    } else {
        t_we1 = ap_const_logic_0;
    }
}

void keccak_absorb::thread_tmp1_fu_349_p2() {
    tmp1_fu_349_p2 = (!i_i_cast8_fu_333_p1.read().is_01() || !p_01_rec_reg_175.read().is_01())? sc_lv<9>(): (sc_biguint<9>(i_i_cast8_fu_333_p1.read()) + sc_biguint<9>(p_01_rec_reg_175.read()));
}

void keccak_absorb::thread_tmp_209_fu_369_p1() {
    tmp_209_fu_369_p1 = i_i_reg_210.read().range(3-1, 0);
}

void keccak_absorb::thread_tmp_211_fu_315_p3() {
    tmp_211_fu_315_p3 = esl_concat<5,3>(i_1_reg_187.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_212_fu_450_p3() {
    tmp_212_fu_450_p3 = esl_concat<5,3>(i_4_reg_233.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_213_fu_397_p2() {
    tmp_213_fu_397_p2 = (s_q0.read() ^ r_i_reg_198.read());
}

void keccak_absorb::thread_tmp_214_fu_516_p2() {
    tmp_214_fu_516_p2 = (s_q0.read() ^ r_i1_reg_244.read());
}

void keccak_absorb::thread_tmp_215_fu_488_p1() {
    tmp_215_fu_488_p1 = i_i2_reg_256.read().range(3-1, 0);
}

void keccak_absorb::thread_tmp_344_cast_fu_323_p1() {
    tmp_344_cast_fu_323_p1 = esl_zext<9,8>(tmp_211_fu_315_p3.read());
}

void keccak_absorb::thread_tmp_346_i_cast_fu_381_p1() {
    tmp_346_i_cast_fu_381_p1 = esl_zext<64,6>(tmp_346_i_fu_373_p3.read());
}

void keccak_absorb::thread_tmp_346_i_fu_373_p3() {
    tmp_346_i_fu_373_p3 = esl_concat<3,3>(tmp_209_fu_369_p1.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_347_i_fu_385_p2() {
    tmp_347_i_fu_385_p2 = (!tmp_346_i_cast_fu_381_p1.read().is_01())? sc_lv<64>(): tmp_i_43_fu_365_p1.read() << (unsigned short)tmp_346_i_cast_fu_381_p1.read().to_uint();
}

void keccak_absorb::thread_tmp_348_i_cast_fu_500_p1() {
    tmp_348_i_cast_fu_500_p1 = esl_zext<64,6>(tmp_348_i_fu_492_p3.read());
}

void keccak_absorb::thread_tmp_348_i_fu_492_p3() {
    tmp_348_i_fu_492_p3 = esl_concat<3,3>(tmp_215_fu_488_p1.read(), ap_const_lv3_0);
}

void keccak_absorb::thread_tmp_349_i_fu_504_p2() {
    tmp_349_i_fu_504_p2 = (!tmp_348_i_cast_fu_500_p1.read().is_01())? sc_lv<64>(): tmp_i1_fu_484_p1.read() << (unsigned short)tmp_348_i_cast_fu_500_p1.read().to_uint();
}

void keccak_absorb::thread_tmp_fu_281_p2() {
    tmp_fu_281_p2 = (!i_reg_152.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_152.read() == ap_const_lv5_19);
}

void keccak_absorb::thread_tmp_i1_fu_484_p1() {
    tmp_i1_fu_484_p1 = esl_zext<64,8>(t_q1.read());
}

void keccak_absorb::thread_tmp_i2_fu_462_p2() {
    tmp_i2_fu_462_p2 = (!i_i2_reg_256.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i2_reg_256.read() == ap_const_lv4_8);
}

void keccak_absorb::thread_tmp_i_43_fu_365_p1() {
    tmp_i_43_fu_365_p1 = esl_zext<64,8>(m_q0.read());
}

void keccak_absorb::thread_tmp_i_fu_337_p2() {
    tmp_i_fu_337_p2 = (!i_i_reg_210.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_210.read() == ap_const_lv4_8);
}

void keccak_absorb::thread_tmp_s_fu_293_p2() {
    tmp_s_fu_293_p2 = (!i_19_reg_163.read().is_01() || !ap_const_lv9_88.is_01())? sc_lv<1>(): (sc_biguint<9>(i_19_reg_163.read()) < sc_biguint<9>(ap_const_lv9_88));
}

void keccak_absorb::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_281_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_293_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond4_fu_303_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_337_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_268_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_415_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_438_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i2_fu_462_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

}

