// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _poly_S3_tobytes_HH_
#define _poly_S3_tobytes_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct poly_S3_tobytes : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > msg_address0;
    sc_out< sc_logic > msg_ce0;
    sc_out< sc_logic > msg_we0;
    sc_out< sc_lv<8> > msg_d0;
    sc_in< sc_lv<10> > msg_offset;
    sc_out< sc_lv<10> > a_coeffs_address0;
    sc_out< sc_logic > a_coeffs_ce0;
    sc_in< sc_lv<16> > a_coeffs_q0;
    sc_out< sc_lv<10> > a_coeffs_address1;
    sc_out< sc_logic > a_coeffs_ce1;
    sc_in< sc_lv<16> > a_coeffs_q1;


    // Module declarations
    poly_S3_tobytes(sc_module_name name);
    SC_HAS_PROCESS(poly_S3_tobytes);

    ~poly_S3_tobytes();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > tmp_170_fu_137_p1;
    sc_signal< sc_lv<9> > tmp_170_reg_337;
    sc_signal< sc_lv<8> > i_9_fu_151_p2;
    sc_signal< sc_lv<8> > i_9_reg_346;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > tmp_fu_165_p2;
    sc_signal< sc_lv<10> > tmp_reg_351;
    sc_signal< sc_lv<1> > exitcond_fu_145_p2;
    sc_signal< sc_lv<8> > c_1_fu_219_p2;
    sc_signal< sc_lv<8> > c_1_reg_373;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > sum_fu_239_p2;
    sc_signal< sc_lv<9> > sum_reg_384;
    sc_signal< sc_lv<8> > c_2_fu_258_p2;
    sc_signal< sc_lv<8> > c_2_reg_389;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > c_3_fu_292_p2;
    sc_signal< sc_lv<8> > c_3_reg_405;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > tmp_185_fu_298_p1;
    sc_signal< sc_lv<8> > tmp_185_reg_411;
    sc_signal< sc_lv<8> > i_reg_125;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > tmp_160_fu_177_p1;
    sc_signal< sc_lv<64> > tmp_163_fu_188_p1;
    sc_signal< sc_lv<64> > tmp_166_fu_230_p1;
    sc_signal< sc_lv<64> > tmp_169_fu_269_p1;
    sc_signal< sc_lv<64> > tmp_172_fu_274_p1;
    sc_signal< sc_lv<64> > sum_cast_fu_318_p1;
    sc_signal< sc_lv<64> > sum2_cast_fu_332_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > c_4_fu_312_p2;
    sc_signal< sc_lv<8> > tmp_174_fu_322_p1;
    sc_signal< sc_lv<10> > p_shl7_fu_157_p3;
    sc_signal< sc_lv<10> > i_cast1_fu_141_p1;
    sc_signal< sc_lv<10> > tmp_s_fu_171_p2;
    sc_signal< sc_lv<10> > tmp_162_fu_182_p2;
    sc_signal< sc_lv<6> > tmp_178_fu_197_p1;
    sc_signal< sc_lv<8> > p_shl6_fu_201_p3;
    sc_signal< sc_lv<8> > c_fu_193_p1;
    sc_signal< sc_lv<8> > tmp_161_fu_209_p2;
    sc_signal< sc_lv<8> > tmp_179_fu_215_p1;
    sc_signal< sc_lv<10> > tmp_165_fu_225_p2;
    sc_signal< sc_lv<9> > tmp_293_cast_fu_235_p1;
    sc_signal< sc_lv<8> > tmp_180_fu_244_p2;
    sc_signal< sc_lv<8> > tmp_181_fu_254_p1;
    sc_signal< sc_lv<8> > tmp_164_fu_249_p2;
    sc_signal< sc_lv<10> > tmp_168_fu_264_p2;
    sc_signal< sc_lv<8> > tmp_182_fu_278_p2;
    sc_signal< sc_lv<8> > tmp_183_fu_288_p1;
    sc_signal< sc_lv<8> > tmp_167_fu_283_p2;
    sc_signal< sc_lv<8> > tmp_184_fu_302_p2;
    sc_signal< sc_lv<8> > tmp_171_fu_307_p2;
    sc_signal< sc_lv<9> > sum2_fu_327_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<64> ap_const_lv64_2A3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<8> ap_const_lv8_87;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<10> ap_const_lv10_4;
    static const sc_lv<10> ap_const_lv10_3;
    static const sc_lv<10> ap_const_lv10_2;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<9> ap_const_lv9_87;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_coeffs_address0();
    void thread_a_coeffs_address1();
    void thread_a_coeffs_ce0();
    void thread_a_coeffs_ce1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_1_fu_219_p2();
    void thread_c_2_fu_258_p2();
    void thread_c_3_fu_292_p2();
    void thread_c_4_fu_312_p2();
    void thread_c_fu_193_p1();
    void thread_exitcond_fu_145_p2();
    void thread_i_9_fu_151_p2();
    void thread_i_cast1_fu_141_p1();
    void thread_msg_address0();
    void thread_msg_ce0();
    void thread_msg_d0();
    void thread_msg_we0();
    void thread_p_shl6_fu_201_p3();
    void thread_p_shl7_fu_157_p3();
    void thread_sum2_cast_fu_332_p1();
    void thread_sum2_fu_327_p2();
    void thread_sum_cast_fu_318_p1();
    void thread_sum_fu_239_p2();
    void thread_tmp_160_fu_177_p1();
    void thread_tmp_161_fu_209_p2();
    void thread_tmp_162_fu_182_p2();
    void thread_tmp_163_fu_188_p1();
    void thread_tmp_164_fu_249_p2();
    void thread_tmp_165_fu_225_p2();
    void thread_tmp_166_fu_230_p1();
    void thread_tmp_167_fu_283_p2();
    void thread_tmp_168_fu_264_p2();
    void thread_tmp_169_fu_269_p1();
    void thread_tmp_170_fu_137_p1();
    void thread_tmp_171_fu_307_p2();
    void thread_tmp_172_fu_274_p1();
    void thread_tmp_174_fu_322_p1();
    void thread_tmp_178_fu_197_p1();
    void thread_tmp_179_fu_215_p1();
    void thread_tmp_180_fu_244_p2();
    void thread_tmp_181_fu_254_p1();
    void thread_tmp_182_fu_278_p2();
    void thread_tmp_183_fu_288_p1();
    void thread_tmp_184_fu_302_p2();
    void thread_tmp_185_fu_298_p1();
    void thread_tmp_293_cast_fu_235_p1();
    void thread_tmp_fu_165_p2();
    void thread_tmp_s_fu_171_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
