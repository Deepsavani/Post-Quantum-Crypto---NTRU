// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "poly_Sq_tobytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic poly_Sq_tobytes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic poly_Sq_tobytes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state1 = "1";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state2 = "10";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state3 = "100";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state4 = "1000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state5 = "10000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state6 = "100000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> poly_Sq_tobytes::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_1 = "1";
const sc_lv<1> poly_Sq_tobytes::ap_const_lv1_0 = "0";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_2 = "10";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_4 = "100";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_5 = "101";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_6 = "110";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_7 = "111";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_8 = "1000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_A = "1010";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_C = "1100";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_D = "1101";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_E = "1110";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_F = "1111";
const sc_lv<7> poly_Sq_tobytes::ap_const_lv7_0 = "0000000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_9 = "1001";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_0 = "0000000000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_3 = "11";
const sc_lv<4> poly_Sq_tobytes::ap_const_lv4_0 = "0000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_B = "1011";
const sc_lv<3> poly_Sq_tobytes::ap_const_lv3_0 = "000";
const sc_lv<1> poly_Sq_tobytes::ap_const_lv1_1 = "1";
const sc_lv<4> poly_Sq_tobytes::ap_const_lv4_4 = "100";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_1 = "1";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_2 = "10";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_3 = "11";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_4 = "100";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_5 = "101";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_6 = "110";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_7 = "111";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_3A1 = "1110100001";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_3A0 = "1110100000";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_39F = "1110011111";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_39E = "1110011110";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_39D = "1110011101";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_10 = "10000";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_39C = "1110011100";
const sc_lv<16> poly_Sq_tobytes::ap_const_lv16_0 = "0000000000000000";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_B = "1011";
const sc_lv<7> poly_Sq_tobytes::ap_const_lv7_54 = "1010100";
const sc_lv<7> poly_Sq_tobytes::ap_const_lv7_1 = "1";
const sc_lv<4> poly_Sq_tobytes::ap_const_lv4_8 = "1000";
const sc_lv<4> poly_Sq_tobytes::ap_const_lv4_1 = "1";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_1 = "1";
const sc_lv<6> poly_Sq_tobytes::ap_const_lv6_0 = "000000";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_2 = "10";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_3 = "11";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_4 = "100";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_5 = "101";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_6 = "110";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_7 = "111";
const sc_lv<2> poly_Sq_tobytes::ap_const_lv2_0 = "00";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_8 = "1000";
const sc_lv<5> poly_Sq_tobytes::ap_const_lv5_0 = "00000";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_9 = "1001";
const sc_lv<10> poly_Sq_tobytes::ap_const_lv10_A = "1010";
const sc_lv<3> poly_Sq_tobytes::ap_const_lv3_4 = "100";
const sc_lv<3> poly_Sq_tobytes::ap_const_lv3_1 = "1";
const bool poly_Sq_tobytes::ap_const_boolean_1 = true;

poly_Sq_tobytes::poly_Sq_tobytes(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new poly_Sq_tobytes_t("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    t_U->address1(t_address1);
    t_U->ce1(t_ce1);
    t_U->we1(t_we1);
    t_U->d1(a_coeffs_q0);
    t_U->q1(t_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_coeffs_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_74_fu_567_p1 );
    sensitive << ( tmp_s_fu_941_p1 );

    SC_METHOD(thread_a_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_exitcond1_fu_921_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( j_1_reg_456 );

    SC_METHOD(thread_exitcond2_fu_550_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_444 );

    SC_METHOD(thread_exitcond3_fu_526_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_421 );

    SC_METHOD(thread_exitcond_fu_951_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( j_2_reg_468 );

    SC_METHOD(thread_grp_fu_490_p4);
    sensitive << ( t_q1 );

    SC_METHOD(thread_grp_fu_500_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_grp_fu_510_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_j_3_fu_556_p2);
    sensitive << ( j_reg_444 );

    SC_METHOD(thread_j_4_fu_962_p2);
    sensitive << ( j_2_reg_468 );

    SC_METHOD(thread_j_cast6_fu_546_p1);
    sensitive << ( j_reg_444 );

    SC_METHOD(thread_next_mul_fu_520_p2);
    sensitive << ( phi_mul_reg_432 );

    SC_METHOD(thread_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_38_fu_582_p1 );
    sensitive << ( tmp_46_fu_661_p1 );
    sensitive << ( tmp_52_fu_709_p1 );
    sensitive << ( tmp_58_fu_778_p1 );
    sensitive << ( tmp_64_fu_855_p1 );
    sensitive << ( tmp_71_fu_916_p1 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_42_fu_622_p1 );
    sensitive << ( tmp_49_fu_672_p1 );
    sensitive << ( tmp_55_fu_739_p1 );
    sensitive << ( tmp_61_fu_800_p1 );
    sensitive << ( tmp_68_fu_895_p1 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_69_reg_1166 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_37_fu_577_p1 );
    sensitive << ( tmp_44_fu_649_p2 );
    sensitive << ( tmp_50_fu_694_p3 );
    sensitive << ( tmp_56_fu_766_p2 );
    sensitive << ( tmp_62_fu_840_p3 );
    sensitive << ( tmp_84_fu_1004_p3 );
    sensitive << ( tmp_88_fu_1033_p2 );
    sensitive << ( tmp_98_fu_1068_p1 );

    SC_METHOD(thread_r_d1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( t_q0 );
    sensitive << ( t_q1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_40_fu_609_p2 );
    sensitive << ( tmp_53_fu_726_p2 );
    sensitive << ( tmp_66_fu_882_p2 );
    sensitive << ( tmp_78_fu_980_p2 );
    sensitive << ( tmp_91_fu_1061_p2 );

    SC_METHOD(thread_r_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_we1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_951_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_75_fu_572_p1 );
    sensitive << ( tmp_93_fu_957_p1 );

    SC_METHOD(thread_t_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_36_fu_946_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_951_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_t_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_t_d0);
    sensitive << ( a_coeffs_q0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_951_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_951_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_t_we1);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_tmp_10_fu_587_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_11_fu_601_p3);
    sensitive << ( tmp_39_fu_597_p1 );

    SC_METHOD(thread_tmp_14_fu_641_p3);
    sensitive << ( tmp_43_fu_637_p1 );

    SC_METHOD(thread_tmp_20_fu_718_p3);
    sensitive << ( tmp_76_fu_714_p1 );

    SC_METHOD(thread_tmp_21_fu_681_p3);
    sensitive << ( tmp_72_fu_677_p1 );

    SC_METHOD(thread_tmp_23_fu_758_p3);
    sensitive << ( tmp_79_fu_754_p1 );

    SC_METHOD(thread_tmp_24_fu_689_p2);
    sensitive << ( tmp_17_reg_1151 );
    sensitive << ( tmp_21_fu_681_p3 );

    SC_METHOD(thread_tmp_27_fu_872_p4);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_28_fu_933_p3);
    sensitive << ( j_1_reg_456 );

    SC_METHOD(thread_tmp_32_fu_819_p3);
    sensitive << ( tmp_86_fu_815_p1 );

    SC_METHOD(thread_tmp_33_fu_827_p2);
    sensitive << ( tmp_30_reg_1161 );
    sensitive << ( tmp_32_fu_819_p3 );

    SC_METHOD(thread_tmp_34_fu_532_p2);
    sensitive << ( i_reg_421 );

    SC_METHOD(thread_tmp_35_fu_927_p2);
    sensitive << ( j_1_reg_456 );

    SC_METHOD(thread_tmp_36_fu_946_p1);
    sensitive << ( j_1_reg_456 );

    SC_METHOD(thread_tmp_37_fu_577_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_38_fu_582_p1);
    sensitive << ( phi_mul_reg_432 );

    SC_METHOD(thread_tmp_39_fu_597_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_40_fu_609_p2);
    sensitive << ( tmp_11_fu_601_p3 );
    sensitive << ( tmp_10_fu_587_p4 );

    SC_METHOD(thread_tmp_41_fu_616_p2);
    sensitive << ( phi_mul_reg_432 );

    SC_METHOD(thread_tmp_42_fu_622_p1);
    sensitive << ( tmp_41_fu_616_p2 );

    SC_METHOD(thread_tmp_43_fu_637_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_44_fu_649_p2);
    sensitive << ( tmp_13_reg_1146 );
    sensitive << ( tmp_14_fu_641_p3 );

    SC_METHOD(thread_tmp_45_fu_655_p2);
    sensitive << ( phi_mul_reg_432 );

    SC_METHOD(thread_tmp_46_fu_661_p1);
    sensitive << ( tmp_45_fu_655_p2 );

    SC_METHOD(thread_tmp_48_fu_666_p2);
    sensitive << ( phi_mul_reg_432 );

    SC_METHOD(thread_tmp_49_fu_672_p1);
    sensitive << ( tmp_48_fu_666_p2 );

    SC_METHOD(thread_tmp_50_fu_694_p3);
    sensitive << ( grp_fu_500_p4 );
    sensitive << ( tmp_24_fu_689_p2 );

    SC_METHOD(thread_tmp_51_fu_703_p2);
    sensitive << ( phi_mul_reg_432 );

    SC_METHOD(thread_tmp_52_fu_709_p1);
    sensitive << ( tmp_51_fu_703_p2 );

    SC_METHOD(thread_tmp_53_fu_726_p2);
    sensitive << ( tmp_20_fu_718_p3 );
    sensitive << ( grp_fu_510_p4 );

    SC_METHOD(thread_tmp_54_fu_733_p2);
    sensitive << ( phi_mul_reg_432 );

    SC_METHOD(thread_tmp_55_fu_739_p1);
    sensitive << ( tmp_54_fu_733_p2 );

    SC_METHOD(thread_tmp_56_fu_766_p2);
    sensitive << ( tmp_22_reg_1156 );
    sensitive << ( tmp_23_fu_758_p3 );

    SC_METHOD(thread_tmp_57_fu_772_p2);
    sensitive << ( phi_mul_reg_432 );

    SC_METHOD(thread_tmp_58_fu_778_p1);
    sensitive << ( tmp_57_fu_772_p2 );

    SC_METHOD(thread_tmp_60_fu_794_p2);
    sensitive << ( phi_mul_reg_432 );

    SC_METHOD(thread_tmp_61_fu_800_p1);
    sensitive << ( tmp_60_fu_794_p2 );

    SC_METHOD(thread_tmp_62_fu_840_p3);
    sensitive << ( tmp_89_fu_832_p3 );
    sensitive << ( tmp_33_fu_827_p2 );

    SC_METHOD(thread_tmp_63_fu_849_p2);
    sensitive << ( phi_mul_reg_432 );

    SC_METHOD(thread_tmp_64_fu_855_p1);
    sensitive << ( tmp_63_fu_849_p2 );

    SC_METHOD(thread_tmp_65_fu_864_p3);
    sensitive << ( tmp_92_fu_860_p1 );

    SC_METHOD(thread_tmp_66_fu_882_p2);
    sensitive << ( tmp_65_fu_864_p3 );
    sensitive << ( tmp_27_fu_872_p4 );

    SC_METHOD(thread_tmp_67_fu_889_p2);
    sensitive << ( phi_mul_reg_432 );

    SC_METHOD(thread_tmp_68_fu_895_p1);
    sensitive << ( tmp_67_fu_889_p2 );

    SC_METHOD(thread_tmp_70_fu_910_p2);
    sensitive << ( phi_mul_reg_432 );

    SC_METHOD(thread_tmp_71_fu_916_p1);
    sensitive << ( tmp_70_fu_910_p2 );

    SC_METHOD(thread_tmp_72_fu_677_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_73_fu_562_p2);
    sensitive << ( tmp_reg_1128 );
    sensitive << ( j_cast6_fu_546_p1 );

    SC_METHOD(thread_tmp_74_fu_567_p1);
    sensitive << ( tmp_73_fu_562_p2 );

    SC_METHOD(thread_tmp_75_fu_572_p1);
    sensitive << ( j_reg_444 );

    SC_METHOD(thread_tmp_76_fu_714_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_77_fu_972_p3);
    sensitive << ( tmp_94_fu_968_p1 );

    SC_METHOD(thread_tmp_78_fu_980_p2);
    sensitive << ( grp_fu_510_p4 );
    sensitive << ( tmp_77_fu_972_p3 );

    SC_METHOD(thread_tmp_79_fu_754_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_7_fu_1023_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_81_fu_991_p3);
    sensitive << ( tmp_95_reg_1192 );

    SC_METHOD(thread_tmp_82_fu_998_p2);
    sensitive << ( grp_fu_490_p4 );
    sensitive << ( tmp_81_fu_991_p3 );

    SC_METHOD(thread_tmp_84_fu_1004_p3);
    sensitive << ( tmp_83_reg_1197 );
    sensitive << ( tmp_82_fu_998_p2 );

    SC_METHOD(thread_tmp_86_fu_815_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_87_fu_1016_p3);
    sensitive << ( tmp_96_reg_1202 );

    SC_METHOD(thread_tmp_88_fu_1033_p2);
    sensitive << ( tmp_7_fu_1023_p4 );
    sensitive << ( tmp_87_fu_1016_p3 );

    SC_METHOD(thread_tmp_89_fu_832_p3);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_8_fu_1051_p4);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_90_fu_1044_p3);
    sensitive << ( tmp_97_reg_1207 );

    SC_METHOD(thread_tmp_91_fu_1061_p2);
    sensitive << ( tmp_8_fu_1051_p4 );
    sensitive << ( tmp_90_fu_1044_p3 );

    SC_METHOD(thread_tmp_92_fu_860_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_93_fu_957_p1);
    sensitive << ( j_2_reg_468 );

    SC_METHOD(thread_tmp_94_fu_968_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_95_fu_987_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_96_fu_1012_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_97_fu_1040_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_98_fu_1068_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_fu_538_p3);
    sensitive << ( i_reg_421 );

    SC_METHOD(thread_tmp_s_fu_941_p1);
    sensitive << ( tmp_28_fu_933_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_526_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_550_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond1_fu_921_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_951_p2 );

    ap_CS_fsm = "00000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "poly_Sq_tobytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_address0, "(port)r_address0");
    sc_trace(mVcdFile, r_ce0, "(port)r_ce0");
    sc_trace(mVcdFile, r_we0, "(port)r_we0");
    sc_trace(mVcdFile, r_d0, "(port)r_d0");
    sc_trace(mVcdFile, r_address1, "(port)r_address1");
    sc_trace(mVcdFile, r_ce1, "(port)r_ce1");
    sc_trace(mVcdFile, r_we1, "(port)r_we1");
    sc_trace(mVcdFile, r_d1, "(port)r_d1");
    sc_trace(mVcdFile, a_coeffs_address0, "(port)a_coeffs_address0");
    sc_trace(mVcdFile, a_coeffs_ce0, "(port)a_coeffs_ce0");
    sc_trace(mVcdFile, a_coeffs_q0, "(port)a_coeffs_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, next_mul_fu_520_p2, "next_mul_fu_520_p2");
    sc_trace(mVcdFile, next_mul_reg_1115, "next_mul_reg_1115");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_34_fu_532_p2, "tmp_34_fu_532_p2");
    sc_trace(mVcdFile, tmp_34_reg_1123, "tmp_34_reg_1123");
    sc_trace(mVcdFile, tmp_fu_538_p3, "tmp_fu_538_p3");
    sc_trace(mVcdFile, tmp_reg_1128, "tmp_reg_1128");
    sc_trace(mVcdFile, exitcond3_fu_526_p2, "exitcond3_fu_526_p2");
    sc_trace(mVcdFile, j_3_fu_556_p2, "j_3_fu_556_p2");
    sc_trace(mVcdFile, j_3_reg_1136, "j_3_reg_1136");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond2_fu_550_p2, "exitcond2_fu_550_p2");
    sc_trace(mVcdFile, tmp_13_reg_1146, "tmp_13_reg_1146");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_490_p4, "grp_fu_490_p4");
    sc_trace(mVcdFile, tmp_17_reg_1151, "tmp_17_reg_1151");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_22_reg_1156, "tmp_22_reg_1156");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_30_reg_1161, "tmp_30_reg_1161");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_69_reg_1166, "tmp_69_reg_1166");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_35_fu_927_p2, "tmp_35_fu_927_p2");
    sc_trace(mVcdFile, tmp_35_reg_1174, "tmp_35_reg_1174");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, exitcond1_fu_921_p2, "exitcond1_fu_921_p2");
    sc_trace(mVcdFile, j_4_fu_962_p2, "j_4_fu_962_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, exitcond_fu_951_p2, "exitcond_fu_951_p2");
    sc_trace(mVcdFile, tmp_95_fu_987_p1, "tmp_95_fu_987_p1");
    sc_trace(mVcdFile, tmp_95_reg_1192, "tmp_95_reg_1192");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_fu_500_p4, "grp_fu_500_p4");
    sc_trace(mVcdFile, tmp_83_reg_1197, "tmp_83_reg_1197");
    sc_trace(mVcdFile, tmp_96_fu_1012_p1, "tmp_96_fu_1012_p1");
    sc_trace(mVcdFile, tmp_96_reg_1202, "tmp_96_reg_1202");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_97_fu_1040_p1, "tmp_97_fu_1040_p1");
    sc_trace(mVcdFile, tmp_97_reg_1207, "tmp_97_reg_1207");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, t_address1, "t_address1");
    sc_trace(mVcdFile, t_ce1, "t_ce1");
    sc_trace(mVcdFile, t_we1, "t_we1");
    sc_trace(mVcdFile, t_q1, "t_q1");
    sc_trace(mVcdFile, i_reg_421, "i_reg_421");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, phi_mul_reg_432, "phi_mul_reg_432");
    sc_trace(mVcdFile, j_reg_444, "j_reg_444");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_1_reg_456, "j_1_reg_456");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, j_2_reg_468, "j_2_reg_468");
    sc_trace(mVcdFile, tmp_74_fu_567_p1, "tmp_74_fu_567_p1");
    sc_trace(mVcdFile, tmp_75_fu_572_p1, "tmp_75_fu_572_p1");
    sc_trace(mVcdFile, tmp_38_fu_582_p1, "tmp_38_fu_582_p1");
    sc_trace(mVcdFile, tmp_42_fu_622_p1, "tmp_42_fu_622_p1");
    sc_trace(mVcdFile, tmp_46_fu_661_p1, "tmp_46_fu_661_p1");
    sc_trace(mVcdFile, tmp_49_fu_672_p1, "tmp_49_fu_672_p1");
    sc_trace(mVcdFile, tmp_52_fu_709_p1, "tmp_52_fu_709_p1");
    sc_trace(mVcdFile, tmp_55_fu_739_p1, "tmp_55_fu_739_p1");
    sc_trace(mVcdFile, tmp_58_fu_778_p1, "tmp_58_fu_778_p1");
    sc_trace(mVcdFile, tmp_61_fu_800_p1, "tmp_61_fu_800_p1");
    sc_trace(mVcdFile, tmp_64_fu_855_p1, "tmp_64_fu_855_p1");
    sc_trace(mVcdFile, tmp_68_fu_895_p1, "tmp_68_fu_895_p1");
    sc_trace(mVcdFile, tmp_71_fu_916_p1, "tmp_71_fu_916_p1");
    sc_trace(mVcdFile, tmp_s_fu_941_p1, "tmp_s_fu_941_p1");
    sc_trace(mVcdFile, tmp_36_fu_946_p1, "tmp_36_fu_946_p1");
    sc_trace(mVcdFile, tmp_93_fu_957_p1, "tmp_93_fu_957_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_37_fu_577_p1, "tmp_37_fu_577_p1");
    sc_trace(mVcdFile, tmp_40_fu_609_p2, "tmp_40_fu_609_p2");
    sc_trace(mVcdFile, tmp_44_fu_649_p2, "tmp_44_fu_649_p2");
    sc_trace(mVcdFile, tmp_50_fu_694_p3, "tmp_50_fu_694_p3");
    sc_trace(mVcdFile, tmp_53_fu_726_p2, "tmp_53_fu_726_p2");
    sc_trace(mVcdFile, tmp_56_fu_766_p2, "tmp_56_fu_766_p2");
    sc_trace(mVcdFile, tmp_62_fu_840_p3, "tmp_62_fu_840_p3");
    sc_trace(mVcdFile, tmp_66_fu_882_p2, "tmp_66_fu_882_p2");
    sc_trace(mVcdFile, tmp_78_fu_980_p2, "tmp_78_fu_980_p2");
    sc_trace(mVcdFile, tmp_84_fu_1004_p3, "tmp_84_fu_1004_p3");
    sc_trace(mVcdFile, tmp_88_fu_1033_p2, "tmp_88_fu_1033_p2");
    sc_trace(mVcdFile, tmp_91_fu_1061_p2, "tmp_91_fu_1061_p2");
    sc_trace(mVcdFile, tmp_98_fu_1068_p1, "tmp_98_fu_1068_p1");
    sc_trace(mVcdFile, j_cast6_fu_546_p1, "j_cast6_fu_546_p1");
    sc_trace(mVcdFile, tmp_73_fu_562_p2, "tmp_73_fu_562_p2");
    sc_trace(mVcdFile, tmp_39_fu_597_p1, "tmp_39_fu_597_p1");
    sc_trace(mVcdFile, tmp_11_fu_601_p3, "tmp_11_fu_601_p3");
    sc_trace(mVcdFile, tmp_10_fu_587_p4, "tmp_10_fu_587_p4");
    sc_trace(mVcdFile, tmp_41_fu_616_p2, "tmp_41_fu_616_p2");
    sc_trace(mVcdFile, tmp_43_fu_637_p1, "tmp_43_fu_637_p1");
    sc_trace(mVcdFile, tmp_14_fu_641_p3, "tmp_14_fu_641_p3");
    sc_trace(mVcdFile, tmp_45_fu_655_p2, "tmp_45_fu_655_p2");
    sc_trace(mVcdFile, tmp_48_fu_666_p2, "tmp_48_fu_666_p2");
    sc_trace(mVcdFile, tmp_72_fu_677_p1, "tmp_72_fu_677_p1");
    sc_trace(mVcdFile, tmp_21_fu_681_p3, "tmp_21_fu_681_p3");
    sc_trace(mVcdFile, tmp_24_fu_689_p2, "tmp_24_fu_689_p2");
    sc_trace(mVcdFile, tmp_51_fu_703_p2, "tmp_51_fu_703_p2");
    sc_trace(mVcdFile, tmp_76_fu_714_p1, "tmp_76_fu_714_p1");
    sc_trace(mVcdFile, tmp_20_fu_718_p3, "tmp_20_fu_718_p3");
    sc_trace(mVcdFile, grp_fu_510_p4, "grp_fu_510_p4");
    sc_trace(mVcdFile, tmp_54_fu_733_p2, "tmp_54_fu_733_p2");
    sc_trace(mVcdFile, tmp_79_fu_754_p1, "tmp_79_fu_754_p1");
    sc_trace(mVcdFile, tmp_23_fu_758_p3, "tmp_23_fu_758_p3");
    sc_trace(mVcdFile, tmp_57_fu_772_p2, "tmp_57_fu_772_p2");
    sc_trace(mVcdFile, tmp_60_fu_794_p2, "tmp_60_fu_794_p2");
    sc_trace(mVcdFile, tmp_86_fu_815_p1, "tmp_86_fu_815_p1");
    sc_trace(mVcdFile, tmp_32_fu_819_p3, "tmp_32_fu_819_p3");
    sc_trace(mVcdFile, tmp_89_fu_832_p3, "tmp_89_fu_832_p3");
    sc_trace(mVcdFile, tmp_33_fu_827_p2, "tmp_33_fu_827_p2");
    sc_trace(mVcdFile, tmp_63_fu_849_p2, "tmp_63_fu_849_p2");
    sc_trace(mVcdFile, tmp_92_fu_860_p1, "tmp_92_fu_860_p1");
    sc_trace(mVcdFile, tmp_65_fu_864_p3, "tmp_65_fu_864_p3");
    sc_trace(mVcdFile, tmp_27_fu_872_p4, "tmp_27_fu_872_p4");
    sc_trace(mVcdFile, tmp_67_fu_889_p2, "tmp_67_fu_889_p2");
    sc_trace(mVcdFile, tmp_70_fu_910_p2, "tmp_70_fu_910_p2");
    sc_trace(mVcdFile, tmp_28_fu_933_p3, "tmp_28_fu_933_p3");
    sc_trace(mVcdFile, tmp_94_fu_968_p1, "tmp_94_fu_968_p1");
    sc_trace(mVcdFile, tmp_77_fu_972_p3, "tmp_77_fu_972_p3");
    sc_trace(mVcdFile, tmp_81_fu_991_p3, "tmp_81_fu_991_p3");
    sc_trace(mVcdFile, tmp_82_fu_998_p2, "tmp_82_fu_998_p2");
    sc_trace(mVcdFile, tmp_7_fu_1023_p4, "tmp_7_fu_1023_p4");
    sc_trace(mVcdFile, tmp_87_fu_1016_p3, "tmp_87_fu_1016_p3");
    sc_trace(mVcdFile, tmp_8_fu_1051_p4, "tmp_8_fu_1051_p4");
    sc_trace(mVcdFile, tmp_90_fu_1044_p3, "tmp_90_fu_1044_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

poly_Sq_tobytes::~poly_Sq_tobytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
}

void poly_Sq_tobytes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_reg_421 = tmp_34_reg_1123.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_421 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_526_p2.read(), ap_const_lv1_1))) {
        j_1_reg_456 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        j_1_reg_456 = tmp_35_reg_1174.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_921_p2.read(), ap_const_lv1_1))) {
        j_2_reg_468 = ap_const_lv4_4;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_951_p2.read()))) {
        j_2_reg_468 = j_4_fu_962_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_526_p2.read(), ap_const_lv1_0))) {
        j_reg_444 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_444 = j_3_reg_1136.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        phi_mul_reg_432 = next_mul_reg_1115.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_432 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_3_reg_1136 = j_3_fu_556_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        next_mul_reg_1115 = next_mul_fu_520_p2.read();
        tmp_34_reg_1123 = tmp_34_fu_532_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_13_reg_1146 = t_q1.read().range(12, 5);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_17_reg_1151 = t_q1.read().range(15, 10);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_22_reg_1156 = t_q1.read().range(11, 4);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_30_reg_1161 = t_q0.read().range(15, 9);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_35_reg_1174 = tmp_35_fu_927_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_69_reg_1166 = t_q0.read().range(10, 3);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        tmp_83_reg_1197 = t_q0.read().range(6, 5);
        tmp_95_reg_1192 = tmp_95_fu_987_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_96_reg_1202 = tmp_96_fu_1012_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_97_reg_1207 = tmp_97_fu_1040_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_526_p2.read(), ap_const_lv1_0))) {
        tmp_reg_1128 = tmp_fu_538_p3.read();
    }
}

void poly_Sq_tobytes::thread_a_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_s_fu_941_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_74_fu_567_p1.read());
    } else {
        a_coeffs_address0 = "XXXXXXXXXX";
    }
}

void poly_Sq_tobytes::thread_a_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        a_coeffs_ce0 = ap_const_logic_1;
    } else {
        a_coeffs_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void poly_Sq_tobytes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_exitcond1_fu_921_p2() {
    exitcond1_fu_921_p2 = (!j_1_reg_456.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_456.read() == ap_const_lv3_4);
}

void poly_Sq_tobytes::thread_exitcond2_fu_550_p2() {
    exitcond2_fu_550_p2 = (!j_reg_444.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_444.read() == ap_const_lv4_8);
}

void poly_Sq_tobytes::thread_exitcond3_fu_526_p2() {
    exitcond3_fu_526_p2 = (!i_reg_421.read().is_01() || !ap_const_lv7_54.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_421.read() == ap_const_lv7_54);
}

void poly_Sq_tobytes::thread_exitcond_fu_951_p2() {
    exitcond_fu_951_p2 = (!j_2_reg_468.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_2_reg_468.read() == ap_const_lv4_8);
}

void poly_Sq_tobytes::thread_grp_fu_490_p4() {
    grp_fu_490_p4 = t_q1.read().range(15, 10);
}

void poly_Sq_tobytes::thread_grp_fu_500_p4() {
    grp_fu_500_p4 = t_q0.read().range(6, 5);
}

void poly_Sq_tobytes::thread_grp_fu_510_p4() {
    grp_fu_510_p4 = t_q0.read().range(14, 7);
}

void poly_Sq_tobytes::thread_j_3_fu_556_p2() {
    j_3_fu_556_p2 = (!j_reg_444.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_444.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void poly_Sq_tobytes::thread_j_4_fu_962_p2() {
    j_4_fu_962_p2 = (!j_2_reg_468.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_2_reg_468.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void poly_Sq_tobytes::thread_j_cast6_fu_546_p1() {
    j_cast6_fu_546_p1 = esl_zext<10,4>(j_reg_444.read());
}

void poly_Sq_tobytes::thread_next_mul_fu_520_p2() {
    next_mul_fu_520_p2 = (!phi_mul_reg_432.read().is_01() || !ap_const_lv10_B.is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul_reg_432.read()) + sc_biguint<10>(ap_const_lv10_B));
}

void poly_Sq_tobytes::thread_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_address0 =  (sc_lv<10>) (ap_const_lv64_39C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        r_address0 =  (sc_lv<10>) (ap_const_lv64_39E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_address0 =  (sc_lv<10>) (ap_const_lv64_3A0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_address0 =  (sc_lv<10>) (tmp_71_fu_916_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_address0 =  (sc_lv<10>) (tmp_64_fu_855_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_address0 =  (sc_lv<10>) (tmp_58_fu_778_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_address0 =  (sc_lv<10>) (tmp_52_fu_709_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_address0 =  (sc_lv<10>) (tmp_46_fu_661_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_address0 =  (sc_lv<10>) (tmp_38_fu_582_p1.read());
    } else {
        r_address0 = "XXXXXXXXXX";
    }
}

void poly_Sq_tobytes::thread_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_address1 =  (sc_lv<10>) (ap_const_lv64_39D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_address1 =  (sc_lv<10>) (ap_const_lv64_39F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        r_address1 =  (sc_lv<10>) (ap_const_lv64_3A1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_address1 =  (sc_lv<10>) (tmp_68_fu_895_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_address1 =  (sc_lv<10>) (tmp_61_fu_800_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_address1 =  (sc_lv<10>) (tmp_55_fu_739_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_address1 =  (sc_lv<10>) (tmp_49_fu_672_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_address1 =  (sc_lv<10>) (tmp_42_fu_622_p1.read());
    } else {
        r_address1 = "XXXXXXXXXX";
    }
}

void poly_Sq_tobytes::thread_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        r_ce0 = ap_const_logic_1;
    } else {
        r_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        r_ce1 = ap_const_logic_1;
    } else {
        r_ce1 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_d0 = tmp_98_fu_1068_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        r_d0 = tmp_88_fu_1033_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_d0 = tmp_84_fu_1004_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_d0 = tmp_69_reg_1166.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_d0 = tmp_62_fu_840_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_d0 = tmp_56_fu_766_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_d0 = tmp_50_fu_694_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_d0 = tmp_44_fu_649_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_d0 = tmp_37_fu_577_p1.read();
    } else {
        r_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_r_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_d1 = tmp_91_fu_1061_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        r_d1 = tmp_78_fu_980_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_d1 = tmp_66_fu_882_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_d1 = t_q0.read().range(8, 1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_d1 = tmp_53_fu_726_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        r_d1 = t_q1.read().range(9, 2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_d1 = tmp_40_fu_609_p2.read();
    } else {
        r_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        r_we0 = ap_const_logic_1;
    } else {
        r_we0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_r_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        r_we1 = ap_const_logic_1;
    } else {
        r_we1 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_951_p2.read()))) {
        t_address0 =  (sc_lv<3>) (tmp_93_fu_957_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                 esl_seteq<1,1,1>(exitcond_fu_951_p2.read(), ap_const_lv1_1)))) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_address0 =  (sc_lv<3>) (tmp_75_fu_572_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        t_address0 =  (sc_lv<3>) ("XXX");
    }
}

void poly_Sq_tobytes::thread_t_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_address1 =  (sc_lv<3>) (tmp_36_fu_946_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else {
        t_address1 =  (sc_lv<3>) ("XXX");
    }
}

void poly_Sq_tobytes::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_951_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_951_p2.read(), ap_const_lv1_1)))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_t_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        t_ce1 = ap_const_logic_1;
    } else {
        t_ce1 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_t_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_951_p2.read()))) {
        t_d0 = ap_const_lv16_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_d0 = a_coeffs_q0.read();
    } else {
        t_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_t_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_951_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_t_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_we1 = ap_const_logic_1;
    } else {
        t_we1 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_tmp_10_fu_587_p4() {
    tmp_10_fu_587_p4 = t_q0.read().range(15, 8);
}

void poly_Sq_tobytes::thread_tmp_11_fu_601_p3() {
    tmp_11_fu_601_p3 = esl_concat<5,3>(tmp_39_fu_597_p1.read(), ap_const_lv3_0);
}

void poly_Sq_tobytes::thread_tmp_14_fu_641_p3() {
    tmp_14_fu_641_p3 = esl_concat<2,6>(tmp_43_fu_637_p1.read(), ap_const_lv6_0);
}

void poly_Sq_tobytes::thread_tmp_20_fu_718_p3() {
    tmp_20_fu_718_p3 = esl_concat<4,4>(tmp_76_fu_714_p1.read(), ap_const_lv4_0);
}

void poly_Sq_tobytes::thread_tmp_21_fu_681_p3() {
    tmp_21_fu_681_p3 = esl_concat<5,1>(tmp_72_fu_677_p1.read(), ap_const_lv1_0);
}

void poly_Sq_tobytes::thread_tmp_23_fu_758_p3() {
    tmp_23_fu_758_p3 = esl_concat<1,7>(tmp_79_fu_754_p1.read(), ap_const_lv7_0);
}

void poly_Sq_tobytes::thread_tmp_24_fu_689_p2() {
    tmp_24_fu_689_p2 = (tmp_21_fu_681_p3.read() | tmp_17_reg_1151.read());
}

void poly_Sq_tobytes::thread_tmp_27_fu_872_p4() {
    tmp_27_fu_872_p4 = t_q1.read().range(13, 6);
}

void poly_Sq_tobytes::thread_tmp_28_fu_933_p3() {
    tmp_28_fu_933_p3 = esl_concat<7,3>(ap_const_lv7_54, j_1_reg_456.read());
}

void poly_Sq_tobytes::thread_tmp_32_fu_819_p3() {
    tmp_32_fu_819_p3 = esl_concat<5,2>(tmp_86_fu_815_p1.read(), ap_const_lv2_0);
}

void poly_Sq_tobytes::thread_tmp_33_fu_827_p2() {
    tmp_33_fu_827_p2 = (tmp_32_fu_819_p3.read() | tmp_30_reg_1161.read());
}

void poly_Sq_tobytes::thread_tmp_34_fu_532_p2() {
    tmp_34_fu_532_p2 = (!i_reg_421.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_reg_421.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void poly_Sq_tobytes::thread_tmp_35_fu_927_p2() {
    tmp_35_fu_927_p2 = (!j_1_reg_456.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_1_reg_456.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void poly_Sq_tobytes::thread_tmp_36_fu_946_p1() {
    tmp_36_fu_946_p1 = esl_zext<64,3>(j_1_reg_456.read());
}

void poly_Sq_tobytes::thread_tmp_37_fu_577_p1() {
    tmp_37_fu_577_p1 = t_q0.read().range(8-1, 0);
}

void poly_Sq_tobytes::thread_tmp_38_fu_582_p1() {
    tmp_38_fu_582_p1 = esl_zext<64,10>(phi_mul_reg_432.read());
}

void poly_Sq_tobytes::thread_tmp_39_fu_597_p1() {
    tmp_39_fu_597_p1 = t_q1.read().range(5-1, 0);
}

void poly_Sq_tobytes::thread_tmp_40_fu_609_p2() {
    tmp_40_fu_609_p2 = (tmp_11_fu_601_p3.read() | tmp_10_fu_587_p4.read());
}

void poly_Sq_tobytes::thread_tmp_41_fu_616_p2() {
    tmp_41_fu_616_p2 = (!ap_const_lv10_1.is_01() || !phi_mul_reg_432.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(phi_mul_reg_432.read()));
}

void poly_Sq_tobytes::thread_tmp_42_fu_622_p1() {
    tmp_42_fu_622_p1 = esl_zext<64,10>(tmp_41_fu_616_p2.read());
}

void poly_Sq_tobytes::thread_tmp_43_fu_637_p1() {
    tmp_43_fu_637_p1 = t_q1.read().range(2-1, 0);
}

void poly_Sq_tobytes::thread_tmp_44_fu_649_p2() {
    tmp_44_fu_649_p2 = (tmp_14_fu_641_p3.read() | tmp_13_reg_1146.read());
}

void poly_Sq_tobytes::thread_tmp_45_fu_655_p2() {
    tmp_45_fu_655_p2 = (!ap_const_lv10_2.is_01() || !phi_mul_reg_432.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_2) + sc_biguint<10>(phi_mul_reg_432.read()));
}

void poly_Sq_tobytes::thread_tmp_46_fu_661_p1() {
    tmp_46_fu_661_p1 = esl_zext<64,10>(tmp_45_fu_655_p2.read());
}

void poly_Sq_tobytes::thread_tmp_48_fu_666_p2() {
    tmp_48_fu_666_p2 = (!ap_const_lv10_3.is_01() || !phi_mul_reg_432.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_3) + sc_biguint<10>(phi_mul_reg_432.read()));
}

void poly_Sq_tobytes::thread_tmp_49_fu_672_p1() {
    tmp_49_fu_672_p1 = esl_zext<64,10>(tmp_48_fu_666_p2.read());
}

void poly_Sq_tobytes::thread_tmp_50_fu_694_p3() {
    tmp_50_fu_694_p3 = esl_concat<2,6>(grp_fu_500_p4.read(), tmp_24_fu_689_p2.read());
}

void poly_Sq_tobytes::thread_tmp_51_fu_703_p2() {
    tmp_51_fu_703_p2 = (!ap_const_lv10_4.is_01() || !phi_mul_reg_432.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_4) + sc_biguint<10>(phi_mul_reg_432.read()));
}

void poly_Sq_tobytes::thread_tmp_52_fu_709_p1() {
    tmp_52_fu_709_p1 = esl_zext<64,10>(tmp_51_fu_703_p2.read());
}

void poly_Sq_tobytes::thread_tmp_53_fu_726_p2() {
    tmp_53_fu_726_p2 = (tmp_20_fu_718_p3.read() | grp_fu_510_p4.read());
}

void poly_Sq_tobytes::thread_tmp_54_fu_733_p2() {
    tmp_54_fu_733_p2 = (!ap_const_lv10_5.is_01() || !phi_mul_reg_432.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_5) + sc_biguint<10>(phi_mul_reg_432.read()));
}

void poly_Sq_tobytes::thread_tmp_55_fu_739_p1() {
    tmp_55_fu_739_p1 = esl_zext<64,10>(tmp_54_fu_733_p2.read());
}

void poly_Sq_tobytes::thread_tmp_56_fu_766_p2() {
    tmp_56_fu_766_p2 = (tmp_23_fu_758_p3.read() | tmp_22_reg_1156.read());
}

void poly_Sq_tobytes::thread_tmp_57_fu_772_p2() {
    tmp_57_fu_772_p2 = (!ap_const_lv10_6.is_01() || !phi_mul_reg_432.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_6) + sc_biguint<10>(phi_mul_reg_432.read()));
}

void poly_Sq_tobytes::thread_tmp_58_fu_778_p1() {
    tmp_58_fu_778_p1 = esl_zext<64,10>(tmp_57_fu_772_p2.read());
}

void poly_Sq_tobytes::thread_tmp_60_fu_794_p2() {
    tmp_60_fu_794_p2 = (!ap_const_lv10_7.is_01() || !phi_mul_reg_432.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_7) + sc_biguint<10>(phi_mul_reg_432.read()));
}

void poly_Sq_tobytes::thread_tmp_61_fu_800_p1() {
    tmp_61_fu_800_p1 = esl_zext<64,10>(tmp_60_fu_794_p2.read());
}

void poly_Sq_tobytes::thread_tmp_62_fu_840_p3() {
    tmp_62_fu_840_p3 = esl_concat<1,7>(tmp_89_fu_832_p3.read(), tmp_33_fu_827_p2.read());
}

void poly_Sq_tobytes::thread_tmp_63_fu_849_p2() {
    tmp_63_fu_849_p2 = (!ap_const_lv10_8.is_01() || !phi_mul_reg_432.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_8) + sc_biguint<10>(phi_mul_reg_432.read()));
}

void poly_Sq_tobytes::thread_tmp_64_fu_855_p1() {
    tmp_64_fu_855_p1 = esl_zext<64,10>(tmp_63_fu_849_p2.read());
}

void poly_Sq_tobytes::thread_tmp_65_fu_864_p3() {
    tmp_65_fu_864_p3 = esl_concat<3,5>(tmp_92_fu_860_p1.read(), ap_const_lv5_0);
}

void poly_Sq_tobytes::thread_tmp_66_fu_882_p2() {
    tmp_66_fu_882_p2 = (tmp_65_fu_864_p3.read() | tmp_27_fu_872_p4.read());
}

void poly_Sq_tobytes::thread_tmp_67_fu_889_p2() {
    tmp_67_fu_889_p2 = (!ap_const_lv10_9.is_01() || !phi_mul_reg_432.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_9) + sc_biguint<10>(phi_mul_reg_432.read()));
}

void poly_Sq_tobytes::thread_tmp_68_fu_895_p1() {
    tmp_68_fu_895_p1 = esl_zext<64,10>(tmp_67_fu_889_p2.read());
}

void poly_Sq_tobytes::thread_tmp_70_fu_910_p2() {
    tmp_70_fu_910_p2 = (!ap_const_lv10_A.is_01() || !phi_mul_reg_432.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_A) + sc_biguint<10>(phi_mul_reg_432.read()));
}

void poly_Sq_tobytes::thread_tmp_71_fu_916_p1() {
    tmp_71_fu_916_p1 = esl_zext<64,10>(tmp_70_fu_910_p2.read());
}

void poly_Sq_tobytes::thread_tmp_72_fu_677_p1() {
    tmp_72_fu_677_p1 = t_q0.read().range(5-1, 0);
}

void poly_Sq_tobytes::thread_tmp_73_fu_562_p2() {
    tmp_73_fu_562_p2 = (!tmp_reg_1128.read().is_01() || !j_cast6_fu_546_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_reg_1128.read()) + sc_biguint<10>(j_cast6_fu_546_p1.read()));
}

void poly_Sq_tobytes::thread_tmp_74_fu_567_p1() {
    tmp_74_fu_567_p1 = esl_zext<64,10>(tmp_73_fu_562_p2.read());
}

void poly_Sq_tobytes::thread_tmp_75_fu_572_p1() {
    tmp_75_fu_572_p1 = esl_zext<64,4>(j_reg_444.read());
}

void poly_Sq_tobytes::thread_tmp_76_fu_714_p1() {
    tmp_76_fu_714_p1 = t_q1.read().range(4-1, 0);
}

void poly_Sq_tobytes::thread_tmp_77_fu_972_p3() {
    tmp_77_fu_972_p3 = esl_concat<4,4>(tmp_94_fu_968_p1.read(), ap_const_lv4_0);
}

void poly_Sq_tobytes::thread_tmp_78_fu_980_p2() {
    tmp_78_fu_980_p2 = (tmp_77_fu_972_p3.read() | grp_fu_510_p4.read());
}

void poly_Sq_tobytes::thread_tmp_79_fu_754_p1() {
    tmp_79_fu_754_p1 = t_q0.read().range(1-1, 0);
}

void poly_Sq_tobytes::thread_tmp_7_fu_1023_p4() {
    tmp_7_fu_1023_p4 = t_q0.read().range(12, 5);
}

void poly_Sq_tobytes::thread_tmp_81_fu_991_p3() {
    tmp_81_fu_991_p3 = esl_concat<5,1>(tmp_95_reg_1192.read(), ap_const_lv1_0);
}

void poly_Sq_tobytes::thread_tmp_82_fu_998_p2() {
    tmp_82_fu_998_p2 = (tmp_81_fu_991_p3.read() | grp_fu_490_p4.read());
}

void poly_Sq_tobytes::thread_tmp_84_fu_1004_p3() {
    tmp_84_fu_1004_p3 = esl_concat<2,6>(tmp_83_reg_1197.read(), tmp_82_fu_998_p2.read());
}

void poly_Sq_tobytes::thread_tmp_86_fu_815_p1() {
    tmp_86_fu_815_p1 = t_q1.read().range(5-1, 0);
}

void poly_Sq_tobytes::thread_tmp_87_fu_1016_p3() {
    tmp_87_fu_1016_p3 = esl_concat<2,6>(tmp_96_reg_1202.read(), ap_const_lv6_0);
}

void poly_Sq_tobytes::thread_tmp_88_fu_1033_p2() {
    tmp_88_fu_1033_p2 = (tmp_7_fu_1023_p4.read() | tmp_87_fu_1016_p3.read());
}

void poly_Sq_tobytes::thread_tmp_89_fu_832_p3() {
    tmp_89_fu_832_p3 = t_q1.read().range(5, 5);
}

void poly_Sq_tobytes::thread_tmp_8_fu_1051_p4() {
    tmp_8_fu_1051_p4 = t_q1.read().range(15, 8);
}

void poly_Sq_tobytes::thread_tmp_90_fu_1044_p3() {
    tmp_90_fu_1044_p3 = esl_concat<5,3>(tmp_97_reg_1207.read(), ap_const_lv3_0);
}

void poly_Sq_tobytes::thread_tmp_91_fu_1061_p2() {
    tmp_91_fu_1061_p2 = (tmp_8_fu_1051_p4.read() | tmp_90_fu_1044_p3.read());
}

void poly_Sq_tobytes::thread_tmp_92_fu_860_p1() {
    tmp_92_fu_860_p1 = t_q0.read().range(3-1, 0);
}

void poly_Sq_tobytes::thread_tmp_93_fu_957_p1() {
    tmp_93_fu_957_p1 = esl_zext<64,4>(j_2_reg_468.read());
}

void poly_Sq_tobytes::thread_tmp_94_fu_968_p1() {
    tmp_94_fu_968_p1 = t_q1.read().range(4-1, 0);
}

void poly_Sq_tobytes::thread_tmp_95_fu_987_p1() {
    tmp_95_fu_987_p1 = t_q0.read().range(5-1, 0);
}

void poly_Sq_tobytes::thread_tmp_96_fu_1012_p1() {
    tmp_96_fu_1012_p1 = t_q1.read().range(2-1, 0);
}

void poly_Sq_tobytes::thread_tmp_97_fu_1040_p1() {
    tmp_97_fu_1040_p1 = t_q0.read().range(5-1, 0);
}

void poly_Sq_tobytes::thread_tmp_98_fu_1068_p1() {
    tmp_98_fu_1068_p1 = t_q1.read().range(8-1, 0);
}

void poly_Sq_tobytes::thread_tmp_fu_538_p3() {
    tmp_fu_538_p3 = esl_concat<7,3>(i_reg_421.read(), ap_const_lv3_0);
}

void poly_Sq_tobytes::thread_tmp_s_fu_941_p1() {
    tmp_s_fu_941_p1 = esl_zext<64,10>(tmp_28_fu_933_p3.read());
}

void poly_Sq_tobytes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_526_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_550_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond1_fu_921_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_951_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

}

