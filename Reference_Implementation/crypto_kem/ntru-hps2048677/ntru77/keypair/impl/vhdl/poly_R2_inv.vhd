-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity poly_R2_inv is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    r_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    r_coeffs_ce0 : OUT STD_LOGIC;
    r_coeffs_we0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    r_coeffs_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    r_coeffs_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    a_coeffs_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    a_coeffs_ce0 : OUT STD_LOGIC;
    a_coeffs_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of poly_R2_inv is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (47 downto 0) := "000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (47 downto 0) := "000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (47 downto 0) := "000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (47 downto 0) := "000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (47 downto 0) := "000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (47 downto 0) := "000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (47 downto 0) := "000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (47 downto 0) := "000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (47 downto 0) := "000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (47 downto 0) := "001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (47 downto 0) := "010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (47 downto 0) := "100000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv16_2A4 : STD_LOGIC_VECTOR (15 downto 0) := "0000001010100100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_2A4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001010100100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv10_2A5 : STD_LOGIC_VECTOR (9 downto 0) := "1010100101";
    constant ap_const_lv11_547 : STD_LOGIC_VECTOR (10 downto 0) := "10101000111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2A4 : STD_LOGIC_VECTOR (10 downto 0) := "01010100100";
    constant ap_const_lv12_2A5 : STD_LOGIC_VECTOR (11 downto 0) := "001010100101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv10_2A4 : STD_LOGIC_VECTOR (9 downto 0) := "1010100100";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv11_2A5 : STD_LOGIC_VECTOR (10 downto 0) := "01010100101";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_54A : STD_LOGIC_VECTOR (10 downto 0) := "10101001010";
    constant ap_const_lv12_816 : STD_LOGIC_VECTOR (11 downto 0) := "100000010110";
    constant ap_const_lv12_ABB : STD_LOGIC_VECTOR (11 downto 0) := "101010111011";
    constant ap_const_lv10_3EA : STD_LOGIC_VECTOR (9 downto 0) := "1111101010";
    constant ap_const_lv16_7D60 : STD_LOGIC_VECTOR (15 downto 0) := "0111110101100000";
    constant ap_const_lv16_8005 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_25_fu_590_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond9_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_26_fu_602_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_27_fu_619_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_27_reg_1661 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_215_fu_625_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_215_reg_1666 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond7_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_28_fu_645_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal exitcond6_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_7_fu_662_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_7_reg_1702 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal k_6_cast_cast_fu_700_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal k_6_cast_cast_reg_1707 : STD_LOGIC_VECTOR (29 downto 0);
    signal exitcond5_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_coeffs_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_r_coeffs_load_reg_1712 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_273_fu_704_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_273_reg_1718 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_assign_cast_fu_708_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal s_assign_cast_reg_1723 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_274_fu_726_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_274_reg_1728 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_734_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_67_reg_1733 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i3_cast_fu_750_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i3_cast_reg_1738 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_20_fu_764_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_20_reg_1747 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal temp_r_coeffs_addr_8_reg_1752 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_i5_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal g_coeffs_addr_4_reg_1757 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_21_fu_807_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_21_reg_1765 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal b_coeffs_addr_6_reg_1770 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond_i9_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_coeffs_addr_11_reg_1775 : STD_LOGIC_VECTOR (9 downto 0);
    signal degf_3_fu_849_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal degf_3_reg_1780 : STD_LOGIC_VECTOR (15 downto 0);
    signal degg_2_fu_855_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal degg_2_reg_1785 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_224_fu_861_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_224_reg_1790 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_22_fu_900_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_22_reg_1799 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal exitcond4_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_r_coeffs_addr_10_reg_1809 : STD_LOGIC_VECTOR (9 downto 0);
    signal g_coeffs_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal g_coeffs_load_3_reg_1814 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_230_fu_1633_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_230_reg_1819 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal i_24_fu_929_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_24_reg_1827 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal exitcond3_fu_923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_coeffs_addr_7_reg_1837 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_i_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1842 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_coeffs_load_reg_1847 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_236_fu_951_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_236_reg_1852 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal exitcond_i_fu_957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_442 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_r_coeffs_addr_12_reg_1865 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_31_fu_979_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_31_reg_1870 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_i_69_fu_994_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_69_reg_1875 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal exitcond_i3_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_coeffs_addr_10_reg_1888 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_32_fu_1036_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_32_reg_1893 : STD_LOGIC_VECTOR (9 downto 0);
    signal degf_4_fu_1042_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal degf_4_reg_1898 : STD_LOGIC_VECTOR (15 downto 0);
    signal k_7_fu_1046_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_7_reg_1903 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_332_reg_1908 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_29_fu_1086_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_29_reg_1916 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal tmp_219_fu_1092_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_219_reg_1921 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond2_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_30_fu_1107_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_30_reg_1934 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal tmp_335_cast_fu_1119_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_335_cast_reg_1939 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond1_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_8_fu_1133_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_8_reg_1947 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal exitcond_fu_1127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_assign_2_cast_fu_1154_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_assign_2_cast_reg_1957 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal i_23_fu_1178_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_23_reg_1970 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal tmp_277_fu_1184_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_277_reg_1975 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i8_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_coeffs_addr_12_reg_1986 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_37_fu_1286_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal start_pos_fu_1290_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal start_pos_reg_1996 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal end_pos_fu_1298_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal end_pos_reg_2002 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_289_fu_1365_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_289_reg_2008 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_292_fu_1375_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_292_reg_2013 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_312_fu_1479_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_312_reg_2018 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal b_coeffs_ce0 : STD_LOGIC;
    signal b_coeffs_we0 : STD_LOGIC;
    signal b_coeffs_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_coeffs_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal f_coeffs_ce0 : STD_LOGIC;
    signal f_coeffs_we0 : STD_LOGIC;
    signal f_coeffs_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal g_coeffs_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal g_coeffs_ce0 : STD_LOGIC;
    signal g_coeffs_we0 : STD_LOGIC;
    signal g_coeffs_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_reg_351 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_1_reg_362 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond8_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_reg_373 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i_3_reg_384 : STD_LOGIC_VECTOR (9 downto 0);
    signal degf_reg_395 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal k_reg_407 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_reg_419 : STD_LOGIC_VECTOR (10 downto 0);
    signal degg_reg_430 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_i4_reg_454 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal i_i8_reg_465 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal i_4_reg_476 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal i_5_reg_487 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal i_i_reg_498 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal i_i2_reg_509 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal i_6_reg_520 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal k_1_reg_531 : STD_LOGIC_VECTOR (29 downto 0);
    signal i_7_reg_541 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_1_reg_552 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal i_i7_reg_564 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal tmp_fu_585_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_608_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_216_fu_651_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_361_i_fu_770_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_361_i2_fu_813_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_229_fu_906_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_233_fu_935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_112_i_fu_963_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_114_i_fu_974_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_107_i_fu_1020_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_i_fu_1031_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_227_fu_1162_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_228_fu_1167_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal gepindex2_cast_fu_1232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal gepindex2335_cast_fu_1271_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_363_i2_fu_880_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_364_i2_fu_887_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_110_i_fu_1065_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_105_i_fu_1074_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_330_fu_1616_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mask_fu_1626_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_308_cast_fu_634_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_363_i_fu_787_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_232_fu_916_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_115_i_fu_985_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_111_i_fu_1001_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_364_i_fu_794_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_575_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_575_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_271_fu_630_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_217_fu_672_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_272_fu_678_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_cast_fu_668_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_315_cast_cast_fu_686_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal k_6_fu_694_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_273_fu_704_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_318_cast_fu_712_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_319_cast_fu_716_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_218_fu_720_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp21_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal swap_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_362_i_fu_776_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_fu_782_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp22_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_222_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_221_fu_819_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_325_cast_fu_835_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_223_fu_843_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_362_i2_fu_869_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_2_fu_875_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_231_fu_912_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_234_fu_1637_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_235_fu_947_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_113_i_fu_968_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_106_i_fu_1014_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_108_i_fu_1025_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_237_fu_1051_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_7_cast_fu_1097_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_220_fu_1113_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_1_cast_fu_1123_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1144_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_275_fu_1150_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1144_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal adjSize_fu_1188_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal adjSize309_cast_cast_fu_1198_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mem_index_gep_fu_1202_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_278_fu_1208_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal addrCmp_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal gepindex_fu_1218_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal gepindex2_fu_1224_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal adjSize311_cast_fu_1237_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mem_index_gep2_fu_1241_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal addrCmp2_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal gepindex333_cast_fu_1253_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal gepindex4_fu_1263_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_276_fu_1276_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_280_fu_1305_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_281_fu_1309_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_283_fu_1323_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_285_fu_1335_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_282_fu_1313_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_284_fu_1329_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_286_fu_1341_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_288_fu_1357_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_287_fu_1349_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_290_fu_1371_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_297_fu_1387_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_298_fu_1391_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_296_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_300_fu_1405_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_302_fu_1417_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_299_fu_1395_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_301_fu_1411_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_303_fu_1423_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_305_fu_1439_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_306_fu_1447_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_304_fu_1431_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_307_fu_1453_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_308_fu_1457_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_309_fu_1461_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_310_fu_1467_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_311_fu_1473_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_291_fu_1483_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_293_fu_1486_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_294_fu_1492_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_295_fu_1497_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i9_fu_1501_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i2_fu_1506_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_386_i_fu_1511_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_314_fu_1516_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_315_fu_1519_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_317_fu_1526_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_318_fu_1532_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_320_fu_1548_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_319_fu_1540_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_321_fu_1556_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_316_fu_1522_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_322_fu_1562_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_325_fu_1574_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_326_fu_1580_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_323_fu_1566_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_324_fu_1570_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_328_fu_1598_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_329_fu_1604_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_327_fu_1590_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_demorgan_fu_1610_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_331_fu_1623_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1144_ap_start : STD_LOGIC;
    signal grp_fu_1144_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (47 downto 0);

    component crypto_kem_keypair_urem_11ns_11ns_11_15_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component crypto_kem_keypair_mul_mul_16s_16s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component poly_S3_inv_b_coeffs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    b_coeffs_U : component poly_S3_inv_b_coeffs
    generic map (
        DataWidth => 16,
        AddressRange => 677,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => b_coeffs_address0,
        ce0 => b_coeffs_ce0,
        we0 => b_coeffs_we0,
        d0 => b_coeffs_d0,
        q0 => b_coeffs_q0);

    f_coeffs_U : component poly_S3_inv_b_coeffs
    generic map (
        DataWidth => 16,
        AddressRange => 677,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => f_coeffs_address0,
        ce0 => f_coeffs_ce0,
        we0 => f_coeffs_we0,
        d0 => f_coeffs_d0,
        q0 => f_coeffs_q0);

    g_coeffs_U : component poly_S3_inv_b_coeffs
    generic map (
        DataWidth => 16,
        AddressRange => 677,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => g_coeffs_address0,
        ce0 => g_coeffs_ce0,
        we0 => g_coeffs_we0,
        d0 => g_coeffs_d0,
        q0 => g_coeffs_q0);

    crypto_kem_keypair_urem_11ns_11ns_11_15_seq_1_U54 : component crypto_kem_keypair_urem_11ns_11ns_11_15_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1144_ap_start,
        done => grp_fu_1144_ap_done,
        din0 => grp_fu_1144_p0,
        din1 => ap_const_lv11_2A5,
        ce => ap_const_logic_1,
        dout => grp_fu_1144_p2);

    crypto_kem_keypair_mul_mul_16s_16s_16_1_1_U55 : component crypto_kem_keypair_mul_mul_16s_16s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => temp_r_coeffs_load_reg_1712,
        din1 => g_coeffs_load_3_reg_1814,
        dout => tmp_230_fu_1633_p2);

    crypto_kem_keypair_mul_mul_16s_16s_16_1_1_U56 : component crypto_kem_keypair_mul_mul_16s_16s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => temp_r_coeffs_load_reg_1712,
        din1 => r_coeffs_load_reg_1847,
        dout => tmp_234_fu_1637_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    degf_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond6_fu_639_p2 = ap_const_lv1_1))) then 
                degf_reg_395 <= ap_const_lv16_2A4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                degf_reg_395 <= degf_4_reg_1898;
            end if; 
        end if;
    end process;

    degg_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond6_fu_639_p2 = ap_const_lv1_1))) then 
                degg_reg_430 <= ap_const_lv16_2A4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                degg_reg_430 <= degg_2_reg_1785;
            end if; 
        end if;
    end process;

    done_reg_442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond6_fu_639_p2 = ap_const_lv1_1))) then 
                done_reg_442 <= ap_const_lv1_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                done_reg_442 <= tmp_332_reg_1908;
            end if; 
        end if;
    end process;

    i_1_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond8_fu_596_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_1_reg_362 <= i_26_fu_602_p2;
            elsif (((exitcond9_fu_579_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_1_reg_362 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    i_2_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond8_fu_596_p2 = ap_const_lv1_1))) then 
                i_2_reg_373 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_2_reg_373 <= i_27_reg_1661;
            end if; 
        end if;
    end process;

    i_3_reg_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond7_fu_613_p2 = ap_const_lv1_1))) then 
                i_3_reg_384 <= ap_const_lv10_0;
            elsif (((exitcond6_fu_639_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_3_reg_384 <= i_28_fu_645_p2;
            end if; 
        end if;
    end process;

    i_4_reg_476_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                i_4_reg_476 <= i_22_reg_1799;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond_i9_fu_801_p2 = ap_const_lv1_1))) then 
                i_4_reg_476 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    i_5_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond4_fu_894_p2 = ap_const_lv1_1))) then 
                i_5_reg_487 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                i_5_reg_487 <= i_24_reg_1827;
            end if; 
        end if;
    end process;

    i_6_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                i_6_reg_520 <= i_29_reg_1916;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond5_fu_656_p2 = ap_const_lv1_1))) then 
                i_6_reg_520 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    i_7_reg_541_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (exitcond2_fu_1080_p2 = ap_const_lv1_1))) then 
                i_7_reg_541 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state46) and (exitcond_i8_fu_1172_p2 = ap_const_lv1_1))) then 
                i_7_reg_541 <= i_30_reg_1934;
            end if; 
        end if;
    end process;

    i_i2_reg_509_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                i_i2_reg_509 <= i_32_reg_1893;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                i_i2_reg_509 <= ap_const_lv10_1;
            end if; 
        end if;
    end process;

    i_i4_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                i_i4_reg_454 <= i_20_reg_1747;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_i4_reg_454 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    i_i7_reg_564_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
                i_i7_reg_564 <= i_23_reg_1970;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state30) and (exitcond_fu_1127_p2 = ap_const_lv1_1))) then 
                i_i7_reg_564 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    i_i8_reg_465_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_i5_fu_758_p2 = ap_const_lv1_1))) then 
                i_i8_reg_465 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                i_i8_reg_465 <= i_21_reg_1765;
            end if; 
        end if;
    end process;

    i_i_reg_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                i_i_reg_498 <= i_31_reg_1870;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond3_fu_923_p2 = ap_const_lv1_1))) then 
                i_i_reg_498 <= ap_const_lv10_1;
            end if; 
        end if;
    end process;

    i_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9_fu_579_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_reg_351 <= i_25_fu_590_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_351 <= ap_const_lv10_1;
            end if; 
        end if;
    end process;

    j_1_reg_552_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_1101_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                j_1_reg_552 <= ap_const_lv10_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                j_1_reg_552 <= j_8_reg_1947;
            end if; 
        end if;
    end process;

    j_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond6_fu_639_p2 = ap_const_lv1_1))) then 
                j_reg_419 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                j_reg_419 <= j_7_reg_1702;
            end if; 
        end if;
    end process;

    k_1_reg_531_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (exitcond2_fu_1080_p2 = ap_const_lv1_1))) then 
                k_1_reg_531 <= k_6_cast_cast_reg_1707;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state46) and (exitcond_i8_fu_1172_p2 = ap_const_lv1_1))) then 
                k_1_reg_531 <= tmp_37_fu_1286_p1;
            end if; 
        end if;
    end process;

    k_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond6_fu_639_p2 = ap_const_lv1_1))) then 
                k_reg_407 <= ap_const_lv11_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                k_reg_407 <= k_7_reg_1903;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) and (exitcond_fu_1127_p2 = ap_const_lv1_1))) then
                b_assign_2_cast_reg_1957 <= b_assign_2_cast_fu_1154_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i9_fu_801_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                b_coeffs_addr_6_reg_1770 <= tmp_361_i2_fu_813_p1(10 - 1 downto 0);
                r_coeffs_addr_11_reg_1775 <= tmp_361_i2_fu_813_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_923_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                b_coeffs_addr_7_reg_1837 <= tmp_233_fu_935_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond_i9_fu_801_p2 = ap_const_lv1_1))) then
                degf_3_reg_1780 <= degf_3_fu_849_p2;
                degg_2_reg_1785 <= degg_2_fu_855_p2;
                tmp_224_reg_1790 <= tmp_224_fu_861_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (exitcond_i3_fu_1008_p2 = ap_const_lv1_1))) then
                degf_4_reg_1898 <= degf_4_fu_1042_p2;
                k_7_reg_1903 <= k_7_fu_1046_p2;
                tmp_332_reg_1908 <= tmp_237_fu_1051_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                    end_pos_reg_2002(3) <= end_pos_fu_1298_p2(3);
                    start_pos_reg_1996(3) <= start_pos_fu_1290_p3(3);
                    tmp_289_reg_2008(4 downto 1) <= tmp_289_fu_1365_p2(4 downto 1);
                tmp_292_reg_2013 <= tmp_292_fu_1375_p2;
                tmp_312_reg_2018 <= tmp_312_fu_1479_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i5_fu_758_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                g_coeffs_addr_4_reg_1757 <= tmp_361_i_fu_770_p1(10 - 1 downto 0);
                temp_r_coeffs_addr_8_reg_1752 <= tmp_361_i_fu_770_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                g_coeffs_load_3_reg_1814 <= g_coeffs_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                i_20_reg_1747 <= i_20_fu_764_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                i_21_reg_1765 <= i_21_fu_807_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                i_22_reg_1799 <= i_22_fu_900_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                i_23_reg_1970 <= i_23_fu_1178_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                i_24_reg_1827 <= i_24_fu_929_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_27_reg_1661 <= i_27_fu_619_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                i_29_reg_1916 <= i_29_fu_1086_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                i_30_reg_1934 <= i_30_fu_1107_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_957_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                i_31_reg_1870 <= i_31_fu_979_p2;
                temp_r_coeffs_addr_12_reg_1865 <= tmp_114_i_fu_974_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i3_fu_1008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                i_32_reg_1893 <= i_32_fu_1036_p2;
                r_coeffs_addr_10_reg_1888 <= tmp_109_i_fu_1031_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                j_7_reg_1702 <= j_7_fu_662_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                j_8_reg_1947 <= j_8_fu_1133_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond5_fu_656_p2 = ap_const_lv1_1))) then
                k_6_cast_cast_reg_1707 <= k_6_cast_cast_fu_700_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i8_fu_1172_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                r_coeffs_addr_12_reg_1986 <= gepindex2335_cast_fu_1271_p1(10 - 1 downto 0);
                tmp_277_reg_1975 <= tmp_277_fu_1184_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                r_coeffs_load_reg_1847 <= r_coeffs_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                    s_assign_cast_reg_1723(0) <= s_assign_cast_fu_708_p1(0);
                temp_r_coeffs_load_reg_1712 <= f_coeffs_q0;
                tmp_273_reg_1718 <= tmp_273_fu_704_p1;
                tmp_274_reg_1728 <= tmp_218_fu_720_p2(15 downto 15);
                    tmp_67_reg_1733(0) <= tmp_67_fu_734_p1(0);
                tmp_i3_cast_reg_1738 <= tmp_i3_cast_fu_750_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_894_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                temp_r_coeffs_addr_10_reg_1809 <= tmp_229_fu_906_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_fu_613_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    tmp_215_reg_1666(9 downto 0) <= tmp_215_fu_625_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_1080_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    tmp_219_reg_1921(9 downto 0) <= tmp_219_fu_1092_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                tmp_230_reg_1819 <= tmp_230_fu_1633_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                tmp_236_reg_1852 <= tmp_236_fu_951_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_1101_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    tmp_335_cast_reg_1939(9 downto 0) <= tmp_335_cast_fu_1119_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                tmp_i_69_reg_1875 <= tmp_i_69_fu_994_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond3_fu_923_p2 = ap_const_lv1_1))) then
                tmp_i_reg_1842 <= tmp_i_fu_941_p2;
            end if;
        end if;
    end process;
    tmp_215_reg_1666(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    s_assign_cast_reg_1723(10 downto 1) <= "0000000000";
    tmp_67_reg_1733(15 downto 1) <= "000000000000000";
    tmp_219_reg_1921(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    tmp_335_cast_reg_1939(10) <= '0';
    start_pos_reg_1996(2 downto 0) <= "000";
    end_pos_reg_2002(2 downto 0) <= "111";
    tmp_289_reg_2008(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond9_fu_579_p2, ap_CS_fsm_state3, ap_CS_fsm_state4, exitcond7_fu_613_p2, ap_CS_fsm_state6, exitcond6_fu_639_p2, ap_CS_fsm_state7, exitcond5_fu_656_p2, ap_CS_fsm_state9, exitcond_i5_fu_758_p2, ap_CS_fsm_state11, exitcond_i9_fu_801_p2, ap_CS_fsm_state13, exitcond4_fu_894_p2, ap_CS_fsm_state17, exitcond3_fu_923_p2, ap_CS_fsm_state21, exitcond_i_fu_957_p2, ap_CS_fsm_state24, exitcond_i3_fu_1008_p2, ap_CS_fsm_state27, exitcond2_fu_1080_p2, ap_CS_fsm_state29, exitcond1_fu_1101_p2, ap_CS_fsm_state30, exitcond_fu_1127_p2, ap_CS_fsm_state46, exitcond_i8_fu_1172_p2, exitcond8_fu_596_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond9_fu_579_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond8_fu_596_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond7_fu_613_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond6_fu_639_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond5_fu_656_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_i5_fu_758_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (exitcond_i9_fu_801_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond4_fu_894_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (exitcond3_fu_923_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (exitcond_i_fu_957_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (exitcond_i3_fu_1008_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (exitcond2_fu_1080_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (exitcond1_fu_1101_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and (exitcond_fu_1127_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state46 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state46) and (exitcond_i8_fu_1172_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_coeffs_address0 <= tmp_215_fu_625_p1(10 - 1 downto 0);

    a_coeffs_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            a_coeffs_ce0 <= ap_const_logic_1;
        else 
            a_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    addrCmp2_fu_1247_p2 <= "1" when (unsigned(mem_index_gep2_fu_1241_p2) < unsigned(ap_const_lv16_8005)) else "0";
    addrCmp_fu_1212_p2 <= "1" when (unsigned(mem_index_gep_fu_1202_p2) < unsigned(ap_const_lv12_ABB)) else "0";
    adjSize309_cast_cast_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(adjSize_fu_1188_p4),12));
    adjSize311_cast_fu_1237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(adjSize_fu_1188_p4),16));
    adjSize_fu_1188_p4 <= i_i7_reg_564(10 downto 1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state29, exitcond1_fu_1101_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (exitcond1_fu_1101_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state29, exitcond1_fu_1101_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) and (exitcond1_fu_1101_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_assign_2_cast_fu_1154_p3 <= 
        ap_const_lv8_FF when (tmp_275_fu_1150_p1(0) = '1') else 
        ap_const_lv8_0;

    b_coeffs_address0_assign_proc : process(ap_CS_fsm_state2, exitcond9_fu_579_p2, ap_CS_fsm_state11, b_coeffs_addr_6_reg_1770, b_coeffs_addr_7_reg_1837, ap_CS_fsm_state18, ap_CS_fsm_state27, tmp_219_fu_1092_p1, ap_CS_fsm_state12, ap_CS_fsm_state20, tmp_fu_585_p1, tmp_361_i2_fu_813_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            b_coeffs_address0 <= tmp_219_fu_1092_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            b_coeffs_address0 <= b_coeffs_addr_7_reg_1837;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            b_coeffs_address0 <= b_coeffs_addr_6_reg_1770;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            b_coeffs_address0 <= tmp_361_i2_fu_813_p1(10 - 1 downto 0);
        elsif (((exitcond9_fu_579_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_coeffs_address0 <= ap_const_lv64_0(10 - 1 downto 0);
        elsif (((exitcond9_fu_579_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_coeffs_address0 <= tmp_fu_585_p1(10 - 1 downto 0);
        else 
            b_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    b_coeffs_ce0_assign_proc : process(ap_CS_fsm_state2, exitcond9_fu_579_p2, ap_CS_fsm_state11, ap_CS_fsm_state18, ap_CS_fsm_state27, ap_CS_fsm_state12, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((exitcond9_fu_579_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((exitcond9_fu_579_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            b_coeffs_ce0 <= ap_const_logic_1;
        else 
            b_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    b_coeffs_d0_assign_proc : process(ap_CS_fsm_state2, exitcond9_fu_579_p2, tmp_236_reg_1852, ap_CS_fsm_state12, ap_CS_fsm_state20, tmp_363_i2_fu_880_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            b_coeffs_d0 <= tmp_236_reg_1852;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            b_coeffs_d0 <= tmp_363_i2_fu_880_p2;
        elsif (((exitcond9_fu_579_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_coeffs_d0 <= ap_const_lv16_1;
        elsif (((exitcond9_fu_579_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            b_coeffs_d0 <= ap_const_lv16_0;
        else 
            b_coeffs_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    b_coeffs_we0_assign_proc : process(ap_CS_fsm_state2, exitcond9_fu_579_p2, ap_CS_fsm_state12, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((exitcond9_fu_579_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((exitcond9_fu_579_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            b_coeffs_we0 <= ap_const_logic_1;
        else 
            b_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;

    degf_3_fu_849_p2 <= (tmp_223_fu_843_p2 xor degf_reg_395);
    degf_4_fu_1042_p2 <= std_logic_vector(unsigned(degf_3_reg_1780) - unsigned(tmp_67_reg_1733));
    degg_2_fu_855_p2 <= (tmp_223_fu_843_p2 xor degg_reg_430);
    end_pos_fu_1298_p2 <= (start_pos_fu_1290_p3 or ap_const_lv4_7);
    exitcond1_fu_1101_p2 <= "1" when (i_7_reg_541 = ap_const_lv4_A) else "0";
    exitcond2_fu_1080_p2 <= "1" when (i_6_reg_520 = ap_const_lv10_2A5) else "0";
    exitcond3_fu_923_p2 <= "1" when (i_5_reg_487 = ap_const_lv10_2A5) else "0";
    exitcond4_fu_894_p2 <= "1" when (i_4_reg_476 = ap_const_lv10_2A5) else "0";
    exitcond5_fu_656_p2 <= "1" when (j_reg_419 = ap_const_lv11_547) else "0";
    exitcond6_fu_639_p2 <= "1" when (i_3_reg_384 = ap_const_lv10_2A5) else "0";
    exitcond7_fu_613_p2 <= "1" when (i_2_reg_373 = ap_const_lv10_2A5) else "0";
    exitcond8_fu_596_p2 <= "1" when (i_1_reg_362 = ap_const_lv10_2A5) else "0";
    exitcond9_fu_579_p2 <= "1" when (i_reg_351 = ap_const_lv10_2A5) else "0";
    exitcond_fu_1127_p2 <= "1" when (j_1_reg_552 = ap_const_lv10_2A5) else "0";
    exitcond_i3_fu_1008_p2 <= "1" when (i_i2_reg_509 = ap_const_lv10_2A5) else "0";
    exitcond_i5_fu_758_p2 <= "1" when (i_i4_reg_454 = ap_const_lv10_2A5) else "0";
    exitcond_i8_fu_1172_p2 <= "1" when (i_i7_reg_564 = ap_const_lv11_54A) else "0";
    exitcond_i9_fu_801_p2 <= "1" when (i_i8_reg_465 = ap_const_lv10_2A5) else "0";
    exitcond_i_fu_957_p2 <= "1" when (i_i_reg_498 = ap_const_lv10_2A5) else "0";

    f_coeffs_address0_assign_proc : process(tmp_215_reg_1666, ap_CS_fsm_state7, ap_CS_fsm_state9, temp_r_coeffs_addr_8_reg_1752, temp_r_coeffs_addr_10_reg_1809, ap_CS_fsm_state15, ap_CS_fsm_state21, exitcond_i_fu_957_p2, done_reg_442, temp_r_coeffs_addr_12_reg_1865, ap_CS_fsm_state23, ap_CS_fsm_state46, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state45, tmp_361_i_fu_770_p1, tmp_112_i_fu_963_p1, tmp_114_i_fu_974_p1, tmp_228_fu_1167_p1, gepindex2_cast_fu_1232_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            f_coeffs_address0 <= gepindex2_cast_fu_1232_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            f_coeffs_address0 <= tmp_228_fu_1167_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            f_coeffs_address0 <= temp_r_coeffs_addr_12_reg_1865;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state21) and (exitcond_i_fu_957_p2 = ap_const_lv1_1)))) then 
            f_coeffs_address0 <= ap_const_lv64_2A4(10 - 1 downto 0);
        elsif (((done_reg_442 = ap_const_lv1_0) and (exitcond_i_fu_957_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            f_coeffs_address0 <= tmp_114_i_fu_974_p1(10 - 1 downto 0);
        elsif (((exitcond_i_fu_957_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21) and (done_reg_442 = ap_const_lv1_1))) then 
            f_coeffs_address0 <= tmp_112_i_fu_963_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            f_coeffs_address0 <= temp_r_coeffs_addr_10_reg_1809;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            f_coeffs_address0 <= temp_r_coeffs_addr_8_reg_1752;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            f_coeffs_address0 <= tmp_361_i_fu_770_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            f_coeffs_address0 <= ap_const_lv64_0(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            f_coeffs_address0 <= tmp_215_reg_1666(10 - 1 downto 0);
        else 
            f_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    f_coeffs_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state15, ap_CS_fsm_state21, exitcond_i_fu_957_p2, done_reg_442, ap_CS_fsm_state23, ap_CS_fsm_state46, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state21) and (exitcond_i_fu_957_p2 = ap_const_lv1_1)) or ((done_reg_442 = ap_const_lv1_0) and (exitcond_i_fu_957_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((exitcond_i_fu_957_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21) and (done_reg_442 = ap_const_lv1_1)))) then 
            f_coeffs_ce0 <= ap_const_logic_1;
        else 
            f_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    f_coeffs_d0_assign_proc : process(r_coeffs_q0, ap_CS_fsm_state23, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state45, tmp_308_cast_fu_634_p1, tmp_363_i_fu_787_p2, tmp_232_fu_916_p2, tmp_115_i_fu_985_p3, tmp_111_i_fu_1001_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            f_coeffs_d0 <= r_coeffs_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            f_coeffs_d0 <= tmp_111_i_fu_1001_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            f_coeffs_d0 <= tmp_115_i_fu_985_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            f_coeffs_d0 <= tmp_232_fu_916_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            f_coeffs_d0 <= tmp_363_i_fu_787_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            f_coeffs_d0 <= tmp_308_cast_fu_634_p1;
        else 
            f_coeffs_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    f_coeffs_we0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state5, ap_CS_fsm_state10, ap_CS_fsm_state16, ap_CS_fsm_state22, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            f_coeffs_we0 <= ap_const_logic_1;
        else 
            f_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;


    g_coeffs_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state9, g_coeffs_addr_4_reg_1757, ap_CS_fsm_state13, ap_CS_fsm_state10, tmp_216_fu_651_p1, tmp_361_i_fu_770_p1, tmp_229_fu_906_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            g_coeffs_address0 <= tmp_229_fu_906_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            g_coeffs_address0 <= g_coeffs_addr_4_reg_1757;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            g_coeffs_address0 <= tmp_361_i_fu_770_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            g_coeffs_address0 <= tmp_216_fu_651_p1(10 - 1 downto 0);
        else 
            g_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    g_coeffs_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            g_coeffs_ce0 <= ap_const_logic_1;
        else 
            g_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    g_coeffs_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state10, tmp_364_i_fu_794_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            g_coeffs_d0 <= tmp_364_i_fu_794_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            g_coeffs_d0 <= ap_const_lv16_1;
        else 
            g_coeffs_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    g_coeffs_we0_assign_proc : process(ap_CS_fsm_state6, exitcond6_fu_639_p2, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((exitcond6_fu_639_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            g_coeffs_we0 <= ap_const_logic_1;
        else 
            g_coeffs_we0 <= ap_const_logic_0;
        end if; 
    end process;

    gepindex2335_cast_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gepindex4_fu_1263_p3),64));
    gepindex2_cast_fu_1232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gepindex2_fu_1224_p3),64));
    gepindex2_fu_1224_p3 <= 
        gepindex_fu_1218_p2 when (addrCmp_fu_1212_p2(0) = '1') else 
        ap_const_lv10_2A4;
    gepindex333_cast_fu_1253_p4 <= i_i7_reg_564(10 downto 1);
    gepindex4_fu_1263_p3 <= 
        gepindex333_cast_fu_1253_p4 when (addrCmp2_fu_1247_p2(0) = '1') else 
        ap_const_lv10_2A4;
    gepindex_fu_1218_p2 <= std_logic_vector(signed(ap_const_lv10_3EA) + signed(tmp_278_fu_1208_p1));

    grp_fu_1144_ap_start_assign_proc : process(ap_CS_fsm_state30, exitcond_fu_1127_p2)
    begin
        if (((exitcond_fu_1127_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_fu_1144_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1144_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1144_p0 <= std_logic_vector(unsigned(tmp_335_cast_reg_1939) + unsigned(j_1_cast_fu_1123_p1));

    grp_fu_575_p0_assign_proc : process(start_pos_fu_1290_p3, start_pos_reg_1996, ap_CS_fsm_state47, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_575_p0 <= start_pos_reg_1996;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_575_p0 <= start_pos_fu_1290_p3;
        else 
            grp_fu_575_p0 <= "XXXX";
        end if; 
    end process;


    grp_fu_575_p1_assign_proc : process(ap_CS_fsm_state47, end_pos_fu_1298_p2, end_pos_reg_2002, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_575_p1 <= end_pos_reg_2002;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_575_p1 <= end_pos_fu_1298_p2;
        else 
            grp_fu_575_p1 <= "XXXX";
        end if; 
    end process;

    grp_fu_575_p2 <= "1" when (unsigned(grp_fu_575_p0) > unsigned(grp_fu_575_p1)) else "0";
    i_20_fu_764_p2 <= std_logic_vector(unsigned(i_i4_reg_454) + unsigned(ap_const_lv10_1));
    i_21_fu_807_p2 <= std_logic_vector(unsigned(i_i8_reg_465) + unsigned(ap_const_lv10_1));
    i_22_fu_900_p2 <= std_logic_vector(unsigned(i_4_reg_476) + unsigned(ap_const_lv10_1));
    i_23_fu_1178_p2 <= std_logic_vector(unsigned(i_i7_reg_564) + unsigned(ap_const_lv11_1));
    i_24_fu_929_p2 <= std_logic_vector(unsigned(i_5_reg_487) + unsigned(ap_const_lv10_1));
    i_25_fu_590_p2 <= std_logic_vector(unsigned(i_reg_351) + unsigned(ap_const_lv10_1));
    i_26_fu_602_p2 <= std_logic_vector(unsigned(i_1_reg_362) + unsigned(ap_const_lv10_1));
    i_27_fu_619_p2 <= std_logic_vector(unsigned(i_2_reg_373) + unsigned(ap_const_lv10_1));
    i_28_fu_645_p2 <= std_logic_vector(unsigned(i_3_reg_384) + unsigned(ap_const_lv10_1));
    i_29_fu_1086_p2 <= std_logic_vector(unsigned(i_6_reg_520) + unsigned(ap_const_lv10_1));
    i_30_fu_1107_p2 <= std_logic_vector(unsigned(i_7_reg_541) + unsigned(ap_const_lv4_1));
    i_31_fu_979_p2 <= std_logic_vector(unsigned(i_i_reg_498) + unsigned(ap_const_lv10_1));
    i_32_fu_1036_p2 <= std_logic_vector(unsigned(i_i2_reg_509) + unsigned(ap_const_lv10_1));
    i_7_cast_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_7_reg_541),10));
    j_1_cast_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_552),11));
    j_7_fu_662_p2 <= std_logic_vector(unsigned(j_reg_419) + unsigned(ap_const_lv11_1));
    j_8_fu_1133_p2 <= std_logic_vector(unsigned(j_1_reg_552) + unsigned(ap_const_lv10_1));
        k_6_cast_cast_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(k_6_fu_694_p2),30));

    k_6_fu_694_p2 <= std_logic_vector(unsigned(k_cast_fu_668_p1) - unsigned(tmp_315_cast_cast_fu_686_p3));
    k_7_fu_1046_p2 <= std_logic_vector(unsigned(s_assign_cast_reg_1723) + unsigned(k_reg_407));
    k_cast_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_reg_407),12));
    mask_fu_1626_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv2_1),to_integer(unsigned('0' & tmp_331_fu_1623_p1(2-1 downto 0)))));
    mem_index_gep2_fu_1241_p2 <= std_logic_vector(unsigned(ap_const_lv16_7D60) + unsigned(adjSize311_cast_fu_1237_p1));
    mem_index_gep_fu_1202_p2 <= std_logic_vector(signed(ap_const_lv12_816) + signed(adjSize309_cast_cast_fu_1198_p1));
    p_demorgan_fu_1610_p2 <= (tmp_329_fu_1604_p2 and tmp_328_fu_1598_p2);

    r_coeffs_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state11, r_coeffs_addr_11_reg_1775, ap_CS_fsm_state17, done_reg_442, ap_CS_fsm_state24, exitcond_i3_fu_1008_p2, r_coeffs_addr_10_reg_1888, tmp_219_reg_1921, ap_CS_fsm_state44, ap_CS_fsm_state46, r_coeffs_addr_12_reg_1986, ap_CS_fsm_state26, ap_CS_fsm_state12, ap_CS_fsm_state25, ap_CS_fsm_state28, ap_CS_fsm_state48, tmp_s_fu_608_p1, tmp_361_i2_fu_813_p1, tmp_233_fu_935_p1, tmp_107_i_fu_1020_p1, tmp_109_i_fu_1031_p1, tmp_227_fu_1162_p1, gepindex2335_cast_fu_1271_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            r_coeffs_address0 <= r_coeffs_addr_12_reg_1986;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            r_coeffs_address0 <= gepindex2335_cast_fu_1271_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            r_coeffs_address0 <= tmp_227_fu_1162_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            r_coeffs_address0 <= tmp_219_reg_1921(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            r_coeffs_address0 <= r_coeffs_addr_10_reg_1888;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (exitcond_i3_fu_1008_p2 = ap_const_lv1_1)))) then 
            r_coeffs_address0 <= ap_const_lv64_0(10 - 1 downto 0);
        elsif (((exitcond_i3_fu_1008_p2 = ap_const_lv1_0) and (done_reg_442 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            r_coeffs_address0 <= tmp_109_i_fu_1031_p1(10 - 1 downto 0);
        elsif (((exitcond_i3_fu_1008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24) and (done_reg_442 = ap_const_lv1_1))) then 
            r_coeffs_address0 <= tmp_107_i_fu_1020_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            r_coeffs_address0 <= tmp_233_fu_935_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_coeffs_address0 <= r_coeffs_addr_11_reg_1775;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            r_coeffs_address0 <= tmp_361_i2_fu_813_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_coeffs_address0 <= tmp_s_fu_608_p1(10 - 1 downto 0);
        else 
            r_coeffs_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    r_coeffs_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state11, ap_CS_fsm_state17, done_reg_442, ap_CS_fsm_state24, exitcond_i3_fu_1008_p2, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state26, ap_CS_fsm_state12, ap_CS_fsm_state25, ap_CS_fsm_state28, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (exitcond_i3_fu_1008_p2 = ap_const_lv1_1)) or ((exitcond_i3_fu_1008_p2 = ap_const_lv1_0) and (done_reg_442 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((exitcond_i3_fu_1008_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24) and (done_reg_442 = ap_const_lv1_1)))) then 
            r_coeffs_ce0 <= ap_const_logic_1;
        else 
            r_coeffs_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r_coeffs_d0_assign_proc : process(ap_CS_fsm_state3, b_coeffs_q0, ap_CS_fsm_state26, ap_CS_fsm_state12, ap_CS_fsm_state25, ap_CS_fsm_state28, ap_CS_fsm_state48, tmp_364_i2_fu_887_p2, tmp_110_i_fu_1065_p3, tmp_105_i_fu_1074_p2, tmp_330_fu_1616_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            r_coeffs_d0 <= tmp_330_fu_1616_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            r_coeffs_d0 <= b_coeffs_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            r_coeffs_d0 <= tmp_105_i_fu_1074_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            r_coeffs_d0 <= tmp_110_i_fu_1065_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_coeffs_d0 <= tmp_364_i2_fu_887_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_coeffs_d0 <= ap_const_lv16_0;
        else 
            r_coeffs_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_coeffs_we0_assign_proc : process(ap_CS_fsm_state3, exitcond8_fu_596_p2, ap_CS_fsm_state26, ap_CS_fsm_state12, ap_CS_fsm_state25, ap_CS_fsm_state28, ap_CS_fsm_state48, mask_fu_1626_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            r_coeffs_we0 <= mask_fu_1626_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((exitcond8_fu_596_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            r_coeffs_we0 <= ap_const_lv2_3;
        else 
            r_coeffs_we0 <= ap_const_lv2_0;
        end if; 
    end process;

    s_assign_cast_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(done_reg_442),11));
    start_pos_fu_1290_p3 <= (tmp_277_reg_1975 & ap_const_lv3_0);
    swap_fu_744_p2 <= (tmp_274_fu_726_p3 and tmp21_fu_738_p2);
    t_2_fu_875_p2 <= (tmp_i3_cast_reg_1738 and tmp_362_i2_fu_869_p2);
    t_fu_782_p2 <= (tmp_i3_cast_reg_1738 and tmp_362_i_fu_776_p2);
    tmp21_fu_738_p2 <= (tmp_273_fu_704_p1 and done_reg_442);
    tmp22_fu_825_p2 <= (tmp_274_reg_1728 and done_reg_442);
    tmp_105_i_fu_1074_p2 <= (tmp_i_69_reg_1875 and r_coeffs_q0);
    tmp_106_i_fu_1014_p2 <= std_logic_vector(signed(ap_const_lv10_2A4) - signed(i_i2_reg_509));
    tmp_107_i_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_106_i_fu_1014_p2),64));
    tmp_108_i_fu_1025_p2 <= std_logic_vector(signed(ap_const_lv10_2A5) - signed(i_i2_reg_509));
    tmp_109_i_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_108_i_fu_1025_p2),64));
    tmp_110_i_fu_1065_p3 <= 
        r_coeffs_q0 when (done_reg_442(0) = '1') else 
        r_coeffs_q0;
    tmp_111_i_fu_1001_p2 <= (tmp_i_69_fu_994_p3 and f_coeffs_q0);
    tmp_112_i_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_498),64));
    tmp_113_i_fu_968_p2 <= std_logic_vector(unsigned(i_i_reg_498) + unsigned(ap_const_lv10_3FF));
    tmp_114_i_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_113_i_fu_968_p2),64));
    tmp_115_i_fu_985_p3 <= 
        f_coeffs_q0 when (done_reg_442(0) = '1') else 
        f_coeffs_q0;
    tmp_215_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_reg_373),64));
    tmp_216_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_3_reg_384),64));
    tmp_217_fu_672_p2 <= std_logic_vector(unsigned(ap_const_lv11_2A4) - unsigned(k_reg_407));
    tmp_218_fu_720_p2 <= std_logic_vector(unsigned(tmp_318_cast_fu_712_p1) - unsigned(tmp_319_cast_fu_716_p1));
    tmp_219_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_6_reg_520),64));
    tmp_220_fu_1113_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv10_1),to_integer(unsigned('0' & i_7_cast_fu_1097_p1(10-1 downto 0)))));
    tmp_221_fu_819_p2 <= (degg_reg_430 xor degf_reg_395);
    tmp_222_fu_830_p2 <= (tmp_273_reg_1718 and tmp22_fu_825_p2);
    tmp_223_fu_843_p2 <= (tmp_325_cast_fu_835_p3 and tmp_221_fu_819_p2);
    tmp_224_fu_861_p3 <= 
        ap_const_lv16_FFFF when (done_reg_442(0) = '1') else 
        ap_const_lv16_0;
    tmp_227_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1144_p2),64));
    tmp_228_fu_1167_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_552),64));
    tmp_229_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_4_reg_476),64));
    tmp_231_fu_912_p2 <= (tmp_230_reg_1819 and tmp_224_reg_1790);
    tmp_232_fu_916_p2 <= (tmp_231_fu_912_p2 xor f_coeffs_q0);
    tmp_233_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_5_reg_487),64));
    tmp_235_fu_947_p2 <= (tmp_234_fu_1637_p2 and tmp_224_reg_1790);
    tmp_236_fu_951_p2 <= (tmp_235_fu_947_p2 xor b_coeffs_q0);
    tmp_237_fu_1051_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(degf_4_fu_1042_p2));
    tmp_271_fu_630_p1 <= a_coeffs_q0(1 - 1 downto 0);
    tmp_272_fu_678_p3 <= tmp_217_fu_672_p2(10 downto 10);
    tmp_273_fu_704_p0 <= f_coeffs_q0;
    tmp_273_fu_704_p1 <= tmp_273_fu_704_p0(1 - 1 downto 0);
    tmp_274_fu_726_p3 <= tmp_218_fu_720_p2(15 downto 15);
    tmp_275_fu_1150_p1 <= k_1_reg_531(1 - 1 downto 0);
    tmp_276_fu_1276_p4 <= k_1_reg_531(29 downto 1);
    tmp_277_fu_1184_p1 <= i_i7_reg_564(1 - 1 downto 0);
    tmp_278_fu_1208_p1 <= mem_index_gep_fu_1202_p2(10 - 1 downto 0);
    tmp_280_fu_1305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(start_pos_fu_1290_p3),5));
    tmp_281_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(end_pos_fu_1298_p2),5));
    
    tmp_282_fu_1313_p4_proc : process(f_coeffs_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_282_fu_1313_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := f_coeffs_q0;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for tmp_282_fu_1313_p4_i in 0 to 16-1 loop
                v0_cpy(tmp_282_fu_1313_p4_i) := f_coeffs_q0(16-1-tmp_282_fu_1313_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_282_fu_1313_p4 <= resvalue(16-1 downto 0);
    end process;

    tmp_283_fu_1323_p2 <= std_logic_vector(unsigned(tmp_280_fu_1305_p1) - unsigned(tmp_281_fu_1309_p1));
    tmp_284_fu_1329_p2 <= (tmp_280_fu_1305_p1 xor ap_const_lv5_F);
    tmp_285_fu_1335_p2 <= std_logic_vector(unsigned(tmp_281_fu_1309_p1) - unsigned(tmp_280_fu_1305_p1));
    tmp_286_fu_1341_p3 <= 
        tmp_283_fu_1323_p2 when (grp_fu_575_p2(0) = '1') else 
        tmp_285_fu_1335_p2;
    tmp_287_fu_1349_p3 <= 
        tmp_282_fu_1313_p4 when (grp_fu_575_p2(0) = '1') else 
        f_coeffs_q0;
    tmp_288_fu_1357_p3 <= 
        tmp_284_fu_1329_p2 when (grp_fu_575_p2(0) = '1') else 
        tmp_280_fu_1305_p1;
    tmp_289_fu_1365_p2 <= std_logic_vector(unsigned(ap_const_lv5_F) - unsigned(tmp_286_fu_1341_p3));
    tmp_290_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_288_fu_1357_p3),16));
    tmp_291_fu_1483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_289_reg_2008),16));
    tmp_292_fu_1375_p2 <= std_logic_vector(shift_right(unsigned(tmp_287_fu_1349_p3),to_integer(unsigned('0' & tmp_290_fu_1371_p1(16-1 downto 0)))));
    tmp_293_fu_1486_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & tmp_291_fu_1483_p1(16-1 downto 0)))));
    tmp_294_fu_1492_p2 <= (tmp_293_fu_1486_p2 and tmp_292_reg_2013);
    tmp_295_fu_1497_p1 <= tmp_294_fu_1492_p2(8 - 1 downto 0);
    tmp_296_fu_1381_p2 <= "1" when (unsigned(start_pos_fu_1290_p3) > unsigned(end_pos_fu_1298_p2)) else "0";
    tmp_297_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(start_pos_fu_1290_p3),5));
    tmp_298_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(end_pos_fu_1298_p2),5));
    
    tmp_299_fu_1395_p4_proc : process(r_coeffs_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_299_fu_1395_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := r_coeffs_q0;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for tmp_299_fu_1395_p4_i in 0 to 16-1 loop
                v0_cpy(tmp_299_fu_1395_p4_i) := r_coeffs_q0(16-1-tmp_299_fu_1395_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_299_fu_1395_p4 <= resvalue(16-1 downto 0);
    end process;

    tmp_300_fu_1405_p2 <= std_logic_vector(unsigned(tmp_297_fu_1387_p1) - unsigned(tmp_298_fu_1391_p1));
    tmp_301_fu_1411_p2 <= (tmp_297_fu_1387_p1 xor ap_const_lv5_F);
    tmp_302_fu_1417_p2 <= std_logic_vector(unsigned(tmp_298_fu_1391_p1) - unsigned(tmp_297_fu_1387_p1));
    tmp_303_fu_1423_p3 <= 
        tmp_300_fu_1405_p2 when (tmp_296_fu_1381_p2(0) = '1') else 
        tmp_302_fu_1417_p2;
    tmp_304_fu_1431_p3 <= 
        tmp_299_fu_1395_p4 when (tmp_296_fu_1381_p2(0) = '1') else 
        r_coeffs_q0;
    tmp_305_fu_1439_p3 <= 
        tmp_301_fu_1411_p2 when (tmp_296_fu_1381_p2(0) = '1') else 
        tmp_297_fu_1387_p1;
    tmp_306_fu_1447_p2 <= std_logic_vector(unsigned(ap_const_lv5_F) - unsigned(tmp_303_fu_1423_p3));
    tmp_307_fu_1453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_305_fu_1439_p3),16));
    tmp_308_cast_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_271_fu_630_p1),16));
    tmp_308_fu_1457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_306_fu_1447_p2),16));
    tmp_309_fu_1461_p2 <= std_logic_vector(shift_right(unsigned(tmp_304_fu_1431_p3),to_integer(unsigned('0' & tmp_307_fu_1453_p1(16-1 downto 0)))));
    tmp_310_fu_1467_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & tmp_308_fu_1457_p1(16-1 downto 0)))));
    tmp_311_fu_1473_p2 <= (tmp_310_fu_1467_p2 and tmp_309_fu_1461_p2);
    tmp_312_fu_1479_p1 <= tmp_311_fu_1473_p2(8 - 1 downto 0);
    tmp_314_fu_1516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(start_pos_reg_1996),5));
    tmp_315_cast_cast_fu_686_p3 <= 
        ap_const_lv12_2A5 when (tmp_272_fu_678_p3(0) = '1') else 
        ap_const_lv12_0;
    tmp_315_fu_1519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(end_pos_reg_2002),5));
    tmp_316_fu_1522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_386_i_fu_1511_p2),16));
    tmp_317_fu_1526_p2 <= (tmp_314_fu_1516_p1 xor ap_const_lv5_F);
    tmp_318_cast_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(degf_reg_395),17));
    tmp_318_fu_1532_p3 <= 
        tmp_314_fu_1516_p1 when (grp_fu_575_p2(0) = '1') else 
        tmp_315_fu_1519_p1;
    tmp_319_cast_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(degg_reg_430),17));
    tmp_319_fu_1540_p3 <= 
        tmp_315_fu_1519_p1 when (grp_fu_575_p2(0) = '1') else 
        tmp_314_fu_1516_p1;
    tmp_320_fu_1548_p3 <= 
        tmp_317_fu_1526_p2 when (grp_fu_575_p2(0) = '1') else 
        tmp_314_fu_1516_p1;
    tmp_321_fu_1556_p2 <= (tmp_318_fu_1532_p3 xor ap_const_lv5_F);
    tmp_322_fu_1562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_320_fu_1548_p3),16));
    tmp_323_fu_1566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_319_fu_1540_p3),16));
    tmp_324_fu_1570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_321_fu_1556_p2),16));
    tmp_325_cast_fu_835_p3 <= 
        ap_const_lv16_FFFF when (tmp_222_fu_830_p2(0) = '1') else 
        ap_const_lv16_0;
    tmp_325_fu_1574_p2 <= std_logic_vector(shift_left(unsigned(tmp_316_fu_1522_p1),to_integer(unsigned('0' & tmp_322_fu_1562_p1(16-1 downto 0)))));
    
    tmp_326_fu_1580_p4_proc : process(tmp_325_fu_1574_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(16+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_326_fu_1580_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(16 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_F(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_325_fu_1574_p2;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(16-1-unsigned(ap_const_lv32_F(4-1 downto 0)));
            for tmp_326_fu_1580_p4_i in 0 to 16-1 loop
                v0_cpy(tmp_326_fu_1580_p4_i) := tmp_325_fu_1574_p2(16-1-tmp_326_fu_1580_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(16-1 downto 0)))));
        res_mask := res_mask(16-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_326_fu_1580_p4 <= resvalue(16-1 downto 0);
    end process;

    tmp_327_fu_1590_p3 <= 
        tmp_326_fu_1580_p4 when (grp_fu_575_p2(0) = '1') else 
        tmp_325_fu_1574_p2;
    tmp_328_fu_1598_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & tmp_323_fu_1566_p1(16-1 downto 0)))));
    tmp_329_fu_1604_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv16_FFFF),to_integer(unsigned('0' & tmp_324_fu_1570_p1(16-1 downto 0)))));
    tmp_330_fu_1616_p2 <= (tmp_327_fu_1590_p3 and p_demorgan_fu_1610_p2);
    tmp_331_fu_1623_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_277_reg_1975),2));
    tmp_335_cast_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_220_fu_1113_p2),11));
    tmp_361_i2_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i8_reg_465),64));
    tmp_361_i_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i4_reg_454),64));
    tmp_362_i2_fu_869_p2 <= (r_coeffs_q0 xor b_coeffs_q0);
    tmp_362_i_fu_776_p2 <= (g_coeffs_q0 xor f_coeffs_q0);
    tmp_363_i2_fu_880_p2 <= (t_2_fu_875_p2 xor b_coeffs_q0);
    tmp_363_i_fu_787_p2 <= (t_fu_782_p2 xor f_coeffs_q0);
    tmp_364_i2_fu_887_p2 <= (t_2_fu_875_p2 xor r_coeffs_q0);
    tmp_364_i_fu_794_p2 <= (t_fu_782_p2 xor g_coeffs_q0);
        tmp_37_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_276_fu_1276_p4),30));

    tmp_386_i_fu_1511_p2 <= (tmp_i2_fu_1506_p2 xor tmp_312_reg_2018);
    tmp_67_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(done_reg_442),16));
    tmp_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_351),64));
    tmp_i2_fu_1506_p2 <= (tmp_i9_fu_1501_p2 and b_assign_2_cast_reg_1957);
    tmp_i3_cast_fu_750_p3 <= 
        ap_const_lv16_FFFF when (swap_fu_744_p2(0) = '1') else 
        ap_const_lv16_0;
    tmp_i9_fu_1501_p2 <= (tmp_312_reg_2018 xor tmp_295_fu_1497_p1);
    tmp_i_69_fu_994_p3 <= 
        ap_const_lv16_FFFF when (tmp_i_reg_1842(0) = '1') else 
        ap_const_lv16_0;
    tmp_i_fu_941_p2 <= (done_reg_442 xor ap_const_lv1_1);
    tmp_s_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_362),64));
end behav;
