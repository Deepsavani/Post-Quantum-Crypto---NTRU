// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module owcpa_keypair (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pk_address0,
        pk_ce0,
        pk_we0,
        pk_d0,
        pk_address1,
        pk_ce1,
        pk_we1,
        pk_d1,
        sk_address0,
        sk_ce0,
        sk_we0,
        sk_d0,
        sk_address1,
        sk_ce1,
        sk_we1,
        sk_d1,
        seed_address0,
        seed_ce0,
        seed_q0,
        seed_address1,
        seed_ce1,
        seed_q1
);

parameter    ap_ST_fsm_state1 = 57'd1;
parameter    ap_ST_fsm_state2 = 57'd2;
parameter    ap_ST_fsm_state3 = 57'd4;
parameter    ap_ST_fsm_state4 = 57'd8;
parameter    ap_ST_fsm_state5 = 57'd16;
parameter    ap_ST_fsm_state6 = 57'd32;
parameter    ap_ST_fsm_state7 = 57'd64;
parameter    ap_ST_fsm_state8 = 57'd128;
parameter    ap_ST_fsm_state9 = 57'd256;
parameter    ap_ST_fsm_state10 = 57'd512;
parameter    ap_ST_fsm_state11 = 57'd1024;
parameter    ap_ST_fsm_state12 = 57'd2048;
parameter    ap_ST_fsm_state13 = 57'd4096;
parameter    ap_ST_fsm_state14 = 57'd8192;
parameter    ap_ST_fsm_state15 = 57'd16384;
parameter    ap_ST_fsm_state16 = 57'd32768;
parameter    ap_ST_fsm_state17 = 57'd65536;
parameter    ap_ST_fsm_state18 = 57'd131072;
parameter    ap_ST_fsm_state19 = 57'd262144;
parameter    ap_ST_fsm_state20 = 57'd524288;
parameter    ap_ST_fsm_state21 = 57'd1048576;
parameter    ap_ST_fsm_state22 = 57'd2097152;
parameter    ap_ST_fsm_state23 = 57'd4194304;
parameter    ap_ST_fsm_state24 = 57'd8388608;
parameter    ap_ST_fsm_state25 = 57'd16777216;
parameter    ap_ST_fsm_state26 = 57'd33554432;
parameter    ap_ST_fsm_state27 = 57'd67108864;
parameter    ap_ST_fsm_state28 = 57'd134217728;
parameter    ap_ST_fsm_state29 = 57'd268435456;
parameter    ap_ST_fsm_state30 = 57'd536870912;
parameter    ap_ST_fsm_state31 = 57'd1073741824;
parameter    ap_ST_fsm_state32 = 57'd2147483648;
parameter    ap_ST_fsm_state33 = 57'd4294967296;
parameter    ap_ST_fsm_state34 = 57'd8589934592;
parameter    ap_ST_fsm_state35 = 57'd17179869184;
parameter    ap_ST_fsm_state36 = 57'd34359738368;
parameter    ap_ST_fsm_state37 = 57'd68719476736;
parameter    ap_ST_fsm_state38 = 57'd137438953472;
parameter    ap_ST_fsm_state39 = 57'd274877906944;
parameter    ap_ST_fsm_state40 = 57'd549755813888;
parameter    ap_ST_fsm_state41 = 57'd1099511627776;
parameter    ap_ST_fsm_state42 = 57'd2199023255552;
parameter    ap_ST_fsm_state43 = 57'd4398046511104;
parameter    ap_ST_fsm_state44 = 57'd8796093022208;
parameter    ap_ST_fsm_state45 = 57'd17592186044416;
parameter    ap_ST_fsm_state46 = 57'd35184372088832;
parameter    ap_ST_fsm_state47 = 57'd70368744177664;
parameter    ap_ST_fsm_state48 = 57'd140737488355328;
parameter    ap_ST_fsm_state49 = 57'd281474976710656;
parameter    ap_ST_fsm_state50 = 57'd562949953421312;
parameter    ap_ST_fsm_state51 = 57'd1125899906842624;
parameter    ap_ST_fsm_state52 = 57'd2251799813685248;
parameter    ap_ST_fsm_state53 = 57'd4503599627370496;
parameter    ap_ST_fsm_state54 = 57'd9007199254740992;
parameter    ap_ST_fsm_state55 = 57'd18014398509481984;
parameter    ap_ST_fsm_state56 = 57'd36028797018963968;
parameter    ap_ST_fsm_state57 = 57'd72057594037927936;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] pk_address0;
output   pk_ce0;
output   pk_we0;
output  [7:0] pk_d0;
output  [9:0] pk_address1;
output   pk_ce1;
output   pk_we1;
output  [7:0] pk_d1;
output  [10:0] sk_address0;
output   sk_ce0;
output   sk_we0;
output  [7:0] sk_d0;
output  [10:0] sk_address1;
output   sk_ce1;
output   sk_we1;
output  [7:0] sk_d1;
output  [11:0] seed_address0;
output   seed_ce0;
input  [7:0] seed_q0;
output  [11:0] seed_address1;
output   seed_ce1;
input  [7:0] seed_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] sk_address0;
reg sk_ce0;
reg sk_we0;
reg[7:0] sk_d0;
reg sk_ce1;
reg sk_we1;
reg[11:0] seed_address0;
reg seed_ce0;
reg seed_ce1;

(* fsm_encoding = "none" *) reg   [56:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] i_33_fu_414_p2;
reg   [9:0] i_33_reg_850;
wire    ap_CS_fsm_state2;
wire   [63:0] tmp_i_i_fu_420_p1;
reg   [63:0] tmp_i_i_reg_855;
wire   [0:0] exitcond_i_i_fu_408_p2;
wire   [2:0] r_2_fu_537_p2;
reg   [2:0] r_2_reg_865;
wire    ap_CS_fsm_state3;
wire   [9:0] i_34_fu_610_p2;
reg   [9:0] i_34_reg_874;
wire    ap_CS_fsm_state11;
reg   [9:0] f_coeffs_addr_2_reg_879;
wire   [0:0] exitcond_i_fu_604_p2;
wire   [9:0] i_35_fu_672_p2;
reg   [9:0] i_35_reg_887;
wire    ap_CS_fsm_state13;
reg   [9:0] h_coeffs_addr_reg_892;
wire   [0:0] exitcond_i6_fu_666_p2;
wire   [9:0] i_36_fu_734_p2;
reg   [9:0] i_36_reg_900;
wire    ap_CS_fsm_state15;
wire   [63:0] tmp_s_fu_740_p1;
reg   [63:0] tmp_s_reg_905;
wire   [0:0] exitcond_fu_728_p2;
wire   [9:0] i_37_fu_772_p2;
reg   [9:0] i_37_reg_918;
wire    ap_CS_fsm_state20;
wire   [63:0] tmp_i3_fu_778_p1;
reg   [63:0] tmp_i3_reg_923;
wire   [0:0] exitcond1_i_fu_766_p2;
wire   [9:0] i_38_fu_804_p2;
reg   [9:0] i_38_reg_936;
wire    ap_CS_fsm_state22;
wire   [63:0] tmp_306_i_fu_810_p1;
reg   [63:0] tmp_306_i_reg_941;
wire   [0:0] exitcond_i7_fu_798_p2;
wire   [9:0] c_coeffs_addr_reg_951;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state50;
wire    grp_poly_Rq_mul_fu_384_ap_ready;
wire    grp_poly_Rq_mul_fu_384_ap_done;
wire   [9:0] i_39_fu_821_p2;
reg   [9:0] i_39_reg_964;
wire    ap_CS_fsm_state51;
reg   [9:0] h_coeffs_addr_4_reg_969;
wire   [0:0] exitcond_i2_fu_815_p2;
reg   [9:0] b_coeffs_address0;
reg    b_coeffs_ce0;
reg    b_coeffs_we0;
wire   [15:0] b_coeffs_d0;
wire   [15:0] b_coeffs_q0;
reg   [9:0] c_coeffs_address0;
reg    c_coeffs_ce0;
reg    c_coeffs_we0;
reg   [15:0] c_coeffs_d0;
wire   [15:0] c_coeffs_q0;
reg   [9:0] s_coeffs_address0;
reg    s_coeffs_ce0;
reg    s_coeffs_we0;
wire   [15:0] s_coeffs_q0;
reg   [9:0] ai2_coeffs_address0;
reg    ai2_coeffs_ce0;
reg   [1:0] ai2_coeffs_we0;
wire   [15:0] ai2_coeffs_q0;
reg   [9:0] x1_coeffs_address0;
reg    x1_coeffs_ce0;
reg    x1_coeffs_we0;
reg   [15:0] x1_coeffs_d0;
wire   [15:0] x1_coeffs_q0;
reg    x1_coeffs_ce1;
wire   [15:0] x1_coeffs_q1;
reg   [9:0] x2_coeffs_address0;
reg    x2_coeffs_ce0;
reg   [1:0] x2_coeffs_we0;
reg   [15:0] x2_coeffs_d0;
wire   [15:0] x2_coeffs_q0;
reg   [9:0] x2_coeffs_address1;
reg    x2_coeffs_ce1;
reg   [1:0] x2_coeffs_we1;
wire   [15:0] x2_coeffs_q1;
reg   [9:0] x3_coeffs_address0;
reg    x3_coeffs_ce0;
reg    x3_coeffs_we0;
reg   [15:0] x3_coeffs_d0;
wire   [15:0] x3_coeffs_q0;
reg   [9:0] x3_coeffs_address1;
reg    x3_coeffs_ce1;
reg    x3_coeffs_we1;
wire   [15:0] x3_coeffs_d1;
wire   [15:0] x3_coeffs_q1;
reg   [9:0] x4_coeffs_address0;
reg    x4_coeffs_ce0;
reg    x4_coeffs_we0;
reg   [15:0] x4_coeffs_d0;
wire   [15:0] x4_coeffs_q0;
reg   [9:0] x5_coeffs_address0;
reg    x5_coeffs_ce0;
reg    x5_coeffs_we0;
wire   [15:0] x5_coeffs_q0;
wire    grp_sample_fixed_type_fu_351_ap_start;
wire    grp_sample_fixed_type_fu_351_ap_done;
wire    grp_sample_fixed_type_fu_351_ap_idle;
wire    grp_sample_fixed_type_fu_351_ap_ready;
wire   [9:0] grp_sample_fixed_type_fu_351_r_coeffs_address0;
wire    grp_sample_fixed_type_fu_351_r_coeffs_ce0;
wire    grp_sample_fixed_type_fu_351_r_coeffs_we0;
wire   [15:0] grp_sample_fixed_type_fu_351_r_coeffs_d0;
wire   [11:0] grp_sample_fixed_type_fu_351_u_address0;
wire    grp_sample_fixed_type_fu_351_u_ce0;
wire   [11:0] grp_sample_fixed_type_fu_351_u_address1;
wire    grp_sample_fixed_type_fu_351_u_ce1;
wire    grp_poly_S3_inv_fu_358_ap_start;
wire    grp_poly_S3_inv_fu_358_ap_done;
wire    grp_poly_S3_inv_fu_358_ap_idle;
wire    grp_poly_S3_inv_fu_358_ap_ready;
wire   [9:0] grp_poly_S3_inv_fu_358_r_coeffs_address0;
wire    grp_poly_S3_inv_fu_358_r_coeffs_ce0;
wire   [1:0] grp_poly_S3_inv_fu_358_r_coeffs_we0;
wire   [15:0] grp_poly_S3_inv_fu_358_r_coeffs_d0;
wire   [9:0] grp_poly_S3_inv_fu_358_r_coeffs_address1;
wire    grp_poly_S3_inv_fu_358_r_coeffs_ce1;
wire   [1:0] grp_poly_S3_inv_fu_358_r_coeffs_we1;
wire   [15:0] grp_poly_S3_inv_fu_358_r_coeffs_d1;
wire   [9:0] grp_poly_S3_inv_fu_358_a_coeffs_address0;
wire    grp_poly_S3_inv_fu_358_a_coeffs_ce0;
wire    grp_poly_R2_inv_fu_364_ap_start;
wire    grp_poly_R2_inv_fu_364_ap_done;
wire    grp_poly_R2_inv_fu_364_ap_idle;
wire    grp_poly_R2_inv_fu_364_ap_ready;
wire   [9:0] grp_poly_R2_inv_fu_364_r_coeffs_address0;
wire    grp_poly_R2_inv_fu_364_r_coeffs_ce0;
wire   [1:0] grp_poly_R2_inv_fu_364_r_coeffs_we0;
wire   [15:0] grp_poly_R2_inv_fu_364_r_coeffs_d0;
wire   [9:0] grp_poly_R2_inv_fu_364_a_coeffs_address0;
wire    grp_poly_R2_inv_fu_364_a_coeffs_ce0;
wire    grp_poly_Sq_tobytes_1_fu_370_ap_start;
wire    grp_poly_Sq_tobytes_1_fu_370_ap_done;
wire    grp_poly_Sq_tobytes_1_fu_370_ap_idle;
wire    grp_poly_Sq_tobytes_1_fu_370_ap_ready;
wire   [10:0] grp_poly_Sq_tobytes_1_fu_370_r_address0;
wire    grp_poly_Sq_tobytes_1_fu_370_r_ce0;
wire    grp_poly_Sq_tobytes_1_fu_370_r_we0;
wire   [7:0] grp_poly_Sq_tobytes_1_fu_370_r_d0;
wire   [10:0] grp_poly_Sq_tobytes_1_fu_370_r_address1;
wire    grp_poly_Sq_tobytes_1_fu_370_r_ce1;
wire    grp_poly_Sq_tobytes_1_fu_370_r_we1;
wire   [7:0] grp_poly_Sq_tobytes_1_fu_370_r_d1;
wire   [9:0] grp_poly_Sq_tobytes_1_fu_370_a_coeffs_address0;
wire    grp_poly_Sq_tobytes_1_fu_370_a_coeffs_ce0;
wire    grp_poly_Sq_tobytes_fu_377_ap_start;
wire    grp_poly_Sq_tobytes_fu_377_ap_done;
wire    grp_poly_Sq_tobytes_fu_377_ap_idle;
wire    grp_poly_Sq_tobytes_fu_377_ap_ready;
wire   [9:0] grp_poly_Sq_tobytes_fu_377_r_address0;
wire    grp_poly_Sq_tobytes_fu_377_r_ce0;
wire    grp_poly_Sq_tobytes_fu_377_r_we0;
wire   [7:0] grp_poly_Sq_tobytes_fu_377_r_d0;
wire   [9:0] grp_poly_Sq_tobytes_fu_377_r_address1;
wire    grp_poly_Sq_tobytes_fu_377_r_ce1;
wire    grp_poly_Sq_tobytes_fu_377_r_we1;
wire   [7:0] grp_poly_Sq_tobytes_fu_377_r_d1;
wire   [9:0] grp_poly_Sq_tobytes_fu_377_a_coeffs_address0;
wire    grp_poly_Sq_tobytes_fu_377_a_coeffs_ce0;
wire    grp_poly_Rq_mul_fu_384_ap_start;
wire    grp_poly_Rq_mul_fu_384_ap_idle;
wire   [9:0] grp_poly_Rq_mul_fu_384_r_coeffs_address0;
wire    grp_poly_Rq_mul_fu_384_r_coeffs_ce0;
wire    grp_poly_Rq_mul_fu_384_r_coeffs_we0;
wire   [15:0] grp_poly_Rq_mul_fu_384_r_coeffs_d0;
reg   [15:0] grp_poly_Rq_mul_fu_384_r_coeffs_q0;
wire   [9:0] grp_poly_Rq_mul_fu_384_a_coeffs_address0;
wire    grp_poly_Rq_mul_fu_384_a_coeffs_ce0;
reg   [15:0] grp_poly_Rq_mul_fu_384_a_coeffs_q0;
wire   [9:0] grp_poly_Rq_mul_fu_384_b_coeffs_address0;
wire    grp_poly_Rq_mul_fu_384_b_coeffs_ce0;
reg   [15:0] grp_poly_Rq_mul_fu_384_b_coeffs_q0;
wire    grp_poly_S3_tobytes_fu_391_ap_start;
wire    grp_poly_S3_tobytes_fu_391_ap_done;
wire    grp_poly_S3_tobytes_fu_391_ap_idle;
wire    grp_poly_S3_tobytes_fu_391_ap_ready;
wire   [10:0] grp_poly_S3_tobytes_fu_391_msg_address0;
wire    grp_poly_S3_tobytes_fu_391_msg_ce0;
wire    grp_poly_S3_tobytes_fu_391_msg_we0;
wire   [7:0] grp_poly_S3_tobytes_fu_391_msg_d0;
reg   [9:0] grp_poly_S3_tobytes_fu_391_msg_offset;
wire   [9:0] grp_poly_S3_tobytes_fu_391_a_coeffs_address0;
wire    grp_poly_S3_tobytes_fu_391_a_coeffs_ce0;
reg   [15:0] grp_poly_S3_tobytes_fu_391_a_coeffs_q0;
wire   [9:0] grp_poly_S3_tobytes_fu_391_a_coeffs_address1;
wire    grp_poly_S3_tobytes_fu_391_a_coeffs_ce1;
reg   [15:0] grp_poly_S3_tobytes_fu_391_a_coeffs_q1;
reg   [9:0] i_i_i_reg_274;
wire    ap_CS_fsm_state4;
reg   [9:0] i_i_reg_285;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
reg   [9:0] i_i5_reg_296;
wire    ap_CS_fsm_state14;
reg   [9:0] i_reg_307;
wire    ap_CS_fsm_state16;
reg   [9:0] i_i1_reg_318;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
reg   [9:0] i_1_i_reg_329;
wire    ap_CS_fsm_state23;
reg   [9:0] i_i2_reg_340;
wire    ap_CS_fsm_state52;
reg    grp_sample_fixed_type_fu_351_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_poly_S3_inv_fu_358_ap_start_reg;
reg    grp_poly_R2_inv_fu_364_ap_start_reg;
wire    ap_CS_fsm_state18;
reg    grp_poly_Sq_tobytes_1_fu_370_ap_start_reg;
wire    ap_CS_fsm_state53;
reg    grp_poly_Sq_tobytes_fu_377_ap_start_reg;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
reg    grp_poly_Rq_mul_fu_384_ap_start_reg;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state55;
reg    grp_poly_S3_tobytes_fu_391_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_i_fu_616_p1;
wire   [63:0] tmp_i7_fu_678_p1;
wire   [63:0] tmp_i2_fu_827_p1;
wire   [15:0] tmp_363_i_i_i_fu_597_p2;
wire   [15:0] tmp_118_i_fu_657_p3;
wire   [15:0] tmp_118_i1_fu_719_p3;
wire   [15:0] tmp_350_cast_fu_761_p1;
wire    ap_CS_fsm_state26;
wire   [15:0] grp_fu_401_p2;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire   [3:0] tmp_160_fu_429_p4;
wire   [3:0] tmp_fu_425_p1;
wire   [4:0] tmp_355_i_i_i_cast_fu_443_p1;
wire   [4:0] tmp_354_i_i_i_cast_fu_439_p1;
wire   [4:0] r_fu_453_p2;
wire   [2:0] tmp_162_fu_459_p4;
wire   [1:0] tmp_39_fu_477_p4;
wire   [1:0] tmp_333_fu_473_p1;
wire   [1:0] fold1_i_i_i_cast_fu_487_p2;
wire   [3:0] tmp_357_i_i_i_cast_fu_493_p1;
wire   [3:0] tmp_356_i_i_i_cast_fu_469_p1;
wire   [3:0] r_1_fu_497_p2;
wire   [1:0] tmp_163_fu_503_p4;
wire   [3:0] tmp_161_fu_447_p2;
wire   [1:0] tmp_40_fu_517_p4;
wire   [1:0] fold2_i_i_i_cast_fu_527_p2;
wire   [2:0] tmp_359_i_i_i_cast_fu_533_p1;
wire   [2:0] tmp_358_i_i_i_cast_fu_513_p1;
wire   [2:0] t_fu_543_p2;
wire   [0:0] tmp_334_fu_548_p3;
wire   [2:0] c_cast_fu_556_p3;
wire   [2:0] tmp_360_i_i_i_fu_564_p2;
wire   [0:0] not_tmp_72_i_i_i_fu_573_p2;
wire   [2:0] tmp_361_i_i_i_cast_c_fu_579_p3;
wire   [2:0] tmp_362_i_i_i_fu_587_p2;
wire   [15:0] tmp_360_i_i_i_cast_fu_569_p1;
wire  signed [15:0] tmp_362_i_i_i_cast_fu_593_p1;
wire   [10:0] tmp_44_fu_621_p4;
wire   [10:0] tmp_335_fu_637_p1;
wire   [10:0] tmp_116_i_cast_fu_631_p2;
wire   [4:0] tmp_47_fu_647_p4;
wire   [10:0] tmp_46_fu_641_p2;
wire   [10:0] tmp_48_fu_683_p4;
wire   [10:0] tmp_336_fu_699_p1;
wire   [10:0] tmp_116_i1_cast_fu_693_p2;
wire   [4:0] tmp_51_fu_709_p4;
wire   [10:0] tmp_50_fu_703_p2;
wire   [15:0] tmp_337_fu_745_p2;
wire   [15:0] tmp_238_fu_751_p2;
wire   [10:0] tmp_338_fu_757_p1;
wire   [10:0] tmp_339_fu_783_p1;
wire   [10:0] tmp_i5_cast_fu_787_p2;
wire   [15:0] tmp_i4_fu_832_p2;
wire   [10:0] tmp_340_fu_838_p1;
reg   [56:0] ap_NS_fsm;
reg    ap_block_state6_on_subcall_done;
reg    ap_block_state53_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 57'd1;
#0 grp_sample_fixed_type_fu_351_ap_start_reg = 1'b0;
#0 grp_poly_S3_inv_fu_358_ap_start_reg = 1'b0;
#0 grp_poly_R2_inv_fu_364_ap_start_reg = 1'b0;
#0 grp_poly_Sq_tobytes_1_fu_370_ap_start_reg = 1'b0;
#0 grp_poly_Sq_tobytes_fu_377_ap_start_reg = 1'b0;
#0 grp_poly_Rq_mul_fu_384_ap_start_reg = 1'b0;
#0 grp_poly_S3_tobytes_fu_391_ap_start_reg = 1'b0;
end

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
b_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_coeffs_address0),
    .ce0(b_coeffs_ce0),
    .we0(b_coeffs_we0),
    .d0(b_coeffs_d0),
    .q0(b_coeffs_q0)
);

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
c_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(c_coeffs_address0),
    .ce0(c_coeffs_ce0),
    .we0(c_coeffs_we0),
    .d0(c_coeffs_d0),
    .q0(c_coeffs_q0)
);

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
s_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s_coeffs_address0),
    .ce0(s_coeffs_ce0),
    .we0(s_coeffs_we0),
    .d0(grp_poly_Rq_mul_fu_384_r_coeffs_d0),
    .q0(s_coeffs_q0)
);

owcpa_keypair_ai2_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
ai2_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ai2_coeffs_address0),
    .ce0(ai2_coeffs_ce0),
    .we0(ai2_coeffs_we0),
    .d0(grp_poly_R2_inv_fu_364_r_coeffs_d0),
    .q0(ai2_coeffs_q0)
);

owcpa_keypair_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
x1_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x1_coeffs_address0),
    .ce0(x1_coeffs_ce0),
    .we0(x1_coeffs_we0),
    .d0(x1_coeffs_d0),
    .q0(x1_coeffs_q0),
    .address1(grp_poly_S3_tobytes_fu_391_a_coeffs_address1),
    .ce1(x1_coeffs_ce1),
    .q1(x1_coeffs_q1)
);

owcpa_keypair_x2_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
x2_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x2_coeffs_address0),
    .ce0(x2_coeffs_ce0),
    .we0(x2_coeffs_we0),
    .d0(x2_coeffs_d0),
    .q0(x2_coeffs_q0),
    .address1(x2_coeffs_address1),
    .ce1(x2_coeffs_ce1),
    .we1(x2_coeffs_we1),
    .d1(grp_poly_S3_inv_fu_358_r_coeffs_d1),
    .q1(x2_coeffs_q1)
);

owcpa_keypair_x3_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
x3_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x3_coeffs_address0),
    .ce0(x3_coeffs_ce0),
    .we0(x3_coeffs_we0),
    .d0(x3_coeffs_d0),
    .q0(x3_coeffs_q0),
    .address1(x3_coeffs_address1),
    .ce1(x3_coeffs_ce1),
    .we1(x3_coeffs_we1),
    .d1(x3_coeffs_d1),
    .q1(x3_coeffs_q1)
);

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
x4_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x4_coeffs_address0),
    .ce0(x4_coeffs_ce0),
    .we0(x4_coeffs_we0),
    .d0(x4_coeffs_d0),
    .q0(x4_coeffs_q0)
);

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 677 ),
    .AddressWidth( 10 ))
x5_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x5_coeffs_address0),
    .ce0(x5_coeffs_ce0),
    .we0(x5_coeffs_we0),
    .d0(grp_poly_Rq_mul_fu_384_r_coeffs_d0),
    .q0(x5_coeffs_q0)
);

sample_fixed_type grp_sample_fixed_type_fu_351(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sample_fixed_type_fu_351_ap_start),
    .ap_done(grp_sample_fixed_type_fu_351_ap_done),
    .ap_idle(grp_sample_fixed_type_fu_351_ap_idle),
    .ap_ready(grp_sample_fixed_type_fu_351_ap_ready),
    .r_coeffs_address0(grp_sample_fixed_type_fu_351_r_coeffs_address0),
    .r_coeffs_ce0(grp_sample_fixed_type_fu_351_r_coeffs_ce0),
    .r_coeffs_we0(grp_sample_fixed_type_fu_351_r_coeffs_we0),
    .r_coeffs_d0(grp_sample_fixed_type_fu_351_r_coeffs_d0),
    .u_address0(grp_sample_fixed_type_fu_351_u_address0),
    .u_ce0(grp_sample_fixed_type_fu_351_u_ce0),
    .u_q0(seed_q0),
    .u_address1(grp_sample_fixed_type_fu_351_u_address1),
    .u_ce1(grp_sample_fixed_type_fu_351_u_ce1),
    .u_q1(seed_q1)
);

poly_S3_inv grp_poly_S3_inv_fu_358(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_inv_fu_358_ap_start),
    .ap_done(grp_poly_S3_inv_fu_358_ap_done),
    .ap_idle(grp_poly_S3_inv_fu_358_ap_idle),
    .ap_ready(grp_poly_S3_inv_fu_358_ap_ready),
    .r_coeffs_address0(grp_poly_S3_inv_fu_358_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_S3_inv_fu_358_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_S3_inv_fu_358_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_S3_inv_fu_358_r_coeffs_d0),
    .r_coeffs_q0(x2_coeffs_q0),
    .r_coeffs_address1(grp_poly_S3_inv_fu_358_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_S3_inv_fu_358_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_S3_inv_fu_358_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_S3_inv_fu_358_r_coeffs_d1),
    .r_coeffs_q1(x2_coeffs_q1),
    .a_coeffs_address0(grp_poly_S3_inv_fu_358_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_inv_fu_358_a_coeffs_ce0),
    .a_coeffs_q0(x1_coeffs_q0)
);

poly_R2_inv grp_poly_R2_inv_fu_364(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_R2_inv_fu_364_ap_start),
    .ap_done(grp_poly_R2_inv_fu_364_ap_done),
    .ap_idle(grp_poly_R2_inv_fu_364_ap_idle),
    .ap_ready(grp_poly_R2_inv_fu_364_ap_ready),
    .r_coeffs_address0(grp_poly_R2_inv_fu_364_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_R2_inv_fu_364_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_R2_inv_fu_364_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_R2_inv_fu_364_r_coeffs_d0),
    .r_coeffs_q0(ai2_coeffs_q0),
    .a_coeffs_address0(grp_poly_R2_inv_fu_364_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_R2_inv_fu_364_a_coeffs_ce0),
    .a_coeffs_q0(x3_coeffs_q0)
);

poly_Sq_tobytes_1 grp_poly_Sq_tobytes_1_fu_370(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Sq_tobytes_1_fu_370_ap_start),
    .ap_done(grp_poly_Sq_tobytes_1_fu_370_ap_done),
    .ap_idle(grp_poly_Sq_tobytes_1_fu_370_ap_idle),
    .ap_ready(grp_poly_Sq_tobytes_1_fu_370_ap_ready),
    .r_address0(grp_poly_Sq_tobytes_1_fu_370_r_address0),
    .r_ce0(grp_poly_Sq_tobytes_1_fu_370_r_ce0),
    .r_we0(grp_poly_Sq_tobytes_1_fu_370_r_we0),
    .r_d0(grp_poly_Sq_tobytes_1_fu_370_r_d0),
    .r_address1(grp_poly_Sq_tobytes_1_fu_370_r_address1),
    .r_ce1(grp_poly_Sq_tobytes_1_fu_370_r_ce1),
    .r_we1(grp_poly_Sq_tobytes_1_fu_370_r_we1),
    .r_d1(grp_poly_Sq_tobytes_1_fu_370_r_d1),
    .a_coeffs_address0(grp_poly_Sq_tobytes_1_fu_370_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Sq_tobytes_1_fu_370_a_coeffs_ce0),
    .a_coeffs_q0(x3_coeffs_q0)
);

poly_Sq_tobytes grp_poly_Sq_tobytes_fu_377(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Sq_tobytes_fu_377_ap_start),
    .ap_done(grp_poly_Sq_tobytes_fu_377_ap_done),
    .ap_idle(grp_poly_Sq_tobytes_fu_377_ap_idle),
    .ap_ready(grp_poly_Sq_tobytes_fu_377_ap_ready),
    .r_address0(grp_poly_Sq_tobytes_fu_377_r_address0),
    .r_ce0(grp_poly_Sq_tobytes_fu_377_r_ce0),
    .r_we0(grp_poly_Sq_tobytes_fu_377_r_we0),
    .r_d0(grp_poly_Sq_tobytes_fu_377_r_d0),
    .r_address1(grp_poly_Sq_tobytes_fu_377_r_address1),
    .r_ce1(grp_poly_Sq_tobytes_fu_377_r_ce1),
    .r_we1(grp_poly_Sq_tobytes_fu_377_r_we1),
    .r_d1(grp_poly_Sq_tobytes_fu_377_r_d1),
    .a_coeffs_address0(grp_poly_Sq_tobytes_fu_377_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Sq_tobytes_fu_377_a_coeffs_ce0),
    .a_coeffs_q0(x3_coeffs_q0)
);

poly_Rq_mul grp_poly_Rq_mul_fu_384(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Rq_mul_fu_384_ap_start),
    .ap_done(grp_poly_Rq_mul_fu_384_ap_done),
    .ap_idle(grp_poly_Rq_mul_fu_384_ap_idle),
    .ap_ready(grp_poly_Rq_mul_fu_384_ap_ready),
    .r_coeffs_address0(grp_poly_Rq_mul_fu_384_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Rq_mul_fu_384_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Rq_mul_fu_384_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Rq_mul_fu_384_r_coeffs_d0),
    .r_coeffs_q0(grp_poly_Rq_mul_fu_384_r_coeffs_q0),
    .a_coeffs_address0(grp_poly_Rq_mul_fu_384_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Rq_mul_fu_384_a_coeffs_ce0),
    .a_coeffs_q0(grp_poly_Rq_mul_fu_384_a_coeffs_q0),
    .b_coeffs_address0(grp_poly_Rq_mul_fu_384_b_coeffs_address0),
    .b_coeffs_ce0(grp_poly_Rq_mul_fu_384_b_coeffs_ce0),
    .b_coeffs_q0(grp_poly_Rq_mul_fu_384_b_coeffs_q0)
);

poly_S3_tobytes grp_poly_S3_tobytes_fu_391(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_tobytes_fu_391_ap_start),
    .ap_done(grp_poly_S3_tobytes_fu_391_ap_done),
    .ap_idle(grp_poly_S3_tobytes_fu_391_ap_idle),
    .ap_ready(grp_poly_S3_tobytes_fu_391_ap_ready),
    .msg_address0(grp_poly_S3_tobytes_fu_391_msg_address0),
    .msg_ce0(grp_poly_S3_tobytes_fu_391_msg_ce0),
    .msg_we0(grp_poly_S3_tobytes_fu_391_msg_we0),
    .msg_d0(grp_poly_S3_tobytes_fu_391_msg_d0),
    .msg_offset(grp_poly_S3_tobytes_fu_391_msg_offset),
    .a_coeffs_address0(grp_poly_S3_tobytes_fu_391_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_tobytes_fu_391_a_coeffs_ce0),
    .a_coeffs_q0(grp_poly_S3_tobytes_fu_391_a_coeffs_q0),
    .a_coeffs_address1(grp_poly_S3_tobytes_fu_391_a_coeffs_address1),
    .a_coeffs_ce1(grp_poly_S3_tobytes_fu_391_a_coeffs_ce1),
    .a_coeffs_q1(grp_poly_S3_tobytes_fu_391_a_coeffs_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_R2_inv_fu_364_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_poly_R2_inv_fu_364_ap_start_reg <= 1'b1;
        end else if ((grp_poly_R2_inv_fu_364_ap_ready == 1'b1)) begin
            grp_poly_R2_inv_fu_364_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Rq_mul_fu_384_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | ((exitcond_i2_fu_815_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51)) | ((1'b1 == ap_CS_fsm_state22) & (exitcond_i7_fu_798_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state15) & (exitcond_fu_728_p2 == 1'd1)))) begin
            grp_poly_Rq_mul_fu_384_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Rq_mul_fu_384_ap_ready == 1'b1)) begin
            grp_poly_Rq_mul_fu_384_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_inv_fu_358_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_poly_S3_inv_fu_358_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_inv_fu_358_ap_ready == 1'b1)) begin
            grp_poly_S3_inv_fu_358_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_tobytes_fu_391_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
            grp_poly_S3_tobytes_fu_391_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_tobytes_fu_391_ap_ready == 1'b1)) begin
            grp_poly_S3_tobytes_fu_391_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Sq_tobytes_1_fu_370_ap_start_reg <= 1'b0;
    end else begin
        if (((exitcond_i2_fu_815_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
            grp_poly_Sq_tobytes_1_fu_370_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Sq_tobytes_1_fu_370_ap_ready == 1'b1)) begin
            grp_poly_Sq_tobytes_1_fu_370_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Sq_tobytes_fu_377_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state56)) begin
            grp_poly_Sq_tobytes_fu_377_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Sq_tobytes_fu_377_ap_ready == 1'b1)) begin
            grp_poly_Sq_tobytes_fu_377_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sample_fixed_type_fu_351_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_sample_fixed_type_fu_351_ap_start_reg <= 1'b1;
        end else if ((grp_sample_fixed_type_fu_351_ap_ready == 1'b1)) begin
            grp_sample_fixed_type_fu_351_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (exitcond1_i_fu_766_p2 == 1'd1))) begin
        i_1_i_reg_329 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        i_1_i_reg_329 <= i_38_reg_936;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_i1_reg_318 <= i_37_reg_918;
    end else if (((grp_poly_R2_inv_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        i_i1_reg_318 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        i_i2_reg_340 <= i_39_reg_964;
    end else if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
        i_i2_reg_340 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond_i_fu_604_p2 == 1'd1))) begin
        i_i5_reg_296 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        i_i5_reg_296 <= i_35_reg_887;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_i_i_reg_274 <= i_33_reg_850;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_i_i_reg_274 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_i_reg_285 <= i_34_reg_874;
    end else if (((grp_poly_S3_tobytes_fu_391_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_i_reg_285 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond_i6_fu_666_p2 == 1'd1))) begin
        i_reg_307 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i_reg_307 <= i_36_reg_900;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond_i_fu_604_p2 == 1'd0))) begin
        f_coeffs_addr_2_reg_879 <= tmp_i_fu_616_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (exitcond_i2_fu_815_p2 == 1'd0))) begin
        h_coeffs_addr_4_reg_969 <= tmp_i2_fu_827_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond_i6_fu_666_p2 == 1'd0))) begin
        h_coeffs_addr_reg_892 <= tmp_i7_fu_678_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_33_reg_850 <= i_33_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_34_reg_874 <= i_34_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_35_reg_887 <= i_35_fu_672_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_36_reg_900 <= i_36_fu_734_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_37_reg_918 <= i_37_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_38_reg_936 <= i_38_fu_804_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        i_39_reg_964 <= i_39_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        r_2_reg_865 <= r_2_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i7_fu_798_p2 == 1'd0))) begin
        tmp_306_i_reg_941[9 : 0] <= tmp_306_i_fu_810_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (exitcond1_i_fu_766_p2 == 1'd0))) begin
        tmp_i3_reg_923[9 : 0] <= tmp_i3_fu_778_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_i_i_fu_408_p2 == 1'd0))) begin
        tmp_i_i_reg_855[9 : 0] <= tmp_i_i_fu_420_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond_fu_728_p2 == 1'd0))) begin
        tmp_s_reg_905[9 : 0] <= tmp_s_fu_740_p1[9 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ai2_coeffs_address0 = tmp_306_i_fu_810_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        ai2_coeffs_address0 = grp_poly_R2_inv_fu_364_r_coeffs_address0;
    end else begin
        ai2_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ai2_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        ai2_coeffs_ce0 = grp_poly_R2_inv_fu_364_r_coeffs_ce0;
    end else begin
        ai2_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ai2_coeffs_we0 = grp_poly_R2_inv_fu_364_r_coeffs_we0;
    end else begin
        ai2_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((grp_poly_Sq_tobytes_fu_377_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state57)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_poly_Sq_tobytes_fu_377_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state57))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        b_coeffs_address0 = tmp_i3_reg_923;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        b_coeffs_address0 = grp_poly_Rq_mul_fu_384_b_coeffs_address0;
    end else begin
        b_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        b_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        b_coeffs_ce0 = grp_poly_Rq_mul_fu_384_b_coeffs_ce0;
    end else begin
        b_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        b_coeffs_we0 = 1'b1;
    end else begin
        b_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26))) begin
        c_coeffs_address0 = c_coeffs_addr_reg_951;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        c_coeffs_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28))) begin
        c_coeffs_address0 = grp_poly_Rq_mul_fu_384_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        c_coeffs_address0 = grp_poly_Rq_mul_fu_384_r_coeffs_address0;
    end else begin
        c_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        c_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28))) begin
        c_coeffs_ce0 = grp_poly_Rq_mul_fu_384_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        c_coeffs_ce0 = grp_poly_Rq_mul_fu_384_r_coeffs_ce0;
    end else begin
        c_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26))) begin
        c_coeffs_d0 = grp_fu_401_p2;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        c_coeffs_d0 = grp_poly_Rq_mul_fu_384_r_coeffs_d0;
    end else begin
        c_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26))) begin
        c_coeffs_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        c_coeffs_we0 = grp_poly_Rq_mul_fu_384_r_coeffs_we0;
    end else begin
        c_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_poly_Rq_mul_fu_384_a_coeffs_q0 = x5_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_poly_Rq_mul_fu_384_a_coeffs_q0 = s_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_poly_Rq_mul_fu_384_a_coeffs_q0 = c_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_poly_Rq_mul_fu_384_a_coeffs_q0 = x4_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_poly_Rq_mul_fu_384_a_coeffs_q0 = x2_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_384_a_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_poly_Rq_mul_fu_384_b_coeffs_q0 = x2_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_poly_Rq_mul_fu_384_b_coeffs_q0 = s_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_poly_Rq_mul_fu_384_b_coeffs_q0 = x4_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_poly_Rq_mul_fu_384_b_coeffs_q0 = b_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_poly_Rq_mul_fu_384_b_coeffs_q0 = x1_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_384_b_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state53))) begin
        grp_poly_Rq_mul_fu_384_r_coeffs_q0 = x5_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_poly_Rq_mul_fu_384_r_coeffs_q0 = x4_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_poly_Rq_mul_fu_384_r_coeffs_q0 = s_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_poly_Rq_mul_fu_384_r_coeffs_q0 = c_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_poly_Rq_mul_fu_384_r_coeffs_q0 = x3_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_384_r_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_poly_S3_tobytes_fu_391_a_coeffs_q0 = x2_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_poly_S3_tobytes_fu_391_a_coeffs_q0 = x1_coeffs_q0;
    end else begin
        grp_poly_S3_tobytes_fu_391_a_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_poly_S3_tobytes_fu_391_a_coeffs_q1 = x2_coeffs_q1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_poly_S3_tobytes_fu_391_a_coeffs_q1 = x1_coeffs_q1;
    end else begin
        grp_poly_S3_tobytes_fu_391_a_coeffs_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_poly_S3_tobytes_fu_391_msg_offset = 10'd136;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_poly_S3_tobytes_fu_391_msg_offset = 10'd0;
    end else begin
        grp_poly_S3_tobytes_fu_391_msg_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        s_coeffs_address0 = grp_poly_Rq_mul_fu_384_b_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        s_coeffs_address0 = grp_poly_Rq_mul_fu_384_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        s_coeffs_address0 = grp_poly_Rq_mul_fu_384_r_coeffs_address0;
    end else begin
        s_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        s_coeffs_ce0 = grp_poly_Rq_mul_fu_384_b_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        s_coeffs_ce0 = grp_poly_Rq_mul_fu_384_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        s_coeffs_ce0 = grp_poly_Rq_mul_fu_384_r_coeffs_ce0;
    end else begin
        s_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        s_coeffs_we0 = grp_poly_Rq_mul_fu_384_r_coeffs_we0;
    end else begin
        s_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        seed_address0 = tmp_i_i_fu_420_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_address0 = grp_sample_fixed_type_fu_351_u_address0;
    end else begin
        seed_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        seed_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_ce0 = grp_sample_fixed_type_fu_351_u_ce0;
    end else begin
        seed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_ce1 = grp_sample_fixed_type_fu_351_u_ce1;
    end else begin
        seed_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        sk_address0 = grp_poly_S3_tobytes_fu_391_msg_address0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        sk_address0 = grp_poly_Sq_tobytes_1_fu_370_r_address0;
    end else begin
        sk_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        sk_ce0 = grp_poly_S3_tobytes_fu_391_msg_ce0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        sk_ce0 = grp_poly_Sq_tobytes_1_fu_370_r_ce0;
    end else begin
        sk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        sk_ce1 = grp_poly_Sq_tobytes_1_fu_370_r_ce1;
    end else begin
        sk_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        sk_d0 = grp_poly_S3_tobytes_fu_391_msg_d0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        sk_d0 = grp_poly_Sq_tobytes_1_fu_370_r_d0;
    end else begin
        sk_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        sk_we0 = grp_poly_S3_tobytes_fu_391_msg_we0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        sk_we0 = grp_poly_Sq_tobytes_1_fu_370_r_we0;
    end else begin
        sk_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        sk_we1 = grp_poly_Sq_tobytes_1_fu_370_r_we1;
    end else begin
        sk_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x1_coeffs_address0 = f_coeffs_addr_2_reg_879;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x1_coeffs_address0 = tmp_i_fu_616_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x1_coeffs_address0 = tmp_i_i_reg_855;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_address0 = 64'd676;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x1_coeffs_address0 = grp_poly_S3_tobytes_fu_391_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state50))) begin
        x1_coeffs_address0 = grp_poly_Rq_mul_fu_384_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x1_coeffs_address0 = grp_poly_S3_inv_fu_358_a_coeffs_address0;
    end else begin
        x1_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        x1_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x1_coeffs_ce0 = grp_poly_S3_tobytes_fu_391_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state50))) begin
        x1_coeffs_ce0 = grp_poly_Rq_mul_fu_384_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x1_coeffs_ce0 = grp_poly_S3_inv_fu_358_a_coeffs_ce0;
    end else begin
        x1_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x1_coeffs_ce1 = grp_poly_S3_tobytes_fu_391_a_coeffs_ce1;
    end else begin
        x1_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x1_coeffs_d0 = tmp_118_i_fu_657_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x1_coeffs_d0 = tmp_363_i_i_i_fu_597_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_d0 = 16'd0;
    end else begin
        x1_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state2) & (exitcond_i_i_fu_408_p2 == 1'd1)))) begin
        x1_coeffs_we0 = 1'b1;
    end else begin
        x1_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        x2_coeffs_address0 = tmp_s_reg_905;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x2_coeffs_address0 = grp_poly_S3_tobytes_fu_391_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state53))) begin
        x2_coeffs_address0 = grp_poly_Rq_mul_fu_384_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        x2_coeffs_address0 = grp_poly_Rq_mul_fu_384_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_address0 = grp_poly_S3_inv_fu_358_r_coeffs_address0;
    end else begin
        x2_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        x2_coeffs_address1 = grp_poly_S3_tobytes_fu_391_a_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_address1 = grp_poly_S3_inv_fu_358_r_coeffs_address1;
    end else begin
        x2_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        x2_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x2_coeffs_ce0 = grp_poly_S3_tobytes_fu_391_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state53))) begin
        x2_coeffs_ce0 = grp_poly_Rq_mul_fu_384_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        x2_coeffs_ce0 = grp_poly_Rq_mul_fu_384_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_ce0 = grp_poly_S3_inv_fu_358_r_coeffs_ce0;
    end else begin
        x2_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        x2_coeffs_ce1 = grp_poly_S3_tobytes_fu_391_a_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_ce1 = grp_poly_S3_inv_fu_358_r_coeffs_ce1;
    end else begin
        x2_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        x2_coeffs_d0 = tmp_350_cast_fu_761_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_d0 = grp_poly_S3_inv_fu_358_r_coeffs_d0;
    end else begin
        x2_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        x2_coeffs_we0 = 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_we0 = grp_poly_S3_inv_fu_358_r_coeffs_we0;
    end else begin
        x2_coeffs_we0 = 2'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_we1 = grp_poly_S3_inv_fu_358_r_coeffs_we1;
    end else begin
        x2_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) & (exitcond_i2_fu_815_p2 == 1'd0))) begin
        x3_coeffs_address0 = tmp_i2_fu_827_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        x3_coeffs_address0 = tmp_i3_fu_778_p1;
    end else if (((1'b1 == ap_CS_fsm_state15) & (exitcond_fu_728_p2 == 1'd0))) begin
        x3_coeffs_address0 = tmp_s_fu_740_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        x3_coeffs_address0 = h_coeffs_addr_reg_892;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_address0 = tmp_i7_fu_678_p1;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state50))) begin
        x3_coeffs_address0 = grp_poly_Rq_mul_fu_384_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        x3_coeffs_address0 = grp_poly_Sq_tobytes_fu_377_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        x3_coeffs_address0 = grp_poly_Sq_tobytes_1_fu_370_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x3_coeffs_address0 = grp_poly_R2_inv_fu_364_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x3_coeffs_address0 = grp_sample_fixed_type_fu_351_r_coeffs_address0;
    end else begin
        x3_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        x3_coeffs_address1 = h_coeffs_addr_4_reg_969;
    end else if (((1'b1 == ap_CS_fsm_state51) & (exitcond_i2_fu_815_p2 == 1'd0))) begin
        x3_coeffs_address1 = 64'd676;
    end else begin
        x3_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state13) | ((1'b1 == ap_CS_fsm_state51) & (exitcond_i2_fu_815_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state15) & (exitcond_fu_728_p2 == 1'd0)))) begin
        x3_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state50))) begin
        x3_coeffs_ce0 = grp_poly_Rq_mul_fu_384_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        x3_coeffs_ce0 = grp_poly_Sq_tobytes_fu_377_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        x3_coeffs_ce0 = grp_poly_Sq_tobytes_1_fu_370_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x3_coeffs_ce0 = grp_poly_R2_inv_fu_364_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x3_coeffs_ce0 = grp_sample_fixed_type_fu_351_r_coeffs_ce0;
    end else begin
        x3_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | ((1'b1 == ap_CS_fsm_state51) & (exitcond_i2_fu_815_p2 == 1'd0)))) begin
        x3_coeffs_ce1 = 1'b1;
    end else begin
        x3_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        x3_coeffs_d0 = tmp_118_i1_fu_719_p3;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state50))) begin
        x3_coeffs_d0 = grp_poly_Rq_mul_fu_384_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x3_coeffs_d0 = grp_sample_fixed_type_fu_351_r_coeffs_d0;
    end else begin
        x3_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        x3_coeffs_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state50))) begin
        x3_coeffs_we0 = grp_poly_Rq_mul_fu_384_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x3_coeffs_we0 = grp_sample_fixed_type_fu_351_r_coeffs_we0;
    end else begin
        x3_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        x3_coeffs_we1 = 1'b1;
    end else begin
        x3_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        x4_coeffs_address0 = tmp_306_i_reg_941;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_384_b_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state53))) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_384_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_384_r_coeffs_address0;
    end else begin
        x4_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        x4_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_384_b_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state53))) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_384_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_384_r_coeffs_ce0;
    end else begin
        x4_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        x4_coeffs_d0 = ai2_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        x4_coeffs_d0 = grp_poly_Rq_mul_fu_384_r_coeffs_d0;
    end else begin
        x4_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        x4_coeffs_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        x4_coeffs_we0 = grp_poly_Rq_mul_fu_384_r_coeffs_we0;
    end else begin
        x4_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state50))) begin
        x5_coeffs_address0 = grp_poly_Rq_mul_fu_384_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state53))) begin
        x5_coeffs_address0 = grp_poly_Rq_mul_fu_384_r_coeffs_address0;
    end else begin
        x5_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state50))) begin
        x5_coeffs_ce0 = grp_poly_Rq_mul_fu_384_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state53))) begin
        x5_coeffs_ce0 = grp_poly_Rq_mul_fu_384_r_coeffs_ce0;
    end else begin
        x5_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state53))) begin
        x5_coeffs_we0 = grp_poly_Rq_mul_fu_384_r_coeffs_we0;
    end else begin
        x5_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_i_i_fu_408_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_poly_S3_tobytes_fu_391_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_poly_S3_tobytes_fu_391_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (exitcond_i_fu_604_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (exitcond_i6_fu_666_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (exitcond_fu_728_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_poly_R2_inv_fu_364_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (exitcond1_i_fu_766_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i7_fu_798_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state24 : begin
            if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((exitcond_i2_fu_815_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (1'b0 == ap_block_state53_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((grp_poly_Rq_mul_fu_384_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((grp_poly_Sq_tobytes_fu_377_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state53_on_subcall_done = ((grp_poly_Sq_tobytes_1_fu_370_ap_done == 1'b0) | (grp_poly_Rq_mul_fu_384_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state6_on_subcall_done = ((grp_poly_S3_inv_fu_358_ap_done == 1'b0) | (grp_sample_fixed_type_fu_351_ap_done == 1'b0));
end

assign b_coeffs_d0 = tmp_i5_cast_fu_787_p2;

assign c_cast_fu_556_p3 = ((tmp_334_fu_548_p3[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign c_coeffs_addr_reg_951 = 64'd0;

assign exitcond1_i_fu_766_p2 = ((i_i1_reg_318 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_fu_728_p2 = ((i_reg_307 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_815_p2 = ((i_i2_reg_340 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_i6_fu_666_p2 = ((i_i5_reg_296 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_i7_fu_798_p2 = ((i_1_i_reg_329 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_i_fu_604_p2 = ((i_i_reg_285 == 10'd677) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_408_p2 = ((i_i_i_reg_274 == 10'd676) ? 1'b1 : 1'b0);

assign fold1_i_i_i_cast_fu_487_p2 = (tmp_39_fu_477_p4 + tmp_333_fu_473_p1);

assign fold2_i_i_i_cast_fu_527_p2 = (fold1_i_i_i_cast_fu_487_p2 + tmp_40_fu_517_p4);

assign grp_fu_401_p2 = (c_coeffs_q0 + 16'd2);

assign grp_poly_R2_inv_fu_364_ap_start = grp_poly_R2_inv_fu_364_ap_start_reg;

assign grp_poly_Rq_mul_fu_384_ap_start = grp_poly_Rq_mul_fu_384_ap_start_reg;

assign grp_poly_S3_inv_fu_358_ap_start = grp_poly_S3_inv_fu_358_ap_start_reg;

assign grp_poly_S3_tobytes_fu_391_ap_start = grp_poly_S3_tobytes_fu_391_ap_start_reg;

assign grp_poly_Sq_tobytes_1_fu_370_ap_start = grp_poly_Sq_tobytes_1_fu_370_ap_start_reg;

assign grp_poly_Sq_tobytes_fu_377_ap_start = grp_poly_Sq_tobytes_fu_377_ap_start_reg;

assign grp_sample_fixed_type_fu_351_ap_start = grp_sample_fixed_type_fu_351_ap_start_reg;

assign i_33_fu_414_p2 = (i_i_i_reg_274 + 10'd1);

assign i_34_fu_610_p2 = (i_i_reg_285 + 10'd1);

assign i_35_fu_672_p2 = (i_i5_reg_296 + 10'd1);

assign i_36_fu_734_p2 = (i_reg_307 + 10'd1);

assign i_37_fu_772_p2 = (i_i1_reg_318 + 10'd1);

assign i_38_fu_804_p2 = (i_1_i_reg_329 + 10'd1);

assign i_39_fu_821_p2 = (i_i2_reg_340 + 10'd1);

assign not_tmp_72_i_i_i_fu_573_p2 = (tmp_334_fu_548_p3 ^ 1'd1);

assign pk_address0 = grp_poly_Sq_tobytes_fu_377_r_address0;

assign pk_address1 = grp_poly_Sq_tobytes_fu_377_r_address1;

assign pk_ce0 = grp_poly_Sq_tobytes_fu_377_r_ce0;

assign pk_ce1 = grp_poly_Sq_tobytes_fu_377_r_ce1;

assign pk_d0 = grp_poly_Sq_tobytes_fu_377_r_d0;

assign pk_d1 = grp_poly_Sq_tobytes_fu_377_r_d1;

assign pk_we0 = grp_poly_Sq_tobytes_fu_377_r_we0;

assign pk_we1 = grp_poly_Sq_tobytes_fu_377_r_we1;

assign r_1_fu_497_p2 = (tmp_357_i_i_i_cast_fu_493_p1 + tmp_356_i_i_i_cast_fu_469_p1);

assign r_2_fu_537_p2 = (tmp_359_i_i_i_cast_fu_533_p1 + tmp_358_i_i_i_cast_fu_513_p1);

assign r_fu_453_p2 = (tmp_355_i_i_i_cast_fu_443_p1 + tmp_354_i_i_i_cast_fu_439_p1);

assign seed_address1 = grp_sample_fixed_type_fu_351_u_address1;

assign sk_address1 = grp_poly_Sq_tobytes_1_fu_370_r_address1;

assign sk_d1 = grp_poly_Sq_tobytes_1_fu_370_r_d1;

assign t_fu_543_p2 = ($signed(3'd5) + $signed(r_2_reg_865));

assign tmp_116_i1_cast_fu_693_p2 = (11'd0 - tmp_48_fu_683_p4);

assign tmp_116_i_cast_fu_631_p2 = (11'd0 - tmp_44_fu_621_p4);

assign tmp_118_i1_fu_719_p3 = {{tmp_51_fu_709_p4}, {tmp_50_fu_703_p2}};

assign tmp_118_i_fu_657_p3 = {{tmp_47_fu_647_p4}, {tmp_46_fu_641_p2}};

assign tmp_160_fu_429_p4 = {{seed_q0[7:4]}};

assign tmp_161_fu_447_p2 = (tmp_160_fu_429_p4 + tmp_fu_425_p1);

assign tmp_162_fu_459_p4 = {{r_fu_453_p2[4:2]}};

assign tmp_163_fu_503_p4 = {{r_1_fu_497_p2[3:2]}};

assign tmp_238_fu_751_p2 = (tmp_337_fu_745_p2 - x3_coeffs_q0);

assign tmp_306_i_fu_810_p1 = i_1_i_reg_329;

assign tmp_333_fu_473_p1 = seed_q0[1:0];

assign tmp_334_fu_548_p3 = t_fu_543_p2[32'd2];

assign tmp_335_fu_637_p1 = x1_coeffs_q0[10:0];

assign tmp_336_fu_699_p1 = x3_coeffs_q0[10:0];

assign tmp_337_fu_745_p2 = x3_coeffs_q0 << 16'd2;

assign tmp_338_fu_757_p1 = tmp_238_fu_751_p2[10:0];

assign tmp_339_fu_783_p1 = x3_coeffs_q0[10:0];

assign tmp_340_fu_838_p1 = tmp_i4_fu_832_p2[10:0];

assign tmp_350_cast_fu_761_p1 = tmp_338_fu_757_p1;

assign tmp_354_i_i_i_cast_fu_439_p1 = tmp_160_fu_429_p4;

assign tmp_355_i_i_i_cast_fu_443_p1 = tmp_fu_425_p1;

assign tmp_356_i_i_i_cast_fu_469_p1 = tmp_162_fu_459_p4;

assign tmp_357_i_i_i_cast_fu_493_p1 = fold1_i_i_i_cast_fu_487_p2;

assign tmp_358_i_i_i_cast_fu_513_p1 = tmp_163_fu_503_p4;

assign tmp_359_i_i_i_cast_fu_533_p1 = fold2_i_i_i_cast_fu_527_p2;

assign tmp_360_i_i_i_cast_fu_569_p1 = tmp_360_i_i_i_fu_564_p2;

assign tmp_360_i_i_i_fu_564_p2 = (r_2_reg_865 & c_cast_fu_556_p3);

assign tmp_361_i_i_i_cast_c_fu_579_p3 = ((not_tmp_72_i_i_i_fu_573_p2[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign tmp_362_i_i_i_cast_fu_593_p1 = $signed(tmp_362_i_i_i_fu_587_p2);

assign tmp_362_i_i_i_fu_587_p2 = (tmp_361_i_i_i_cast_c_fu_579_p3 & t_fu_543_p2);

assign tmp_363_i_i_i_fu_597_p2 = (tmp_362_i_i_i_cast_fu_593_p1 ^ tmp_360_i_i_i_cast_fu_569_p1);

assign tmp_39_fu_477_p4 = {{seed_q0[5:4]}};

assign tmp_40_fu_517_p4 = {{tmp_161_fu_447_p2[3:2]}};

assign tmp_44_fu_621_p4 = {{x1_coeffs_q0[11:1]}};

assign tmp_46_fu_641_p2 = (tmp_335_fu_637_p1 | tmp_116_i_cast_fu_631_p2);

assign tmp_47_fu_647_p4 = {{x1_coeffs_q0[15:11]}};

assign tmp_48_fu_683_p4 = {{x3_coeffs_q0[11:1]}};

assign tmp_50_fu_703_p2 = (tmp_336_fu_699_p1 | tmp_116_i1_cast_fu_693_p2);

assign tmp_51_fu_709_p4 = {{x3_coeffs_q0[15:11]}};

assign tmp_fu_425_p1 = seed_q0[3:0];

assign tmp_i2_fu_827_p1 = i_i2_reg_340;

assign tmp_i3_fu_778_p1 = i_i1_reg_318;

assign tmp_i4_fu_832_p2 = (x3_coeffs_q0 - x3_coeffs_q1);

assign tmp_i5_cast_fu_787_p2 = (11'd0 - tmp_339_fu_783_p1);

assign tmp_i7_fu_678_p1 = i_i5_reg_296;

assign tmp_i_fu_616_p1 = i_i_reg_285;

assign tmp_i_i_fu_420_p1 = i_i_i_reg_274;

assign tmp_s_fu_740_p1 = i_reg_307;

assign x3_coeffs_d1 = tmp_340_fu_838_p1;

always @ (posedge ap_clk) begin
    tmp_i_i_reg_855[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_s_reg_905[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_i3_reg_923[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_306_i_reg_941[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //owcpa_keypair
