// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module poly_Sq_tobytes_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        r_address0,
        r_ce0,
        r_we0,
        r_d0,
        r_address1,
        r_ce1,
        r_we1,
        r_d1,
        a_coeffs_address0,
        a_coeffs_ce0,
        a_coeffs_q0
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] r_address0;
output   r_ce0;
output   r_we0;
output  [7:0] r_d0;
output  [10:0] r_address1;
output   r_ce1;
output   r_we1;
output  [7:0] r_d1;
output  [9:0] a_coeffs_address0;
output   a_coeffs_ce0;
input  [15:0] a_coeffs_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] r_address0;
reg r_ce0;
reg r_we0;
reg[7:0] r_d0;
reg[10:0] r_address1;
reg r_ce1;
reg r_we1;
reg[7:0] r_d1;
reg[9:0] a_coeffs_address0;
reg a_coeffs_ce0;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] next_mul_fu_522_p2;
reg   [9:0] next_mul_reg_1227;
wire    ap_CS_fsm_state2;
wire   [6:0] tmp_49_fu_534_p2;
reg   [6:0] tmp_49_reg_1235;
wire   [9:0] tmp_fu_540_p3;
reg   [9:0] tmp_reg_1240;
wire   [0:0] exitcond3_fu_528_p2;
wire   [3:0] j_3_fu_558_p2;
reg   [3:0] j_3_reg_1248;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond2_fu_552_p2;
reg   [7:0] tmp_21_reg_1258;
wire    ap_CS_fsm_state5;
wire   [5:0] grp_fu_492_p4;
reg   [5:0] tmp_23_reg_1263;
wire    ap_CS_fsm_state6;
reg   [7:0] tmp_30_reg_1268;
wire    ap_CS_fsm_state7;
reg   [6:0] tmp_34_reg_1273;
wire    ap_CS_fsm_state8;
reg   [7:0] tmp_70_reg_1278;
wire    ap_CS_fsm_state9;
wire   [2:0] tmp_48_fu_1039_p2;
reg   [2:0] tmp_48_reg_1286;
wire    ap_CS_fsm_state11;
wire   [0:0] exitcond1_fu_1033_p2;
wire   [3:0] j_4_fu_1074_p2;
wire    ap_CS_fsm_state13;
wire   [0:0] exitcond_fu_1063_p2;
wire   [4:0] tmp_86_fu_1099_p1;
reg   [4:0] tmp_86_reg_1304;
wire    ap_CS_fsm_state14;
wire   [1:0] grp_fu_502_p4;
reg   [1:0] tmp_46_reg_1309;
wire   [1:0] tmp_88_fu_1124_p1;
reg   [1:0] tmp_88_reg_1314;
wire    ap_CS_fsm_state15;
wire   [4:0] tmp_89_fu_1152_p1;
reg   [4:0] tmp_89_reg_1319;
wire    ap_CS_fsm_state16;
reg   [2:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [15:0] t_d0;
wire   [15:0] t_q0;
reg   [2:0] t_address1;
reg    t_ce1;
reg    t_we1;
wire   [15:0] t_q1;
reg   [6:0] i_reg_423;
wire    ap_CS_fsm_state10;
reg   [9:0] phi_mul_reg_434;
reg   [3:0] j_reg_446;
wire    ap_CS_fsm_state4;
reg   [2:0] j_1_reg_458;
wire    ap_CS_fsm_state12;
reg   [3:0] j_2_reg_470;
wire   [63:0] tmp_74_fu_569_p1;
wire   [63:0] tmp_75_fu_574_p1;
wire   [63:0] sum_cast_fu_594_p1;
wire   [63:0] sum2_cast_fu_644_p1;
wire   [63:0] sum8_cast_fu_693_p1;
wire   [63:0] sum10_cast_fu_714_p1;
wire   [63:0] sum12_cast_fu_761_p1;
wire   [63:0] sum14_cast_fu_801_p1;
wire   [63:0] sum15_cast_fu_850_p1;
wire   [63:0] sum16_cast_fu_882_p1;
wire   [63:0] sum17_cast_fu_947_p1;
wire   [63:0] sum18_cast_fu_997_p1;
wire   [63:0] sum19_cast_fu_1028_p1;
wire   [63:0] tmp_s_fu_1053_p1;
wire   [63:0] tmp_47_fu_1058_p1;
wire   [63:0] tmp_87_fu_1069_p1;
wire    ap_CS_fsm_state17;
wire   [7:0] tmp_33_fu_579_p1;
wire   [7:0] tmp_50_fu_621_p2;
wire   [7:0] tmp_52_fu_671_p2;
wire   [7:0] tmp_56_fu_736_p3;
wire   [7:0] tmp_58_fu_778_p2;
wire   [7:0] tmp_60_fu_828_p2;
wire   [7:0] tmp_65_fu_922_p3;
wire   [7:0] tmp_68_fu_974_p2;
wire   [7:0] tmp_77_fu_1092_p2;
wire   [7:0] tmp_78_fu_1116_p3;
wire   [7:0] tmp_82_fu_1145_p2;
wire   [7:0] tmp_85_fu_1173_p2;
wire   [7:0] tmp_90_fu_1180_p1;
wire   [9:0] j_cast6_fu_548_p1;
wire   [9:0] tmp_73_fu_564_p2;
wire   [10:0] tmp_110_cast_fu_584_p1;
wire   [10:0] sum_fu_588_p2;
wire   [4:0] tmp_36_fu_609_p1;
wire   [7:0] tmp_19_fu_613_p3;
wire   [7:0] tmp_18_fu_599_p4;
wire   [9:0] tmp_51_fu_628_p2;
wire   [10:0] tmp_114_cast_fu_634_p1;
wire   [10:0] sum2_fu_638_p2;
wire   [1:0] tmp_39_fu_659_p1;
wire   [7:0] tmp_22_fu_663_p3;
wire   [9:0] tmp_53_fu_677_p2;
wire   [10:0] tmp_118_cast_fu_683_p1;
wire   [10:0] sum8_fu_687_p2;
wire   [9:0] tmp_55_fu_698_p2;
wire   [10:0] tmp_134_cast_fu_704_p1;
wire   [10:0] sum10_fu_708_p2;
wire   [4:0] tmp_40_fu_719_p1;
wire   [5:0] tmp_25_fu_723_p3;
wire   [5:0] tmp_26_fu_731_p2;
wire   [9:0] tmp_57_fu_745_p2;
wire   [10:0] tmp_142_cast_fu_751_p1;
wire   [10:0] sum12_fu_755_p2;
wire   [3:0] tmp_41_fu_766_p1;
wire   [7:0] tmp_28_fu_770_p3;
wire   [7:0] grp_fu_512_p4;
wire   [9:0] tmp_59_fu_785_p2;
wire   [10:0] tmp_149_cast_fu_791_p1;
wire   [10:0] sum14_fu_795_p2;
wire   [0:0] tmp_42_fu_816_p1;
wire   [7:0] tmp_31_fu_820_p3;
wire   [9:0] tmp_61_fu_834_p2;
wire   [10:0] tmp_153_cast_fu_840_p1;
wire   [10:0] sum15_fu_844_p2;
wire   [9:0] tmp_63_fu_866_p2;
wire   [10:0] tmp_158_cast_fu_872_p1;
wire   [10:0] sum16_fu_876_p2;
wire   [4:0] tmp_64_fu_897_p1;
wire   [6:0] tmp_37_fu_901_p3;
wire   [0:0] tmp_72_fu_914_p3;
wire   [6:0] tmp_38_fu_909_p2;
wire   [9:0] tmp_66_fu_931_p2;
wire   [10:0] tmp_162_cast_fu_937_p1;
wire   [10:0] sum17_fu_941_p2;
wire   [2:0] tmp_80_fu_952_p1;
wire   [7:0] tmp_67_fu_956_p3;
wire   [7:0] tmp_35_fu_964_p4;
wire   [9:0] tmp_69_fu_981_p2;
wire   [10:0] tmp_168_cast_fu_987_p1;
wire   [10:0] sum18_fu_991_p2;
wire   [9:0] tmp_71_fu_1012_p2;
wire   [10:0] tmp_172_cast_fu_1018_p1;
wire   [10:0] sum19_fu_1022_p2;
wire   [9:0] tmp_10_fu_1045_p3;
wire   [3:0] tmp_83_fu_1080_p1;
wire   [7:0] tmp_76_fu_1084_p3;
wire   [5:0] tmp_44_fu_1103_p3;
wire   [5:0] tmp_45_fu_1110_p2;
wire   [7:0] tmp_15_fu_1135_p4;
wire   [7:0] tmp_81_fu_1128_p3;
wire   [7:0] tmp_16_fu_1163_p4;
wire   [7:0] tmp_84_fu_1156_p3;
reg   [16:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
end

poly_Sq_tobytes_1_t #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0),
    .address1(t_address1),
    .ce1(t_ce1),
    .we1(t_we1),
    .d1(a_coeffs_q0),
    .q1(t_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_reg_423 <= tmp_49_reg_1235;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_423 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_528_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_1_reg_458 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        j_1_reg_458 <= tmp_48_reg_1286;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond1_fu_1033_p2 == 1'd1))) begin
        j_2_reg_470 <= 4'd4;
    end else if (((exitcond_fu_1063_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        j_2_reg_470 <= j_4_fu_1074_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_528_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_446 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_446 <= j_3_reg_1248;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        phi_mul_reg_434 <= next_mul_reg_1227;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_434 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_3_reg_1248 <= j_3_fu_558_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        next_mul_reg_1227 <= next_mul_fu_522_p2;
        tmp_49_reg_1235 <= tmp_49_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_21_reg_1258 <= {{t_q1[12:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_23_reg_1263 <= {{t_q1[15:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_30_reg_1268 <= {{t_q1[11:4]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_34_reg_1273 <= {{t_q0[15:9]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_46_reg_1309 <= {{t_q0[6:5]}};
        tmp_86_reg_1304 <= tmp_86_fu_1099_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_48_reg_1286 <= tmp_48_fu_1039_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_70_reg_1278 <= {{t_q0[10:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_88_reg_1314 <= tmp_88_fu_1124_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_89_reg_1319 <= tmp_89_fu_1152_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_528_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_1240[9 : 3] <= tmp_fu_540_p3[9 : 3];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        a_coeffs_address0 = tmp_s_fu_1053_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_coeffs_address0 = tmp_74_fu_569_p1;
    end else begin
        a_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state11))) begin
        a_coeffs_ce0 = 1'b1;
    end else begin
        a_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        r_address0 = 64'd1196;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_address0 = 64'd1198;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_address0 = 64'd1200;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_address0 = sum19_cast_fu_1028_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_address0 = sum17_cast_fu_947_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_address0 = sum15_cast_fu_850_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_address0 = sum12_cast_fu_761_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_address0 = sum8_cast_fu_693_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_address0 = sum_cast_fu_594_p1;
    end else begin
        r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        r_address1 = 64'd1197;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_address1 = 64'd1199;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        r_address1 = 64'd1201;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_address1 = sum18_cast_fu_997_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_address1 = sum16_cast_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_address1 = sum14_cast_fu_801_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_address1 = sum10_cast_fu_714_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_address1 = sum2_cast_fu_644_p1;
    end else begin
        r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        r_ce0 = 1'b1;
    end else begin
        r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        r_ce1 = 1'b1;
    end else begin
        r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        r_d0 = tmp_90_fu_1180_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_d0 = tmp_82_fu_1145_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_d0 = tmp_78_fu_1116_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_d0 = tmp_70_reg_1278;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_d0 = tmp_65_fu_922_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_d0 = tmp_60_fu_828_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_d0 = tmp_56_fu_736_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_d0 = tmp_52_fu_671_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_d0 = tmp_33_fu_579_p1;
    end else begin
        r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        r_d1 = tmp_85_fu_1173_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        r_d1 = tmp_77_fu_1092_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_d1 = tmp_68_fu_974_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_d1 = {{t_q0[8:1]}};
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_d1 = tmp_58_fu_778_p2;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state6))) begin
        r_d1 = {{t_q1[9:2]}};
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_d1 = tmp_50_fu_621_p2;
    end else begin
        r_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        r_we0 = 1'b1;
    end else begin
        r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        r_we1 = 1'b1;
    end else begin
        r_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        t_address0 = 64'd1;
    end else if (((exitcond_fu_1063_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        t_address0 = tmp_87_fu_1069_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        t_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state13) & (exitcond_fu_1063_p2 == 1'd1)))) begin
        t_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_address0 = tmp_75_fu_574_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address0 = 64'd0;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        t_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        t_address1 = tmp_47_fu_1058_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        t_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state5))) begin
        t_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address1 = 64'd1;
    end else begin
        t_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state13) & (exitcond_fu_1063_p2 == 1'd1)) | ((exitcond_fu_1063_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        t_ce1 = 1'b1;
    end else begin
        t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_1063_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        t_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_d0 = a_coeffs_q0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((exitcond_fu_1063_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        t_we1 = 1'b1;
    end else begin
        t_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond3_fu_528_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond2_fu_552_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (exitcond1_fu_1033_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((exitcond_fu_1063_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond1_fu_1033_p2 = ((j_1_reg_458 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond2_fu_552_p2 = ((j_reg_446 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond3_fu_528_p2 = ((i_reg_423 == 7'd84) ? 1'b1 : 1'b0);

assign exitcond_fu_1063_p2 = ((j_2_reg_470 == 4'd8) ? 1'b1 : 1'b0);

assign grp_fu_492_p4 = {{t_q1[15:10]}};

assign grp_fu_502_p4 = {{t_q0[6:5]}};

assign grp_fu_512_p4 = {{t_q0[14:7]}};

assign j_3_fu_558_p2 = (j_reg_446 + 4'd1);

assign j_4_fu_1074_p2 = (j_2_reg_470 + 4'd1);

assign j_cast6_fu_548_p1 = j_reg_446;

assign next_mul_fu_522_p2 = (phi_mul_reg_434 + 10'd11);

assign sum10_cast_fu_714_p1 = sum10_fu_708_p2;

assign sum10_fu_708_p2 = (11'd272 + tmp_134_cast_fu_704_p1);

assign sum12_cast_fu_761_p1 = sum12_fu_755_p2;

assign sum12_fu_755_p2 = (11'd272 + tmp_142_cast_fu_751_p1);

assign sum14_cast_fu_801_p1 = sum14_fu_795_p2;

assign sum14_fu_795_p2 = (11'd272 + tmp_149_cast_fu_791_p1);

assign sum15_cast_fu_850_p1 = sum15_fu_844_p2;

assign sum15_fu_844_p2 = (11'd272 + tmp_153_cast_fu_840_p1);

assign sum16_cast_fu_882_p1 = sum16_fu_876_p2;

assign sum16_fu_876_p2 = (11'd272 + tmp_158_cast_fu_872_p1);

assign sum17_cast_fu_947_p1 = sum17_fu_941_p2;

assign sum17_fu_941_p2 = (11'd272 + tmp_162_cast_fu_937_p1);

assign sum18_cast_fu_997_p1 = sum18_fu_991_p2;

assign sum18_fu_991_p2 = (11'd272 + tmp_168_cast_fu_987_p1);

assign sum19_cast_fu_1028_p1 = sum19_fu_1022_p2;

assign sum19_fu_1022_p2 = (11'd272 + tmp_172_cast_fu_1018_p1);

assign sum2_cast_fu_644_p1 = sum2_fu_638_p2;

assign sum2_fu_638_p2 = (11'd272 + tmp_114_cast_fu_634_p1);

assign sum8_cast_fu_693_p1 = sum8_fu_687_p2;

assign sum8_fu_687_p2 = (11'd272 + tmp_118_cast_fu_683_p1);

assign sum_cast_fu_594_p1 = sum_fu_588_p2;

assign sum_fu_588_p2 = (11'd272 + tmp_110_cast_fu_584_p1);

assign tmp_10_fu_1045_p3 = {{7'd84}, {j_1_reg_458}};

assign tmp_110_cast_fu_584_p1 = phi_mul_reg_434;

assign tmp_114_cast_fu_634_p1 = tmp_51_fu_628_p2;

assign tmp_118_cast_fu_683_p1 = tmp_53_fu_677_p2;

assign tmp_134_cast_fu_704_p1 = tmp_55_fu_698_p2;

assign tmp_142_cast_fu_751_p1 = tmp_57_fu_745_p2;

assign tmp_149_cast_fu_791_p1 = tmp_59_fu_785_p2;

assign tmp_153_cast_fu_840_p1 = tmp_61_fu_834_p2;

assign tmp_158_cast_fu_872_p1 = tmp_63_fu_866_p2;

assign tmp_15_fu_1135_p4 = {{t_q0[12:5]}};

assign tmp_162_cast_fu_937_p1 = tmp_66_fu_931_p2;

assign tmp_168_cast_fu_987_p1 = tmp_69_fu_981_p2;

assign tmp_16_fu_1163_p4 = {{t_q1[15:8]}};

assign tmp_172_cast_fu_1018_p1 = tmp_71_fu_1012_p2;

assign tmp_18_fu_599_p4 = {{t_q0[15:8]}};

assign tmp_19_fu_613_p3 = {{tmp_36_fu_609_p1}, {3'd0}};

assign tmp_22_fu_663_p3 = {{tmp_39_fu_659_p1}, {6'd0}};

assign tmp_25_fu_723_p3 = {{tmp_40_fu_719_p1}, {1'd0}};

assign tmp_26_fu_731_p2 = (tmp_25_fu_723_p3 | tmp_23_reg_1263);

assign tmp_28_fu_770_p3 = {{tmp_41_fu_766_p1}, {4'd0}};

assign tmp_31_fu_820_p3 = {{tmp_42_fu_816_p1}, {7'd0}};

assign tmp_33_fu_579_p1 = t_q0[7:0];

assign tmp_35_fu_964_p4 = {{t_q1[13:6]}};

assign tmp_36_fu_609_p1 = t_q1[4:0];

assign tmp_37_fu_901_p3 = {{tmp_64_fu_897_p1}, {2'd0}};

assign tmp_38_fu_909_p2 = (tmp_37_fu_901_p3 | tmp_34_reg_1273);

assign tmp_39_fu_659_p1 = t_q1[1:0];

assign tmp_40_fu_719_p1 = t_q0[4:0];

assign tmp_41_fu_766_p1 = t_q1[3:0];

assign tmp_42_fu_816_p1 = t_q0[0:0];

assign tmp_44_fu_1103_p3 = {{tmp_86_reg_1304}, {1'd0}};

assign tmp_45_fu_1110_p2 = (tmp_44_fu_1103_p3 | grp_fu_492_p4);

assign tmp_47_fu_1058_p1 = j_1_reg_458;

assign tmp_48_fu_1039_p2 = (j_1_reg_458 + 3'd1);

assign tmp_49_fu_534_p2 = (i_reg_423 + 7'd1);

assign tmp_50_fu_621_p2 = (tmp_19_fu_613_p3 | tmp_18_fu_599_p4);

assign tmp_51_fu_628_p2 = (10'd1 + phi_mul_reg_434);

assign tmp_52_fu_671_p2 = (tmp_22_fu_663_p3 | tmp_21_reg_1258);

assign tmp_53_fu_677_p2 = (10'd2 + phi_mul_reg_434);

assign tmp_55_fu_698_p2 = (10'd3 + phi_mul_reg_434);

assign tmp_56_fu_736_p3 = {{grp_fu_502_p4}, {tmp_26_fu_731_p2}};

assign tmp_57_fu_745_p2 = (10'd4 + phi_mul_reg_434);

assign tmp_58_fu_778_p2 = (tmp_28_fu_770_p3 | grp_fu_512_p4);

assign tmp_59_fu_785_p2 = (10'd5 + phi_mul_reg_434);

assign tmp_60_fu_828_p2 = (tmp_31_fu_820_p3 | tmp_30_reg_1268);

assign tmp_61_fu_834_p2 = (10'd6 + phi_mul_reg_434);

assign tmp_63_fu_866_p2 = (10'd7 + phi_mul_reg_434);

assign tmp_64_fu_897_p1 = t_q1[4:0];

assign tmp_65_fu_922_p3 = {{tmp_72_fu_914_p3}, {tmp_38_fu_909_p2}};

assign tmp_66_fu_931_p2 = (10'd8 + phi_mul_reg_434);

assign tmp_67_fu_956_p3 = {{tmp_80_fu_952_p1}, {5'd0}};

assign tmp_68_fu_974_p2 = (tmp_67_fu_956_p3 | tmp_35_fu_964_p4);

assign tmp_69_fu_981_p2 = (10'd9 + phi_mul_reg_434);

assign tmp_71_fu_1012_p2 = (10'd10 + phi_mul_reg_434);

assign tmp_72_fu_914_p3 = t_q1[32'd5];

assign tmp_73_fu_564_p2 = (tmp_reg_1240 + j_cast6_fu_548_p1);

assign tmp_74_fu_569_p1 = tmp_73_fu_564_p2;

assign tmp_75_fu_574_p1 = j_reg_446;

assign tmp_76_fu_1084_p3 = {{tmp_83_fu_1080_p1}, {4'd0}};

assign tmp_77_fu_1092_p2 = (tmp_76_fu_1084_p3 | grp_fu_512_p4);

assign tmp_78_fu_1116_p3 = {{tmp_46_reg_1309}, {tmp_45_fu_1110_p2}};

assign tmp_80_fu_952_p1 = t_q0[2:0];

assign tmp_81_fu_1128_p3 = {{tmp_88_reg_1314}, {6'd0}};

assign tmp_82_fu_1145_p2 = (tmp_81_fu_1128_p3 | tmp_15_fu_1135_p4);

assign tmp_83_fu_1080_p1 = t_q1[3:0];

assign tmp_84_fu_1156_p3 = {{tmp_89_reg_1319}, {3'd0}};

assign tmp_85_fu_1173_p2 = (tmp_84_fu_1156_p3 | tmp_16_fu_1163_p4);

assign tmp_86_fu_1099_p1 = t_q0[4:0];

assign tmp_87_fu_1069_p1 = j_2_reg_470;

assign tmp_88_fu_1124_p1 = t_q1[1:0];

assign tmp_89_fu_1152_p1 = t_q0[4:0];

assign tmp_90_fu_1180_p1 = t_q1[7:0];

assign tmp_fu_540_p3 = {{i_reg_423}, {3'd0}};

assign tmp_s_fu_1053_p1 = tmp_10_fu_1045_p3;

always @ (posedge ap_clk) begin
    tmp_reg_1240[2:0] <= 3'b000;
end

endmodule //poly_Sq_tobytes_1
