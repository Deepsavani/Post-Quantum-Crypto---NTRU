// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "crypto_sort.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic crypto_sort::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic crypto_sort::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> crypto_sort::ap_ST_fsm_state1 = "1";
const sc_lv<13> crypto_sort::ap_ST_fsm_state2 = "10";
const sc_lv<13> crypto_sort::ap_ST_fsm_state3 = "100";
const sc_lv<13> crypto_sort::ap_ST_fsm_state4 = "1000";
const sc_lv<13> crypto_sort::ap_ST_fsm_state5 = "10000";
const sc_lv<13> crypto_sort::ap_ST_fsm_state6 = "100000";
const sc_lv<13> crypto_sort::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> crypto_sort::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> crypto_sort::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> crypto_sort::ap_ST_fsm_state10 = "1000000000";
const sc_lv<13> crypto_sort::ap_ST_fsm_state11 = "10000000000";
const sc_lv<13> crypto_sort::ap_ST_fsm_state12 = "100000000000";
const sc_lv<13> crypto_sort::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> crypto_sort::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> crypto_sort::ap_const_lv32_1 = "1";
const sc_lv<1> crypto_sort::ap_const_lv1_0 = "0";
const sc_lv<32> crypto_sort::ap_const_lv32_2 = "10";
const sc_lv<1> crypto_sort::ap_const_lv1_1 = "1";
const sc_lv<32> crypto_sort::ap_const_lv32_3 = "11";
const sc_lv<32> crypto_sort::ap_const_lv32_4 = "100";
const sc_lv<32> crypto_sort::ap_const_lv32_7 = "111";
const sc_lv<32> crypto_sort::ap_const_lv32_8 = "1000";
const sc_lv<32> crypto_sort::ap_const_lv32_9 = "1001";
const sc_lv<32> crypto_sort::ap_const_lv32_A = "1010";
const sc_lv<32> crypto_sort::ap_const_lv32_B = "1011";
const sc_lv<60> crypto_sort::ap_const_lv60_200 = "1000000000";
const sc_lv<32> crypto_sort::ap_const_lv32_6 = "110";
const sc_lv<10> crypto_sort::ap_const_lv10_0 = "0000000000";
const sc_lv<62> crypto_sort::ap_const_lv62_200 = "1000000000";
const sc_lv<64> crypto_sort::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> crypto_sort::ap_const_lv32_C = "1100";
const sc_lv<32> crypto_sort::ap_const_lv32_5 = "101";
const sc_lv<60> crypto_sort::ap_const_lv60_0 = "000000000000000000000000000000000000000000000000000000000000";
const sc_lv<61> crypto_sort::ap_const_lv61_2A4 = "1010100100";
const sc_lv<10> crypto_sort::ap_const_lv10_1 = "1";
const sc_lv<32> crypto_sort::ap_const_lv32_1F = "11111";
const sc_lv<32> crypto_sort::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<63> crypto_sort::ap_const_lv63_2A4 = "1010100100";
const sc_lv<32> crypto_sort::ap_const_lv32_3B = "111011";
const sc_lv<32> crypto_sort::ap_const_lv32_3D = "111101";
const sc_lv<64> crypto_sort::ap_const_lv64_1 = "1";
const bool crypto_sort::ap_const_boolean_1 = true;

crypto_sort::crypto_sort(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_1_fu_498_p2);
    sensitive << ( a1_reg_153 );
    sensitive << ( c_11_fu_492_p2 );

    SC_METHOD(thread_ab_1_fu_446_p2);
    sensitive << ( array_r_q0 );
    sensitive << ( a1_reg_153 );

    SC_METHOD(thread_ab_fu_243_p2);
    sensitive << ( array_load_reg_552 );
    sensitive << ( array_load_1_reg_559 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_176_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_176_p2 );

    SC_METHOD(thread_array_r_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( array_addr_reg_540 );
    sensitive << ( array_addr_1_reg_546 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_253_reg_592 );
    sensitive << ( array_addr_2_reg_601 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_254_fu_407_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sum_cast_fu_238_p1 );
    sensitive << ( sum6_cast_fu_421_p1 );

    SC_METHOD(thread_array_r_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( array_addr_reg_540 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( array_addr_3_reg_620 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( i_cast_fu_192_p1 );
    sensitive << ( sum4_cast_fu_384_p1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_array_r_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_253_reg_592 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_254_fu_407_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_array_r_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_array_r_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_253_reg_592 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_254_fu_407_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( a1_reg_153 );
    sensitive << ( tmp_246_fu_290_p2 );
    sensitive << ( tmp_247_fu_296_p2 );

    SC_METHOD(thread_array_r_d1);
    sensitive << ( tmp_257_reg_641 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_array_r_we0);
    sensitive << ( tmp_243_reg_536 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_253_reg_592 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_254_fu_407_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_array_r_we1);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_c_10_fu_484_p3);
    sensitive << ( tmp_354_fu_476_p3 );

    SC_METHOD(thread_c_11_fu_492_p2);
    sensitive << ( ab_1_fu_446_p2 );
    sensitive << ( c_10_fu_484_p3 );

    SC_METHOD(thread_c_5_fu_262_p2);
    sensitive << ( c_fu_247_p2 );
    sensitive << ( tmp_245_fu_256_p2 );

    SC_METHOD(thread_c_6_fu_276_p3);
    sensitive << ( tmp_347_fu_268_p3 );

    SC_METHOD(thread_c_7_fu_284_p2);
    sensitive << ( ab_fu_243_p2 );
    sensitive << ( c_6_fu_276_p3 );

    SC_METHOD(thread_c_8_fu_452_p2);
    sensitive << ( array_r_q0 );
    sensitive << ( a1_reg_153 );

    SC_METHOD(thread_c_9_fu_470_p2);
    sensitive << ( c_8_fu_452_p2 );
    sensitive << ( tmp_256_fu_464_p2 );

    SC_METHOD(thread_c_fu_247_p2);
    sensitive << ( array_load_reg_552 );
    sensitive << ( array_load_1_reg_559 );

    SC_METHOD(thread_i_40_fu_206_p2);
    sensitive << ( i_reg_97 );

    SC_METHOD(thread_i_41_fu_327_p3);
    sensitive << ( tmp_253_cast_fu_317_p1 );
    sensitive << ( i_1_reg_120 );
    sensitive << ( tmp_250_fu_321_p2 );

    SC_METHOD(thread_i_cast4_fu_188_p1);
    sensitive << ( i_reg_97 );

    SC_METHOD(thread_i_cast_cast_cast_fu_197_p1);
    sensitive << ( i_reg_97 );

    SC_METHOD(thread_i_cast_fu_192_p1);
    sensitive << ( i_reg_97 );

    SC_METHOD(thread_p_cast1_fu_164_p1);
    sensitive << ( p_reg_85 );

    SC_METHOD(thread_p_cast_cast9_fu_172_p1);
    sensitive << ( p_reg_85 );

    SC_METHOD(thread_p_cast_fu_168_p1);
    sensitive << ( p_reg_85 );

    SC_METHOD(thread_r4_cast_fu_403_p1);
    sensitive << ( r4_reg_143 );

    SC_METHOD(thread_r_cast8_fu_302_p1);
    sensitive << ( r_reg_108 );

    SC_METHOD(thread_sum4_cast_fu_384_p1);
    sensitive << ( sum4_fu_378_p2 );

    SC_METHOD(thread_sum4_fu_378_p2);
    sensitive << ( tmp_351_fu_370_p1 );
    sensitive << ( tmp_352_fu_374_p1 );

    SC_METHOD(thread_sum6_cast_fu_421_p1);
    sensitive << ( sum6_fu_416_p2 );

    SC_METHOD(thread_sum6_fu_416_p2);
    sensitive << ( tmp_351_reg_596 );
    sensitive << ( tmp_353_fu_412_p1 );

    SC_METHOD(thread_sum_cast_fu_238_p1);
    sensitive << ( sum_fu_232_p2 );

    SC_METHOD(thread_sum_fu_232_p2);
    sensitive << ( tmp_346_fu_228_p1 );
    sensitive << ( i_cast4_fu_188_p1 );

    SC_METHOD(thread_tmp_241_fu_201_p2);
    sensitive << ( tmp_s_reg_523 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_cast_cast_cast_fu_197_p1 );

    SC_METHOD(thread_tmp_242_fu_216_p2);
    sensitive << ( i_reg_97 );
    sensitive << ( tmp_345_fu_212_p1 );

    SC_METHOD(thread_tmp_243_fu_222_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_241_fu_201_p2 );
    sensitive << ( tmp_242_fu_216_p2 );

    SC_METHOD(thread_tmp_244_fu_251_p2);
    sensitive << ( array_load_reg_552 );
    sensitive << ( c_fu_247_p2 );

    SC_METHOD(thread_tmp_245_fu_256_p2);
    sensitive << ( tmp_244_fu_251_p2 );
    sensitive << ( ab_fu_243_p2 );

    SC_METHOD(thread_tmp_246_fu_290_p2);
    sensitive << ( array_load_1_reg_559 );
    sensitive << ( c_7_fu_284_p2 );

    SC_METHOD(thread_tmp_247_fu_296_p2);
    sensitive << ( array_r_q1 );
    sensitive << ( c_7_reg_566 );

    SC_METHOD(thread_tmp_248_fu_306_p2);
    sensitive << ( p_cast_cast9_reg_515 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( r_reg_108 );

    SC_METHOD(thread_tmp_249_fu_311_p2);
    sensitive << ( r_cast8_fu_302_p1 );

    SC_METHOD(thread_tmp_250_fu_321_p2);
    sensitive << ( tmp_253_cast_fu_317_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_248_fu_306_p2 );
    sensitive << ( i_1_reg_120 );

    SC_METHOD(thread_tmp_251_fu_349_p2);
    sensitive << ( tmp_253_cast_reg_574 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_2_reg_132 );

    SC_METHOD(thread_tmp_252_fu_358_p2);
    sensitive << ( p_reg_85 );
    sensitive << ( tmp_349_fu_354_p1 );

    SC_METHOD(thread_tmp_253_cast_fu_317_p1);
    sensitive << ( tmp_249_fu_311_p2 );

    SC_METHOD(thread_tmp_253_fu_364_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_251_fu_349_p2 );
    sensitive << ( tmp_252_fu_358_p2 );

    SC_METHOD(thread_tmp_254_fu_407_p2);
    sensitive << ( p_cast_reg_510 );
    sensitive << ( tmp_253_reg_592 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( r4_cast_fu_403_p1 );

    SC_METHOD(thread_tmp_255_fu_458_p2);
    sensitive << ( array_r_q0 );
    sensitive << ( c_8_fu_452_p2 );

    SC_METHOD(thread_tmp_256_fu_464_p2);
    sensitive << ( tmp_255_fu_458_p2 );
    sensitive << ( ab_1_fu_446_p2 );

    SC_METHOD(thread_tmp_257_fu_504_p2);
    sensitive << ( array_r_q0 );
    sensitive << ( c_11_fu_492_p2 );

    SC_METHOD(thread_tmp_258_fu_440_p2);
    sensitive << ( i_2_reg_132 );

    SC_METHOD(thread_tmp_345_fu_212_p1);
    sensitive << ( p_reg_85 );

    SC_METHOD(thread_tmp_346_fu_228_p1);
    sensitive << ( p_reg_85 );

    SC_METHOD(thread_tmp_347_fu_268_p3);
    sensitive << ( c_5_fu_262_p2 );

    SC_METHOD(thread_tmp_348_fu_335_p4);
    sensitive << ( p_reg_85 );

    SC_METHOD(thread_tmp_349_fu_354_p1);
    sensitive << ( i_2_reg_132 );

    SC_METHOD(thread_tmp_350_fu_389_p4);
    sensitive << ( r_reg_108 );

    SC_METHOD(thread_tmp_351_fu_370_p1);
    sensitive << ( i_2_reg_132 );

    SC_METHOD(thread_tmp_352_fu_374_p1);
    sensitive << ( p_reg_85 );

    SC_METHOD(thread_tmp_353_fu_412_p1);
    sensitive << ( r4_reg_143 );

    SC_METHOD(thread_tmp_354_fu_476_p3);
    sensitive << ( c_9_fu_470_p2 );

    SC_METHOD(thread_tmp_355_fu_426_p4);
    sensitive << ( r4_reg_143 );

    SC_METHOD(thread_tmp_76_fu_345_p1);
    sensitive << ( tmp_348_fu_335_p4 );

    SC_METHOD(thread_tmp_77_fu_399_p1);
    sensitive << ( tmp_350_fu_389_p4 );

    SC_METHOD(thread_tmp_81_fu_436_p1);
    sensitive << ( tmp_355_fu_426_p4 );

    SC_METHOD(thread_tmp_fu_176_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_reg_85 );

    SC_METHOD(thread_tmp_s_fu_182_p2);
    sensitive << ( p_cast1_fu_164_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_176_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_243_fu_222_p2 );
    sensitive << ( tmp_241_fu_201_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_248_fu_306_p2 );
    sensitive << ( tmp_253_fu_364_p2 );
    sensitive << ( tmp_253_reg_592 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_251_fu_349_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_254_fu_407_p2 );

    ap_CS_fsm = "0000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "crypto_sort_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, array_r_address0, "(port)array_r_address0");
    sc_trace(mVcdFile, array_r_ce0, "(port)array_r_ce0");
    sc_trace(mVcdFile, array_r_we0, "(port)array_r_we0");
    sc_trace(mVcdFile, array_r_d0, "(port)array_r_d0");
    sc_trace(mVcdFile, array_r_q0, "(port)array_r_q0");
    sc_trace(mVcdFile, array_r_address1, "(port)array_r_address1");
    sc_trace(mVcdFile, array_r_ce1, "(port)array_r_ce1");
    sc_trace(mVcdFile, array_r_we1, "(port)array_r_we1");
    sc_trace(mVcdFile, array_r_d1, "(port)array_r_d1");
    sc_trace(mVcdFile, array_r_q1, "(port)array_r_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_cast_fu_168_p1, "p_cast_fu_168_p1");
    sc_trace(mVcdFile, p_cast_reg_510, "p_cast_reg_510");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, p_cast_cast9_fu_172_p1, "p_cast_cast9_fu_172_p1");
    sc_trace(mVcdFile, p_cast_cast9_reg_515, "p_cast_cast9_reg_515");
    sc_trace(mVcdFile, tmp_s_fu_182_p2, "tmp_s_fu_182_p2");
    sc_trace(mVcdFile, tmp_s_reg_523, "tmp_s_reg_523");
    sc_trace(mVcdFile, tmp_fu_176_p2, "tmp_fu_176_p2");
    sc_trace(mVcdFile, i_40_fu_206_p2, "i_40_fu_206_p2");
    sc_trace(mVcdFile, i_40_reg_531, "i_40_reg_531");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_243_fu_222_p2, "tmp_243_fu_222_p2");
    sc_trace(mVcdFile, tmp_243_reg_536, "tmp_243_reg_536");
    sc_trace(mVcdFile, tmp_241_fu_201_p2, "tmp_241_fu_201_p2");
    sc_trace(mVcdFile, array_addr_reg_540, "array_addr_reg_540");
    sc_trace(mVcdFile, array_addr_1_reg_546, "array_addr_1_reg_546");
    sc_trace(mVcdFile, array_load_reg_552, "array_load_reg_552");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, array_load_1_reg_559, "array_load_1_reg_559");
    sc_trace(mVcdFile, c_7_fu_284_p2, "c_7_fu_284_p2");
    sc_trace(mVcdFile, c_7_reg_566, "c_7_reg_566");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_253_cast_fu_317_p1, "tmp_253_cast_fu_317_p1");
    sc_trace(mVcdFile, tmp_253_cast_reg_574, "tmp_253_cast_reg_574");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_248_fu_306_p2, "tmp_248_fu_306_p2");
    sc_trace(mVcdFile, i_41_fu_327_p3, "i_41_fu_327_p3");
    sc_trace(mVcdFile, i_41_reg_579, "i_41_reg_579");
    sc_trace(mVcdFile, tmp_76_fu_345_p1, "tmp_76_fu_345_p1");
    sc_trace(mVcdFile, tmp_253_fu_364_p2, "tmp_253_fu_364_p2");
    sc_trace(mVcdFile, tmp_253_reg_592, "tmp_253_reg_592");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_251_fu_349_p2, "tmp_251_fu_349_p2");
    sc_trace(mVcdFile, tmp_351_fu_370_p1, "tmp_351_fu_370_p1");
    sc_trace(mVcdFile, tmp_351_reg_596, "tmp_351_reg_596");
    sc_trace(mVcdFile, array_addr_2_reg_601, "array_addr_2_reg_601");
    sc_trace(mVcdFile, tmp_77_fu_399_p1, "tmp_77_fu_399_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, array_addr_3_reg_620, "array_addr_3_reg_620");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_254_fu_407_p2, "tmp_254_fu_407_p2");
    sc_trace(mVcdFile, tmp_81_fu_436_p1, "tmp_81_fu_436_p1");
    sc_trace(mVcdFile, tmp_81_reg_626, "tmp_81_reg_626");
    sc_trace(mVcdFile, tmp_258_fu_440_p2, "tmp_258_fu_440_p2");
    sc_trace(mVcdFile, a_1_fu_498_p2, "a_1_fu_498_p2");
    sc_trace(mVcdFile, a_1_reg_636, "a_1_reg_636");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_257_fu_504_p2, "tmp_257_fu_504_p2");
    sc_trace(mVcdFile, tmp_257_reg_641, "tmp_257_reg_641");
    sc_trace(mVcdFile, p_reg_85, "p_reg_85");
    sc_trace(mVcdFile, i_reg_97, "i_reg_97");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, r_reg_108, "r_reg_108");
    sc_trace(mVcdFile, i_1_reg_120, "i_1_reg_120");
    sc_trace(mVcdFile, i_2_reg_132, "i_2_reg_132");
    sc_trace(mVcdFile, r4_reg_143, "r4_reg_143");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, a1_reg_153, "a1_reg_153");
    sc_trace(mVcdFile, sum_cast_fu_238_p1, "sum_cast_fu_238_p1");
    sc_trace(mVcdFile, i_cast_fu_192_p1, "i_cast_fu_192_p1");
    sc_trace(mVcdFile, sum4_cast_fu_384_p1, "sum4_cast_fu_384_p1");
    sc_trace(mVcdFile, sum6_cast_fu_421_p1, "sum6_cast_fu_421_p1");
    sc_trace(mVcdFile, tmp_246_fu_290_p2, "tmp_246_fu_290_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_247_fu_296_p2, "tmp_247_fu_296_p2");
    sc_trace(mVcdFile, p_cast1_fu_164_p1, "p_cast1_fu_164_p1");
    sc_trace(mVcdFile, i_cast_cast_cast_fu_197_p1, "i_cast_cast_cast_fu_197_p1");
    sc_trace(mVcdFile, tmp_345_fu_212_p1, "tmp_345_fu_212_p1");
    sc_trace(mVcdFile, tmp_242_fu_216_p2, "tmp_242_fu_216_p2");
    sc_trace(mVcdFile, tmp_346_fu_228_p1, "tmp_346_fu_228_p1");
    sc_trace(mVcdFile, i_cast4_fu_188_p1, "i_cast4_fu_188_p1");
    sc_trace(mVcdFile, sum_fu_232_p2, "sum_fu_232_p2");
    sc_trace(mVcdFile, c_fu_247_p2, "c_fu_247_p2");
    sc_trace(mVcdFile, tmp_244_fu_251_p2, "tmp_244_fu_251_p2");
    sc_trace(mVcdFile, ab_fu_243_p2, "ab_fu_243_p2");
    sc_trace(mVcdFile, tmp_245_fu_256_p2, "tmp_245_fu_256_p2");
    sc_trace(mVcdFile, c_5_fu_262_p2, "c_5_fu_262_p2");
    sc_trace(mVcdFile, tmp_347_fu_268_p3, "tmp_347_fu_268_p3");
    sc_trace(mVcdFile, c_6_fu_276_p3, "c_6_fu_276_p3");
    sc_trace(mVcdFile, r_cast8_fu_302_p1, "r_cast8_fu_302_p1");
    sc_trace(mVcdFile, tmp_249_fu_311_p2, "tmp_249_fu_311_p2");
    sc_trace(mVcdFile, tmp_250_fu_321_p2, "tmp_250_fu_321_p2");
    sc_trace(mVcdFile, tmp_348_fu_335_p4, "tmp_348_fu_335_p4");
    sc_trace(mVcdFile, tmp_349_fu_354_p1, "tmp_349_fu_354_p1");
    sc_trace(mVcdFile, tmp_252_fu_358_p2, "tmp_252_fu_358_p2");
    sc_trace(mVcdFile, tmp_352_fu_374_p1, "tmp_352_fu_374_p1");
    sc_trace(mVcdFile, sum4_fu_378_p2, "sum4_fu_378_p2");
    sc_trace(mVcdFile, tmp_350_fu_389_p4, "tmp_350_fu_389_p4");
    sc_trace(mVcdFile, r4_cast_fu_403_p1, "r4_cast_fu_403_p1");
    sc_trace(mVcdFile, tmp_353_fu_412_p1, "tmp_353_fu_412_p1");
    sc_trace(mVcdFile, sum6_fu_416_p2, "sum6_fu_416_p2");
    sc_trace(mVcdFile, tmp_355_fu_426_p4, "tmp_355_fu_426_p4");
    sc_trace(mVcdFile, c_8_fu_452_p2, "c_8_fu_452_p2");
    sc_trace(mVcdFile, tmp_255_fu_458_p2, "tmp_255_fu_458_p2");
    sc_trace(mVcdFile, ab_1_fu_446_p2, "ab_1_fu_446_p2");
    sc_trace(mVcdFile, tmp_256_fu_464_p2, "tmp_256_fu_464_p2");
    sc_trace(mVcdFile, c_9_fu_470_p2, "c_9_fu_470_p2");
    sc_trace(mVcdFile, tmp_354_fu_476_p3, "tmp_354_fu_476_p3");
    sc_trace(mVcdFile, c_10_fu_484_p3, "c_10_fu_484_p3");
    sc_trace(mVcdFile, c_11_fu_492_p2, "c_11_fu_492_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

crypto_sort::~crypto_sort() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void crypto_sort::thread_ap_clk_no_reset_() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        a1_reg_153 = a_1_reg_636.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        a1_reg_153 = array_r_q1.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_241_fu_201_p2.read()))) {
        i_1_reg_120 = ap_const_lv64_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_251_fu_349_p2.read()))) {
        i_1_reg_120 = i_41_reg_579.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_254_fu_407_p2.read()) || 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_253_reg_592.read())))) {
        i_2_reg_132 = tmp_258_fu_440_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_248_fu_306_p2.read()))) {
        i_2_reg_132 = i_1_reg_120.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_fu_176_p2.read(), ap_const_lv1_0))) {
        i_reg_97 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_reg_97 = i_40_reg_531.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_reg_85 = ap_const_lv60_200;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_248_fu_306_p2.read()))) {
        p_reg_85 = tmp_76_fu_345_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        r4_reg_143 = tmp_81_reg_626.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r4_reg_143 = r_reg_108.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_241_fu_201_p2.read()))) {
        r_reg_108 = ap_const_lv62_200;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_251_fu_349_p2.read()))) {
        r_reg_108 = tmp_77_fu_399_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        a_1_reg_636 = a_1_fu_498_p2.read();
        tmp_257_reg_641 = tmp_257_fu_504_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_241_fu_201_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_243_fu_222_p2.read(), ap_const_lv1_1))) {
        array_addr_1_reg_546 =  (sc_lv<10>) (i_cast_fu_192_p1.read());
        array_addr_reg_540 =  (sc_lv<10>) (sum_cast_fu_238_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_251_fu_349_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_253_fu_364_p2.read()))) {
        array_addr_2_reg_601 =  (sc_lv<10>) (sum4_cast_fu_384_p1.read());
        tmp_351_reg_596 = tmp_351_fu_370_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_253_reg_592.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_254_fu_407_p2.read()))) {
        array_addr_3_reg_620 =  (sc_lv<10>) (sum6_cast_fu_421_p1.read());
        tmp_81_reg_626 = tmp_81_fu_436_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        array_load_1_reg_559 = array_r_q1.read();
        array_load_reg_552 = array_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        c_7_reg_566 = c_7_fu_284_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_40_reg_531 = i_40_fu_206_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_248_fu_306_p2.read()))) {
        i_41_reg_579 = i_41_fu_327_p3.read();
        tmp_253_cast_reg_574 = tmp_253_cast_fu_317_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_cast_cast9_reg_515 = p_cast_cast9_fu_172_p1.read();
        p_cast_reg_510 = p_cast_fu_168_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_241_fu_201_p2.read(), ap_const_lv1_1))) {
        tmp_243_reg_536 = tmp_243_fu_222_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_251_fu_349_p2.read()))) {
        tmp_253_reg_592 = tmp_253_fu_364_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_fu_176_p2.read(), ap_const_lv1_0))) {
        tmp_s_reg_523 = tmp_s_fu_182_p2.read();
    }
}

void crypto_sort::thread_a_1_fu_498_p2() {
    a_1_fu_498_p2 = (c_11_fu_492_p2.read() ^ a1_reg_153.read());
}

void crypto_sort::thread_ab_1_fu_446_p2() {
    ab_1_fu_446_p2 = (array_r_q0.read() ^ a1_reg_153.read());
}

void crypto_sort::thread_ab_fu_243_p2() {
    ab_fu_243_p2 = (array_load_1_reg_559.read() ^ array_load_reg_552.read());
}

void crypto_sort::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void crypto_sort::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void crypto_sort::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void crypto_sort::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void crypto_sort::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void crypto_sort::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void crypto_sort::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void crypto_sort::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void crypto_sort::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void crypto_sort::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void crypto_sort::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void crypto_sort::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void crypto_sort::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void crypto_sort::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_fu_176_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void crypto_sort::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void crypto_sort::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_fu_176_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void crypto_sort::thread_array_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_253_reg_592.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_254_fu_407_p2.read()))) {
        array_r_address0 = array_addr_2_reg_601.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_253_reg_592.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_254_fu_407_p2.read()))) {
        array_r_address0 =  (sc_lv<10>) (sum6_cast_fu_421_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        array_r_address0 = array_addr_reg_540.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        array_r_address0 = array_addr_1_reg_546.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        array_r_address0 =  (sc_lv<10>) (sum_cast_fu_238_p1.read());
    } else {
        array_r_address0 = "XXXXXXXXXX";
    }
}

void crypto_sort::thread_array_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        array_r_address1 = array_addr_3_reg_620.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        array_r_address1 =  (sc_lv<10>) (sum4_cast_fu_384_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        array_r_address1 = array_addr_reg_540.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        array_r_address1 =  (sc_lv<10>) (i_cast_fu_192_p1.read());
    } else {
        array_r_address1 = "XXXXXXXXXX";
    }
}

void crypto_sort::thread_array_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_253_reg_592.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_254_fu_407_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_253_reg_592.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_254_fu_407_p2.read())))) {
        array_r_ce0 = ap_const_logic_1;
    } else {
        array_r_ce0 = ap_const_logic_0;
    }
}

void crypto_sort::thread_array_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        array_r_ce1 = ap_const_logic_1;
    } else {
        array_r_ce1 = ap_const_logic_0;
    }
}

void crypto_sort::thread_array_r_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_253_reg_592.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_254_fu_407_p2.read()))) {
        array_r_d0 = a1_reg_153.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        array_r_d0 = tmp_247_fu_296_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        array_r_d0 = tmp_246_fu_290_p2.read();
    } else {
        array_r_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void crypto_sort::thread_array_r_d1() {
    array_r_d1 = tmp_257_reg_641.read();
}

void crypto_sort::thread_array_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(tmp_243_reg_536.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_253_reg_592.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_254_fu_407_p2.read())))) {
        array_r_we0 = ap_const_logic_1;
    } else {
        array_r_we0 = ap_const_logic_0;
    }
}

void crypto_sort::thread_array_r_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        array_r_we1 = ap_const_logic_1;
    } else {
        array_r_we1 = ap_const_logic_0;
    }
}

void crypto_sort::thread_c_10_fu_484_p3() {
    c_10_fu_484_p3 = (!tmp_354_fu_476_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_354_fu_476_p3.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void crypto_sort::thread_c_11_fu_492_p2() {
    c_11_fu_492_p2 = (ab_1_fu_446_p2.read() & c_10_fu_484_p3.read());
}

void crypto_sort::thread_c_5_fu_262_p2() {
    c_5_fu_262_p2 = (tmp_245_fu_256_p2.read() ^ c_fu_247_p2.read());
}

void crypto_sort::thread_c_6_fu_276_p3() {
    c_6_fu_276_p3 = (!tmp_347_fu_268_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_347_fu_268_p3.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void crypto_sort::thread_c_7_fu_284_p2() {
    c_7_fu_284_p2 = (ab_fu_243_p2.read() & c_6_fu_276_p3.read());
}

void crypto_sort::thread_c_8_fu_452_p2() {
    c_8_fu_452_p2 = (!array_r_q0.read().is_01() || !a1_reg_153.read().is_01())? sc_lv<32>(): (sc_biguint<32>(array_r_q0.read()) - sc_biguint<32>(a1_reg_153.read()));
}

void crypto_sort::thread_c_9_fu_470_p2() {
    c_9_fu_470_p2 = (tmp_256_fu_464_p2.read() ^ c_8_fu_452_p2.read());
}

void crypto_sort::thread_c_fu_247_p2() {
    c_fu_247_p2 = (!array_load_reg_552.read().is_01() || !array_load_1_reg_559.read().is_01())? sc_lv<32>(): (sc_biguint<32>(array_load_reg_552.read()) - sc_biguint<32>(array_load_1_reg_559.read()));
}

void crypto_sort::thread_i_40_fu_206_p2() {
    i_40_fu_206_p2 = (!i_reg_97.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_97.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void crypto_sort::thread_i_41_fu_327_p3() {
    i_41_fu_327_p3 = (!tmp_250_fu_321_p2.read()[0].is_01())? sc_lv<64>(): ((tmp_250_fu_321_p2.read()[0].to_bool())? i_1_reg_120.read(): tmp_253_cast_fu_317_p1.read());
}

void crypto_sort::thread_i_cast4_fu_188_p1() {
    i_cast4_fu_188_p1 = esl_zext<11,10>(i_reg_97.read());
}

void crypto_sort::thread_i_cast_cast_cast_fu_197_p1() {
    i_cast_cast_cast_fu_197_p1 = esl_zext<61,10>(i_reg_97.read());
}

void crypto_sort::thread_i_cast_fu_192_p1() {
    i_cast_fu_192_p1 = esl_zext<64,10>(i_reg_97.read());
}

void crypto_sort::thread_p_cast1_fu_164_p1() {
    p_cast1_fu_164_p1 = esl_zext<61,60>(p_reg_85.read());
}

void crypto_sort::thread_p_cast_cast9_fu_172_p1() {
    p_cast_cast9_fu_172_p1 = esl_zext<62,60>(p_reg_85.read());
}

void crypto_sort::thread_p_cast_fu_168_p1() {
    p_cast_fu_168_p1 = esl_zext<63,60>(p_reg_85.read());
}

void crypto_sort::thread_r4_cast_fu_403_p1() {
    r4_cast_fu_403_p1 = esl_zext<63,62>(r4_reg_143.read());
}

void crypto_sort::thread_r_cast8_fu_302_p1() {
    r_cast8_fu_302_p1 = esl_zext<63,62>(r_reg_108.read());
}

void crypto_sort::thread_sum4_cast_fu_384_p1() {
    sum4_cast_fu_384_p1 = esl_zext<64,11>(sum4_fu_378_p2.read());
}

void crypto_sort::thread_sum4_fu_378_p2() {
    sum4_fu_378_p2 = (!tmp_351_fu_370_p1.read().is_01() || !tmp_352_fu_374_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_351_fu_370_p1.read()) + sc_biguint<11>(tmp_352_fu_374_p1.read()));
}

void crypto_sort::thread_sum6_cast_fu_421_p1() {
    sum6_cast_fu_421_p1 = esl_zext<64,11>(sum6_fu_416_p2.read());
}

void crypto_sort::thread_sum6_fu_416_p2() {
    sum6_fu_416_p2 = (!tmp_351_reg_596.read().is_01() || !tmp_353_fu_412_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_351_reg_596.read()) + sc_biguint<11>(tmp_353_fu_412_p1.read()));
}

void crypto_sort::thread_sum_cast_fu_238_p1() {
    sum_cast_fu_238_p1 = esl_sext<64,11>(sum_fu_232_p2.read());
}

void crypto_sort::thread_sum_fu_232_p2() {
    sum_fu_232_p2 = (!tmp_346_fu_228_p1.read().is_01() || !i_cast4_fu_188_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_346_fu_228_p1.read()) + sc_biguint<11>(i_cast4_fu_188_p1.read()));
}

void crypto_sort::thread_tmp_241_fu_201_p2() {
    tmp_241_fu_201_p2 = (!i_cast_cast_cast_fu_197_p1.read().is_01() || !tmp_s_reg_523.read().is_01())? sc_lv<1>(): (sc_bigint<61>(i_cast_cast_cast_fu_197_p1.read()) < sc_bigint<61>(tmp_s_reg_523.read()));
}

void crypto_sort::thread_tmp_242_fu_216_p2() {
    tmp_242_fu_216_p2 = (i_reg_97.read() & tmp_345_fu_212_p1.read());
}

void crypto_sort::thread_tmp_243_fu_222_p2() {
    tmp_243_fu_222_p2 = (!tmp_242_fu_216_p2.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_242_fu_216_p2.read() == ap_const_lv10_0);
}

void crypto_sort::thread_tmp_244_fu_251_p2() {
    tmp_244_fu_251_p2 = (array_load_reg_552.read() ^ c_fu_247_p2.read());
}

void crypto_sort::thread_tmp_245_fu_256_p2() {
    tmp_245_fu_256_p2 = (tmp_244_fu_251_p2.read() & ab_fu_243_p2.read());
}

void crypto_sort::thread_tmp_246_fu_290_p2() {
    tmp_246_fu_290_p2 = (array_load_1_reg_559.read() ^ c_7_fu_284_p2.read());
}

void crypto_sort::thread_tmp_247_fu_296_p2() {
    tmp_247_fu_296_p2 = (array_r_q1.read() ^ c_7_reg_566.read());
}

void crypto_sort::thread_tmp_248_fu_306_p2() {
    tmp_248_fu_306_p2 = (!r_reg_108.read().is_01() || !p_cast_cast9_reg_515.read().is_01())? sc_lv<1>(): (sc_biguint<62>(r_reg_108.read()) > sc_biguint<62>(p_cast_cast9_reg_515.read()));
}

void crypto_sort::thread_tmp_249_fu_311_p2() {
    tmp_249_fu_311_p2 = (!ap_const_lv63_2A4.is_01() || !r_cast8_fu_302_p1.read().is_01())? sc_lv<63>(): (sc_biguint<63>(ap_const_lv63_2A4) - sc_biguint<63>(r_cast8_fu_302_p1.read()));
}

void crypto_sort::thread_tmp_250_fu_321_p2() {
    tmp_250_fu_321_p2 = (!i_1_reg_120.read().is_01() || !tmp_253_cast_fu_317_p1.read().is_01())? sc_lv<1>(): (sc_bigint<64>(i_1_reg_120.read()) > sc_bigint<64>(tmp_253_cast_fu_317_p1.read()));
}

void crypto_sort::thread_tmp_251_fu_349_p2() {
    tmp_251_fu_349_p2 = (!i_2_reg_132.read().is_01() || !tmp_253_cast_reg_574.read().is_01())? sc_lv<1>(): (sc_bigint<64>(i_2_reg_132.read()) < sc_bigint<64>(tmp_253_cast_reg_574.read()));
}

void crypto_sort::thread_tmp_252_fu_358_p2() {
    tmp_252_fu_358_p2 = (tmp_349_fu_354_p1.read() & p_reg_85.read());
}

void crypto_sort::thread_tmp_253_cast_fu_317_p1() {
    tmp_253_cast_fu_317_p1 = esl_sext<64,63>(tmp_249_fu_311_p2.read());
}

void crypto_sort::thread_tmp_253_fu_364_p2() {
    tmp_253_fu_364_p2 = (!tmp_252_fu_358_p2.read().is_01() || !ap_const_lv60_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_252_fu_358_p2.read() == ap_const_lv60_0);
}

void crypto_sort::thread_tmp_254_fu_407_p2() {
    tmp_254_fu_407_p2 = (!r4_cast_fu_403_p1.read().is_01() || !p_cast_reg_510.read().is_01())? sc_lv<1>(): (sc_biguint<63>(r4_cast_fu_403_p1.read()) > sc_biguint<63>(p_cast_reg_510.read()));
}

void crypto_sort::thread_tmp_255_fu_458_p2() {
    tmp_255_fu_458_p2 = (array_r_q0.read() ^ c_8_fu_452_p2.read());
}

void crypto_sort::thread_tmp_256_fu_464_p2() {
    tmp_256_fu_464_p2 = (tmp_255_fu_458_p2.read() & ab_1_fu_446_p2.read());
}

void crypto_sort::thread_tmp_257_fu_504_p2() {
    tmp_257_fu_504_p2 = (array_r_q0.read() ^ c_11_fu_492_p2.read());
}

void crypto_sort::thread_tmp_258_fu_440_p2() {
    tmp_258_fu_440_p2 = (!i_2_reg_132.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(i_2_reg_132.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void crypto_sort::thread_tmp_345_fu_212_p1() {
    tmp_345_fu_212_p1 = p_reg_85.read().range(10-1, 0);
}

void crypto_sort::thread_tmp_346_fu_228_p1() {
    tmp_346_fu_228_p1 = p_reg_85.read().range(11-1, 0);
}

void crypto_sort::thread_tmp_347_fu_268_p3() {
    tmp_347_fu_268_p3 = c_5_fu_262_p2.read().range(31, 31);
}

void crypto_sort::thread_tmp_348_fu_335_p4() {
    tmp_348_fu_335_p4 = p_reg_85.read().range(59, 1);
}

void crypto_sort::thread_tmp_349_fu_354_p1() {
    tmp_349_fu_354_p1 = i_2_reg_132.read().range(60-1, 0);
}

void crypto_sort::thread_tmp_350_fu_389_p4() {
    tmp_350_fu_389_p4 = r_reg_108.read().range(61, 1);
}

void crypto_sort::thread_tmp_351_fu_370_p1() {
    tmp_351_fu_370_p1 = i_2_reg_132.read().range(11-1, 0);
}

void crypto_sort::thread_tmp_352_fu_374_p1() {
    tmp_352_fu_374_p1 = p_reg_85.read().range(11-1, 0);
}

void crypto_sort::thread_tmp_353_fu_412_p1() {
    tmp_353_fu_412_p1 = r4_reg_143.read().range(11-1, 0);
}

void crypto_sort::thread_tmp_354_fu_476_p3() {
    tmp_354_fu_476_p3 = c_9_fu_470_p2.read().range(31, 31);
}

void crypto_sort::thread_tmp_355_fu_426_p4() {
    tmp_355_fu_426_p4 = r4_reg_143.read().range(61, 1);
}

void crypto_sort::thread_tmp_76_fu_345_p1() {
    tmp_76_fu_345_p1 = esl_zext<60,59>(tmp_348_fu_335_p4.read());
}

void crypto_sort::thread_tmp_77_fu_399_p1() {
    tmp_77_fu_399_p1 = esl_zext<62,61>(tmp_350_fu_389_p4.read());
}

void crypto_sort::thread_tmp_81_fu_436_p1() {
    tmp_81_fu_436_p1 = esl_zext<62,61>(tmp_355_fu_426_p4.read());
}

void crypto_sort::thread_tmp_fu_176_p2() {
    tmp_fu_176_p2 = (!p_reg_85.read().is_01() || !ap_const_lv60_0.is_01())? sc_lv<1>(): sc_lv<1>(p_reg_85.read() == ap_const_lv60_0);
}

void crypto_sort::thread_tmp_s_fu_182_p2() {
    tmp_s_fu_182_p2 = (!ap_const_lv61_2A4.is_01() || !p_cast1_fu_164_p1.read().is_01())? sc_lv<61>(): (sc_biguint<61>(ap_const_lv61_2A4) - sc_biguint<61>(p_cast1_fu_164_p1.read()));
}

void crypto_sort::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_fu_176_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_241_fu_201_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_241_fu_201_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_243_fu_222_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_248_fu_306_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_251_fu_349_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_251_fu_349_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_253_fu_364_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_254_fu_407_p2.read()) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_253_reg_592.read())))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

}

