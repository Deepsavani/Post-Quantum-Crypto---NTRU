// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "poly_S3_tobytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic poly_S3_tobytes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic poly_S3_tobytes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> poly_S3_tobytes::ap_ST_fsm_state1 = "1";
const sc_lv<7> poly_S3_tobytes::ap_ST_fsm_state2 = "10";
const sc_lv<7> poly_S3_tobytes::ap_ST_fsm_state3 = "100";
const sc_lv<7> poly_S3_tobytes::ap_ST_fsm_state4 = "1000";
const sc_lv<7> poly_S3_tobytes::ap_ST_fsm_state5 = "10000";
const sc_lv<7> poly_S3_tobytes::ap_ST_fsm_state6 = "100000";
const sc_lv<7> poly_S3_tobytes::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_1 = "1";
const sc_lv<1> poly_S3_tobytes::ap_const_lv1_0 = "0";
const sc_lv<1> poly_S3_tobytes::ap_const_lv1_1 = "1";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_2 = "10";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_3 = "11";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_4 = "100";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_0 = "00000000";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_5 = "101";
const sc_lv<64> poly_S3_tobytes::ap_const_lv64_2A3 = "1010100011";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_6 = "110";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_87 = "10000111";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_1 = "1";
const sc_lv<2> poly_S3_tobytes::ap_const_lv2_0 = "00";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_4 = "100";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_3 = "11";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_2 = "10";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_2 = "10";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_1 = "1";
const sc_lv<9> poly_S3_tobytes::ap_const_lv9_87 = "10000111";
const bool poly_S3_tobytes::ap_const_boolean_1 = true;

poly_S3_tobytes::poly_S3_tobytes(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_coeffs_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_147_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_157_fu_179_p1 );
    sensitive << ( tmp_168_fu_271_p1 );

    SC_METHOD(thread_a_coeffs_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_160_fu_190_p1 );
    sensitive << ( tmp_164_fu_232_p1 );
    sensitive << ( tmp_170_fu_276_p1 );

    SC_METHOD(thread_a_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_147_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_a_coeffs_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_c_1_fu_221_p2);
    sensitive << ( tmp_158_fu_211_p2 );
    sensitive << ( tmp_174_fu_217_p1 );

    SC_METHOD(thread_c_2_fu_260_p2);
    sensitive << ( tmp_176_fu_256_p1 );
    sensitive << ( tmp_161_fu_251_p2 );

    SC_METHOD(thread_c_3_fu_294_p2);
    sensitive << ( tmp_178_fu_290_p1 );
    sensitive << ( tmp_165_fu_285_p2 );

    SC_METHOD(thread_c_4_fu_314_p2);
    sensitive << ( tmp_180_reg_413 );
    sensitive << ( tmp_169_fu_309_p2 );

    SC_METHOD(thread_c_fu_195_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_exitcond_fu_147_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_127 );

    SC_METHOD(thread_i_9_fu_153_p2);
    sensitive << ( i_reg_127 );

    SC_METHOD(thread_i_cast1_fu_143_p1);
    sensitive << ( i_reg_127 );

    SC_METHOD(thread_msg_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sum_cast_fu_320_p1 );
    sensitive << ( sum2_cast_fu_334_p1 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_msg_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_msg_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( c_4_fu_314_p2 );
    sensitive << ( tmp_166_fu_324_p1 );

    SC_METHOD(thread_msg_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_p_shl6_fu_203_p3);
    sensitive << ( tmp_173_fu_199_p1 );

    SC_METHOD(thread_p_shl7_fu_159_p3);
    sensitive << ( i_reg_127 );

    SC_METHOD(thread_sum2_cast_fu_334_p1);
    sensitive << ( sum2_fu_329_p2 );

    SC_METHOD(thread_sum2_fu_329_p2);
    sensitive << ( tmp_162_reg_339 );

    SC_METHOD(thread_sum_cast_fu_320_p1);
    sensitive << ( sum_reg_386 );

    SC_METHOD(thread_sum_fu_241_p2);
    sensitive << ( tmp_162_reg_339 );
    sensitive << ( tmp_236_cast_fu_237_p1 );

    SC_METHOD(thread_tmp_157_fu_179_p1);
    sensitive << ( tmp_s_fu_173_p2 );

    SC_METHOD(thread_tmp_158_fu_211_p2);
    sensitive << ( p_shl6_fu_203_p3 );
    sensitive << ( c_fu_195_p1 );

    SC_METHOD(thread_tmp_159_fu_184_p2);
    sensitive << ( tmp_fu_167_p2 );

    SC_METHOD(thread_tmp_160_fu_190_p1);
    sensitive << ( tmp_159_fu_184_p2 );

    SC_METHOD(thread_tmp_161_fu_251_p2);
    sensitive << ( c_1_reg_375 );
    sensitive << ( tmp_175_fu_246_p2 );

    SC_METHOD(thread_tmp_162_fu_139_p1);
    sensitive << ( msg_offset );

    SC_METHOD(thread_tmp_163_fu_227_p2);
    sensitive << ( tmp_reg_353 );

    SC_METHOD(thread_tmp_164_fu_232_p1);
    sensitive << ( tmp_163_fu_227_p2 );

    SC_METHOD(thread_tmp_165_fu_285_p2);
    sensitive << ( c_2_reg_391 );
    sensitive << ( tmp_177_fu_280_p2 );

    SC_METHOD(thread_tmp_166_fu_324_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_tmp_167_fu_266_p2);
    sensitive << ( tmp_reg_353 );

    SC_METHOD(thread_tmp_168_fu_271_p1);
    sensitive << ( tmp_167_fu_266_p2 );

    SC_METHOD(thread_tmp_169_fu_309_p2);
    sensitive << ( c_3_reg_407 );
    sensitive << ( tmp_179_fu_304_p2 );

    SC_METHOD(thread_tmp_170_fu_276_p1);
    sensitive << ( tmp_reg_353 );

    SC_METHOD(thread_tmp_173_fu_199_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_tmp_174_fu_217_p1);
    sensitive << ( a_coeffs_q1 );

    SC_METHOD(thread_tmp_175_fu_246_p2);
    sensitive << ( c_1_reg_375 );

    SC_METHOD(thread_tmp_176_fu_256_p1);
    sensitive << ( a_coeffs_q1 );

    SC_METHOD(thread_tmp_177_fu_280_p2);
    sensitive << ( c_2_reg_391 );

    SC_METHOD(thread_tmp_178_fu_290_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_tmp_179_fu_304_p2);
    sensitive << ( c_3_reg_407 );

    SC_METHOD(thread_tmp_180_fu_300_p1);
    sensitive << ( a_coeffs_q1 );

    SC_METHOD(thread_tmp_236_cast_fu_237_p1);
    sensitive << ( i_reg_127 );

    SC_METHOD(thread_tmp_fu_167_p2);
    sensitive << ( p_shl7_fu_159_p3 );
    sensitive << ( i_cast1_fu_143_p1 );

    SC_METHOD(thread_tmp_s_fu_173_p2);
    sensitive << ( tmp_fu_167_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_147_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "poly_S3_tobytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, msg_address0, "(port)msg_address0");
    sc_trace(mVcdFile, msg_ce0, "(port)msg_ce0");
    sc_trace(mVcdFile, msg_we0, "(port)msg_we0");
    sc_trace(mVcdFile, msg_d0, "(port)msg_d0");
    sc_trace(mVcdFile, msg_offset, "(port)msg_offset");
    sc_trace(mVcdFile, a_coeffs_address0, "(port)a_coeffs_address0");
    sc_trace(mVcdFile, a_coeffs_ce0, "(port)a_coeffs_ce0");
    sc_trace(mVcdFile, a_coeffs_q0, "(port)a_coeffs_q0");
    sc_trace(mVcdFile, a_coeffs_address1, "(port)a_coeffs_address1");
    sc_trace(mVcdFile, a_coeffs_ce1, "(port)a_coeffs_ce1");
    sc_trace(mVcdFile, a_coeffs_q1, "(port)a_coeffs_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_162_fu_139_p1, "tmp_162_fu_139_p1");
    sc_trace(mVcdFile, tmp_162_reg_339, "tmp_162_reg_339");
    sc_trace(mVcdFile, i_9_fu_153_p2, "i_9_fu_153_p2");
    sc_trace(mVcdFile, i_9_reg_348, "i_9_reg_348");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_167_p2, "tmp_fu_167_p2");
    sc_trace(mVcdFile, tmp_reg_353, "tmp_reg_353");
    sc_trace(mVcdFile, exitcond_fu_147_p2, "exitcond_fu_147_p2");
    sc_trace(mVcdFile, c_1_fu_221_p2, "c_1_fu_221_p2");
    sc_trace(mVcdFile, c_1_reg_375, "c_1_reg_375");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sum_fu_241_p2, "sum_fu_241_p2");
    sc_trace(mVcdFile, sum_reg_386, "sum_reg_386");
    sc_trace(mVcdFile, c_2_fu_260_p2, "c_2_fu_260_p2");
    sc_trace(mVcdFile, c_2_reg_391, "c_2_reg_391");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, c_3_fu_294_p2, "c_3_fu_294_p2");
    sc_trace(mVcdFile, c_3_reg_407, "c_3_reg_407");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_180_fu_300_p1, "tmp_180_fu_300_p1");
    sc_trace(mVcdFile, tmp_180_reg_413, "tmp_180_reg_413");
    sc_trace(mVcdFile, i_reg_127, "i_reg_127");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_157_fu_179_p1, "tmp_157_fu_179_p1");
    sc_trace(mVcdFile, tmp_160_fu_190_p1, "tmp_160_fu_190_p1");
    sc_trace(mVcdFile, tmp_164_fu_232_p1, "tmp_164_fu_232_p1");
    sc_trace(mVcdFile, tmp_168_fu_271_p1, "tmp_168_fu_271_p1");
    sc_trace(mVcdFile, tmp_170_fu_276_p1, "tmp_170_fu_276_p1");
    sc_trace(mVcdFile, sum_cast_fu_320_p1, "sum_cast_fu_320_p1");
    sc_trace(mVcdFile, sum2_cast_fu_334_p1, "sum2_cast_fu_334_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, c_4_fu_314_p2, "c_4_fu_314_p2");
    sc_trace(mVcdFile, tmp_166_fu_324_p1, "tmp_166_fu_324_p1");
    sc_trace(mVcdFile, p_shl7_fu_159_p3, "p_shl7_fu_159_p3");
    sc_trace(mVcdFile, i_cast1_fu_143_p1, "i_cast1_fu_143_p1");
    sc_trace(mVcdFile, tmp_s_fu_173_p2, "tmp_s_fu_173_p2");
    sc_trace(mVcdFile, tmp_159_fu_184_p2, "tmp_159_fu_184_p2");
    sc_trace(mVcdFile, tmp_173_fu_199_p1, "tmp_173_fu_199_p1");
    sc_trace(mVcdFile, p_shl6_fu_203_p3, "p_shl6_fu_203_p3");
    sc_trace(mVcdFile, c_fu_195_p1, "c_fu_195_p1");
    sc_trace(mVcdFile, tmp_158_fu_211_p2, "tmp_158_fu_211_p2");
    sc_trace(mVcdFile, tmp_174_fu_217_p1, "tmp_174_fu_217_p1");
    sc_trace(mVcdFile, tmp_163_fu_227_p2, "tmp_163_fu_227_p2");
    sc_trace(mVcdFile, tmp_236_cast_fu_237_p1, "tmp_236_cast_fu_237_p1");
    sc_trace(mVcdFile, tmp_175_fu_246_p2, "tmp_175_fu_246_p2");
    sc_trace(mVcdFile, tmp_176_fu_256_p1, "tmp_176_fu_256_p1");
    sc_trace(mVcdFile, tmp_161_fu_251_p2, "tmp_161_fu_251_p2");
    sc_trace(mVcdFile, tmp_167_fu_266_p2, "tmp_167_fu_266_p2");
    sc_trace(mVcdFile, tmp_177_fu_280_p2, "tmp_177_fu_280_p2");
    sc_trace(mVcdFile, tmp_178_fu_290_p1, "tmp_178_fu_290_p1");
    sc_trace(mVcdFile, tmp_165_fu_285_p2, "tmp_165_fu_285_p2");
    sc_trace(mVcdFile, tmp_179_fu_304_p2, "tmp_179_fu_304_p2");
    sc_trace(mVcdFile, tmp_169_fu_309_p2, "tmp_169_fu_309_p2");
    sc_trace(mVcdFile, sum2_fu_329_p2, "sum2_fu_329_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

poly_S3_tobytes::~poly_S3_tobytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void poly_S3_tobytes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_reg_127 = i_9_reg_348.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_127 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_1_reg_375 = c_1_fu_221_p2.read();
        sum_reg_386 = sum_fu_241_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_2_reg_391 = c_2_fu_260_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        c_3_reg_407 = c_3_fu_294_p2.read();
        tmp_180_reg_413 = tmp_180_fu_300_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_9_reg_348 = i_9_fu_153_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_162_reg_339 = tmp_162_fu_139_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_147_p2.read(), ap_const_lv1_0))) {
        tmp_reg_353 = tmp_fu_167_p2.read();
    }
}

void poly_S3_tobytes::thread_a_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_168_fu_271_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_147_p2.read(), ap_const_lv1_1))) {
        a_coeffs_address0 =  (sc_lv<10>) (ap_const_lv64_2A3);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_147_p2.read(), ap_const_lv1_0))) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_157_fu_179_p1.read());
    } else {
        a_coeffs_address0 = "XXXXXXXXXX";
    }
}

void poly_S3_tobytes::thread_a_coeffs_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_coeffs_address1 =  (sc_lv<10>) (tmp_170_fu_276_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_coeffs_address1 =  (sc_lv<10>) (tmp_164_fu_232_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_coeffs_address1 =  (sc_lv<10>) (tmp_160_fu_190_p1.read());
    } else {
        a_coeffs_address1 = "XXXXXXXXXX";
    }
}

void poly_S3_tobytes::thread_a_coeffs_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_147_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_147_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        a_coeffs_ce0 = ap_const_logic_1;
    } else {
        a_coeffs_ce0 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_a_coeffs_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        a_coeffs_ce1 = ap_const_logic_1;
    } else {
        a_coeffs_ce1 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void poly_S3_tobytes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_c_1_fu_221_p2() {
    c_1_fu_221_p2 = (!tmp_158_fu_211_p2.read().is_01() || !tmp_174_fu_217_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_158_fu_211_p2.read()) + sc_biguint<8>(tmp_174_fu_217_p1.read()));
}

void poly_S3_tobytes::thread_c_2_fu_260_p2() {
    c_2_fu_260_p2 = (!tmp_176_fu_256_p1.read().is_01() || !tmp_161_fu_251_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_176_fu_256_p1.read()) + sc_biguint<8>(tmp_161_fu_251_p2.read()));
}

void poly_S3_tobytes::thread_c_3_fu_294_p2() {
    c_3_fu_294_p2 = (!tmp_178_fu_290_p1.read().is_01() || !tmp_165_fu_285_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_178_fu_290_p1.read()) + sc_biguint<8>(tmp_165_fu_285_p2.read()));
}

void poly_S3_tobytes::thread_c_4_fu_314_p2() {
    c_4_fu_314_p2 = (!tmp_180_reg_413.read().is_01() || !tmp_169_fu_309_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_180_reg_413.read()) + sc_biguint<8>(tmp_169_fu_309_p2.read()));
}

void poly_S3_tobytes::thread_c_fu_195_p1() {
    c_fu_195_p1 = a_coeffs_q0.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_exitcond_fu_147_p2() {
    exitcond_fu_147_p2 = (!i_reg_127.read().is_01() || !ap_const_lv8_87.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_127.read() == ap_const_lv8_87);
}

void poly_S3_tobytes::thread_i_9_fu_153_p2() {
    i_9_fu_153_p2 = (!i_reg_127.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_127.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void poly_S3_tobytes::thread_i_cast1_fu_143_p1() {
    i_cast1_fu_143_p1 = esl_zext<10,8>(i_reg_127.read());
}

void poly_S3_tobytes::thread_msg_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        msg_address0 =  (sc_lv<11>) (sum2_cast_fu_334_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        msg_address0 =  (sc_lv<11>) (sum_cast_fu_320_p1.read());
    } else {
        msg_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void poly_S3_tobytes::thread_msg_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        msg_ce0 = ap_const_logic_1;
    } else {
        msg_ce0 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_msg_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        msg_d0 = tmp_166_fu_324_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        msg_d0 = c_4_fu_314_p2.read();
    } else {
        msg_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void poly_S3_tobytes::thread_msg_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        msg_we0 = ap_const_logic_1;
    } else {
        msg_we0 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_p_shl6_fu_203_p3() {
    p_shl6_fu_203_p3 = esl_concat<6,2>(tmp_173_fu_199_p1.read(), ap_const_lv2_0);
}

void poly_S3_tobytes::thread_p_shl7_fu_159_p3() {
    p_shl7_fu_159_p3 = esl_concat<8,2>(i_reg_127.read(), ap_const_lv2_0);
}

void poly_S3_tobytes::thread_sum2_cast_fu_334_p1() {
    sum2_cast_fu_334_p1 = esl_zext<64,9>(sum2_fu_329_p2.read());
}

void poly_S3_tobytes::thread_sum2_fu_329_p2() {
    sum2_fu_329_p2 = (!ap_const_lv9_87.is_01() || !tmp_162_reg_339.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_87) + sc_biguint<9>(tmp_162_reg_339.read()));
}

void poly_S3_tobytes::thread_sum_cast_fu_320_p1() {
    sum_cast_fu_320_p1 = esl_zext<64,9>(sum_reg_386.read());
}

void poly_S3_tobytes::thread_sum_fu_241_p2() {
    sum_fu_241_p2 = (!tmp_236_cast_fu_237_p1.read().is_01() || !tmp_162_reg_339.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_236_cast_fu_237_p1.read()) + sc_biguint<9>(tmp_162_reg_339.read()));
}

void poly_S3_tobytes::thread_tmp_157_fu_179_p1() {
    tmp_157_fu_179_p1 = esl_zext<64,10>(tmp_s_fu_173_p2.read());
}

void poly_S3_tobytes::thread_tmp_158_fu_211_p2() {
    tmp_158_fu_211_p2 = (!p_shl6_fu_203_p3.read().is_01() || !c_fu_195_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl6_fu_203_p3.read()) - sc_biguint<8>(c_fu_195_p1.read()));
}

void poly_S3_tobytes::thread_tmp_159_fu_184_p2() {
    tmp_159_fu_184_p2 = (!ap_const_lv10_3.is_01() || !tmp_fu_167_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_3) + sc_biguint<10>(tmp_fu_167_p2.read()));
}

void poly_S3_tobytes::thread_tmp_160_fu_190_p1() {
    tmp_160_fu_190_p1 = esl_zext<64,10>(tmp_159_fu_184_p2.read());
}

void poly_S3_tobytes::thread_tmp_161_fu_251_p2() {
    tmp_161_fu_251_p2 = (!tmp_175_fu_246_p2.read().is_01() || !c_1_reg_375.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_175_fu_246_p2.read()) - sc_biguint<8>(c_1_reg_375.read()));
}

void poly_S3_tobytes::thread_tmp_162_fu_139_p1() {
    tmp_162_fu_139_p1 = msg_offset.read().range(9-1, 0);
}

void poly_S3_tobytes::thread_tmp_163_fu_227_p2() {
    tmp_163_fu_227_p2 = (!ap_const_lv10_2.is_01() || !tmp_reg_353.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_2) + sc_biguint<10>(tmp_reg_353.read()));
}

void poly_S3_tobytes::thread_tmp_164_fu_232_p1() {
    tmp_164_fu_232_p1 = esl_zext<64,10>(tmp_163_fu_227_p2.read());
}

void poly_S3_tobytes::thread_tmp_165_fu_285_p2() {
    tmp_165_fu_285_p2 = (!tmp_177_fu_280_p2.read().is_01() || !c_2_reg_391.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_177_fu_280_p2.read()) - sc_biguint<8>(c_2_reg_391.read()));
}

void poly_S3_tobytes::thread_tmp_166_fu_324_p1() {
    tmp_166_fu_324_p1 = a_coeffs_q0.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_167_fu_266_p2() {
    tmp_167_fu_266_p2 = (!ap_const_lv10_1.is_01() || !tmp_reg_353.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(tmp_reg_353.read()));
}

void poly_S3_tobytes::thread_tmp_168_fu_271_p1() {
    tmp_168_fu_271_p1 = esl_zext<64,10>(tmp_167_fu_266_p2.read());
}

void poly_S3_tobytes::thread_tmp_169_fu_309_p2() {
    tmp_169_fu_309_p2 = (!tmp_179_fu_304_p2.read().is_01() || !c_3_reg_407.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_179_fu_304_p2.read()) - sc_biguint<8>(c_3_reg_407.read()));
}

void poly_S3_tobytes::thread_tmp_170_fu_276_p1() {
    tmp_170_fu_276_p1 = esl_zext<64,10>(tmp_reg_353.read());
}

void poly_S3_tobytes::thread_tmp_173_fu_199_p1() {
    tmp_173_fu_199_p1 = a_coeffs_q0.read().range(6-1, 0);
}

void poly_S3_tobytes::thread_tmp_174_fu_217_p1() {
    tmp_174_fu_217_p1 = a_coeffs_q1.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_175_fu_246_p2() {
    tmp_175_fu_246_p2 = (!ap_const_lv8_2.is_01())? sc_lv<8>(): c_1_reg_375.read() << (unsigned short)ap_const_lv8_2.to_uint();
}

void poly_S3_tobytes::thread_tmp_176_fu_256_p1() {
    tmp_176_fu_256_p1 = a_coeffs_q1.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_177_fu_280_p2() {
    tmp_177_fu_280_p2 = (!ap_const_lv8_2.is_01())? sc_lv<8>(): c_2_reg_391.read() << (unsigned short)ap_const_lv8_2.to_uint();
}

void poly_S3_tobytes::thread_tmp_178_fu_290_p1() {
    tmp_178_fu_290_p1 = a_coeffs_q0.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_179_fu_304_p2() {
    tmp_179_fu_304_p2 = (!ap_const_lv8_2.is_01())? sc_lv<8>(): c_3_reg_407.read() << (unsigned short)ap_const_lv8_2.to_uint();
}

void poly_S3_tobytes::thread_tmp_180_fu_300_p1() {
    tmp_180_fu_300_p1 = a_coeffs_q1.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_236_cast_fu_237_p1() {
    tmp_236_cast_fu_237_p1 = esl_zext<9,8>(i_reg_127.read());
}

void poly_S3_tobytes::thread_tmp_fu_167_p2() {
    tmp_fu_167_p2 = (!p_shl7_fu_159_p3.read().is_01() || !i_cast1_fu_143_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl7_fu_159_p3.read()) + sc_biguint<10>(i_cast1_fu_143_p1.read()));
}

void poly_S3_tobytes::thread_tmp_s_fu_173_p2() {
    tmp_s_fu_173_p2 = (!ap_const_lv10_4.is_01() || !tmp_fu_167_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_4) + sc_biguint<10>(tmp_fu_167_p2.read()));
}

void poly_S3_tobytes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_147_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

