// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sample_fixed_type.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sample_fixed_type::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sample_fixed_type::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state1 = "1";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state2 = "10";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state3 = "100";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state4 = "1000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state5 = "10000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state6 = "100000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> sample_fixed_type::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> sample_fixed_type::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sample_fixed_type::ap_const_lv32_2 = "10";
const sc_lv<32> sample_fixed_type::ap_const_lv32_4 = "100";
const sc_lv<32> sample_fixed_type::ap_const_lv32_6 = "110";
const sc_lv<32> sample_fixed_type::ap_const_lv32_8 = "1000";
const sc_lv<32> sample_fixed_type::ap_const_lv32_1 = "1";
const sc_lv<1> sample_fixed_type::ap_const_lv1_0 = "0";
const sc_lv<32> sample_fixed_type::ap_const_lv32_3 = "11";
const sc_lv<32> sample_fixed_type::ap_const_lv32_5 = "101";
const sc_lv<32> sample_fixed_type::ap_const_lv32_7 = "111";
const sc_lv<32> sample_fixed_type::ap_const_lv32_A = "1010";
const sc_lv<32> sample_fixed_type::ap_const_lv32_C = "1100";
const sc_lv<32> sample_fixed_type::ap_const_lv32_F = "1111";
const sc_lv<8> sample_fixed_type::ap_const_lv8_0 = "00000000";
const sc_lv<32> sample_fixed_type::ap_const_lv32_9 = "1001";
const sc_lv<32> sample_fixed_type::ap_const_lv32_B = "1011";
const sc_lv<7> sample_fixed_type::ap_const_lv7_0 = "0000000";
const sc_lv<1> sample_fixed_type::ap_const_lv1_1 = "1";
const sc_lv<32> sample_fixed_type::ap_const_lv32_D = "1101";
const sc_lv<8> sample_fixed_type::ap_const_lv8_7F = "1111111";
const sc_lv<10> sample_fixed_type::ap_const_lv10_0 = "0000000000";
const sc_lv<32> sample_fixed_type::ap_const_lv32_E = "1110";
const sc_lv<32> sample_fixed_type::ap_const_lv32_10 = "10000";
const sc_lv<64> sample_fixed_type::ap_const_lv64_2A4 = "1010100100";
const sc_lv<16> sample_fixed_type::ap_const_lv16_0 = "0000000000000000";
const sc_lv<8> sample_fixed_type::ap_const_lv8_A9 = "10101001";
const sc_lv<8> sample_fixed_type::ap_const_lv8_1 = "1";
const sc_lv<4> sample_fixed_type::ap_const_lv4_0 = "0000";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2A4 = "1010100100";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2A5 = "1010100101";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2A6 = "1010100110";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2A7 = "1010100111";
const sc_lv<2> sample_fixed_type::ap_const_lv2_0 = "00";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2A8 = "1010101000";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2A9 = "1010101001";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2AA = "1010101010";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2AB = "1010101011";
const sc_lv<10> sample_fixed_type::ap_const_lv10_1 = "1";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2AC = "1010101100";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2AD = "1010101101";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2AE = "1010101110";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2AF = "1010101111";
const sc_lv<10> sample_fixed_type::ap_const_lv10_2 = "10";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2B0 = "1010110000";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2B1 = "1010110001";
const sc_lv<13> sample_fixed_type::ap_const_lv13_2B2 = "1010110010";
const sc_lv<15> sample_fixed_type::ap_const_lv15_0 = "000000000000000";
const sc_lv<10> sample_fixed_type::ap_const_lv10_3 = "11";
const sc_lv<7> sample_fixed_type::ap_const_lv7_7F = "1111111";
const sc_lv<7> sample_fixed_type::ap_const_lv7_1 = "1";
const sc_lv<8> sample_fixed_type::ap_const_lv8_FE = "11111110";
const sc_lv<10> sample_fixed_type::ap_const_lv10_2A4 = "1010100100";
const bool sample_fixed_type::ap_const_boolean_1 = true;

sample_fixed_type::sample_fixed_type(sc_module_name name) : sc_module(name), mVcdFile(0) {
    s_U = new sample_fixed_type_s("s_U");
    s_U->clk(ap_clk);
    s_U->reset(ap_rst);
    s_U->address0(s_address0);
    s_U->ce0(s_ce0);
    s_U->we0(s_we0);
    s_U->d0(s_d0);
    s_U->q0(s_q0);
    s_U->address1(grp_crypto_sort_fu_369_array_r_address1);
    s_U->ce1(s_ce1);
    s_U->we1(s_we1);
    s_U->d1(grp_crypto_sort_fu_369_array_r_d1);
    s_U->q1(s_q1);
    grp_crypto_sort_fu_369 = new crypto_sort("grp_crypto_sort_fu_369");
    grp_crypto_sort_fu_369->ap_clk(ap_clk);
    grp_crypto_sort_fu_369->ap_rst(ap_rst);
    grp_crypto_sort_fu_369->ap_start(grp_crypto_sort_fu_369_ap_start);
    grp_crypto_sort_fu_369->ap_done(grp_crypto_sort_fu_369_ap_done);
    grp_crypto_sort_fu_369->ap_idle(grp_crypto_sort_fu_369_ap_idle);
    grp_crypto_sort_fu_369->ap_ready(grp_crypto_sort_fu_369_ap_ready);
    grp_crypto_sort_fu_369->array_r_address0(grp_crypto_sort_fu_369_array_r_address0);
    grp_crypto_sort_fu_369->array_r_ce0(grp_crypto_sort_fu_369_array_r_ce0);
    grp_crypto_sort_fu_369->array_r_we0(grp_crypto_sort_fu_369_array_r_we0);
    grp_crypto_sort_fu_369->array_r_d0(grp_crypto_sort_fu_369_array_r_d0);
    grp_crypto_sort_fu_369->array_r_q0(s_q0);
    grp_crypto_sort_fu_369->array_r_address1(grp_crypto_sort_fu_369_array_r_address1);
    grp_crypto_sort_fu_369->array_r_ce1(grp_crypto_sort_fu_369_array_r_ce1);
    grp_crypto_sort_fu_369->array_r_we1(grp_crypto_sort_fu_369_array_r_we1);
    grp_crypto_sort_fu_369->array_r_d1(grp_crypto_sort_fu_369_array_r_d1);
    grp_crypto_sort_fu_369->array_r_q1(s_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_780_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_780_p2 );

    SC_METHOD(thread_exitcond1_fu_756_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( i_2_reg_347 );

    SC_METHOD(thread_exitcond2_fu_732_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_1_reg_336 );

    SC_METHOD(thread_exitcond3_fu_386_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_324 );

    SC_METHOD(thread_exitcond_fu_780_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( i_3_reg_358 );

    SC_METHOD(thread_grp_crypto_sort_fu_369_ap_start);
    sensitive << ( grp_crypto_sort_fu_369_ap_start_reg );

    SC_METHOD(thread_i_4_fu_392_p2);
    sensitive << ( i_reg_324 );

    SC_METHOD(thread_i_5_fu_738_p2);
    sensitive << ( i_1_reg_336 );

    SC_METHOD(thread_i_6_fu_767_p2);
    sensitive << ( i_2_reg_347 );

    SC_METHOD(thread_i_7_fu_786_p2);
    sensitive << ( i_3_reg_358 );

    SC_METHOD(thread_i_cast1_fu_382_p1);
    sensitive << ( i_reg_324 );

    SC_METHOD(thread_p_shl_cast_fu_406_p1);
    sensitive << ( p_shl_fu_398_p3 );

    SC_METHOD(thread_p_shl_fu_398_p3);
    sensitive << ( i_reg_324 );

    SC_METHOD(thread_r_coeffs_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_22_reg_962 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_r_coeffs_d0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_92_cast_fu_801_p1 );

    SC_METHOD(thread_r_coeffs_we0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_780_p2 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( s_addr_4_reg_936 );
    sensitive << ( s_addr_5_reg_944 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond1_fu_756_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_22_fu_792_p1 );
    sensitive << ( grp_crypto_sort_fu_369_array_r_address0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_5_fu_485_p1 );
    sensitive << ( tmp_8_fu_565_p1 );
    sensitive << ( tmp_12_fu_645_p1 );
    sensitive << ( tmp_17_fu_727_p1 );
    sensitive << ( tmp_18_fu_744_p1 );
    sensitive << ( tmp_20_fu_762_p1 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond1_fu_756_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( grp_crypto_sort_fu_369_array_r_ce0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( grp_crypto_sort_fu_369_array_r_ce1 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_s_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_crypto_sort_fu_369_array_r_d0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_3_fu_462_p6 );
    sensitive << ( tmp_6_fu_544_p7 );
    sensitive << ( tmp_s_fu_624_p7 );
    sensitive << ( tmp_15_fu_715_p2 );
    sensitive << ( tmp_19_fu_749_p2 );
    sensitive << ( tmp_21_fu_773_p2 );

    SC_METHOD(thread_s_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_crypto_sort_fu_369_array_r_we0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_s_we1);
    sensitive << ( grp_crypto_sort_fu_369_array_r_we1 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_sum10_cast_fu_605_p1);
    sensitive << ( sum10_fu_600_p2 );

    SC_METHOD(thread_sum10_fu_600_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum11_cast_fu_615_p1);
    sensitive << ( sum11_fu_610_p2 );

    SC_METHOD(thread_sum11_fu_610_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum12_cast_fu_665_p1);
    sensitive << ( sum12_fu_660_p2 );

    SC_METHOD(thread_sum12_fu_660_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum13_cast_fu_675_p1);
    sensitive << ( sum13_fu_670_p2 );

    SC_METHOD(thread_sum13_fu_670_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum14_cast_fu_685_p1);
    sensitive << ( sum14_fu_680_p2 );

    SC_METHOD(thread_sum14_fu_680_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum1_cast_fu_505_p1);
    sensitive << ( sum1_fu_500_p2 );

    SC_METHOD(thread_sum1_fu_500_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum2_cast_fu_433_p1);
    sensitive << ( sum2_fu_427_p2 );

    SC_METHOD(thread_sum2_fu_427_p2);
    sensitive << ( tmp_fu_410_p2 );

    SC_METHOD(thread_sum3_cast_fu_515_p1);
    sensitive << ( sum3_fu_510_p2 );

    SC_METHOD(thread_sum3_fu_510_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum4_cast_fu_525_p1);
    sensitive << ( sum4_fu_520_p2 );

    SC_METHOD(thread_sum4_fu_520_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum5_cast_fu_535_p1);
    sensitive << ( sum5_fu_530_p2 );

    SC_METHOD(thread_sum5_fu_530_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum6_cast_fu_443_p1);
    sensitive << ( sum6_fu_438_p2 );

    SC_METHOD(thread_sum6_fu_438_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum7_cast_fu_585_p1);
    sensitive << ( sum7_fu_580_p2 );

    SC_METHOD(thread_sum7_fu_580_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum8_cast_fu_453_p1);
    sensitive << ( sum8_fu_448_p2 );

    SC_METHOD(thread_sum8_fu_448_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum9_cast_fu_595_p1);
    sensitive << ( sum9_fu_590_p2 );

    SC_METHOD(thread_sum9_fu_590_p2);
    sensitive << ( tmp_reg_814 );

    SC_METHOD(thread_sum_cast_fu_422_p1);
    sensitive << ( sum_fu_416_p2 );

    SC_METHOD(thread_sum_fu_416_p2);
    sensitive << ( tmp_fu_410_p2 );

    SC_METHOD(thread_tmp9_fu_703_p5);
    sensitive << ( u_q0 );
    sensitive << ( u_q1 );

    SC_METHOD(thread_tmp_10_fu_540_p1);
    sensitive << ( u_q1 );

    SC_METHOD(thread_tmp_11_fu_640_p2);
    sensitive << ( tmp_4_reg_851 );

    SC_METHOD(thread_tmp_12_fu_645_p1);
    sensitive << ( tmp_11_fu_640_p2 );

    SC_METHOD(thread_tmp_14_fu_690_p4);
    sensitive << ( reg_374 );
    sensitive << ( tmp_13_reg_908 );

    SC_METHOD(thread_tmp_15_fu_715_p2);
    sensitive << ( tmp9_fu_703_p5 );
    sensitive << ( tmp_73_cast_fu_699_p1 );

    SC_METHOD(thread_tmp_16_fu_722_p2);
    sensitive << ( tmp_4_reg_851 );

    SC_METHOD(thread_tmp_17_fu_727_p1);
    sensitive << ( tmp_16_fu_722_p2 );

    SC_METHOD(thread_tmp_18_fu_744_p1);
    sensitive << ( i_1_reg_336 );

    SC_METHOD(thread_tmp_19_fu_749_p2);
    sensitive << ( s_q0 );

    SC_METHOD(thread_tmp_1_fu_458_p1);
    sensitive << ( u_q1 );

    SC_METHOD(thread_tmp_20_fu_762_p1);
    sensitive << ( i_2_reg_347 );

    SC_METHOD(thread_tmp_21_fu_773_p2);
    sensitive << ( s_q0 );

    SC_METHOD(thread_tmp_22_fu_792_p1);
    sensitive << ( i_3_reg_358 );

    SC_METHOD(thread_tmp_24_fu_620_p1);
    sensitive << ( u_q1 );

    SC_METHOD(thread_tmp_25_fu_797_p1);
    sensitive << ( s_q0 );

    SC_METHOD(thread_tmp_3_fu_462_p6);
    sensitive << ( u_q0 );
    sensitive << ( reg_374 );
    sensitive << ( reg_378 );
    sensitive << ( tmp_1_fu_458_p1 );

    SC_METHOD(thread_tmp_4_fu_477_p3);
    sensitive << ( i_reg_324 );

    SC_METHOD(thread_tmp_5_fu_485_p1);
    sensitive << ( tmp_4_fu_477_p3 );

    SC_METHOD(thread_tmp_6_fu_544_p7);
    sensitive << ( u_q0 );
    sensitive << ( reg_374 );
    sensitive << ( reg_378 );
    sensitive << ( tmp_2_reg_858 );
    sensitive << ( tmp_10_fu_540_p1 );

    SC_METHOD(thread_tmp_73_cast_fu_699_p1);
    sensitive << ( tmp_14_fu_690_p4 );

    SC_METHOD(thread_tmp_7_fu_560_p2);
    sensitive << ( tmp_4_reg_851 );

    SC_METHOD(thread_tmp_8_fu_565_p1);
    sensitive << ( tmp_7_fu_560_p2 );

    SC_METHOD(thread_tmp_92_cast_fu_801_p1);
    sensitive << ( tmp_25_fu_797_p1 );

    SC_METHOD(thread_tmp_fu_410_p2);
    sensitive << ( p_shl_cast_fu_406_p1 );
    sensitive << ( i_cast1_fu_382_p1 );

    SC_METHOD(thread_tmp_s_fu_624_p7);
    sensitive << ( u_q0 );
    sensitive << ( reg_374 );
    sensitive << ( reg_378 );
    sensitive << ( tmp_9_reg_883 );
    sensitive << ( tmp_24_fu_620_p1 );

    SC_METHOD(thread_u_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( sum_cast_fu_422_p1 );
    sensitive << ( sum6_cast_fu_443_p1 );
    sensitive << ( sum1_cast_fu_505_p1 );
    sensitive << ( sum4_cast_fu_525_p1 );
    sensitive << ( sum7_cast_fu_585_p1 );
    sensitive << ( sum10_cast_fu_605_p1 );
    sensitive << ( sum12_cast_fu_665_p1 );
    sensitive << ( sum14_cast_fu_685_p1 );

    SC_METHOD(thread_u_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sum2_cast_fu_433_p1 );
    sensitive << ( sum8_cast_fu_453_p1 );
    sensitive << ( sum3_cast_fu_515_p1 );
    sensitive << ( sum5_cast_fu_535_p1 );
    sensitive << ( sum9_cast_fu_595_p1 );
    sensitive << ( sum11_cast_fu_615_p1 );
    sensitive << ( sum13_cast_fu_675_p1 );

    SC_METHOD(thread_u_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_u_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_386_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond2_fu_732_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond1_fu_756_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_780_p2 );
    sensitive << ( grp_crypto_sort_fu_369_ap_done );
    sensitive << ( ap_CS_fsm_state15 );

    ap_CS_fsm = "00000000000000001";
    grp_crypto_sort_fu_369_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sample_fixed_type_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_coeffs_address0, "(port)r_coeffs_address0");
    sc_trace(mVcdFile, r_coeffs_ce0, "(port)r_coeffs_ce0");
    sc_trace(mVcdFile, r_coeffs_we0, "(port)r_coeffs_we0");
    sc_trace(mVcdFile, r_coeffs_d0, "(port)r_coeffs_d0");
    sc_trace(mVcdFile, u_address0, "(port)u_address0");
    sc_trace(mVcdFile, u_ce0, "(port)u_ce0");
    sc_trace(mVcdFile, u_q0, "(port)u_q0");
    sc_trace(mVcdFile, u_address1, "(port)u_address1");
    sc_trace(mVcdFile, u_ce1, "(port)u_ce1");
    sc_trace(mVcdFile, u_q1, "(port)u_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_374, "reg_374");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, reg_378, "reg_378");
    sc_trace(mVcdFile, i_4_fu_392_p2, "i_4_fu_392_p2");
    sc_trace(mVcdFile, i_4_reg_809, "i_4_reg_809");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_410_p2, "tmp_fu_410_p2");
    sc_trace(mVcdFile, tmp_reg_814, "tmp_reg_814");
    sc_trace(mVcdFile, exitcond3_fu_386_p2, "exitcond3_fu_386_p2");
    sc_trace(mVcdFile, tmp_4_fu_477_p3, "tmp_4_fu_477_p3");
    sc_trace(mVcdFile, tmp_4_reg_851, "tmp_4_reg_851");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_2_reg_858, "tmp_2_reg_858");
    sc_trace(mVcdFile, tmp_9_reg_883, "tmp_9_reg_883");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_13_reg_908, "tmp_13_reg_908");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_5_fu_738_p2, "i_5_fu_738_p2");
    sc_trace(mVcdFile, i_5_reg_931, "i_5_reg_931");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, s_addr_4_reg_936, "s_addr_4_reg_936");
    sc_trace(mVcdFile, exitcond2_fu_732_p2, "exitcond2_fu_732_p2");
    sc_trace(mVcdFile, s_addr_5_reg_944, "s_addr_5_reg_944");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, exitcond1_fu_756_p2, "exitcond1_fu_756_p2");
    sc_trace(mVcdFile, i_6_fu_767_p2, "i_6_fu_767_p2");
    sc_trace(mVcdFile, i_6_reg_949, "i_6_reg_949");
    sc_trace(mVcdFile, i_7_fu_786_p2, "i_7_fu_786_p2");
    sc_trace(mVcdFile, i_7_reg_957, "i_7_reg_957");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_22_fu_792_p1, "tmp_22_fu_792_p1");
    sc_trace(mVcdFile, tmp_22_reg_962, "tmp_22_reg_962");
    sc_trace(mVcdFile, exitcond_fu_780_p2, "exitcond_fu_780_p2");
    sc_trace(mVcdFile, s_address0, "s_address0");
    sc_trace(mVcdFile, s_ce0, "s_ce0");
    sc_trace(mVcdFile, s_we0, "s_we0");
    sc_trace(mVcdFile, s_d0, "s_d0");
    sc_trace(mVcdFile, s_q0, "s_q0");
    sc_trace(mVcdFile, s_ce1, "s_ce1");
    sc_trace(mVcdFile, s_we1, "s_we1");
    sc_trace(mVcdFile, s_q1, "s_q1");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_ap_start, "grp_crypto_sort_fu_369_ap_start");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_ap_done, "grp_crypto_sort_fu_369_ap_done");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_ap_idle, "grp_crypto_sort_fu_369_ap_idle");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_ap_ready, "grp_crypto_sort_fu_369_ap_ready");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_array_r_address0, "grp_crypto_sort_fu_369_array_r_address0");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_array_r_ce0, "grp_crypto_sort_fu_369_array_r_ce0");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_array_r_we0, "grp_crypto_sort_fu_369_array_r_we0");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_array_r_d0, "grp_crypto_sort_fu_369_array_r_d0");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_array_r_address1, "grp_crypto_sort_fu_369_array_r_address1");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_array_r_ce1, "grp_crypto_sort_fu_369_array_r_ce1");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_array_r_we1, "grp_crypto_sort_fu_369_array_r_we1");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_array_r_d1, "grp_crypto_sort_fu_369_array_r_d1");
    sc_trace(mVcdFile, i_reg_324, "i_reg_324");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, i_1_reg_336, "i_1_reg_336");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, i_2_reg_347, "i_2_reg_347");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, i_3_reg_358, "i_3_reg_358");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, grp_crypto_sort_fu_369_ap_start_reg, "grp_crypto_sort_fu_369_ap_start_reg");
    sc_trace(mVcdFile, sum_cast_fu_422_p1, "sum_cast_fu_422_p1");
    sc_trace(mVcdFile, sum2_cast_fu_433_p1, "sum2_cast_fu_433_p1");
    sc_trace(mVcdFile, sum6_cast_fu_443_p1, "sum6_cast_fu_443_p1");
    sc_trace(mVcdFile, sum8_cast_fu_453_p1, "sum8_cast_fu_453_p1");
    sc_trace(mVcdFile, tmp_5_fu_485_p1, "tmp_5_fu_485_p1");
    sc_trace(mVcdFile, sum1_cast_fu_505_p1, "sum1_cast_fu_505_p1");
    sc_trace(mVcdFile, sum3_cast_fu_515_p1, "sum3_cast_fu_515_p1");
    sc_trace(mVcdFile, sum4_cast_fu_525_p1, "sum4_cast_fu_525_p1");
    sc_trace(mVcdFile, sum5_cast_fu_535_p1, "sum5_cast_fu_535_p1");
    sc_trace(mVcdFile, tmp_8_fu_565_p1, "tmp_8_fu_565_p1");
    sc_trace(mVcdFile, sum7_cast_fu_585_p1, "sum7_cast_fu_585_p1");
    sc_trace(mVcdFile, sum9_cast_fu_595_p1, "sum9_cast_fu_595_p1");
    sc_trace(mVcdFile, sum10_cast_fu_605_p1, "sum10_cast_fu_605_p1");
    sc_trace(mVcdFile, sum11_cast_fu_615_p1, "sum11_cast_fu_615_p1");
    sc_trace(mVcdFile, tmp_12_fu_645_p1, "tmp_12_fu_645_p1");
    sc_trace(mVcdFile, sum12_cast_fu_665_p1, "sum12_cast_fu_665_p1");
    sc_trace(mVcdFile, sum13_cast_fu_675_p1, "sum13_cast_fu_675_p1");
    sc_trace(mVcdFile, sum14_cast_fu_685_p1, "sum14_cast_fu_685_p1");
    sc_trace(mVcdFile, tmp_17_fu_727_p1, "tmp_17_fu_727_p1");
    sc_trace(mVcdFile, tmp_18_fu_744_p1, "tmp_18_fu_744_p1");
    sc_trace(mVcdFile, tmp_20_fu_762_p1, "tmp_20_fu_762_p1");
    sc_trace(mVcdFile, tmp_3_fu_462_p6, "tmp_3_fu_462_p6");
    sc_trace(mVcdFile, tmp_6_fu_544_p7, "tmp_6_fu_544_p7");
    sc_trace(mVcdFile, tmp_s_fu_624_p7, "tmp_s_fu_624_p7");
    sc_trace(mVcdFile, tmp_15_fu_715_p2, "tmp_15_fu_715_p2");
    sc_trace(mVcdFile, tmp_19_fu_749_p2, "tmp_19_fu_749_p2");
    sc_trace(mVcdFile, tmp_21_fu_773_p2, "tmp_21_fu_773_p2");
    sc_trace(mVcdFile, tmp_92_cast_fu_801_p1, "tmp_92_cast_fu_801_p1");
    sc_trace(mVcdFile, p_shl_fu_398_p3, "p_shl_fu_398_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_406_p1, "p_shl_cast_fu_406_p1");
    sc_trace(mVcdFile, i_cast1_fu_382_p1, "i_cast1_fu_382_p1");
    sc_trace(mVcdFile, sum_fu_416_p2, "sum_fu_416_p2");
    sc_trace(mVcdFile, sum2_fu_427_p2, "sum2_fu_427_p2");
    sc_trace(mVcdFile, sum6_fu_438_p2, "sum6_fu_438_p2");
    sc_trace(mVcdFile, sum8_fu_448_p2, "sum8_fu_448_p2");
    sc_trace(mVcdFile, tmp_1_fu_458_p1, "tmp_1_fu_458_p1");
    sc_trace(mVcdFile, sum1_fu_500_p2, "sum1_fu_500_p2");
    sc_trace(mVcdFile, sum3_fu_510_p2, "sum3_fu_510_p2");
    sc_trace(mVcdFile, sum4_fu_520_p2, "sum4_fu_520_p2");
    sc_trace(mVcdFile, sum5_fu_530_p2, "sum5_fu_530_p2");
    sc_trace(mVcdFile, tmp_10_fu_540_p1, "tmp_10_fu_540_p1");
    sc_trace(mVcdFile, tmp_7_fu_560_p2, "tmp_7_fu_560_p2");
    sc_trace(mVcdFile, sum7_fu_580_p2, "sum7_fu_580_p2");
    sc_trace(mVcdFile, sum9_fu_590_p2, "sum9_fu_590_p2");
    sc_trace(mVcdFile, sum10_fu_600_p2, "sum10_fu_600_p2");
    sc_trace(mVcdFile, sum11_fu_610_p2, "sum11_fu_610_p2");
    sc_trace(mVcdFile, tmp_24_fu_620_p1, "tmp_24_fu_620_p1");
    sc_trace(mVcdFile, tmp_11_fu_640_p2, "tmp_11_fu_640_p2");
    sc_trace(mVcdFile, sum12_fu_660_p2, "sum12_fu_660_p2");
    sc_trace(mVcdFile, sum13_fu_670_p2, "sum13_fu_670_p2");
    sc_trace(mVcdFile, sum14_fu_680_p2, "sum14_fu_680_p2");
    sc_trace(mVcdFile, tmp_14_fu_690_p4, "tmp_14_fu_690_p4");
    sc_trace(mVcdFile, tmp9_fu_703_p5, "tmp9_fu_703_p5");
    sc_trace(mVcdFile, tmp_73_cast_fu_699_p1, "tmp_73_cast_fu_699_p1");
    sc_trace(mVcdFile, tmp_16_fu_722_p2, "tmp_16_fu_722_p2");
    sc_trace(mVcdFile, tmp_25_fu_797_p1, "tmp_25_fu_797_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sample_fixed_type::~sample_fixed_type() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete s_U;
    delete grp_crypto_sort_fu_369;
}

void sample_fixed_type::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_crypto_sort_fu_369_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
             esl_seteq<1,1,1>(exitcond1_fu_756_p2.read(), ap_const_lv1_1))) {
            grp_crypto_sort_fu_369_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_crypto_sort_fu_369_ap_ready.read())) {
            grp_crypto_sort_fu_369_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_386_p2.read(), ap_const_lv1_1))) {
        i_1_reg_336 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_1_reg_336 = i_5_reg_931.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_732_p2.read(), ap_const_lv1_1))) {
        i_2_reg_347 = ap_const_lv8_7F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_2_reg_347 = i_6_reg_949.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        i_3_reg_358 = i_7_reg_957.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
                esl_seteq<1,1,1>(grp_crypto_sort_fu_369_ap_done.read(), ap_const_logic_1))) {
        i_3_reg_358 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_reg_324 = i_4_reg_809.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_324 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_4_reg_809 = i_4_fu_392_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_5_reg_931 = i_5_fu_738_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_756_p2.read()))) {
        i_6_reg_949 = i_6_fu_767_p2.read();
        s_addr_5_reg_944 =  (sc_lv<10>) (tmp_20_fu_762_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i_7_reg_957 = i_7_fu_786_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        reg_374 = u_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        reg_378 = u_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_732_p2.read()))) {
        s_addr_4_reg_936 =  (sc_lv<10>) (tmp_18_fu_744_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_13_reg_908 = u_q1.read().range(7, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_780_p2.read()))) {
        tmp_22_reg_962 = tmp_22_fu_792_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_2_reg_858 = u_q1.read().range(7, 6);
        tmp_4_reg_851 = tmp_4_fu_477_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_9_reg_883 = u_q1.read().range(7, 4);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_386_p2.read(), ap_const_lv1_0))) {
        tmp_reg_814 = tmp_fu_410_p2.read();
    }
}

void sample_fixed_type::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sample_fixed_type::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sample_fixed_type::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void sample_fixed_type::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void sample_fixed_type::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void sample_fixed_type::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void sample_fixed_type::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void sample_fixed_type::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void sample_fixed_type::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void sample_fixed_type::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sample_fixed_type::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sample_fixed_type::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sample_fixed_type::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sample_fixed_type::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sample_fixed_type::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sample_fixed_type::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sample_fixed_type::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sample_fixed_type::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_780_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sample_fixed_type::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sample_fixed_type::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_780_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sample_fixed_type::thread_exitcond1_fu_756_p2() {
    exitcond1_fu_756_p2 = (!i_2_reg_347.read().is_01() || !ap_const_lv8_FE.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_347.read() == ap_const_lv8_FE);
}

void sample_fixed_type::thread_exitcond2_fu_732_p2() {
    exitcond2_fu_732_p2 = (!i_1_reg_336.read().is_01() || !ap_const_lv7_7F.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_336.read() == ap_const_lv7_7F);
}

void sample_fixed_type::thread_exitcond3_fu_386_p2() {
    exitcond3_fu_386_p2 = (!i_reg_324.read().is_01() || !ap_const_lv8_A9.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_324.read() == ap_const_lv8_A9);
}

void sample_fixed_type::thread_exitcond_fu_780_p2() {
    exitcond_fu_780_p2 = (!i_3_reg_358.read().is_01() || !ap_const_lv10_2A4.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_358.read() == ap_const_lv10_2A4);
}

void sample_fixed_type::thread_grp_crypto_sort_fu_369_ap_start() {
    grp_crypto_sort_fu_369_ap_start = grp_crypto_sort_fu_369_ap_start_reg.read();
}

void sample_fixed_type::thread_i_4_fu_392_p2() {
    i_4_fu_392_p2 = (!i_reg_324.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_324.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void sample_fixed_type::thread_i_5_fu_738_p2() {
    i_5_fu_738_p2 = (!i_1_reg_336.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_1_reg_336.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void sample_fixed_type::thread_i_6_fu_767_p2() {
    i_6_fu_767_p2 = (!i_2_reg_347.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_2_reg_347.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void sample_fixed_type::thread_i_7_fu_786_p2() {
    i_7_fu_786_p2 = (!i_3_reg_358.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_3_reg_358.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void sample_fixed_type::thread_i_cast1_fu_382_p1() {
    i_cast1_fu_382_p1 = esl_zext<13,8>(i_reg_324.read());
}

void sample_fixed_type::thread_p_shl_cast_fu_406_p1() {
    p_shl_cast_fu_406_p1 = esl_zext<13,12>(p_shl_fu_398_p3.read());
}

void sample_fixed_type::thread_p_shl_fu_398_p3() {
    p_shl_fu_398_p3 = esl_concat<8,4>(i_reg_324.read(), ap_const_lv4_0);
}

void sample_fixed_type::thread_r_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_22_reg_962.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (ap_const_lv64_2A4);
    } else {
        r_coeffs_address0 = "XXXXXXXXXX";
    }
}

void sample_fixed_type::thread_r_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        r_coeffs_ce0 = ap_const_logic_1;
    } else {
        r_coeffs_ce0 = ap_const_logic_0;
    }
}

void sample_fixed_type::thread_r_coeffs_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_coeffs_d0 = tmp_92_cast_fu_801_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        r_coeffs_d0 = ap_const_lv16_0;
    } else {
        r_coeffs_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void sample_fixed_type::thread_r_coeffs_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_780_p2.read(), ap_const_lv1_1)))) {
        r_coeffs_we0 = ap_const_logic_1;
    } else {
        r_coeffs_we0 = ap_const_logic_0;
    }
}

void sample_fixed_type::thread_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        s_address0 =  (sc_lv<10>) (tmp_22_fu_792_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        s_address0 = s_addr_5_reg_944.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_756_p2.read()))) {
        s_address0 =  (sc_lv<10>) (tmp_20_fu_762_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        s_address0 = s_addr_4_reg_936.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        s_address0 =  (sc_lv<10>) (tmp_18_fu_744_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        s_address0 =  (sc_lv<10>) (tmp_17_fu_727_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_address0 =  (sc_lv<10>) (tmp_12_fu_645_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_address0 =  (sc_lv<10>) (tmp_8_fu_565_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_address0 =  (sc_lv<10>) (tmp_5_fu_485_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        s_address0 = grp_crypto_sort_fu_369_array_r_address0.read();
    } else {
        s_address0 = "XXXXXXXXXX";
    }
}

void sample_fixed_type::thread_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_756_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        s_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        s_ce0 = grp_crypto_sort_fu_369_array_r_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void sample_fixed_type::thread_s_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        s_ce1 = grp_crypto_sort_fu_369_array_r_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void sample_fixed_type::thread_s_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        s_d0 = tmp_21_fu_773_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        s_d0 = tmp_19_fu_749_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        s_d0 = tmp_15_fu_715_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_d0 = tmp_s_fu_624_p7.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        s_d0 = tmp_6_fu_544_p7.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_d0 = tmp_3_fu_462_p6.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        s_d0 = grp_crypto_sort_fu_369_array_r_d0.read();
    } else {
        s_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sample_fixed_type::thread_s_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        s_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        s_we0 = grp_crypto_sort_fu_369_array_r_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void sample_fixed_type::thread_s_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        s_we1 = grp_crypto_sort_fu_369_array_r_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void sample_fixed_type::thread_sum10_cast_fu_605_p1() {
    sum10_cast_fu_605_p1 = esl_zext<64,13>(sum10_fu_600_p2.read());
}

void sample_fixed_type::thread_sum10_fu_600_p2() {
    sum10_fu_600_p2 = (!ap_const_lv13_2AE.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2AE) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum11_cast_fu_615_p1() {
    sum11_cast_fu_615_p1 = esl_zext<64,13>(sum11_fu_610_p2.read());
}

void sample_fixed_type::thread_sum11_fu_610_p2() {
    sum11_fu_610_p2 = (!ap_const_lv13_2AF.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2AF) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum12_cast_fu_665_p1() {
    sum12_cast_fu_665_p1 = esl_zext<64,13>(sum12_fu_660_p2.read());
}

void sample_fixed_type::thread_sum12_fu_660_p2() {
    sum12_fu_660_p2 = (!ap_const_lv13_2B0.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2B0) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum13_cast_fu_675_p1() {
    sum13_cast_fu_675_p1 = esl_zext<64,13>(sum13_fu_670_p2.read());
}

void sample_fixed_type::thread_sum13_fu_670_p2() {
    sum13_fu_670_p2 = (!ap_const_lv13_2B1.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2B1) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum14_cast_fu_685_p1() {
    sum14_cast_fu_685_p1 = esl_zext<64,13>(sum14_fu_680_p2.read());
}

void sample_fixed_type::thread_sum14_fu_680_p2() {
    sum14_fu_680_p2 = (!ap_const_lv13_2B2.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2B2) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum1_cast_fu_505_p1() {
    sum1_cast_fu_505_p1 = esl_zext<64,13>(sum1_fu_500_p2.read());
}

void sample_fixed_type::thread_sum1_fu_500_p2() {
    sum1_fu_500_p2 = (!ap_const_lv13_2A8.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2A8) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum2_cast_fu_433_p1() {
    sum2_cast_fu_433_p1 = esl_zext<64,13>(sum2_fu_427_p2.read());
}

void sample_fixed_type::thread_sum2_fu_427_p2() {
    sum2_fu_427_p2 = (!ap_const_lv13_2A5.is_01() || !tmp_fu_410_p2.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2A5) + sc_biguint<13>(tmp_fu_410_p2.read()));
}

void sample_fixed_type::thread_sum3_cast_fu_515_p1() {
    sum3_cast_fu_515_p1 = esl_zext<64,13>(sum3_fu_510_p2.read());
}

void sample_fixed_type::thread_sum3_fu_510_p2() {
    sum3_fu_510_p2 = (!ap_const_lv13_2A9.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2A9) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum4_cast_fu_525_p1() {
    sum4_cast_fu_525_p1 = esl_zext<64,13>(sum4_fu_520_p2.read());
}

void sample_fixed_type::thread_sum4_fu_520_p2() {
    sum4_fu_520_p2 = (!ap_const_lv13_2AA.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2AA) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum5_cast_fu_535_p1() {
    sum5_cast_fu_535_p1 = esl_zext<64,13>(sum5_fu_530_p2.read());
}

void sample_fixed_type::thread_sum5_fu_530_p2() {
    sum5_fu_530_p2 = (!ap_const_lv13_2AB.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2AB) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum6_cast_fu_443_p1() {
    sum6_cast_fu_443_p1 = esl_zext<64,13>(sum6_fu_438_p2.read());
}

void sample_fixed_type::thread_sum6_fu_438_p2() {
    sum6_fu_438_p2 = (!ap_const_lv13_2A6.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2A6) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum7_cast_fu_585_p1() {
    sum7_cast_fu_585_p1 = esl_zext<64,13>(sum7_fu_580_p2.read());
}

void sample_fixed_type::thread_sum7_fu_580_p2() {
    sum7_fu_580_p2 = (!ap_const_lv13_2AC.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2AC) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum8_cast_fu_453_p1() {
    sum8_cast_fu_453_p1 = esl_zext<64,13>(sum8_fu_448_p2.read());
}

void sample_fixed_type::thread_sum8_fu_448_p2() {
    sum8_fu_448_p2 = (!ap_const_lv13_2A7.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2A7) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum9_cast_fu_595_p1() {
    sum9_cast_fu_595_p1 = esl_zext<64,13>(sum9_fu_590_p2.read());
}

void sample_fixed_type::thread_sum9_fu_590_p2() {
    sum9_fu_590_p2 = (!ap_const_lv13_2AD.is_01() || !tmp_reg_814.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2AD) + sc_biguint<13>(tmp_reg_814.read()));
}

void sample_fixed_type::thread_sum_cast_fu_422_p1() {
    sum_cast_fu_422_p1 = esl_zext<64,13>(sum_fu_416_p2.read());
}

void sample_fixed_type::thread_sum_fu_416_p2() {
    sum_fu_416_p2 = (!ap_const_lv13_2A4.is_01() || !tmp_fu_410_p2.read().is_01())? sc_lv<13>(): (sc_biguint<13>(ap_const_lv13_2A4) + sc_biguint<13>(tmp_fu_410_p2.read()));
}

void sample_fixed_type::thread_tmp9_fu_703_p5() {
    tmp9_fu_703_p5 = esl_concat<17,15>(esl_concat<9,8>(esl_concat<8,1>(u_q0.read(), ap_const_lv1_0), u_q1.read()), ap_const_lv15_0);
}

void sample_fixed_type::thread_tmp_10_fu_540_p1() {
    tmp_10_fu_540_p1 = u_q1.read().range(4-1, 0);
}

void sample_fixed_type::thread_tmp_11_fu_640_p2() {
    tmp_11_fu_640_p2 = (tmp_4_reg_851.read() | ap_const_lv10_2);
}

void sample_fixed_type::thread_tmp_12_fu_645_p1() {
    tmp_12_fu_645_p1 = esl_zext<64,10>(tmp_11_fu_640_p2.read());
}

void sample_fixed_type::thread_tmp_14_fu_690_p4() {
    tmp_14_fu_690_p4 = esl_concat<14,2>(esl_concat<8,6>(reg_374.read(), tmp_13_reg_908.read()), ap_const_lv2_0);
}

void sample_fixed_type::thread_tmp_15_fu_715_p2() {
    tmp_15_fu_715_p2 = (!tmp9_fu_703_p5.read().is_01() || !tmp_73_cast_fu_699_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp9_fu_703_p5.read()) + sc_biguint<32>(tmp_73_cast_fu_699_p1.read()));
}

void sample_fixed_type::thread_tmp_16_fu_722_p2() {
    tmp_16_fu_722_p2 = (tmp_4_reg_851.read() | ap_const_lv10_3);
}

void sample_fixed_type::thread_tmp_17_fu_727_p1() {
    tmp_17_fu_727_p1 = esl_zext<64,10>(tmp_16_fu_722_p2.read());
}

void sample_fixed_type::thread_tmp_18_fu_744_p1() {
    tmp_18_fu_744_p1 = esl_zext<64,7>(i_1_reg_336.read());
}

void sample_fixed_type::thread_tmp_19_fu_749_p2() {
    tmp_19_fu_749_p2 = (s_q0.read() | ap_const_lv32_1);
}

void sample_fixed_type::thread_tmp_1_fu_458_p1() {
    tmp_1_fu_458_p1 = u_q1.read().range(6-1, 0);
}

void sample_fixed_type::thread_tmp_20_fu_762_p1() {
    tmp_20_fu_762_p1 = esl_zext<64,8>(i_2_reg_347.read());
}

void sample_fixed_type::thread_tmp_21_fu_773_p2() {
    tmp_21_fu_773_p2 = (s_q0.read() | ap_const_lv32_2);
}

void sample_fixed_type::thread_tmp_22_fu_792_p1() {
    tmp_22_fu_792_p1 = esl_zext<64,10>(i_3_reg_358.read());
}

void sample_fixed_type::thread_tmp_24_fu_620_p1() {
    tmp_24_fu_620_p1 = u_q1.read().range(2-1, 0);
}

void sample_fixed_type::thread_tmp_25_fu_797_p1() {
    tmp_25_fu_797_p1 = s_q0.read().range(2-1, 0);
}

void sample_fixed_type::thread_tmp_3_fu_462_p6() {
    tmp_3_fu_462_p6 = esl_concat<30,2>(esl_concat<22,8>(esl_concat<14,8>(esl_concat<6,8>(tmp_1_fu_458_p1.read(), u_q0.read()), reg_378.read()), reg_374.read()), ap_const_lv2_0);
}

void sample_fixed_type::thread_tmp_4_fu_477_p3() {
    tmp_4_fu_477_p3 = esl_concat<8,2>(i_reg_324.read(), ap_const_lv2_0);
}

void sample_fixed_type::thread_tmp_5_fu_485_p1() {
    tmp_5_fu_485_p1 = esl_zext<64,10>(tmp_4_fu_477_p3.read());
}

void sample_fixed_type::thread_tmp_6_fu_544_p7() {
    tmp_6_fu_544_p7 = esl_concat<30,2>(esl_concat<28,2>(esl_concat<20,8>(esl_concat<12,8>(esl_concat<4,8>(tmp_10_fu_540_p1.read(), u_q0.read()), reg_378.read()), reg_374.read()), tmp_2_reg_858.read()), ap_const_lv2_0);
}

void sample_fixed_type::thread_tmp_73_cast_fu_699_p1() {
    tmp_73_cast_fu_699_p1 = esl_zext<32,16>(tmp_14_fu_690_p4.read());
}

void sample_fixed_type::thread_tmp_7_fu_560_p2() {
    tmp_7_fu_560_p2 = (tmp_4_reg_851.read() | ap_const_lv10_1);
}

void sample_fixed_type::thread_tmp_8_fu_565_p1() {
    tmp_8_fu_565_p1 = esl_zext<64,10>(tmp_7_fu_560_p2.read());
}

void sample_fixed_type::thread_tmp_92_cast_fu_801_p1() {
    tmp_92_cast_fu_801_p1 = esl_zext<16,2>(tmp_25_fu_797_p1.read());
}

void sample_fixed_type::thread_tmp_fu_410_p2() {
    tmp_fu_410_p2 = (!p_shl_cast_fu_406_p1.read().is_01() || !i_cast1_fu_382_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl_cast_fu_406_p1.read()) - sc_biguint<13>(i_cast1_fu_382_p1.read()));
}

void sample_fixed_type::thread_tmp_s_fu_624_p7() {
    tmp_s_fu_624_p7 = esl_concat<30,2>(esl_concat<26,4>(esl_concat<18,8>(esl_concat<10,8>(esl_concat<2,8>(tmp_24_fu_620_p1.read(), u_q0.read()), reg_378.read()), reg_374.read()), tmp_9_reg_883.read()), ap_const_lv2_0);
}

void sample_fixed_type::thread_u_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        u_address0 =  (sc_lv<12>) (sum14_cast_fu_685_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        u_address0 =  (sc_lv<12>) (sum12_cast_fu_665_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        u_address0 =  (sc_lv<12>) (sum10_cast_fu_605_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        u_address0 =  (sc_lv<12>) (sum7_cast_fu_585_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        u_address0 =  (sc_lv<12>) (sum4_cast_fu_525_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        u_address0 =  (sc_lv<12>) (sum1_cast_fu_505_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        u_address0 =  (sc_lv<12>) (sum6_cast_fu_443_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        u_address0 =  (sc_lv<12>) (sum_cast_fu_422_p1.read());
    } else {
        u_address0 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void sample_fixed_type::thread_u_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        u_address1 =  (sc_lv<12>) (sum13_cast_fu_675_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        u_address1 =  (sc_lv<12>) (sum11_cast_fu_615_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        u_address1 =  (sc_lv<12>) (sum9_cast_fu_595_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        u_address1 =  (sc_lv<12>) (sum5_cast_fu_535_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        u_address1 =  (sc_lv<12>) (sum3_cast_fu_515_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        u_address1 =  (sc_lv<12>) (sum8_cast_fu_453_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        u_address1 =  (sc_lv<12>) (sum2_cast_fu_433_p1.read());
    } else {
        u_address1 =  (sc_lv<12>) ("XXXXXXXXXXXX");
    }
}

void sample_fixed_type::thread_u_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        u_ce0 = ap_const_logic_1;
    } else {
        u_ce0 = ap_const_logic_0;
    }
}

void sample_fixed_type::thread_u_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        u_ce1 = ap_const_logic_1;
    } else {
        u_ce1 = ap_const_logic_0;
    }
}

void sample_fixed_type::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_386_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(exitcond2_fu_732_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(exitcond1_fu_756_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(grp_crypto_sort_fu_369_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(exitcond_fu_780_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

}

