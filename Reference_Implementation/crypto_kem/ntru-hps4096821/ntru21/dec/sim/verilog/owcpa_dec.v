// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module owcpa_dec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rm_address0,
        rm_ce0,
        rm_we0,
        rm_d0,
        ciphertext_address0,
        ciphertext_ce0,
        ciphertext_q0,
        ciphertext_address1,
        ciphertext_ce1,
        ciphertext_q1,
        secretkey_address0,
        secretkey_ce0,
        secretkey_q0,
        secretkey_address1,
        secretkey_ce1,
        secretkey_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_state13 = 33'd4096;
parameter    ap_ST_fsm_state14 = 33'd8192;
parameter    ap_ST_fsm_state15 = 33'd16384;
parameter    ap_ST_fsm_state16 = 33'd32768;
parameter    ap_ST_fsm_state17 = 33'd65536;
parameter    ap_ST_fsm_state18 = 33'd131072;
parameter    ap_ST_fsm_state19 = 33'd262144;
parameter    ap_ST_fsm_state20 = 33'd524288;
parameter    ap_ST_fsm_state21 = 33'd1048576;
parameter    ap_ST_fsm_state22 = 33'd2097152;
parameter    ap_ST_fsm_state23 = 33'd4194304;
parameter    ap_ST_fsm_state24 = 33'd8388608;
parameter    ap_ST_fsm_state25 = 33'd16777216;
parameter    ap_ST_fsm_state26 = 33'd33554432;
parameter    ap_ST_fsm_state27 = 33'd67108864;
parameter    ap_ST_fsm_state28 = 33'd134217728;
parameter    ap_ST_fsm_state29 = 33'd268435456;
parameter    ap_ST_fsm_state30 = 33'd536870912;
parameter    ap_ST_fsm_state31 = 33'd1073741824;
parameter    ap_ST_fsm_state32 = 33'd2147483648;
parameter    ap_ST_fsm_state33 = 33'd4294967296;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] rm_address0;
output   rm_ce0;
output   rm_we0;
output  [7:0] rm_d0;
output  [10:0] ciphertext_address0;
output   ciphertext_ce0;
input  [7:0] ciphertext_q0;
output  [10:0] ciphertext_address1;
output   ciphertext_ce1;
input  [7:0] ciphertext_q1;
output  [10:0] secretkey_address0;
output   secretkey_ce0;
input  [7:0] secretkey_q0;
output  [10:0] secretkey_address1;
output   secretkey_ce1;
input  [7:0] secretkey_q1;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rm_ce0;
reg rm_we0;
reg[10:0] secretkey_address0;
reg secretkey_ce0;
reg secretkey_ce1;

(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] i_14_fu_522_p2;
reg   [9:0] i_14_reg_1134;
wire    ap_CS_fsm_state3;
reg   [9:0] liftm_coeffs_addr_reg_1139;
wire   [0:0] exitcond_i_fu_516_p2;
wire   [9:0] i_15_fu_558_p2;
reg   [9:0] i_15_reg_1147;
wire    ap_CS_fsm_state14;
wire   [0:0] exitcond_i7_fu_552_p2;
reg   [0:0] tmp_81_reg_1157;
wire   [9:0] p1_fu_667_p2;
wire    ap_CS_fsm_state15;
wire   [9:0] m1_fu_685_p2;
wire   [9:0] i_16_fu_697_p2;
reg   [9:0] i_16_reg_1175;
wire    ap_CS_fsm_state16;
wire   [63:0] tmp_i1_fu_703_p1;
reg   [63:0] tmp_i1_reg_1180;
wire   [0:0] exitcond_i1_fu_691_p2;
wire   [9:0] i_17_fu_714_p2;
reg   [9:0] i_17_reg_1193;
wire    ap_CS_fsm_state18;
reg   [9:0] liftm_coeffs_addr_2_reg_1198;
wire   [0:0] exitcond_i_i_fu_708_p2;
wire   [9:0] i_18_fu_750_p2;
reg   [9:0] i_18_reg_1206;
wire    ap_CS_fsm_state20;
reg   [9:0] b_coeffs_addr_reg_1211;
wire   [0:0] exitcond_fu_744_p2;
wire   [8:0] i_19_fu_787_p2;
reg   [8:0] i_19_reg_1224;
wire    ap_CS_fsm_state22;
wire   [11:0] tmp_i2_fu_805_p2;
reg   [11:0] tmp_i2_reg_1229;
wire   [0:0] exitcond_i2_fu_781_p2;
wire   [9:0] tmp_4_i_fu_850_p3;
reg   [9:0] tmp_4_i_reg_1244;
wire    ap_CS_fsm_state23;
reg   [3:0] tmp_9_i_reg_1249;
wire    ap_CS_fsm_state25;
wire    grp_poly_Rq_mul_fu_465_ap_ready;
wire    grp_poly_Rq_mul_fu_465_ap_done;
wire   [9:0] i_20_fu_911_p2;
reg   [9:0] i_20_reg_1267;
wire    ap_CS_fsm_state26;
reg   [9:0] r_coeffs_addr_15_reg_1272;
wire   [0:0] exitcond_i3_fu_905_p2;
wire   [9:0] i_21_fu_943_p2;
reg   [9:0] i_21_reg_1281;
wire    ap_CS_fsm_state28;
wire   [0:0] exitcond_i4_fu_937_p2;
wire   [63:0] t_2_fu_1034_p3;
wire    ap_CS_fsm_state29;
wire   [0:0] fail_fu_1084_p2;
reg   [0:0] fail_reg_1296;
wire    ap_CS_fsm_state30;
wire   [9:0] i_22_fu_1095_p2;
reg   [9:0] i_22_reg_1303;
wire    ap_CS_fsm_state31;
reg   [9:0] r_coeffs_addr_17_reg_1308;
wire   [0:0] exitcond_i5_fu_1089_p2;
reg   [9:0] x1_coeffs_address0;
reg    x1_coeffs_ce0;
reg    x1_coeffs_we0;
reg   [15:0] x1_coeffs_d0;
wire   [15:0] x1_coeffs_q0;
reg    x1_coeffs_ce1;
reg    x1_coeffs_we1;
wire   [15:0] x1_coeffs_q1;
reg   [9:0] x2_coeffs_address0;
reg    x2_coeffs_ce0;
reg    x2_coeffs_we0;
reg   [15:0] x2_coeffs_d0;
wire   [15:0] x2_coeffs_q0;
reg   [9:0] x2_coeffs_address1;
reg    x2_coeffs_ce1;
reg    x2_coeffs_we1;
reg   [15:0] x2_coeffs_d1;
wire   [15:0] x2_coeffs_q1;
reg   [9:0] x3_coeffs_address0;
reg    x3_coeffs_ce0;
reg    x3_coeffs_we0;
reg   [15:0] x3_coeffs_d0;
wire   [15:0] x3_coeffs_q0;
reg    x3_coeffs_ce1;
reg    x3_coeffs_we1;
reg   [9:0] x4_coeffs_address0;
reg    x4_coeffs_ce0;
reg    x4_coeffs_we0;
reg   [15:0] x4_coeffs_d0;
wire   [15:0] x4_coeffs_q0;
reg   [9:0] x4_coeffs_address1;
reg    x4_coeffs_ce1;
reg    x4_coeffs_we1;
reg   [15:0] x4_coeffs_d1;
wire   [15:0] x4_coeffs_q1;
wire    grp_poly_S3_mul_fu_441_ap_start;
wire    grp_poly_S3_mul_fu_441_ap_done;
wire    grp_poly_S3_mul_fu_441_ap_idle;
wire    grp_poly_S3_mul_fu_441_ap_ready;
wire   [9:0] grp_poly_S3_mul_fu_441_r_coeffs_address0;
wire    grp_poly_S3_mul_fu_441_r_coeffs_ce0;
wire    grp_poly_S3_mul_fu_441_r_coeffs_we0;
wire   [15:0] grp_poly_S3_mul_fu_441_r_coeffs_d0;
wire   [9:0] grp_poly_S3_mul_fu_441_r_coeffs_address1;
wire    grp_poly_S3_mul_fu_441_r_coeffs_ce1;
wire    grp_poly_S3_mul_fu_441_r_coeffs_we1;
wire   [15:0] grp_poly_S3_mul_fu_441_r_coeffs_d1;
wire   [9:0] grp_poly_S3_mul_fu_441_a_coeffs_address0;
wire    grp_poly_S3_mul_fu_441_a_coeffs_ce0;
wire   [9:0] grp_poly_S3_mul_fu_441_b_coeffs_address0;
wire    grp_poly_S3_mul_fu_441_b_coeffs_ce0;
wire    grp_poly_S3_frombytes_fu_448_ap_start;
wire    grp_poly_S3_frombytes_fu_448_ap_done;
wire    grp_poly_S3_frombytes_fu_448_ap_idle;
wire    grp_poly_S3_frombytes_fu_448_ap_ready;
wire   [9:0] grp_poly_S3_frombytes_fu_448_r_coeffs_address0;
wire    grp_poly_S3_frombytes_fu_448_r_coeffs_ce0;
wire    grp_poly_S3_frombytes_fu_448_r_coeffs_we0;
wire   [15:0] grp_poly_S3_frombytes_fu_448_r_coeffs_d0;
wire   [9:0] grp_poly_S3_frombytes_fu_448_r_coeffs_address1;
wire    grp_poly_S3_frombytes_fu_448_r_coeffs_ce1;
wire    grp_poly_S3_frombytes_fu_448_r_coeffs_we1;
wire   [15:0] grp_poly_S3_frombytes_fu_448_r_coeffs_d1;
wire   [10:0] grp_poly_S3_frombytes_fu_448_msg_address0;
wire    grp_poly_S3_frombytes_fu_448_msg_ce0;
reg   [9:0] grp_poly_S3_frombytes_fu_448_msg_offset;
wire    grp_poly_Rq_to_S3_fu_459_ap_start;
wire    grp_poly_Rq_to_S3_fu_459_ap_done;
wire    grp_poly_Rq_to_S3_fu_459_ap_idle;
wire    grp_poly_Rq_to_S3_fu_459_ap_ready;
wire   [9:0] grp_poly_Rq_to_S3_fu_459_r_coeffs_address0;
wire    grp_poly_Rq_to_S3_fu_459_r_coeffs_ce0;
wire    grp_poly_Rq_to_S3_fu_459_r_coeffs_we0;
wire   [15:0] grp_poly_Rq_to_S3_fu_459_r_coeffs_d0;
wire   [9:0] grp_poly_Rq_to_S3_fu_459_r_coeffs_address1;
wire    grp_poly_Rq_to_S3_fu_459_r_coeffs_ce1;
wire    grp_poly_Rq_to_S3_fu_459_r_coeffs_we1;
wire   [15:0] grp_poly_Rq_to_S3_fu_459_r_coeffs_d1;
wire   [9:0] grp_poly_Rq_to_S3_fu_459_a_coeffs_address0;
wire    grp_poly_Rq_to_S3_fu_459_a_coeffs_ce0;
wire    grp_poly_Rq_mul_fu_465_ap_start;
wire    grp_poly_Rq_mul_fu_465_ap_idle;
wire   [9:0] grp_poly_Rq_mul_fu_465_r_coeffs_address0;
wire    grp_poly_Rq_mul_fu_465_r_coeffs_ce0;
wire    grp_poly_Rq_mul_fu_465_r_coeffs_we0;
wire   [15:0] grp_poly_Rq_mul_fu_465_r_coeffs_d0;
reg   [15:0] grp_poly_Rq_mul_fu_465_r_coeffs_q0;
wire   [9:0] grp_poly_Rq_mul_fu_465_a_coeffs_address0;
wire    grp_poly_Rq_mul_fu_465_a_coeffs_ce0;
wire   [9:0] grp_poly_Rq_mul_fu_465_b_coeffs_address0;
wire    grp_poly_Rq_mul_fu_465_b_coeffs_ce0;
reg   [15:0] grp_poly_Rq_mul_fu_465_b_coeffs_q0;
wire    grp_poly_Rq_sum_zero_fro_fu_472_ap_start;
wire    grp_poly_Rq_sum_zero_fro_fu_472_ap_done;
wire    grp_poly_Rq_sum_zero_fro_fu_472_ap_idle;
wire    grp_poly_Rq_sum_zero_fro_fu_472_ap_ready;
wire   [9:0] grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_address0;
wire    grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_ce0;
wire    grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_we0;
wire   [15:0] grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_d0;
wire   [9:0] grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_address1;
wire    grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_ce1;
wire    grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_we1;
wire   [15:0] grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_d1;
wire   [10:0] grp_poly_Rq_sum_zero_fro_fu_472_a_address0;
wire    grp_poly_Rq_sum_zero_fro_fu_472_a_ce0;
wire   [10:0] grp_poly_Rq_sum_zero_fro_fu_472_a_address1;
wire    grp_poly_Rq_sum_zero_fro_fu_472_a_ce1;
wire    grp_poly_S3_tobytes_fu_480_ap_start;
wire    grp_poly_S3_tobytes_fu_480_ap_done;
wire    grp_poly_S3_tobytes_fu_480_ap_idle;
wire    grp_poly_S3_tobytes_fu_480_ap_ready;
wire   [8:0] grp_poly_S3_tobytes_fu_480_msg_address0;
wire    grp_poly_S3_tobytes_fu_480_msg_ce0;
wire    grp_poly_S3_tobytes_fu_480_msg_we0;
wire   [7:0] grp_poly_S3_tobytes_fu_480_msg_d0;
reg   [8:0] grp_poly_S3_tobytes_fu_480_msg_offset;
wire   [9:0] grp_poly_S3_tobytes_fu_480_a_coeffs_address0;
wire    grp_poly_S3_tobytes_fu_480_a_coeffs_ce0;
wire   [9:0] grp_poly_S3_tobytes_fu_480_a_coeffs_address1;
wire    grp_poly_S3_tobytes_fu_480_a_coeffs_ce1;
reg   [9:0] i_i_reg_305;
wire    ap_CS_fsm_state2;
reg    ap_block_state2_on_subcall_done;
wire    ap_CS_fsm_state4;
reg   [9:0] p1_i_reg_316;
wire    ap_CS_fsm_state13;
reg   [9:0] i_i6_reg_328;
reg   [9:0] m1_i_reg_339;
reg   [9:0] i_i1_reg_351;
wire    ap_CS_fsm_state17;
reg   [9:0] i_i_i_reg_362;
wire    ap_CS_fsm_state19;
reg   [9:0] i_reg_373;
wire    ap_CS_fsm_state21;
reg   [8:0] i_i2_reg_384;
wire    ap_CS_fsm_state24;
reg   [9:0] i_i3_reg_396;
wire    ap_CS_fsm_state27;
reg   [9:0] i_i4_reg_407;
reg   [63:0] t_i_reg_418;
reg   [9:0] i_i5_reg_430;
wire    ap_CS_fsm_state32;
reg    grp_poly_S3_mul_fu_441_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_poly_S3_frombytes_fu_448_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    grp_poly_Rq_to_S3_fu_459_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    grp_poly_Rq_mul_fu_465_ap_start_reg;
wire    ap_CS_fsm_state5;
reg    grp_poly_Rq_sum_zero_fro_fu_472_ap_start_reg;
reg    grp_poly_S3_tobytes_fu_480_ap_start_reg;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state33;
wire   [63:0] tmp_i_fu_528_p1;
wire   [63:0] tmp_117_i_fu_564_p1;
wire   [63:0] tmp_i_i_fu_720_p1;
wire   [63:0] tmp_s_fu_756_p1;
wire  signed [63:0] sum_i_cast_fu_817_p1;
wire  signed [63:0] sum2_i_cast_fu_828_p1;
wire   [63:0] tmp_5_i_fu_858_p1;
wire  signed [63:0] sum4_i_cast_fu_878_p1;
wire   [63:0] tmp_16_i_fu_900_p1;
wire   [63:0] tmp_i3_fu_917_p1;
wire   [63:0] tmp_106_i_fu_949_p1;
wire   [63:0] tmp_i5_fu_1101_p1;
wire   [15:0] tmp_3_i_fu_543_p3;
wire   [15:0] tmp_3_i_i_fu_735_p3;
wire   [15:0] tmp_4_i1_cast_fu_932_p1;
wire   [15:0] tmp_8_i2_cast_fu_1126_p1;
wire   [15:0] tmp_80_cast_fu_772_p1;
wire   [15:0] tmp_3_i1_fu_845_p1;
wire   [15:0] tmp_14_i1_cast_fu_890_p1;
wire   [11:0] grp_fu_490_p4;
wire   [11:0] tmp_79_fu_533_p1;
wire   [11:0] grp_fu_500_p2;
wire   [3:0] grp_fu_506_p4;
wire   [11:0] tmp_48_fu_537_p2;
wire   [10:0] m1_i_cast_fu_573_p1;
wire   [10:0] p1_i_cast_fu_569_p1;
wire   [10:0] tmp_11_i_fu_583_p2;
wire   [9:0] tmp_50_fu_589_p2;
wire   [9:0] tmp_51_fu_601_p2;
wire   [9:0] tmp_i8_fu_577_p2;
wire   [10:0] tmp_12_i_fu_595_p2;
wire   [0:0] tmp_80_fu_613_p3;
wire   [9:0] tmp_52_fu_607_p2;
wire   [10:0] tmp_13_i_fu_621_p3;
wire   [15:0] tmp_13_i_cast_fu_629_p1;
wire   [31:0] tmp_15_i_fu_633_p3;
wire   [32:0] t_cast_fu_641_p1;
wire   [32:0] tmp_115_i_fu_645_p2;
wire   [0:0] tmp_82_fu_659_p1;
wire   [9:0] tmp_118_i_cast_fu_663_p1;
wire   [0:0] tmp_83_fu_673_p3;
wire   [9:0] tmp_120_i_cast_fu_681_p1;
wire   [11:0] tmp_84_fu_725_p1;
wire   [11:0] tmp_58_fu_729_p2;
wire   [15:0] tmp_73_fu_762_p2;
wire   [11:0] tmp_85_fu_768_p1;
wire   [10:0] p_shl_i_fu_793_p3;
wire   [11:0] p_shl_i_cast_fu_801_p1;
wire   [11:0] i_i2_cast6_fu_777_p1;
wire   [11:0] sum_i_fu_811_p2;
wire   [11:0] sum2_i_fu_822_p2;
wire   [3:0] tmp_86_fu_833_p1;
wire   [11:0] tmp_2_i1_fu_837_p3;
wire   [11:0] sum4_i_fu_873_p2;
wire   [11:0] tmp_14_i1_fu_883_p3;
wire   [9:0] tmp_15_i1_fu_895_p2;
wire   [15:0] tmp_i2_44_fu_922_p2;
wire   [11:0] tmp_87_fu_928_p1;
wire   [11:0] tmp_90_fu_954_p1;
wire   [2:0] tmp_91_fu_958_p1;
wire   [2:0] tmp_65_fu_968_p2;
wire   [2:0] tmp_110_i_fu_974_p2;
wire   [2:0] tmp_66_fu_980_p2;
wire   [11:0] tmp_108_i_cast_fu_962_p2;
wire   [8:0] tmp_68_fu_994_p4;
wire   [0:0] tmp_92_fu_986_p3;
wire   [11:0] tmp_93_fu_1014_p1;
wire   [11:0] tmp_fu_1004_p4;
wire   [51:0] tmp_71_fu_1024_p4;
wire   [11:0] tmp_70_fu_1018_p2;
wire   [15:0] tmp_88_fu_1042_p1;
wire   [47:0] tmp_6_i1_fu_1052_p4;
wire   [15:0] tmp_5_i1_fu_1046_p2;
wire   [63:0] t_fu_1062_p3;
wire   [63:0] tmp_i3_46_fu_1070_p2;
wire   [0:0] tmp_89_fu_1076_p3;
wire   [1:0] tmp_94_fu_1116_p1;
wire   [1:0] tmp_72_fu_1106_p4;
wire   [1:0] tmp_7_i2_cast_fu_1120_p2;
reg   [32:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 33'd1;
#0 grp_poly_S3_mul_fu_441_ap_start_reg = 1'b0;
#0 grp_poly_S3_frombytes_fu_448_ap_start_reg = 1'b0;
#0 grp_poly_Rq_to_S3_fu_459_ap_start_reg = 1'b0;
#0 grp_poly_Rq_mul_fu_465_ap_start_reg = 1'b0;
#0 grp_poly_Rq_sum_zero_fro_fu_472_ap_start_reg = 1'b0;
#0 grp_poly_S3_tobytes_fu_480_ap_start_reg = 1'b0;
end

owcpa_dec_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
x1_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x1_coeffs_address0),
    .ce0(x1_coeffs_ce0),
    .we0(x1_coeffs_we0),
    .d0(x1_coeffs_d0),
    .q0(x1_coeffs_q0),
    .address1(grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_address1),
    .ce1(x1_coeffs_ce1),
    .we1(x1_coeffs_we1),
    .d1(grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_d1),
    .q1(x1_coeffs_q1)
);

owcpa_dec_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
x2_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x2_coeffs_address0),
    .ce0(x2_coeffs_ce0),
    .we0(x2_coeffs_we0),
    .d0(x2_coeffs_d0),
    .q0(x2_coeffs_q0),
    .address1(x2_coeffs_address1),
    .ce1(x2_coeffs_ce1),
    .we1(x2_coeffs_we1),
    .d1(x2_coeffs_d1),
    .q1(x2_coeffs_q1)
);

owcpa_dec_x3_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
x3_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x3_coeffs_address0),
    .ce0(x3_coeffs_ce0),
    .we0(x3_coeffs_we0),
    .d0(x3_coeffs_d0),
    .q0(x3_coeffs_q0),
    .address1(grp_poly_S3_frombytes_fu_448_r_coeffs_address1),
    .ce1(x3_coeffs_ce1),
    .we1(x3_coeffs_we1),
    .d1(grp_poly_S3_frombytes_fu_448_r_coeffs_d1)
);

owcpa_dec_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
x4_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x4_coeffs_address0),
    .ce0(x4_coeffs_ce0),
    .we0(x4_coeffs_we0),
    .d0(x4_coeffs_d0),
    .q0(x4_coeffs_q0),
    .address1(x4_coeffs_address1),
    .ce1(x4_coeffs_ce1),
    .we1(x4_coeffs_we1),
    .d1(x4_coeffs_d1),
    .q1(x4_coeffs_q1)
);

poly_S3_mul grp_poly_S3_mul_fu_441(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_mul_fu_441_ap_start),
    .ap_done(grp_poly_S3_mul_fu_441_ap_done),
    .ap_idle(grp_poly_S3_mul_fu_441_ap_idle),
    .ap_ready(grp_poly_S3_mul_fu_441_ap_ready),
    .r_coeffs_address0(grp_poly_S3_mul_fu_441_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_S3_mul_fu_441_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_S3_mul_fu_441_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_S3_mul_fu_441_r_coeffs_d0),
    .r_coeffs_q0(x4_coeffs_q0),
    .r_coeffs_address1(grp_poly_S3_mul_fu_441_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_S3_mul_fu_441_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_S3_mul_fu_441_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_S3_mul_fu_441_r_coeffs_d1),
    .r_coeffs_q1(x4_coeffs_q1),
    .a_coeffs_address0(grp_poly_S3_mul_fu_441_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_mul_fu_441_a_coeffs_ce0),
    .a_coeffs_q0(x2_coeffs_q0),
    .b_coeffs_address0(grp_poly_S3_mul_fu_441_b_coeffs_address0),
    .b_coeffs_ce0(grp_poly_S3_mul_fu_441_b_coeffs_ce0),
    .b_coeffs_q0(x3_coeffs_q0)
);

poly_S3_frombytes grp_poly_S3_frombytes_fu_448(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_frombytes_fu_448_ap_start),
    .ap_done(grp_poly_S3_frombytes_fu_448_ap_done),
    .ap_idle(grp_poly_S3_frombytes_fu_448_ap_idle),
    .ap_ready(grp_poly_S3_frombytes_fu_448_ap_ready),
    .r_coeffs_address0(grp_poly_S3_frombytes_fu_448_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_S3_frombytes_fu_448_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_S3_frombytes_fu_448_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_S3_frombytes_fu_448_r_coeffs_d0),
    .r_coeffs_address1(grp_poly_S3_frombytes_fu_448_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_S3_frombytes_fu_448_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_S3_frombytes_fu_448_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_S3_frombytes_fu_448_r_coeffs_d1),
    .msg_address0(grp_poly_S3_frombytes_fu_448_msg_address0),
    .msg_ce0(grp_poly_S3_frombytes_fu_448_msg_ce0),
    .msg_q0(secretkey_q0),
    .msg_offset(grp_poly_S3_frombytes_fu_448_msg_offset)
);

poly_Rq_to_S3 grp_poly_Rq_to_S3_fu_459(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Rq_to_S3_fu_459_ap_start),
    .ap_done(grp_poly_Rq_to_S3_fu_459_ap_done),
    .ap_idle(grp_poly_Rq_to_S3_fu_459_ap_idle),
    .ap_ready(grp_poly_Rq_to_S3_fu_459_ap_ready),
    .r_coeffs_address0(grp_poly_Rq_to_S3_fu_459_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Rq_to_S3_fu_459_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Rq_to_S3_fu_459_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Rq_to_S3_fu_459_r_coeffs_d0),
    .r_coeffs_q0(x2_coeffs_q0),
    .r_coeffs_address1(grp_poly_Rq_to_S3_fu_459_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_Rq_to_S3_fu_459_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_Rq_to_S3_fu_459_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_Rq_to_S3_fu_459_r_coeffs_d1),
    .r_coeffs_q1(x2_coeffs_q1),
    .a_coeffs_address0(grp_poly_Rq_to_S3_fu_459_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Rq_to_S3_fu_459_a_coeffs_ce0),
    .a_coeffs_q0(x3_coeffs_q0)
);

poly_Rq_mul grp_poly_Rq_mul_fu_465(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Rq_mul_fu_465_ap_start),
    .ap_done(grp_poly_Rq_mul_fu_465_ap_done),
    .ap_idle(grp_poly_Rq_mul_fu_465_ap_idle),
    .ap_ready(grp_poly_Rq_mul_fu_465_ap_ready),
    .r_coeffs_address0(grp_poly_Rq_mul_fu_465_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Rq_mul_fu_465_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Rq_mul_fu_465_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Rq_mul_fu_465_r_coeffs_d0),
    .r_coeffs_q0(grp_poly_Rq_mul_fu_465_r_coeffs_q0),
    .a_coeffs_address0(grp_poly_Rq_mul_fu_465_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Rq_mul_fu_465_a_coeffs_ce0),
    .a_coeffs_q0(x1_coeffs_q0),
    .b_coeffs_address0(grp_poly_Rq_mul_fu_465_b_coeffs_address0),
    .b_coeffs_ce0(grp_poly_Rq_mul_fu_465_b_coeffs_ce0),
    .b_coeffs_q0(grp_poly_Rq_mul_fu_465_b_coeffs_q0)
);

poly_Rq_sum_zero_fro grp_poly_Rq_sum_zero_fro_fu_472(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Rq_sum_zero_fro_fu_472_ap_start),
    .ap_done(grp_poly_Rq_sum_zero_fro_fu_472_ap_done),
    .ap_idle(grp_poly_Rq_sum_zero_fro_fu_472_ap_idle),
    .ap_ready(grp_poly_Rq_sum_zero_fro_fu_472_ap_ready),
    .r_coeffs_address0(grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_d0),
    .r_coeffs_q0(x1_coeffs_q0),
    .r_coeffs_address1(grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_d1),
    .r_coeffs_q1(x1_coeffs_q1),
    .a_address0(grp_poly_Rq_sum_zero_fro_fu_472_a_address0),
    .a_ce0(grp_poly_Rq_sum_zero_fro_fu_472_a_ce0),
    .a_q0(ciphertext_q0),
    .a_address1(grp_poly_Rq_sum_zero_fro_fu_472_a_address1),
    .a_ce1(grp_poly_Rq_sum_zero_fro_fu_472_a_ce1),
    .a_q1(ciphertext_q1)
);

poly_S3_tobytes grp_poly_S3_tobytes_fu_480(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_tobytes_fu_480_ap_start),
    .ap_done(grp_poly_S3_tobytes_fu_480_ap_done),
    .ap_idle(grp_poly_S3_tobytes_fu_480_ap_idle),
    .ap_ready(grp_poly_S3_tobytes_fu_480_ap_ready),
    .msg_address0(grp_poly_S3_tobytes_fu_480_msg_address0),
    .msg_ce0(grp_poly_S3_tobytes_fu_480_msg_ce0),
    .msg_we0(grp_poly_S3_tobytes_fu_480_msg_we0),
    .msg_d0(grp_poly_S3_tobytes_fu_480_msg_d0),
    .msg_offset(grp_poly_S3_tobytes_fu_480_msg_offset),
    .a_coeffs_address0(grp_poly_S3_tobytes_fu_480_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_tobytes_fu_480_a_coeffs_ce0),
    .a_coeffs_q0(x4_coeffs_q0),
    .a_coeffs_address1(grp_poly_S3_tobytes_fu_480_a_coeffs_address1),
    .a_coeffs_ce1(grp_poly_S3_tobytes_fu_480_a_coeffs_ce1),
    .a_coeffs_q1(x4_coeffs_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Rq_mul_fu_465_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond_i_fu_516_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state22) & (exitcond_i2_fu_781_p2 == 1'd1)))) begin
            grp_poly_Rq_mul_fu_465_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Rq_mul_fu_465_ap_ready == 1'b1)) begin
            grp_poly_Rq_mul_fu_465_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Rq_sum_zero_fro_fu_472_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_poly_Rq_sum_zero_fro_fu_472_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Rq_sum_zero_fro_fu_472_ap_ready == 1'b1)) begin
            grp_poly_Rq_sum_zero_fro_fu_472_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Rq_to_S3_fu_459_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_poly_Rq_to_S3_fu_459_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Rq_to_S3_fu_459_ap_ready == 1'b1)) begin
            grp_poly_Rq_to_S3_fu_459_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_frombytes_fu_448_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_poly_S3_frombytes_fu_448_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_frombytes_fu_448_ap_ready == 1'b1)) begin
            grp_poly_S3_frombytes_fu_448_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_mul_fu_441_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_poly_S3_mul_fu_441_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_mul_fu_441_ap_ready == 1'b1)) begin
            grp_poly_S3_mul_fu_441_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_tobytes_fu_480_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state31) & (exitcond_i5_fu_1089_p2 == 1'd1)))) begin
            grp_poly_S3_tobytes_fu_480_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_tobytes_fu_480_ap_ready == 1'b1)) begin
            grp_poly_S3_tobytes_fu_480_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_i1_reg_351 <= i_16_reg_1175;
    end else if (((1'b1 == ap_CS_fsm_state14) & (exitcond_i7_fu_552_p2 == 1'd1))) begin
        i_i1_reg_351 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (exitcond_fu_744_p2 == 1'd1))) begin
        i_i2_reg_384 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        i_i2_reg_384 <= i_19_reg_1224;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        i_i3_reg_396 <= i_20_reg_1267;
    end else if (((1'b1 == ap_CS_fsm_state25) & (grp_poly_Rq_mul_fu_465_ap_done == 1'b1))) begin
        i_i3_reg_396 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond_i3_fu_905_p2 == 1'd1))) begin
        i_i4_reg_407 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        i_i4_reg_407 <= i_21_reg_1281;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        i_i5_reg_430 <= i_22_reg_1303;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        i_i5_reg_430 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_i6_reg_328 <= i_15_reg_1147;
    end else if (((grp_poly_S3_tobytes_fu_480_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_i6_reg_328 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (exitcond_i1_fu_691_p2 == 1'd1))) begin
        i_i_i_reg_362 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        i_i_i_reg_362 <= i_17_reg_1193;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_i_reg_305 <= i_14_reg_1134;
    end else if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        i_i_reg_305 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond_i_i_fu_708_p2 == 1'd1))) begin
        i_reg_373 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        i_reg_373 <= i_18_reg_1206;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        m1_i_reg_339 <= m1_fu_685_p2;
    end else if (((grp_poly_S3_tobytes_fu_480_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        m1_i_reg_339 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        p1_i_reg_316 <= p1_fu_667_p2;
    end else if (((grp_poly_S3_tobytes_fu_480_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        p1_i_reg_316 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond_i3_fu_905_p2 == 1'd1))) begin
        t_i_reg_418 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        t_i_reg_418 <= t_2_fu_1034_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_744_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        b_coeffs_addr_reg_1211 <= tmp_s_fu_756_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        fail_reg_1296 <= fail_fu_1084_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_14_reg_1134 <= i_14_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_15_reg_1147 <= i_15_fu_558_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_16_reg_1175 <= i_16_fu_697_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_17_reg_1193 <= i_17_fu_714_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_18_reg_1206 <= i_18_fu_750_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_19_reg_1224 <= i_19_fu_787_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_20_reg_1267 <= i_20_fu_911_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        i_21_reg_1281 <= i_21_fu_943_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_22_reg_1303 <= i_22_fu_1095_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_i_fu_708_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        liftm_coeffs_addr_2_reg_1198 <= tmp_i_i_fu_720_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_516_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        liftm_coeffs_addr_reg_1139 <= tmp_i_fu_528_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i3_fu_905_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        r_coeffs_addr_15_reg_1272 <= tmp_i3_fu_917_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i5_fu_1089_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        r_coeffs_addr_17_reg_1308 <= tmp_i5_fu_1101_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_4_i_reg_1244[9 : 1] <= tmp_4_i_fu_850_p3[9 : 1];
        tmp_9_i_reg_1249 <= {{secretkey_q1[7:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (exitcond_i7_fu_552_p2 == 1'd1))) begin
        tmp_81_reg_1157 <= tmp_115_i_fu_645_p2[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i1_fu_691_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        tmp_i1_reg_1180[9 : 0] <= tmp_i1_fu_703_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i2_fu_781_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        tmp_i2_reg_1229 <= tmp_i2_fu_805_p2;
    end
end

always @ (*) begin
    if ((((grp_poly_S3_tobytes_fu_480_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_poly_S3_tobytes_fu_480_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_poly_Rq_mul_fu_465_b_coeffs_q0 = x3_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_poly_Rq_mul_fu_465_b_coeffs_q0 = x2_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_465_b_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_poly_Rq_mul_fu_465_r_coeffs_q0 = x4_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_poly_Rq_mul_fu_465_r_coeffs_q0 = x3_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_465_r_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_poly_S3_frombytes_fu_448_msg_offset = 10'd164;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_poly_S3_frombytes_fu_448_msg_offset = 10'd0;
    end else begin
        grp_poly_S3_frombytes_fu_448_msg_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_poly_S3_tobytes_fu_480_msg_offset = 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_poly_S3_tobytes_fu_480_msg_offset = 9'd164;
    end else begin
        grp_poly_S3_tobytes_fu_480_msg_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state13))) begin
        rm_ce0 = grp_poly_S3_tobytes_fu_480_msg_ce0;
    end else begin
        rm_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state13))) begin
        rm_we0 = grp_poly_S3_tobytes_fu_480_msg_we0;
    end else begin
        rm_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        secretkey_address0 = sum4_i_cast_fu_878_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        secretkey_address0 = sum_i_cast_fu_817_p1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state2))) begin
        secretkey_address0 = grp_poly_S3_frombytes_fu_448_msg_address0;
    end else begin
        secretkey_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        secretkey_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state2))) begin
        secretkey_ce0 = grp_poly_S3_frombytes_fu_448_msg_ce0;
    end else begin
        secretkey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        secretkey_ce1 = 1'b1;
    end else begin
        secretkey_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        x1_coeffs_address0 = b_coeffs_addr_reg_1211;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        x1_coeffs_address0 = tmp_s_fu_756_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_address0 = grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state25))) begin
        x1_coeffs_address0 = grp_poly_Rq_mul_fu_465_a_coeffs_address0;
    end else begin
        x1_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        x1_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_ce0 = grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state25))) begin
        x1_coeffs_ce0 = grp_poly_Rq_mul_fu_465_a_coeffs_ce0;
    end else begin
        x1_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_ce1 = grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_ce1;
    end else begin
        x1_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        x1_coeffs_d0 = tmp_80_cast_fu_772_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_d0 = grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_d0;
    end else begin
        x1_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        x1_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_we0 = grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_we0;
    end else begin
        x1_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_we1 = grp_poly_Rq_sum_zero_fro_fu_472_r_coeffs_we1;
    end else begin
        x1_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        x2_coeffs_address0 = tmp_s_fu_756_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x2_coeffs_address0 = liftm_coeffs_addr_2_reg_1198;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        x2_coeffs_address0 = tmp_i_i_fu_720_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        x2_coeffs_address0 = tmp_i1_reg_1180;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x2_coeffs_address0 = liftm_coeffs_addr_reg_1139;
    end else if (((exitcond_i_fu_516_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        x2_coeffs_address0 = tmp_i_fu_528_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        x2_coeffs_address0 = grp_poly_Rq_mul_fu_465_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        x2_coeffs_address0 = grp_poly_Rq_to_S3_fu_459_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x2_coeffs_address0 = grp_poly_S3_frombytes_fu_448_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_address0 = grp_poly_S3_mul_fu_441_a_coeffs_address0;
    end else begin
        x2_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        x2_coeffs_address1 = grp_poly_Rq_to_S3_fu_459_r_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x2_coeffs_address1 = grp_poly_S3_frombytes_fu_448_r_coeffs_address1;
    end else begin
        x2_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | ((exitcond_i_fu_516_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        x2_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        x2_coeffs_ce0 = grp_poly_Rq_mul_fu_465_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        x2_coeffs_ce0 = grp_poly_Rq_to_S3_fu_459_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x2_coeffs_ce0 = grp_poly_S3_frombytes_fu_448_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_ce0 = grp_poly_S3_mul_fu_441_a_coeffs_ce0;
    end else begin
        x2_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        x2_coeffs_ce1 = grp_poly_Rq_to_S3_fu_459_r_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x2_coeffs_ce1 = grp_poly_S3_frombytes_fu_448_r_coeffs_ce1;
    end else begin
        x2_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        x2_coeffs_d0 = tmp_3_i_i_fu_735_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        x2_coeffs_d0 = x4_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x2_coeffs_d0 = tmp_3_i_fu_543_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        x2_coeffs_d0 = grp_poly_Rq_to_S3_fu_459_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x2_coeffs_d0 = grp_poly_S3_frombytes_fu_448_r_coeffs_d0;
    end else begin
        x2_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        x2_coeffs_d1 = grp_poly_Rq_to_S3_fu_459_r_coeffs_d1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x2_coeffs_d1 = grp_poly_S3_frombytes_fu_448_r_coeffs_d1;
    end else begin
        x2_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state4))) begin
        x2_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        x2_coeffs_we0 = grp_poly_Rq_to_S3_fu_459_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x2_coeffs_we0 = grp_poly_S3_frombytes_fu_448_r_coeffs_we0;
    end else begin
        x2_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        x2_coeffs_we1 = grp_poly_Rq_to_S3_fu_459_r_coeffs_we1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x2_coeffs_we1 = grp_poly_S3_frombytes_fu_448_r_coeffs_we1;
    end else begin
        x2_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        x3_coeffs_address0 = tmp_16_i_fu_900_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        x3_coeffs_address0 = tmp_5_i_fu_858_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        x3_coeffs_address0 = grp_poly_Rq_mul_fu_465_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        x3_coeffs_address0 = grp_poly_Rq_mul_fu_465_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        x3_coeffs_address0 = grp_poly_Rq_to_S3_fu_459_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_address0 = grp_poly_S3_frombytes_fu_448_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x3_coeffs_address0 = grp_poly_S3_mul_fu_441_b_coeffs_address0;
    end else begin
        x3_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23))) begin
        x3_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        x3_coeffs_ce0 = grp_poly_Rq_mul_fu_465_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        x3_coeffs_ce0 = grp_poly_Rq_mul_fu_465_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        x3_coeffs_ce0 = grp_poly_Rq_to_S3_fu_459_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_ce0 = grp_poly_S3_frombytes_fu_448_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x3_coeffs_ce0 = grp_poly_S3_mul_fu_441_b_coeffs_ce0;
    end else begin
        x3_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_ce1 = grp_poly_S3_frombytes_fu_448_r_coeffs_ce1;
    end else begin
        x3_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        x3_coeffs_d0 = tmp_14_i1_cast_fu_890_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        x3_coeffs_d0 = tmp_3_i1_fu_845_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        x3_coeffs_d0 = grp_poly_Rq_mul_fu_465_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_d0 = grp_poly_S3_frombytes_fu_448_r_coeffs_d0;
    end else begin
        x3_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23))) begin
        x3_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        x3_coeffs_we0 = grp_poly_Rq_mul_fu_465_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_we0 = grp_poly_S3_frombytes_fu_448_r_coeffs_we0;
    end else begin
        x3_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_we1 = grp_poly_S3_frombytes_fu_448_r_coeffs_we1;
    end else begin
        x3_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        x4_coeffs_address0 = r_coeffs_addr_17_reg_1308;
    end else if (((exitcond_i5_fu_1089_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        x4_coeffs_address0 = tmp_i5_fu_1101_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x4_coeffs_address0 = tmp_i3_fu_917_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        x4_coeffs_address0 = tmp_i1_fu_703_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        x4_coeffs_address0 = tmp_117_i_fu_564_p1;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state13))) begin
        x4_coeffs_address0 = grp_poly_S3_tobytes_fu_480_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_465_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x4_coeffs_address0 = grp_poly_S3_mul_fu_441_r_coeffs_address0;
    end else begin
        x4_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_i4_fu_937_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        x4_coeffs_address1 = tmp_106_i_fu_949_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        x4_coeffs_address1 = r_coeffs_addr_15_reg_1272;
    end else if (((1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state28) & (exitcond_i4_fu_937_p2 == 1'd1)))) begin
        x4_coeffs_address1 = 64'd820;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state13))) begin
        x4_coeffs_address1 = grp_poly_S3_tobytes_fu_480_a_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x4_coeffs_address1 = grp_poly_S3_mul_fu_441_r_coeffs_address1;
    end else begin
        x4_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16) | ((exitcond_i5_fu_1089_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)))) begin
        x4_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state13))) begin
        x4_coeffs_ce0 = grp_poly_S3_tobytes_fu_480_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_465_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x4_coeffs_ce0 = grp_poly_S3_mul_fu_441_r_coeffs_ce0;
    end else begin
        x4_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | ((1'b1 == ap_CS_fsm_state28) & (exitcond_i4_fu_937_p2 == 1'd1)) | ((exitcond_i4_fu_937_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28)))) begin
        x4_coeffs_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state13))) begin
        x4_coeffs_ce1 = grp_poly_S3_tobytes_fu_480_a_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x4_coeffs_ce1 = grp_poly_S3_mul_fu_441_r_coeffs_ce1;
    end else begin
        x4_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        x4_coeffs_d0 = tmp_8_i2_cast_fu_1126_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        x4_coeffs_d0 = grp_poly_Rq_mul_fu_465_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x4_coeffs_d0 = grp_poly_S3_mul_fu_441_r_coeffs_d0;
    end else begin
        x4_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        x4_coeffs_d1 = tmp_4_i1_cast_fu_932_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x4_coeffs_d1 = grp_poly_S3_mul_fu_441_r_coeffs_d1;
    end else begin
        x4_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        x4_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        x4_coeffs_we0 = grp_poly_Rq_mul_fu_465_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x4_coeffs_we0 = grp_poly_S3_mul_fu_441_r_coeffs_we0;
    end else begin
        x4_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        x4_coeffs_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x4_coeffs_we1 = grp_poly_S3_mul_fu_441_r_coeffs_we1;
    end else begin
        x4_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond_i_fu_516_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_poly_Rq_mul_fu_465_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_poly_Rq_to_S3_fu_459_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_poly_S3_frombytes_fu_448_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_poly_S3_mul_fu_441_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_poly_S3_tobytes_fu_480_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (exitcond_i7_fu_552_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (exitcond_i1_fu_691_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (exitcond_i_i_fu_708_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (exitcond_fu_744_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i2_fu_781_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (grp_poly_Rq_mul_fu_465_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (exitcond_i3_fu_905_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (exitcond_i4_fu_937_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (exitcond_i5_fu_1089_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state33 : begin
            if (((grp_poly_S3_tobytes_fu_480_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_poly_Rq_sum_zero_fro_fu_472_ap_done == 1'b0) | (grp_poly_S3_frombytes_fu_448_ap_done == 1'b0));
end

assign ap_return = fail_reg_1296;

assign ciphertext_address0 = grp_poly_Rq_sum_zero_fro_fu_472_a_address0;

assign ciphertext_address1 = grp_poly_Rq_sum_zero_fro_fu_472_a_address1;

assign ciphertext_ce0 = grp_poly_Rq_sum_zero_fro_fu_472_a_ce0;

assign ciphertext_ce1 = grp_poly_Rq_sum_zero_fro_fu_472_a_ce1;

assign exitcond_fu_744_p2 = ((i_reg_373 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_691_p2 = ((i_i1_reg_351 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_781_p2 = ((i_i2_reg_384 == 9'd410) ? 1'b1 : 1'b0);

assign exitcond_i3_fu_905_p2 = ((i_i3_reg_396 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_i4_fu_937_p2 = ((i_i4_reg_407 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_i5_fu_1089_p2 = ((i_i5_reg_430 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_i7_fu_552_p2 = ((i_i6_reg_328 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_i_fu_516_p2 = ((i_i_reg_305 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_708_p2 = ((i_i_i_reg_362 == 10'd821) ? 1'b1 : 1'b0);

assign fail_fu_1084_p2 = (tmp_89_fu_1076_p3 | tmp_81_reg_1157);

assign grp_fu_490_p4 = {{x2_coeffs_q0[12:1]}};

assign grp_fu_500_p2 = (12'd0 - grp_fu_490_p4);

assign grp_fu_506_p4 = {{x2_coeffs_q0[15:12]}};

assign grp_poly_Rq_mul_fu_465_ap_start = grp_poly_Rq_mul_fu_465_ap_start_reg;

assign grp_poly_Rq_sum_zero_fro_fu_472_ap_start = grp_poly_Rq_sum_zero_fro_fu_472_ap_start_reg;

assign grp_poly_Rq_to_S3_fu_459_ap_start = grp_poly_Rq_to_S3_fu_459_ap_start_reg;

assign grp_poly_S3_frombytes_fu_448_ap_start = grp_poly_S3_frombytes_fu_448_ap_start_reg;

assign grp_poly_S3_mul_fu_441_ap_start = grp_poly_S3_mul_fu_441_ap_start_reg;

assign grp_poly_S3_tobytes_fu_480_ap_start = grp_poly_S3_tobytes_fu_480_ap_start_reg;

assign i_14_fu_522_p2 = (i_i_reg_305 + 10'd1);

assign i_15_fu_558_p2 = (i_i6_reg_328 + 10'd1);

assign i_16_fu_697_p2 = (i_i1_reg_351 + 10'd1);

assign i_17_fu_714_p2 = (i_i_i_reg_362 + 10'd1);

assign i_18_fu_750_p2 = (i_reg_373 + 10'd1);

assign i_19_fu_787_p2 = (i_i2_reg_384 + 9'd1);

assign i_20_fu_911_p2 = (i_i3_reg_396 + 10'd1);

assign i_21_fu_943_p2 = (i_i4_reg_407 + 10'd1);

assign i_22_fu_1095_p2 = (i_i5_reg_430 + 10'd1);

assign i_i2_cast6_fu_777_p1 = i_i2_reg_384;

assign m1_fu_685_p2 = (tmp_120_i_cast_fu_681_p1 + m1_i_reg_339);

assign m1_i_cast_fu_573_p1 = m1_i_reg_339;

assign p1_fu_667_p2 = (tmp_118_i_cast_fu_663_p1 + p1_i_reg_316);

assign p1_i_cast_fu_569_p1 = p1_i_reg_316;

assign p_shl_i_cast_fu_801_p1 = p_shl_i_fu_793_p3;

assign p_shl_i_fu_793_p3 = {{i_i2_reg_384}, {2'd0}};

assign rm_address0 = grp_poly_S3_tobytes_fu_480_msg_address0;

assign rm_d0 = grp_poly_S3_tobytes_fu_480_msg_d0;

assign secretkey_address1 = sum2_i_cast_fu_828_p1;

assign sum2_i_cast_fu_828_p1 = $signed(sum2_i_fu_822_p2);

assign sum2_i_fu_822_p2 = (12'd329 + tmp_i2_fu_805_p2);

assign sum4_i_cast_fu_878_p1 = $signed(sum4_i_fu_873_p2);

assign sum4_i_fu_873_p2 = (12'd330 + tmp_i2_reg_1229);

assign sum_i_cast_fu_817_p1 = $signed(sum_i_fu_811_p2);

assign sum_i_fu_811_p2 = (12'd328 + tmp_i2_fu_805_p2);

assign t_2_fu_1034_p3 = {{tmp_71_fu_1024_p4}, {tmp_70_fu_1018_p2}};

assign t_cast_fu_641_p1 = tmp_15_i_fu_633_p3;

assign t_fu_1062_p3 = {{tmp_6_i1_fu_1052_p4}, {tmp_5_i1_fu_1046_p2}};

assign tmp_106_i_fu_949_p1 = i_i4_reg_407;

assign tmp_108_i_cast_fu_962_p2 = (12'd1 + tmp_90_fu_954_p1);

assign tmp_110_i_fu_974_p2 = (3'd2 + tmp_91_fu_958_p1);

assign tmp_115_i_fu_645_p2 = (33'd0 - t_cast_fu_641_p1);

assign tmp_117_i_fu_564_p1 = i_i6_reg_328;

assign tmp_118_i_cast_fu_663_p1 = tmp_82_fu_659_p1;

assign tmp_11_i_fu_583_p2 = (m1_i_cast_fu_573_p1 + p1_i_cast_fu_569_p1);

assign tmp_120_i_cast_fu_681_p1 = tmp_83_fu_673_p3;

assign tmp_12_i_fu_595_p2 = (tmp_11_i_fu_583_p2 ^ 11'd510);

assign tmp_13_i_cast_fu_629_p1 = tmp_13_i_fu_621_p3;

assign tmp_13_i_fu_621_p3 = {{tmp_80_fu_613_p3}, {tmp_52_fu_607_p2}};

assign tmp_14_i1_cast_fu_890_p1 = tmp_14_i1_fu_883_p3;

assign tmp_14_i1_fu_883_p3 = {{secretkey_q0}, {tmp_9_i_reg_1249}};

assign tmp_15_i1_fu_895_p2 = (tmp_4_i_reg_1244 | 10'd1);

assign tmp_15_i_fu_633_p3 = {{16'd0}, {tmp_13_i_cast_fu_629_p1}};

assign tmp_16_i_fu_900_p1 = tmp_15_i1_fu_895_p2;

assign tmp_2_i1_fu_837_p3 = {{tmp_86_fu_833_p1}, {secretkey_q0}};

assign tmp_3_i1_fu_845_p1 = tmp_2_i1_fu_837_p3;

assign tmp_3_i_fu_543_p3 = {{grp_fu_506_p4}, {tmp_48_fu_537_p2}};

assign tmp_3_i_i_fu_735_p3 = {{grp_fu_506_p4}, {tmp_58_fu_729_p2}};

assign tmp_48_fu_537_p2 = (tmp_79_fu_533_p1 | grp_fu_500_p2);

assign tmp_4_i1_cast_fu_932_p1 = tmp_87_fu_928_p1;

assign tmp_4_i_fu_850_p3 = {{i_i2_reg_384}, {1'd0}};

assign tmp_50_fu_589_p2 = (p1_i_reg_316 + m1_i_reg_339);

assign tmp_51_fu_601_p2 = (tmp_50_fu_589_p2 ^ 10'd510);

assign tmp_52_fu_607_p2 = (tmp_i8_fu_577_p2 | tmp_51_fu_601_p2);

assign tmp_58_fu_729_p2 = (tmp_84_fu_725_p1 | grp_fu_500_p2);

assign tmp_5_i1_fu_1046_p2 = (x4_coeffs_q1 | tmp_88_fu_1042_p1);

assign tmp_5_i_fu_858_p1 = tmp_4_i_fu_850_p3;

assign tmp_65_fu_968_p2 = (3'd1 + tmp_91_fu_958_p1);

assign tmp_66_fu_980_p2 = (tmp_65_fu_968_p2 | tmp_110_i_fu_974_p2);

assign tmp_68_fu_994_p4 = {{tmp_108_i_cast_fu_962_p2[11:3]}};

assign tmp_6_i1_fu_1052_p4 = {{t_i_reg_418[63:16]}};

assign tmp_70_fu_1018_p2 = (tmp_fu_1004_p4 | tmp_93_fu_1014_p1);

assign tmp_71_fu_1024_p4 = {{t_i_reg_418[63:12]}};

assign tmp_72_fu_1106_p4 = {{x4_coeffs_q0[12:11]}};

assign tmp_73_fu_762_p2 = (x1_coeffs_q0 - x2_coeffs_q0);

assign tmp_79_fu_533_p1 = x2_coeffs_q0[11:0];

assign tmp_7_i2_cast_fu_1120_p2 = (tmp_94_fu_1116_p1 ^ tmp_72_fu_1106_p4);

assign tmp_80_cast_fu_772_p1 = tmp_85_fu_768_p1;

assign tmp_80_fu_613_p3 = tmp_12_i_fu_595_p2[32'd10];

assign tmp_82_fu_659_p1 = x4_coeffs_q0[0:0];

assign tmp_83_fu_673_p3 = x4_coeffs_q0[32'd1];

assign tmp_84_fu_725_p1 = x2_coeffs_q0[11:0];

assign tmp_85_fu_768_p1 = tmp_73_fu_762_p2[11:0];

assign tmp_86_fu_833_p1 = secretkey_q1[3:0];

assign tmp_87_fu_928_p1 = tmp_i2_44_fu_922_p2[11:0];

assign tmp_88_fu_1042_p1 = t_i_reg_418[15:0];

assign tmp_89_fu_1076_p3 = tmp_i3_46_fu_1070_p2[32'd63];

assign tmp_8_i2_cast_fu_1126_p1 = tmp_7_i2_cast_fu_1120_p2;

assign tmp_90_fu_954_p1 = x4_coeffs_q1[11:0];

assign tmp_91_fu_958_p1 = x4_coeffs_q1[2:0];

assign tmp_92_fu_986_p3 = tmp_66_fu_980_p2[32'd2];

assign tmp_93_fu_1014_p1 = t_i_reg_418[11:0];

assign tmp_94_fu_1116_p1 = x4_coeffs_q0[1:0];

assign tmp_fu_1004_p4 = {{{tmp_68_fu_994_p4}, {tmp_92_fu_986_p3}}, {2'd0}};

assign tmp_i1_fu_703_p1 = i_i1_reg_351;

assign tmp_i2_44_fu_922_p2 = (x4_coeffs_q0 - x4_coeffs_q1);

assign tmp_i2_fu_805_p2 = (p_shl_i_cast_fu_801_p1 - i_i2_cast6_fu_777_p1);

assign tmp_i3_46_fu_1070_p2 = (64'd0 - t_fu_1062_p3);

assign tmp_i3_fu_917_p1 = i_i3_reg_396;

assign tmp_i5_fu_1101_p1 = i_i5_reg_430;

assign tmp_i8_fu_577_p2 = (p1_i_reg_316 ^ m1_i_reg_339);

assign tmp_i_fu_528_p1 = i_i_reg_305;

assign tmp_i_i_fu_720_p1 = i_i_i_reg_362;

assign tmp_s_fu_756_p1 = i_reg_373;

always @ (posedge ap_clk) begin
    tmp_i1_reg_1180[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_4_i_reg_1244[0] <= 1'b0;
end

endmodule //owcpa_dec
