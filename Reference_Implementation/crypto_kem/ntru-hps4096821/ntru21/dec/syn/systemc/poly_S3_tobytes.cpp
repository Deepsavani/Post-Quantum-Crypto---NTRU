// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "poly_S3_tobytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic poly_S3_tobytes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic poly_S3_tobytes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state1 = "1";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state2 = "10";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state3 = "100";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state4 = "1000";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state5 = "10000";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state6 = "100000";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_1 = "1";
const sc_lv<1> poly_S3_tobytes::ap_const_lv1_0 = "0";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_2 = "10";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_3 = "11";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_4 = "100";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_0 = "00000000";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_5 = "101";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_A4 = "10100100";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_1 = "1";
const sc_lv<2> poly_S3_tobytes::ap_const_lv2_0 = "00";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_4 = "100";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_3 = "11";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_2 = "10";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_2 = "10";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_1 = "1";
const sc_lv<1> poly_S3_tobytes::ap_const_lv1_1 = "1";
const bool poly_S3_tobytes::ap_const_boolean_1 = true;

poly_S3_tobytes::poly_S3_tobytes(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_coeffs_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_151_p1 );
    sensitive << ( tmp_8_fu_213_p1 );
    sensitive << ( tmp_14_fu_248_p1 );

    SC_METHOD(thread_a_coeffs_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_4_fu_162_p1 );
    sensitive << ( tmp_11_fu_243_p1 );

    SC_METHOD(thread_a_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_a_coeffs_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_119_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_119_p2 );

    SC_METHOD(thread_c_1_fu_202_p2);
    sensitive << ( tmp_2_fu_192_p2 );
    sensitive << ( tmp_13_fu_198_p1 );

    SC_METHOD(thread_c_2_fu_232_p2);
    sensitive << ( tmp_17_fu_228_p1 );
    sensitive << ( tmp_6_fu_223_p2 );

    SC_METHOD(thread_c_3_fu_266_p2);
    sensitive << ( tmp_19_fu_262_p1 );
    sensitive << ( tmp_5_fu_257_p2 );

    SC_METHOD(thread_c_fu_176_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_exitcond_fu_119_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_i_4_fu_125_p2);
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_i_cast1_fu_115_p1);
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_msg_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sum_cast_fu_292_p1 );

    SC_METHOD(thread_msg_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_msg_d0);
    sensitive << ( tmp_21_reg_364 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_fu_281_p2 );

    SC_METHOD(thread_msg_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_p_shl4_fu_184_p3);
    sensitive << ( tmp_9_fu_180_p1 );

    SC_METHOD(thread_p_shl5_fu_131_p3);
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_sum_cast_fu_292_p1);
    sensitive << ( sum_reg_326 );

    SC_METHOD(thread_sum_fu_171_p2);
    sensitive << ( msg_offset );
    sensitive << ( tmp_17_cast_fu_167_p1 );

    SC_METHOD(thread_tmp_10_fu_238_p2);
    sensitive << ( tmp_reg_309 );

    SC_METHOD(thread_tmp_11_fu_243_p1);
    sensitive << ( tmp_10_fu_238_p2 );

    SC_METHOD(thread_tmp_12_fu_281_p2);
    sensitive << ( c_3_reg_358 );
    sensitive << ( tmp_20_fu_276_p2 );

    SC_METHOD(thread_tmp_13_fu_198_p1);
    sensitive << ( a_coeffs_q1 );

    SC_METHOD(thread_tmp_14_fu_248_p1);
    sensitive << ( tmp_reg_309 );

    SC_METHOD(thread_tmp_16_fu_218_p2);
    sensitive << ( c_1_reg_331 );

    SC_METHOD(thread_tmp_17_cast_fu_167_p1);
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_tmp_17_fu_228_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_tmp_18_fu_252_p2);
    sensitive << ( c_2_reg_342 );

    SC_METHOD(thread_tmp_19_fu_262_p1);
    sensitive << ( a_coeffs_q1 );

    SC_METHOD(thread_tmp_1_fu_151_p1);
    sensitive << ( tmp_s_fu_145_p2 );

    SC_METHOD(thread_tmp_20_fu_276_p2);
    sensitive << ( c_3_reg_358 );

    SC_METHOD(thread_tmp_21_fu_272_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_tmp_2_fu_192_p2);
    sensitive << ( p_shl4_fu_184_p3 );
    sensitive << ( c_fu_176_p1 );

    SC_METHOD(thread_tmp_3_fu_156_p2);
    sensitive << ( tmp_fu_139_p2 );

    SC_METHOD(thread_tmp_4_fu_162_p1);
    sensitive << ( tmp_3_fu_156_p2 );

    SC_METHOD(thread_tmp_5_fu_257_p2);
    sensitive << ( c_2_reg_342 );
    sensitive << ( tmp_18_fu_252_p2 );

    SC_METHOD(thread_tmp_6_fu_223_p2);
    sensitive << ( c_1_reg_331 );
    sensitive << ( tmp_16_fu_218_p2 );

    SC_METHOD(thread_tmp_7_fu_208_p2);
    sensitive << ( tmp_reg_309 );

    SC_METHOD(thread_tmp_8_fu_213_p1);
    sensitive << ( tmp_7_fu_208_p2 );

    SC_METHOD(thread_tmp_9_fu_180_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_tmp_fu_139_p2);
    sensitive << ( p_shl5_fu_131_p3 );
    sensitive << ( i_cast1_fu_115_p1 );

    SC_METHOD(thread_tmp_s_fu_145_p2);
    sensitive << ( tmp_fu_139_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_119_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "poly_S3_tobytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, msg_address0, "(port)msg_address0");
    sc_trace(mVcdFile, msg_ce0, "(port)msg_ce0");
    sc_trace(mVcdFile, msg_we0, "(port)msg_we0");
    sc_trace(mVcdFile, msg_d0, "(port)msg_d0");
    sc_trace(mVcdFile, msg_offset, "(port)msg_offset");
    sc_trace(mVcdFile, a_coeffs_address0, "(port)a_coeffs_address0");
    sc_trace(mVcdFile, a_coeffs_ce0, "(port)a_coeffs_ce0");
    sc_trace(mVcdFile, a_coeffs_q0, "(port)a_coeffs_q0");
    sc_trace(mVcdFile, a_coeffs_address1, "(port)a_coeffs_address1");
    sc_trace(mVcdFile, a_coeffs_ce1, "(port)a_coeffs_ce1");
    sc_trace(mVcdFile, a_coeffs_q1, "(port)a_coeffs_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_4_fu_125_p2, "i_4_fu_125_p2");
    sc_trace(mVcdFile, i_4_reg_304, "i_4_reg_304");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_139_p2, "tmp_fu_139_p2");
    sc_trace(mVcdFile, tmp_reg_309, "tmp_reg_309");
    sc_trace(mVcdFile, exitcond_fu_119_p2, "exitcond_fu_119_p2");
    sc_trace(mVcdFile, sum_fu_171_p2, "sum_fu_171_p2");
    sc_trace(mVcdFile, sum_reg_326, "sum_reg_326");
    sc_trace(mVcdFile, c_1_fu_202_p2, "c_1_fu_202_p2");
    sc_trace(mVcdFile, c_1_reg_331, "c_1_reg_331");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, c_2_fu_232_p2, "c_2_fu_232_p2");
    sc_trace(mVcdFile, c_2_reg_342, "c_2_reg_342");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, c_3_fu_266_p2, "c_3_fu_266_p2");
    sc_trace(mVcdFile, c_3_reg_358, "c_3_reg_358");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_21_fu_272_p1, "tmp_21_fu_272_p1");
    sc_trace(mVcdFile, tmp_21_reg_364, "tmp_21_reg_364");
    sc_trace(mVcdFile, i_reg_104, "i_reg_104");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_1_fu_151_p1, "tmp_1_fu_151_p1");
    sc_trace(mVcdFile, tmp_4_fu_162_p1, "tmp_4_fu_162_p1");
    sc_trace(mVcdFile, tmp_8_fu_213_p1, "tmp_8_fu_213_p1");
    sc_trace(mVcdFile, tmp_11_fu_243_p1, "tmp_11_fu_243_p1");
    sc_trace(mVcdFile, tmp_14_fu_248_p1, "tmp_14_fu_248_p1");
    sc_trace(mVcdFile, sum_cast_fu_292_p1, "sum_cast_fu_292_p1");
    sc_trace(mVcdFile, p_shl5_fu_131_p3, "p_shl5_fu_131_p3");
    sc_trace(mVcdFile, i_cast1_fu_115_p1, "i_cast1_fu_115_p1");
    sc_trace(mVcdFile, tmp_s_fu_145_p2, "tmp_s_fu_145_p2");
    sc_trace(mVcdFile, tmp_3_fu_156_p2, "tmp_3_fu_156_p2");
    sc_trace(mVcdFile, tmp_17_cast_fu_167_p1, "tmp_17_cast_fu_167_p1");
    sc_trace(mVcdFile, tmp_9_fu_180_p1, "tmp_9_fu_180_p1");
    sc_trace(mVcdFile, p_shl4_fu_184_p3, "p_shl4_fu_184_p3");
    sc_trace(mVcdFile, c_fu_176_p1, "c_fu_176_p1");
    sc_trace(mVcdFile, tmp_2_fu_192_p2, "tmp_2_fu_192_p2");
    sc_trace(mVcdFile, tmp_13_fu_198_p1, "tmp_13_fu_198_p1");
    sc_trace(mVcdFile, tmp_7_fu_208_p2, "tmp_7_fu_208_p2");
    sc_trace(mVcdFile, tmp_16_fu_218_p2, "tmp_16_fu_218_p2");
    sc_trace(mVcdFile, tmp_17_fu_228_p1, "tmp_17_fu_228_p1");
    sc_trace(mVcdFile, tmp_6_fu_223_p2, "tmp_6_fu_223_p2");
    sc_trace(mVcdFile, tmp_10_fu_238_p2, "tmp_10_fu_238_p2");
    sc_trace(mVcdFile, tmp_18_fu_252_p2, "tmp_18_fu_252_p2");
    sc_trace(mVcdFile, tmp_19_fu_262_p1, "tmp_19_fu_262_p1");
    sc_trace(mVcdFile, tmp_5_fu_257_p2, "tmp_5_fu_257_p2");
    sc_trace(mVcdFile, tmp_20_fu_276_p2, "tmp_20_fu_276_p2");
    sc_trace(mVcdFile, tmp_12_fu_281_p2, "tmp_12_fu_281_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

poly_S3_tobytes::~poly_S3_tobytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void poly_S3_tobytes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_reg_104 = i_4_reg_304.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_104 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_1_reg_331 = c_1_fu_202_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_2_reg_342 = c_2_fu_232_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        c_3_reg_358 = c_3_fu_266_p2.read();
        tmp_21_reg_364 = tmp_21_fu_272_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_4_reg_304 = i_4_fu_125_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_119_p2.read(), ap_const_lv1_0))) {
        sum_reg_326 = sum_fu_171_p2.read();
        tmp_reg_309 = tmp_fu_139_p2.read();
    }
}

void poly_S3_tobytes::thread_a_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_14_fu_248_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_8_fu_213_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_1_fu_151_p1.read());
    } else {
        a_coeffs_address0 = "XXXXXXXXXX";
    }
}

void poly_S3_tobytes::thread_a_coeffs_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_coeffs_address1 =  (sc_lv<10>) (tmp_11_fu_243_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_coeffs_address1 =  (sc_lv<10>) (tmp_4_fu_162_p1.read());
    } else {
        a_coeffs_address1 = "XXXXXXXXXX";
    }
}

void poly_S3_tobytes::thread_a_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        a_coeffs_ce0 = ap_const_logic_1;
    } else {
        a_coeffs_ce0 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_a_coeffs_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        a_coeffs_ce1 = ap_const_logic_1;
    } else {
        a_coeffs_ce1 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void poly_S3_tobytes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_119_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_119_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_c_1_fu_202_p2() {
    c_1_fu_202_p2 = (!tmp_2_fu_192_p2.read().is_01() || !tmp_13_fu_198_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_2_fu_192_p2.read()) + sc_biguint<8>(tmp_13_fu_198_p1.read()));
}

void poly_S3_tobytes::thread_c_2_fu_232_p2() {
    c_2_fu_232_p2 = (!tmp_17_fu_228_p1.read().is_01() || !tmp_6_fu_223_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_17_fu_228_p1.read()) + sc_biguint<8>(tmp_6_fu_223_p2.read()));
}

void poly_S3_tobytes::thread_c_3_fu_266_p2() {
    c_3_fu_266_p2 = (!tmp_19_fu_262_p1.read().is_01() || !tmp_5_fu_257_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_19_fu_262_p1.read()) + sc_biguint<8>(tmp_5_fu_257_p2.read()));
}

void poly_S3_tobytes::thread_c_fu_176_p1() {
    c_fu_176_p1 = a_coeffs_q0.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_exitcond_fu_119_p2() {
    exitcond_fu_119_p2 = (!i_reg_104.read().is_01() || !ap_const_lv8_A4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_104.read() == ap_const_lv8_A4);
}

void poly_S3_tobytes::thread_i_4_fu_125_p2() {
    i_4_fu_125_p2 = (!i_reg_104.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_104.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void poly_S3_tobytes::thread_i_cast1_fu_115_p1() {
    i_cast1_fu_115_p1 = esl_zext<10,8>(i_reg_104.read());
}

void poly_S3_tobytes::thread_msg_address0() {
    msg_address0 =  (sc_lv<9>) (sum_cast_fu_292_p1.read());
}

void poly_S3_tobytes::thread_msg_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        msg_ce0 = ap_const_logic_1;
    } else {
        msg_ce0 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_msg_d0() {
    msg_d0 = (!tmp_21_reg_364.read().is_01() || !tmp_12_fu_281_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_21_reg_364.read()) + sc_biguint<8>(tmp_12_fu_281_p2.read()));
}

void poly_S3_tobytes::thread_msg_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        msg_we0 = ap_const_logic_1;
    } else {
        msg_we0 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_p_shl4_fu_184_p3() {
    p_shl4_fu_184_p3 = esl_concat<6,2>(tmp_9_fu_180_p1.read(), ap_const_lv2_0);
}

void poly_S3_tobytes::thread_p_shl5_fu_131_p3() {
    p_shl5_fu_131_p3 = esl_concat<8,2>(i_reg_104.read(), ap_const_lv2_0);
}

void poly_S3_tobytes::thread_sum_cast_fu_292_p1() {
    sum_cast_fu_292_p1 = esl_zext<64,9>(sum_reg_326.read());
}

void poly_S3_tobytes::thread_sum_fu_171_p2() {
    sum_fu_171_p2 = (!msg_offset.read().is_01() || !tmp_17_cast_fu_167_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(msg_offset.read()) + sc_biguint<9>(tmp_17_cast_fu_167_p1.read()));
}

void poly_S3_tobytes::thread_tmp_10_fu_238_p2() {
    tmp_10_fu_238_p2 = (!ap_const_lv10_1.is_01() || !tmp_reg_309.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(tmp_reg_309.read()));
}

void poly_S3_tobytes::thread_tmp_11_fu_243_p1() {
    tmp_11_fu_243_p1 = esl_zext<64,10>(tmp_10_fu_238_p2.read());
}

void poly_S3_tobytes::thread_tmp_12_fu_281_p2() {
    tmp_12_fu_281_p2 = (!tmp_20_fu_276_p2.read().is_01() || !c_3_reg_358.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_20_fu_276_p2.read()) - sc_biguint<8>(c_3_reg_358.read()));
}

void poly_S3_tobytes::thread_tmp_13_fu_198_p1() {
    tmp_13_fu_198_p1 = a_coeffs_q1.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_14_fu_248_p1() {
    tmp_14_fu_248_p1 = esl_zext<64,10>(tmp_reg_309.read());
}

void poly_S3_tobytes::thread_tmp_16_fu_218_p2() {
    tmp_16_fu_218_p2 = (!ap_const_lv8_2.is_01())? sc_lv<8>(): c_1_reg_331.read() << (unsigned short)ap_const_lv8_2.to_uint();
}

void poly_S3_tobytes::thread_tmp_17_cast_fu_167_p1() {
    tmp_17_cast_fu_167_p1 = esl_zext<9,8>(i_reg_104.read());
}

void poly_S3_tobytes::thread_tmp_17_fu_228_p1() {
    tmp_17_fu_228_p1 = a_coeffs_q0.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_18_fu_252_p2() {
    tmp_18_fu_252_p2 = (!ap_const_lv8_2.is_01())? sc_lv<8>(): c_2_reg_342.read() << (unsigned short)ap_const_lv8_2.to_uint();
}

void poly_S3_tobytes::thread_tmp_19_fu_262_p1() {
    tmp_19_fu_262_p1 = a_coeffs_q1.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_1_fu_151_p1() {
    tmp_1_fu_151_p1 = esl_zext<64,10>(tmp_s_fu_145_p2.read());
}

void poly_S3_tobytes::thread_tmp_20_fu_276_p2() {
    tmp_20_fu_276_p2 = (!ap_const_lv8_2.is_01())? sc_lv<8>(): c_3_reg_358.read() << (unsigned short)ap_const_lv8_2.to_uint();
}

void poly_S3_tobytes::thread_tmp_21_fu_272_p1() {
    tmp_21_fu_272_p1 = a_coeffs_q0.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_2_fu_192_p2() {
    tmp_2_fu_192_p2 = (!p_shl4_fu_184_p3.read().is_01() || !c_fu_176_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl4_fu_184_p3.read()) - sc_biguint<8>(c_fu_176_p1.read()));
}

void poly_S3_tobytes::thread_tmp_3_fu_156_p2() {
    tmp_3_fu_156_p2 = (!ap_const_lv10_3.is_01() || !tmp_fu_139_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_3) + sc_biguint<10>(tmp_fu_139_p2.read()));
}

void poly_S3_tobytes::thread_tmp_4_fu_162_p1() {
    tmp_4_fu_162_p1 = esl_zext<64,10>(tmp_3_fu_156_p2.read());
}

void poly_S3_tobytes::thread_tmp_5_fu_257_p2() {
    tmp_5_fu_257_p2 = (!tmp_18_fu_252_p2.read().is_01() || !c_2_reg_342.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_18_fu_252_p2.read()) - sc_biguint<8>(c_2_reg_342.read()));
}

void poly_S3_tobytes::thread_tmp_6_fu_223_p2() {
    tmp_6_fu_223_p2 = (!tmp_16_fu_218_p2.read().is_01() || !c_1_reg_331.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_16_fu_218_p2.read()) - sc_biguint<8>(c_1_reg_331.read()));
}

void poly_S3_tobytes::thread_tmp_7_fu_208_p2() {
    tmp_7_fu_208_p2 = (!ap_const_lv10_2.is_01() || !tmp_reg_309.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_2) + sc_biguint<10>(tmp_reg_309.read()));
}

void poly_S3_tobytes::thread_tmp_8_fu_213_p1() {
    tmp_8_fu_213_p1 = esl_zext<64,10>(tmp_7_fu_208_p2.read());
}

void poly_S3_tobytes::thread_tmp_9_fu_180_p1() {
    tmp_9_fu_180_p1 = a_coeffs_q0.read().range(6-1, 0);
}

void poly_S3_tobytes::thread_tmp_fu_139_p2() {
    tmp_fu_139_p2 = (!p_shl5_fu_131_p3.read().is_01() || !i_cast1_fu_115_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl5_fu_131_p3.read()) + sc_biguint<10>(i_cast1_fu_115_p1.read()));
}

void poly_S3_tobytes::thread_tmp_s_fu_145_p2() {
    tmp_s_fu_145_p2 = (!ap_const_lv10_4.is_01() || !tmp_fu_139_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_4) + sc_biguint<10>(tmp_fu_139_p2.read()));
}

void poly_S3_tobytes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_119_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

