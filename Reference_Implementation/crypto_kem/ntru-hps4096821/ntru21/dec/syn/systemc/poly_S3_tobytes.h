// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _poly_S3_tobytes_HH_
#define _poly_S3_tobytes_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct poly_S3_tobytes : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > msg_address0;
    sc_out< sc_logic > msg_ce0;
    sc_out< sc_logic > msg_we0;
    sc_out< sc_lv<8> > msg_d0;
    sc_in< sc_lv<9> > msg_offset;
    sc_out< sc_lv<10> > a_coeffs_address0;
    sc_out< sc_logic > a_coeffs_ce0;
    sc_in< sc_lv<16> > a_coeffs_q0;
    sc_out< sc_lv<10> > a_coeffs_address1;
    sc_out< sc_logic > a_coeffs_ce1;
    sc_in< sc_lv<16> > a_coeffs_q1;


    // Module declarations
    poly_S3_tobytes(sc_module_name name);
    SC_HAS_PROCESS(poly_S3_tobytes);

    ~poly_S3_tobytes();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > i_4_fu_125_p2;
    sc_signal< sc_lv<8> > i_4_reg_304;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > tmp_fu_139_p2;
    sc_signal< sc_lv<10> > tmp_reg_309;
    sc_signal< sc_lv<1> > exitcond_fu_119_p2;
    sc_signal< sc_lv<9> > sum_fu_171_p2;
    sc_signal< sc_lv<9> > sum_reg_326;
    sc_signal< sc_lv<8> > c_1_fu_202_p2;
    sc_signal< sc_lv<8> > c_1_reg_331;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > c_2_fu_232_p2;
    sc_signal< sc_lv<8> > c_2_reg_342;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > c_3_fu_266_p2;
    sc_signal< sc_lv<8> > c_3_reg_358;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > tmp_21_fu_272_p1;
    sc_signal< sc_lv<8> > tmp_21_reg_364;
    sc_signal< sc_lv<8> > i_reg_104;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > tmp_1_fu_151_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_162_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_213_p1;
    sc_signal< sc_lv<64> > tmp_11_fu_243_p1;
    sc_signal< sc_lv<64> > tmp_14_fu_248_p1;
    sc_signal< sc_lv<64> > sum_cast_fu_292_p1;
    sc_signal< sc_lv<10> > p_shl5_fu_131_p3;
    sc_signal< sc_lv<10> > i_cast1_fu_115_p1;
    sc_signal< sc_lv<10> > tmp_s_fu_145_p2;
    sc_signal< sc_lv<10> > tmp_3_fu_156_p2;
    sc_signal< sc_lv<9> > tmp_17_cast_fu_167_p1;
    sc_signal< sc_lv<6> > tmp_9_fu_180_p1;
    sc_signal< sc_lv<8> > p_shl4_fu_184_p3;
    sc_signal< sc_lv<8> > c_fu_176_p1;
    sc_signal< sc_lv<8> > tmp_2_fu_192_p2;
    sc_signal< sc_lv<8> > tmp_13_fu_198_p1;
    sc_signal< sc_lv<10> > tmp_7_fu_208_p2;
    sc_signal< sc_lv<8> > tmp_16_fu_218_p2;
    sc_signal< sc_lv<8> > tmp_17_fu_228_p1;
    sc_signal< sc_lv<8> > tmp_6_fu_223_p2;
    sc_signal< sc_lv<10> > tmp_10_fu_238_p2;
    sc_signal< sc_lv<8> > tmp_18_fu_252_p2;
    sc_signal< sc_lv<8> > tmp_19_fu_262_p1;
    sc_signal< sc_lv<8> > tmp_5_fu_257_p2;
    sc_signal< sc_lv<8> > tmp_20_fu_276_p2;
    sc_signal< sc_lv<8> > tmp_12_fu_281_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_A4;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<10> ap_const_lv10_4;
    static const sc_lv<10> ap_const_lv10_3;
    static const sc_lv<10> ap_const_lv10_2;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_coeffs_address0();
    void thread_a_coeffs_address1();
    void thread_a_coeffs_ce0();
    void thread_a_coeffs_ce1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_1_fu_202_p2();
    void thread_c_2_fu_232_p2();
    void thread_c_3_fu_266_p2();
    void thread_c_fu_176_p1();
    void thread_exitcond_fu_119_p2();
    void thread_i_4_fu_125_p2();
    void thread_i_cast1_fu_115_p1();
    void thread_msg_address0();
    void thread_msg_ce0();
    void thread_msg_d0();
    void thread_msg_we0();
    void thread_p_shl4_fu_184_p3();
    void thread_p_shl5_fu_131_p3();
    void thread_sum_cast_fu_292_p1();
    void thread_sum_fu_171_p2();
    void thread_tmp_10_fu_238_p2();
    void thread_tmp_11_fu_243_p1();
    void thread_tmp_12_fu_281_p2();
    void thread_tmp_13_fu_198_p1();
    void thread_tmp_14_fu_248_p1();
    void thread_tmp_16_fu_218_p2();
    void thread_tmp_17_cast_fu_167_p1();
    void thread_tmp_17_fu_228_p1();
    void thread_tmp_18_fu_252_p2();
    void thread_tmp_19_fu_262_p1();
    void thread_tmp_1_fu_151_p1();
    void thread_tmp_20_fu_276_p2();
    void thread_tmp_21_fu_272_p1();
    void thread_tmp_2_fu_192_p2();
    void thread_tmp_3_fu_156_p2();
    void thread_tmp_4_fu_162_p1();
    void thread_tmp_5_fu_257_p2();
    void thread_tmp_6_fu_223_p2();
    void thread_tmp_7_fu_208_p2();
    void thread_tmp_8_fu_213_p1();
    void thread_tmp_9_fu_180_p1();
    void thread_tmp_fu_139_p2();
    void thread_tmp_s_fu_145_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
