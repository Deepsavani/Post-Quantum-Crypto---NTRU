// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _poly_Rq_sum_zero_fro_HH_
#define _poly_Rq_sum_zero_fro_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct poly_Rq_sum_zero_fro : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > r_coeffs_address0;
    sc_out< sc_logic > r_coeffs_ce0;
    sc_out< sc_logic > r_coeffs_we0;
    sc_out< sc_lv<16> > r_coeffs_d0;
    sc_in< sc_lv<16> > r_coeffs_q0;
    sc_out< sc_lv<10> > r_coeffs_address1;
    sc_out< sc_logic > r_coeffs_ce1;
    sc_out< sc_logic > r_coeffs_we1;
    sc_out< sc_lv<16> > r_coeffs_d1;
    sc_in< sc_lv<16> > r_coeffs_q1;
    sc_out< sc_lv<11> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<8> > a_q0;
    sc_out< sc_lv<11> > a_address1;
    sc_out< sc_logic > a_ce1;
    sc_in< sc_lv<8> > a_q1;


    // Module declarations
    poly_Rq_sum_zero_fro(sc_module_name name);
    SC_HAS_PROCESS(poly_Rq_sum_zero_fro);

    ~poly_Rq_sum_zero_fro();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > i_11_fu_170_p2;
    sc_signal< sc_lv<9> > i_11_reg_346;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > tmp_i_fu_188_p2;
    sc_signal< sc_lv<12> > tmp_i_reg_351;
    sc_signal< sc_lv<1> > exitcond_i_fu_164_p2;
    sc_signal< sc_lv<10> > r_coeffs_addr_reg_366;
    sc_signal< sc_lv<10> > tmp_127_i_fu_235_p3;
    sc_signal< sc_lv<10> > tmp_127_i_reg_372;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > tmp_129_i_reg_377;
    sc_signal< sc_lv<10> > i_12_fu_300_p2;
    sc_signal< sc_lv<10> > i_12_reg_390;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond_fu_294_p2;
    sc_signal< sc_lv<12> > phitmp_fu_337_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<9> > i_i_reg_126;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<12> > tmp_reg_138;
    sc_signal< sc_lv<10> > i_reg_149;
    sc_signal< sc_lv<64> > tmp_i_31_fu_198_p1;
    sc_signal< sc_lv<64> > tmp_124_i_fu_213_p1;
    sc_signal< sc_lv<64> > tmp_128_i_fu_243_p1;
    sc_signal< sc_lv<64> > tmp_131_i_fu_267_p1;
    sc_signal< sc_lv<64> > tmp_136_i_fu_289_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_306_p1;
    sc_signal< sc_lv<16> > tmp_126_i_fu_230_p1;
    sc_signal< sc_lv<16> > tmp_134_i_cast_fu_279_p1;
    sc_signal< sc_lv<16> > tmp_145_cast_fu_317_p1;
    sc_signal< sc_lv<11> > p_shl_i_fu_176_p3;
    sc_signal< sc_lv<12> > p_shl_i_cast_fu_184_p1;
    sc_signal< sc_lv<12> > i_i_cast3_fu_160_p1;
    sc_signal< sc_lv<32> > tmp_i_cast_fu_194_p1;
    sc_signal< sc_lv<12> > tmp_123_i_fu_203_p2;
    sc_signal< sc_lv<32> > tmp_123_i_cast_fu_209_p1;
    sc_signal< sc_lv<4> > tmp_72_fu_218_p1;
    sc_signal< sc_lv<12> > tmp_7_i_fu_222_p3;
    sc_signal< sc_lv<12> > tmp_130_i_fu_258_p2;
    sc_signal< sc_lv<32> > tmp_130_i_cast_fu_263_p1;
    sc_signal< sc_lv<12> > tmp_134_i_fu_272_p3;
    sc_signal< sc_lv<10> > tmp_135_i_fu_284_p2;
    sc_signal< sc_lv<12> > tmp_cast_fu_311_p2;
    sc_signal< sc_lv<12> > tmp_74_fu_326_p1;
    sc_signal< sc_lv<12> > tmp_73_fu_322_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<64> ap_const_lv64_334;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<9> ap_const_lv9_19A;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<12> ap_const_lv12_2;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_334;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_address1();
    void thread_a_ce0();
    void thread_a_ce1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond_fu_294_p2();
    void thread_exitcond_i_fu_164_p2();
    void thread_i_11_fu_170_p2();
    void thread_i_12_fu_300_p2();
    void thread_i_i_cast3_fu_160_p1();
    void thread_p_shl_i_cast_fu_184_p1();
    void thread_p_shl_i_fu_176_p3();
    void thread_phitmp_fu_337_p2();
    void thread_r_coeffs_addr_reg_366();
    void thread_r_coeffs_address0();
    void thread_r_coeffs_address1();
    void thread_r_coeffs_ce0();
    void thread_r_coeffs_ce1();
    void thread_r_coeffs_d0();
    void thread_r_coeffs_d1();
    void thread_r_coeffs_we0();
    void thread_r_coeffs_we1();
    void thread_tmp_123_i_cast_fu_209_p1();
    void thread_tmp_123_i_fu_203_p2();
    void thread_tmp_124_i_fu_213_p1();
    void thread_tmp_126_i_fu_230_p1();
    void thread_tmp_127_i_fu_235_p3();
    void thread_tmp_128_i_fu_243_p1();
    void thread_tmp_130_i_cast_fu_263_p1();
    void thread_tmp_130_i_fu_258_p2();
    void thread_tmp_131_i_fu_267_p1();
    void thread_tmp_134_i_cast_fu_279_p1();
    void thread_tmp_134_i_fu_272_p3();
    void thread_tmp_135_i_fu_284_p2();
    void thread_tmp_136_i_fu_289_p1();
    void thread_tmp_145_cast_fu_317_p1();
    void thread_tmp_72_fu_218_p1();
    void thread_tmp_73_fu_322_p1();
    void thread_tmp_74_fu_326_p1();
    void thread_tmp_7_i_fu_222_p3();
    void thread_tmp_cast_fu_311_p2();
    void thread_tmp_i_31_fu_198_p1();
    void thread_tmp_i_cast_fu_194_p1();
    void thread_tmp_i_fu_188_p2();
    void thread_tmp_s_fu_306_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
