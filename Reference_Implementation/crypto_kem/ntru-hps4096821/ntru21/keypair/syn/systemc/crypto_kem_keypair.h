// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _crypto_kem_keypair_HH_
#define _crypto_kem_keypair_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "owcpa_keypair.h"
#include "randombytes.h"
#include "randombytes_1.h"
#include "crypto_kem_keypair_DRBG_ctx_V.h"
#include "crypto_kem_keypair_DRBG_ctx_Key.h"
#include "crypto_kem_keypair_seed.h"

namespace ap_rtl {

struct crypto_kem_keypair : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > pk_address0;
    sc_out< sc_logic > pk_ce0;
    sc_out< sc_logic > pk_we0;
    sc_out< sc_lv<8> > pk_d0;
    sc_out< sc_lv<11> > pk_address1;
    sc_out< sc_logic > pk_ce1;
    sc_out< sc_logic > pk_we1;
    sc_out< sc_lv<8> > pk_d1;
    sc_out< sc_lv<11> > sk_address0;
    sc_out< sc_logic > sk_ce0;
    sc_out< sc_logic > sk_we0;
    sc_out< sc_lv<8> > sk_d0;
    sc_out< sc_lv<11> > sk_address1;
    sc_out< sc_logic > sk_ce1;
    sc_out< sc_logic > sk_we1;
    sc_out< sc_lv<8> > sk_d1;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    crypto_kem_keypair(sc_module_name name);
    SC_HAS_PROCESS(crypto_kem_keypair);

    ~crypto_kem_keypair();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    crypto_kem_keypair_DRBG_ctx_V* DRBG_ctx_V_U;
    crypto_kem_keypair_DRBG_ctx_Key* DRBG_ctx_Key_U;
    crypto_kem_keypair_seed* seed_U;
    owcpa_keypair* grp_owcpa_keypair_fu_34;
    randombytes* grp_randombytes_fu_43;
    randombytes_1* grp_randombytes_1_fu_59;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > DRBG_ctx_V_address0;
    sc_signal< sc_logic > DRBG_ctx_V_ce0;
    sc_signal< sc_logic > DRBG_ctx_V_we0;
    sc_signal< sc_lv<8> > DRBG_ctx_V_d0;
    sc_signal< sc_lv<8> > DRBG_ctx_V_q0;
    sc_signal< sc_lv<4> > DRBG_ctx_V_address1;
    sc_signal< sc_logic > DRBG_ctx_V_ce1;
    sc_signal< sc_lv<8> > DRBG_ctx_V_q1;
    sc_signal< sc_lv<5> > DRBG_ctx_Key_address0;
    sc_signal< sc_logic > DRBG_ctx_Key_ce0;
    sc_signal< sc_logic > DRBG_ctx_Key_we0;
    sc_signal< sc_lv<8> > DRBG_ctx_Key_d0;
    sc_signal< sc_lv<8> > DRBG_ctx_Key_q0;
    sc_signal< sc_lv<5> > DRBG_ctx_Key_address1;
    sc_signal< sc_logic > DRBG_ctx_Key_ce1;
    sc_signal< sc_lv<8> > DRBG_ctx_Key_q1;
    sc_signal< sc_lv<32> > DRBG_ctx_reseed_coun;
    sc_signal< sc_lv<12> > seed_address0;
    sc_signal< sc_logic > seed_ce0;
    sc_signal< sc_logic > seed_we0;
    sc_signal< sc_lv<8> > seed_q0;
    sc_signal< sc_logic > seed_ce1;
    sc_signal< sc_lv<8> > seed_q1;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_ap_start;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_ap_done;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_ap_idle;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_ap_ready;
    sc_signal< sc_lv<11> > grp_owcpa_keypair_fu_34_pk_address0;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_pk_ce0;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_pk_we0;
    sc_signal< sc_lv<8> > grp_owcpa_keypair_fu_34_pk_d0;
    sc_signal< sc_lv<11> > grp_owcpa_keypair_fu_34_pk_address1;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_pk_ce1;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_pk_we1;
    sc_signal< sc_lv<8> > grp_owcpa_keypair_fu_34_pk_d1;
    sc_signal< sc_lv<11> > grp_owcpa_keypair_fu_34_sk_address0;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_sk_ce0;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_sk_we0;
    sc_signal< sc_lv<8> > grp_owcpa_keypair_fu_34_sk_d0;
    sc_signal< sc_lv<11> > grp_owcpa_keypair_fu_34_sk_address1;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_sk_ce1;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_sk_we1;
    sc_signal< sc_lv<8> > grp_owcpa_keypair_fu_34_sk_d1;
    sc_signal< sc_lv<12> > grp_owcpa_keypair_fu_34_seed_address0;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_seed_ce0;
    sc_signal< sc_lv<12> > grp_owcpa_keypair_fu_34_seed_address1;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_seed_ce1;
    sc_signal< sc_logic > grp_randombytes_fu_43_ap_start;
    sc_signal< sc_logic > grp_randombytes_fu_43_ap_done;
    sc_signal< sc_logic > grp_randombytes_fu_43_ap_idle;
    sc_signal< sc_logic > grp_randombytes_fu_43_ap_ready;
    sc_signal< sc_lv<12> > grp_randombytes_fu_43_x_address0;
    sc_signal< sc_logic > grp_randombytes_fu_43_x_ce0;
    sc_signal< sc_logic > grp_randombytes_fu_43_x_we0;
    sc_signal< sc_lv<8> > grp_randombytes_fu_43_x_d0;
    sc_signal< sc_lv<4> > grp_randombytes_fu_43_DRBG_ctx_V_address0;
    sc_signal< sc_logic > grp_randombytes_fu_43_DRBG_ctx_V_ce0;
    sc_signal< sc_logic > grp_randombytes_fu_43_DRBG_ctx_V_we0;
    sc_signal< sc_lv<8> > grp_randombytes_fu_43_DRBG_ctx_V_d0;
    sc_signal< sc_lv<4> > grp_randombytes_fu_43_DRBG_ctx_V_address1;
    sc_signal< sc_logic > grp_randombytes_fu_43_DRBG_ctx_V_ce1;
    sc_signal< sc_lv<5> > grp_randombytes_fu_43_DRBG_ctx_Key_address0;
    sc_signal< sc_logic > grp_randombytes_fu_43_DRBG_ctx_Key_ce0;
    sc_signal< sc_logic > grp_randombytes_fu_43_DRBG_ctx_Key_we0;
    sc_signal< sc_lv<8> > grp_randombytes_fu_43_DRBG_ctx_Key_d0;
    sc_signal< sc_lv<5> > grp_randombytes_fu_43_DRBG_ctx_Key_address1;
    sc_signal< sc_logic > grp_randombytes_fu_43_DRBG_ctx_Key_ce1;
    sc_signal< sc_lv<32> > grp_randombytes_fu_43_DRBG_ctx_reseed_coun_o;
    sc_signal< sc_logic > grp_randombytes_fu_43_DRBG_ctx_reseed_coun_o_ap_vld;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_ap_start;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_ap_done;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_ap_idle;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_ap_ready;
    sc_signal< sc_lv<11> > grp_randombytes_1_fu_59_x_address0;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_x_ce0;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_x_we0;
    sc_signal< sc_lv<8> > grp_randombytes_1_fu_59_x_d0;
    sc_signal< sc_lv<4> > grp_randombytes_1_fu_59_DRBG_ctx_V_address0;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_DRBG_ctx_V_ce0;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_DRBG_ctx_V_we0;
    sc_signal< sc_lv<8> > grp_randombytes_1_fu_59_DRBG_ctx_V_d0;
    sc_signal< sc_lv<4> > grp_randombytes_1_fu_59_DRBG_ctx_V_address1;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_DRBG_ctx_V_ce1;
    sc_signal< sc_lv<5> > grp_randombytes_1_fu_59_DRBG_ctx_Key_address0;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_DRBG_ctx_Key_ce0;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_DRBG_ctx_Key_we0;
    sc_signal< sc_lv<8> > grp_randombytes_1_fu_59_DRBG_ctx_Key_d0;
    sc_signal< sc_lv<5> > grp_randombytes_1_fu_59_DRBG_ctx_Key_address1;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_DRBG_ctx_Key_ce1;
    sc_signal< sc_lv<32> > grp_randombytes_1_fu_59_DRBG_ctx_reseed_coun_o;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_DRBG_ctx_reseed_coun_o_ap_vld;
    sc_signal< sc_logic > grp_owcpa_keypair_fu_34_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_randombytes_fu_43_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_randombytes_1_fu_59_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_DRBG_ctx_Key_address0();
    void thread_DRBG_ctx_Key_address1();
    void thread_DRBG_ctx_Key_ce0();
    void thread_DRBG_ctx_Key_ce1();
    void thread_DRBG_ctx_Key_d0();
    void thread_DRBG_ctx_Key_we0();
    void thread_DRBG_ctx_V_address0();
    void thread_DRBG_ctx_V_address1();
    void thread_DRBG_ctx_V_ce0();
    void thread_DRBG_ctx_V_ce1();
    void thread_DRBG_ctx_V_d0();
    void thread_DRBG_ctx_V_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_owcpa_keypair_fu_34_ap_start();
    void thread_grp_randombytes_1_fu_59_ap_start();
    void thread_grp_randombytes_fu_43_ap_start();
    void thread_pk_address0();
    void thread_pk_address1();
    void thread_pk_ce0();
    void thread_pk_ce1();
    void thread_pk_d0();
    void thread_pk_d1();
    void thread_pk_we0();
    void thread_pk_we1();
    void thread_seed_address0();
    void thread_seed_ce0();
    void thread_seed_ce1();
    void thread_seed_we0();
    void thread_sk_address0();
    void thread_sk_address1();
    void thread_sk_ce0();
    void thread_sk_ce1();
    void thread_sk_d0();
    void thread_sk_d1();
    void thread_sk_we0();
    void thread_sk_we1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
