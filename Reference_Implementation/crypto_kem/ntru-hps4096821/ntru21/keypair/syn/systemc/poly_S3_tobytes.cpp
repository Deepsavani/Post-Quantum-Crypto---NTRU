// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "poly_S3_tobytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic poly_S3_tobytes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic poly_S3_tobytes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state1 = "1";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state2 = "10";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state3 = "100";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state4 = "1000";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state5 = "10000";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state6 = "100000";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_1 = "1";
const sc_lv<1> poly_S3_tobytes::ap_const_lv1_0 = "0";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_2 = "10";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_3 = "11";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_4 = "100";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_0 = "00000000";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_5 = "101";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_A4 = "10100100";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_1 = "1";
const sc_lv<2> poly_S3_tobytes::ap_const_lv2_0 = "00";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_4 = "100";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_3 = "11";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_2 = "10";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_2 = "10";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_1 = "1";
const sc_lv<1> poly_S3_tobytes::ap_const_lv1_1 = "1";
const bool poly_S3_tobytes::ap_const_boolean_1 = true;

poly_S3_tobytes::poly_S3_tobytes(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_coeffs_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_44_fu_157_p1 );
    sensitive << ( tmp_50_fu_219_p1 );
    sensitive << ( tmp_55_fu_254_p1 );

    SC_METHOD(thread_a_coeffs_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_47_fu_168_p1 );
    sensitive << ( tmp_53_fu_249_p1 );

    SC_METHOD(thread_a_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_a_coeffs_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_125_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_125_p2 );

    SC_METHOD(thread_c_1_fu_208_p2);
    sensitive << ( tmp_45_fu_198_p2 );
    sensitive << ( tmp_36_fu_204_p1 );

    SC_METHOD(thread_c_2_fu_238_p2);
    sensitive << ( tmp_38_fu_234_p1 );
    sensitive << ( tmp_48_fu_229_p2 );

    SC_METHOD(thread_c_3_fu_272_p2);
    sensitive << ( tmp_40_fu_268_p1 );
    sensitive << ( tmp_51_fu_263_p2 );

    SC_METHOD(thread_c_fu_182_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_exitcond_fu_125_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_106 );

    SC_METHOD(thread_i_9_fu_131_p2);
    sensitive << ( i_reg_106 );

    SC_METHOD(thread_i_cast1_fu_121_p1);
    sensitive << ( i_reg_106 );

    SC_METHOD(thread_msg_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sum_cast_fu_298_p1 );

    SC_METHOD(thread_msg_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_msg_d0);
    sensitive << ( tmp_42_reg_370 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_54_fu_287_p2 );

    SC_METHOD(thread_msg_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_p_shl4_fu_190_p3);
    sensitive << ( tmp_35_fu_186_p1 );

    SC_METHOD(thread_p_shl5_fu_137_p3);
    sensitive << ( i_reg_106 );

    SC_METHOD(thread_sum_cast_fu_298_p1);
    sensitive << ( sum_reg_332 );

    SC_METHOD(thread_sum_fu_177_p2);
    sensitive << ( tmp_33_reg_302 );
    sensitive << ( tmp_121_cast_fu_173_p1 );

    SC_METHOD(thread_tmp_121_cast_fu_173_p1);
    sensitive << ( i_reg_106 );

    SC_METHOD(thread_tmp_33_fu_117_p1);
    sensitive << ( msg_offset );

    SC_METHOD(thread_tmp_35_fu_186_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_tmp_36_fu_204_p1);
    sensitive << ( a_coeffs_q1 );

    SC_METHOD(thread_tmp_37_fu_224_p2);
    sensitive << ( c_1_reg_337 );

    SC_METHOD(thread_tmp_38_fu_234_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_tmp_39_fu_258_p2);
    sensitive << ( c_2_reg_348 );

    SC_METHOD(thread_tmp_40_fu_268_p1);
    sensitive << ( a_coeffs_q1 );

    SC_METHOD(thread_tmp_41_fu_282_p2);
    sensitive << ( c_3_reg_364 );

    SC_METHOD(thread_tmp_42_fu_278_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_tmp_44_fu_157_p1);
    sensitive << ( tmp_s_fu_151_p2 );

    SC_METHOD(thread_tmp_45_fu_198_p2);
    sensitive << ( p_shl4_fu_190_p3 );
    sensitive << ( c_fu_182_p1 );

    SC_METHOD(thread_tmp_46_fu_162_p2);
    sensitive << ( tmp_fu_145_p2 );

    SC_METHOD(thread_tmp_47_fu_168_p1);
    sensitive << ( tmp_46_fu_162_p2 );

    SC_METHOD(thread_tmp_48_fu_229_p2);
    sensitive << ( c_1_reg_337 );
    sensitive << ( tmp_37_fu_224_p2 );

    SC_METHOD(thread_tmp_49_fu_214_p2);
    sensitive << ( tmp_reg_315 );

    SC_METHOD(thread_tmp_50_fu_219_p1);
    sensitive << ( tmp_49_fu_214_p2 );

    SC_METHOD(thread_tmp_51_fu_263_p2);
    sensitive << ( c_2_reg_348 );
    sensitive << ( tmp_39_fu_258_p2 );

    SC_METHOD(thread_tmp_52_fu_244_p2);
    sensitive << ( tmp_reg_315 );

    SC_METHOD(thread_tmp_53_fu_249_p1);
    sensitive << ( tmp_52_fu_244_p2 );

    SC_METHOD(thread_tmp_54_fu_287_p2);
    sensitive << ( c_3_reg_364 );
    sensitive << ( tmp_41_fu_282_p2 );

    SC_METHOD(thread_tmp_55_fu_254_p1);
    sensitive << ( tmp_reg_315 );

    SC_METHOD(thread_tmp_fu_145_p2);
    sensitive << ( p_shl5_fu_137_p3 );
    sensitive << ( i_cast1_fu_121_p1 );

    SC_METHOD(thread_tmp_s_fu_151_p2);
    sensitive << ( tmp_fu_145_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_125_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "poly_S3_tobytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, msg_address0, "(port)msg_address0");
    sc_trace(mVcdFile, msg_ce0, "(port)msg_ce0");
    sc_trace(mVcdFile, msg_we0, "(port)msg_we0");
    sc_trace(mVcdFile, msg_d0, "(port)msg_d0");
    sc_trace(mVcdFile, msg_offset, "(port)msg_offset");
    sc_trace(mVcdFile, a_coeffs_address0, "(port)a_coeffs_address0");
    sc_trace(mVcdFile, a_coeffs_ce0, "(port)a_coeffs_ce0");
    sc_trace(mVcdFile, a_coeffs_q0, "(port)a_coeffs_q0");
    sc_trace(mVcdFile, a_coeffs_address1, "(port)a_coeffs_address1");
    sc_trace(mVcdFile, a_coeffs_ce1, "(port)a_coeffs_ce1");
    sc_trace(mVcdFile, a_coeffs_q1, "(port)a_coeffs_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_33_fu_117_p1, "tmp_33_fu_117_p1");
    sc_trace(mVcdFile, tmp_33_reg_302, "tmp_33_reg_302");
    sc_trace(mVcdFile, i_9_fu_131_p2, "i_9_fu_131_p2");
    sc_trace(mVcdFile, i_9_reg_310, "i_9_reg_310");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_145_p2, "tmp_fu_145_p2");
    sc_trace(mVcdFile, tmp_reg_315, "tmp_reg_315");
    sc_trace(mVcdFile, exitcond_fu_125_p2, "exitcond_fu_125_p2");
    sc_trace(mVcdFile, sum_fu_177_p2, "sum_fu_177_p2");
    sc_trace(mVcdFile, sum_reg_332, "sum_reg_332");
    sc_trace(mVcdFile, c_1_fu_208_p2, "c_1_fu_208_p2");
    sc_trace(mVcdFile, c_1_reg_337, "c_1_reg_337");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, c_2_fu_238_p2, "c_2_fu_238_p2");
    sc_trace(mVcdFile, c_2_reg_348, "c_2_reg_348");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, c_3_fu_272_p2, "c_3_fu_272_p2");
    sc_trace(mVcdFile, c_3_reg_364, "c_3_reg_364");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_42_fu_278_p1, "tmp_42_fu_278_p1");
    sc_trace(mVcdFile, tmp_42_reg_370, "tmp_42_reg_370");
    sc_trace(mVcdFile, i_reg_106, "i_reg_106");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_44_fu_157_p1, "tmp_44_fu_157_p1");
    sc_trace(mVcdFile, tmp_47_fu_168_p1, "tmp_47_fu_168_p1");
    sc_trace(mVcdFile, tmp_50_fu_219_p1, "tmp_50_fu_219_p1");
    sc_trace(mVcdFile, tmp_53_fu_249_p1, "tmp_53_fu_249_p1");
    sc_trace(mVcdFile, tmp_55_fu_254_p1, "tmp_55_fu_254_p1");
    sc_trace(mVcdFile, sum_cast_fu_298_p1, "sum_cast_fu_298_p1");
    sc_trace(mVcdFile, p_shl5_fu_137_p3, "p_shl5_fu_137_p3");
    sc_trace(mVcdFile, i_cast1_fu_121_p1, "i_cast1_fu_121_p1");
    sc_trace(mVcdFile, tmp_s_fu_151_p2, "tmp_s_fu_151_p2");
    sc_trace(mVcdFile, tmp_46_fu_162_p2, "tmp_46_fu_162_p2");
    sc_trace(mVcdFile, tmp_121_cast_fu_173_p1, "tmp_121_cast_fu_173_p1");
    sc_trace(mVcdFile, tmp_35_fu_186_p1, "tmp_35_fu_186_p1");
    sc_trace(mVcdFile, p_shl4_fu_190_p3, "p_shl4_fu_190_p3");
    sc_trace(mVcdFile, c_fu_182_p1, "c_fu_182_p1");
    sc_trace(mVcdFile, tmp_45_fu_198_p2, "tmp_45_fu_198_p2");
    sc_trace(mVcdFile, tmp_36_fu_204_p1, "tmp_36_fu_204_p1");
    sc_trace(mVcdFile, tmp_49_fu_214_p2, "tmp_49_fu_214_p2");
    sc_trace(mVcdFile, tmp_37_fu_224_p2, "tmp_37_fu_224_p2");
    sc_trace(mVcdFile, tmp_38_fu_234_p1, "tmp_38_fu_234_p1");
    sc_trace(mVcdFile, tmp_48_fu_229_p2, "tmp_48_fu_229_p2");
    sc_trace(mVcdFile, tmp_52_fu_244_p2, "tmp_52_fu_244_p2");
    sc_trace(mVcdFile, tmp_39_fu_258_p2, "tmp_39_fu_258_p2");
    sc_trace(mVcdFile, tmp_40_fu_268_p1, "tmp_40_fu_268_p1");
    sc_trace(mVcdFile, tmp_51_fu_263_p2, "tmp_51_fu_263_p2");
    sc_trace(mVcdFile, tmp_41_fu_282_p2, "tmp_41_fu_282_p2");
    sc_trace(mVcdFile, tmp_54_fu_287_p2, "tmp_54_fu_287_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

poly_S3_tobytes::~poly_S3_tobytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void poly_S3_tobytes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_reg_106 = i_9_reg_310.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_106 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_1_reg_337 = c_1_fu_208_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_2_reg_348 = c_2_fu_238_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        c_3_reg_364 = c_3_fu_272_p2.read();
        tmp_42_reg_370 = tmp_42_fu_278_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_9_reg_310 = i_9_fu_131_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_125_p2.read(), ap_const_lv1_0))) {
        sum_reg_332 = sum_fu_177_p2.read();
        tmp_reg_315 = tmp_fu_145_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_33_reg_302 = tmp_33_fu_117_p1.read();
    }
}

void poly_S3_tobytes::thread_a_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_55_fu_254_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_50_fu_219_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_44_fu_157_p1.read());
    } else {
        a_coeffs_address0 = "XXXXXXXXXX";
    }
}

void poly_S3_tobytes::thread_a_coeffs_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_coeffs_address1 =  (sc_lv<10>) (tmp_53_fu_249_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_coeffs_address1 =  (sc_lv<10>) (tmp_47_fu_168_p1.read());
    } else {
        a_coeffs_address1 = "XXXXXXXXXX";
    }
}

void poly_S3_tobytes::thread_a_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        a_coeffs_ce0 = ap_const_logic_1;
    } else {
        a_coeffs_ce0 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_a_coeffs_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        a_coeffs_ce1 = ap_const_logic_1;
    } else {
        a_coeffs_ce1 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void poly_S3_tobytes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_125_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_125_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_c_1_fu_208_p2() {
    c_1_fu_208_p2 = (!tmp_45_fu_198_p2.read().is_01() || !tmp_36_fu_204_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_45_fu_198_p2.read()) + sc_biguint<8>(tmp_36_fu_204_p1.read()));
}

void poly_S3_tobytes::thread_c_2_fu_238_p2() {
    c_2_fu_238_p2 = (!tmp_38_fu_234_p1.read().is_01() || !tmp_48_fu_229_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_38_fu_234_p1.read()) + sc_biguint<8>(tmp_48_fu_229_p2.read()));
}

void poly_S3_tobytes::thread_c_3_fu_272_p2() {
    c_3_fu_272_p2 = (!tmp_40_fu_268_p1.read().is_01() || !tmp_51_fu_263_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_40_fu_268_p1.read()) + sc_biguint<8>(tmp_51_fu_263_p2.read()));
}

void poly_S3_tobytes::thread_c_fu_182_p1() {
    c_fu_182_p1 = a_coeffs_q0.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_exitcond_fu_125_p2() {
    exitcond_fu_125_p2 = (!i_reg_106.read().is_01() || !ap_const_lv8_A4.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_106.read() == ap_const_lv8_A4);
}

void poly_S3_tobytes::thread_i_9_fu_131_p2() {
    i_9_fu_131_p2 = (!i_reg_106.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_106.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void poly_S3_tobytes::thread_i_cast1_fu_121_p1() {
    i_cast1_fu_121_p1 = esl_zext<10,8>(i_reg_106.read());
}

void poly_S3_tobytes::thread_msg_address0() {
    msg_address0 =  (sc_lv<11>) (sum_cast_fu_298_p1.read());
}

void poly_S3_tobytes::thread_msg_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        msg_ce0 = ap_const_logic_1;
    } else {
        msg_ce0 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_msg_d0() {
    msg_d0 = (!tmp_42_reg_370.read().is_01() || !tmp_54_fu_287_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_42_reg_370.read()) + sc_biguint<8>(tmp_54_fu_287_p2.read()));
}

void poly_S3_tobytes::thread_msg_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        msg_we0 = ap_const_logic_1;
    } else {
        msg_we0 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_p_shl4_fu_190_p3() {
    p_shl4_fu_190_p3 = esl_concat<6,2>(tmp_35_fu_186_p1.read(), ap_const_lv2_0);
}

void poly_S3_tobytes::thread_p_shl5_fu_137_p3() {
    p_shl5_fu_137_p3 = esl_concat<8,2>(i_reg_106.read(), ap_const_lv2_0);
}

void poly_S3_tobytes::thread_sum_cast_fu_298_p1() {
    sum_cast_fu_298_p1 = esl_zext<64,9>(sum_reg_332.read());
}

void poly_S3_tobytes::thread_sum_fu_177_p2() {
    sum_fu_177_p2 = (!tmp_121_cast_fu_173_p1.read().is_01() || !tmp_33_reg_302.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_121_cast_fu_173_p1.read()) + sc_biguint<9>(tmp_33_reg_302.read()));
}

void poly_S3_tobytes::thread_tmp_121_cast_fu_173_p1() {
    tmp_121_cast_fu_173_p1 = esl_zext<9,8>(i_reg_106.read());
}

void poly_S3_tobytes::thread_tmp_33_fu_117_p1() {
    tmp_33_fu_117_p1 = msg_offset.read().range(9-1, 0);
}

void poly_S3_tobytes::thread_tmp_35_fu_186_p1() {
    tmp_35_fu_186_p1 = a_coeffs_q0.read().range(6-1, 0);
}

void poly_S3_tobytes::thread_tmp_36_fu_204_p1() {
    tmp_36_fu_204_p1 = a_coeffs_q1.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_37_fu_224_p2() {
    tmp_37_fu_224_p2 = (!ap_const_lv8_2.is_01())? sc_lv<8>(): c_1_reg_337.read() << (unsigned short)ap_const_lv8_2.to_uint();
}

void poly_S3_tobytes::thread_tmp_38_fu_234_p1() {
    tmp_38_fu_234_p1 = a_coeffs_q0.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_39_fu_258_p2() {
    tmp_39_fu_258_p2 = (!ap_const_lv8_2.is_01())? sc_lv<8>(): c_2_reg_348.read() << (unsigned short)ap_const_lv8_2.to_uint();
}

void poly_S3_tobytes::thread_tmp_40_fu_268_p1() {
    tmp_40_fu_268_p1 = a_coeffs_q1.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_41_fu_282_p2() {
    tmp_41_fu_282_p2 = (!ap_const_lv8_2.is_01())? sc_lv<8>(): c_3_reg_364.read() << (unsigned short)ap_const_lv8_2.to_uint();
}

void poly_S3_tobytes::thread_tmp_42_fu_278_p1() {
    tmp_42_fu_278_p1 = a_coeffs_q0.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_44_fu_157_p1() {
    tmp_44_fu_157_p1 = esl_zext<64,10>(tmp_s_fu_151_p2.read());
}

void poly_S3_tobytes::thread_tmp_45_fu_198_p2() {
    tmp_45_fu_198_p2 = (!p_shl4_fu_190_p3.read().is_01() || !c_fu_182_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl4_fu_190_p3.read()) - sc_biguint<8>(c_fu_182_p1.read()));
}

void poly_S3_tobytes::thread_tmp_46_fu_162_p2() {
    tmp_46_fu_162_p2 = (!ap_const_lv10_3.is_01() || !tmp_fu_145_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_3) + sc_biguint<10>(tmp_fu_145_p2.read()));
}

void poly_S3_tobytes::thread_tmp_47_fu_168_p1() {
    tmp_47_fu_168_p1 = esl_zext<64,10>(tmp_46_fu_162_p2.read());
}

void poly_S3_tobytes::thread_tmp_48_fu_229_p2() {
    tmp_48_fu_229_p2 = (!tmp_37_fu_224_p2.read().is_01() || !c_1_reg_337.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_37_fu_224_p2.read()) - sc_biguint<8>(c_1_reg_337.read()));
}

void poly_S3_tobytes::thread_tmp_49_fu_214_p2() {
    tmp_49_fu_214_p2 = (!ap_const_lv10_2.is_01() || !tmp_reg_315.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_2) + sc_biguint<10>(tmp_reg_315.read()));
}

void poly_S3_tobytes::thread_tmp_50_fu_219_p1() {
    tmp_50_fu_219_p1 = esl_zext<64,10>(tmp_49_fu_214_p2.read());
}

void poly_S3_tobytes::thread_tmp_51_fu_263_p2() {
    tmp_51_fu_263_p2 = (!tmp_39_fu_258_p2.read().is_01() || !c_2_reg_348.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_39_fu_258_p2.read()) - sc_biguint<8>(c_2_reg_348.read()));
}

void poly_S3_tobytes::thread_tmp_52_fu_244_p2() {
    tmp_52_fu_244_p2 = (!ap_const_lv10_1.is_01() || !tmp_reg_315.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(tmp_reg_315.read()));
}

void poly_S3_tobytes::thread_tmp_53_fu_249_p1() {
    tmp_53_fu_249_p1 = esl_zext<64,10>(tmp_52_fu_244_p2.read());
}

void poly_S3_tobytes::thread_tmp_54_fu_287_p2() {
    tmp_54_fu_287_p2 = (!tmp_41_fu_282_p2.read().is_01() || !c_3_reg_364.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_41_fu_282_p2.read()) - sc_biguint<8>(c_3_reg_364.read()));
}

void poly_S3_tobytes::thread_tmp_55_fu_254_p1() {
    tmp_55_fu_254_p1 = esl_zext<64,10>(tmp_reg_315.read());
}

void poly_S3_tobytes::thread_tmp_fu_145_p2() {
    tmp_fu_145_p2 = (!p_shl5_fu_137_p3.read().is_01() || !i_cast1_fu_121_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl5_fu_137_p3.read()) + sc_biguint<10>(i_cast1_fu_121_p1.read()));
}

void poly_S3_tobytes::thread_tmp_s_fu_151_p2() {
    tmp_s_fu_151_p2 = (!ap_const_lv10_4.is_01() || !tmp_fu_145_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_4) + sc_biguint<10>(tmp_fu_145_p2.read()));
}

void poly_S3_tobytes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_125_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

