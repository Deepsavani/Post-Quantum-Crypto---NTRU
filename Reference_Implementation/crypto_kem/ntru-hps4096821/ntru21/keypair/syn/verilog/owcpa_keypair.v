// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module owcpa_keypair (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pk_address0,
        pk_ce0,
        pk_we0,
        pk_d0,
        pk_address1,
        pk_ce1,
        pk_we1,
        pk_d1,
        sk_address0,
        sk_ce0,
        sk_we0,
        sk_d0,
        sk_address1,
        sk_ce1,
        sk_we1,
        sk_d1,
        seed_address0,
        seed_ce0,
        seed_q0,
        seed_address1,
        seed_ce1,
        seed_q1
);

parameter    ap_ST_fsm_state1 = 61'd1;
parameter    ap_ST_fsm_state2 = 61'd2;
parameter    ap_ST_fsm_state3 = 61'd4;
parameter    ap_ST_fsm_state4 = 61'd8;
parameter    ap_ST_fsm_state5 = 61'd16;
parameter    ap_ST_fsm_state6 = 61'd32;
parameter    ap_ST_fsm_state7 = 61'd64;
parameter    ap_ST_fsm_state8 = 61'd128;
parameter    ap_ST_fsm_state9 = 61'd256;
parameter    ap_ST_fsm_state10 = 61'd512;
parameter    ap_ST_fsm_state11 = 61'd1024;
parameter    ap_ST_fsm_state12 = 61'd2048;
parameter    ap_ST_fsm_state13 = 61'd4096;
parameter    ap_ST_fsm_state14 = 61'd8192;
parameter    ap_ST_fsm_state15 = 61'd16384;
parameter    ap_ST_fsm_state16 = 61'd32768;
parameter    ap_ST_fsm_state17 = 61'd65536;
parameter    ap_ST_fsm_state18 = 61'd131072;
parameter    ap_ST_fsm_state19 = 61'd262144;
parameter    ap_ST_fsm_state20 = 61'd524288;
parameter    ap_ST_fsm_state21 = 61'd1048576;
parameter    ap_ST_fsm_state22 = 61'd2097152;
parameter    ap_ST_fsm_state23 = 61'd4194304;
parameter    ap_ST_fsm_state24 = 61'd8388608;
parameter    ap_ST_fsm_state25 = 61'd16777216;
parameter    ap_ST_fsm_state26 = 61'd33554432;
parameter    ap_ST_fsm_state27 = 61'd67108864;
parameter    ap_ST_fsm_state28 = 61'd134217728;
parameter    ap_ST_fsm_state29 = 61'd268435456;
parameter    ap_ST_fsm_state30 = 61'd536870912;
parameter    ap_ST_fsm_state31 = 61'd1073741824;
parameter    ap_ST_fsm_state32 = 61'd2147483648;
parameter    ap_ST_fsm_state33 = 61'd4294967296;
parameter    ap_ST_fsm_state34 = 61'd8589934592;
parameter    ap_ST_fsm_state35 = 61'd17179869184;
parameter    ap_ST_fsm_state36 = 61'd34359738368;
parameter    ap_ST_fsm_state37 = 61'd68719476736;
parameter    ap_ST_fsm_state38 = 61'd137438953472;
parameter    ap_ST_fsm_state39 = 61'd274877906944;
parameter    ap_ST_fsm_state40 = 61'd549755813888;
parameter    ap_ST_fsm_state41 = 61'd1099511627776;
parameter    ap_ST_fsm_state42 = 61'd2199023255552;
parameter    ap_ST_fsm_state43 = 61'd4398046511104;
parameter    ap_ST_fsm_state44 = 61'd8796093022208;
parameter    ap_ST_fsm_state45 = 61'd17592186044416;
parameter    ap_ST_fsm_state46 = 61'd35184372088832;
parameter    ap_ST_fsm_state47 = 61'd70368744177664;
parameter    ap_ST_fsm_state48 = 61'd140737488355328;
parameter    ap_ST_fsm_state49 = 61'd281474976710656;
parameter    ap_ST_fsm_state50 = 61'd562949953421312;
parameter    ap_ST_fsm_state51 = 61'd1125899906842624;
parameter    ap_ST_fsm_state52 = 61'd2251799813685248;
parameter    ap_ST_fsm_state53 = 61'd4503599627370496;
parameter    ap_ST_fsm_state54 = 61'd9007199254740992;
parameter    ap_ST_fsm_state55 = 61'd18014398509481984;
parameter    ap_ST_fsm_state56 = 61'd36028797018963968;
parameter    ap_ST_fsm_state57 = 61'd72057594037927936;
parameter    ap_ST_fsm_state58 = 61'd144115188075855872;
parameter    ap_ST_fsm_state59 = 61'd288230376151711744;
parameter    ap_ST_fsm_state60 = 61'd576460752303423488;
parameter    ap_ST_fsm_state61 = 61'd1152921504606846976;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] pk_address0;
output   pk_ce0;
output   pk_we0;
output  [7:0] pk_d0;
output  [10:0] pk_address1;
output   pk_ce1;
output   pk_we1;
output  [7:0] pk_d1;
output  [10:0] sk_address0;
output   sk_ce0;
output   sk_we0;
output  [7:0] sk_d0;
output  [10:0] sk_address1;
output   sk_ce1;
output   sk_we1;
output  [7:0] sk_d1;
output  [11:0] seed_address0;
output   seed_ce0;
input  [7:0] seed_q0;
output  [11:0] seed_address1;
output   seed_ce1;
input  [7:0] seed_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] pk_address0;
reg pk_ce0;
reg pk_we0;
reg[7:0] pk_d0;
reg pk_ce1;
reg pk_we1;
reg[10:0] sk_address0;
reg sk_ce0;
reg sk_we0;
reg[7:0] sk_d0;
reg sk_ce1;
reg sk_we1;
reg[11:0] seed_address0;
reg seed_ce0;
reg seed_ce1;

(* fsm_encoding = "none" *) reg   [60:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] reg_562;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state60;
wire   [9:0] i_33_fu_574_p2;
reg   [9:0] i_33_reg_1240;
wire    ap_CS_fsm_state2;
wire   [63:0] tmp_i_i_fu_580_p1;
reg   [63:0] tmp_i_i_reg_1245;
wire   [0:0] exitcond_i_i_fu_568_p2;
wire   [2:0] r_2_fu_697_p2;
reg   [2:0] r_2_reg_1255;
wire    ap_CS_fsm_state3;
wire   [9:0] i_34_fu_770_p2;
reg   [9:0] i_34_reg_1264;
wire    ap_CS_fsm_state11;
reg   [9:0] f_coeffs_addr_2_reg_1269;
wire   [0:0] exitcond_i_fu_764_p2;
wire   [9:0] i_35_fu_832_p2;
reg   [9:0] i_35_reg_1277;
wire    ap_CS_fsm_state13;
reg   [9:0] h_coeffs_addr_reg_1282;
wire   [0:0] exitcond_i6_fu_826_p2;
wire   [9:0] i_36_fu_894_p2;
reg   [9:0] i_36_reg_1290;
wire    ap_CS_fsm_state15;
wire   [63:0] tmp_s_fu_900_p1;
reg   [63:0] tmp_s_reg_1295;
wire   [0:0] exitcond_fu_888_p2;
wire   [9:0] i_37_fu_932_p2;
reg   [9:0] i_37_reg_1308;
wire    ap_CS_fsm_state20;
wire   [63:0] tmp_i4_fu_938_p1;
reg   [63:0] tmp_i4_reg_1313;
wire   [0:0] exitcond1_i_fu_926_p2;
wire   [9:0] i_38_fu_964_p2;
reg   [9:0] i_38_reg_1326;
wire    ap_CS_fsm_state22;
wire   [63:0] tmp_191_i_fu_970_p1;
reg   [63:0] tmp_191_i_reg_1331;
wire   [0:0] exitcond_i7_fu_958_p2;
wire   [9:0] c_coeffs_addr_reg_1341;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state50;
wire    grp_poly_Rq_mul_fu_518_ap_ready;
wire    grp_poly_Rq_mul_fu_518_ap_done;
wire   [9:0] i_39_fu_981_p2;
reg   [9:0] i_39_reg_1354;
wire    ap_CS_fsm_state51;
reg   [9:0] h_coeffs_addr_4_reg_1359;
wire   [0:0] exitcond_i2_fu_975_p2;
wire   [8:0] i_40_fu_1017_p2;
reg   [8:0] i_40_reg_1368;
wire    ap_CS_fsm_state53;
wire   [0:0] exitcond_i3_fu_1011_p2;
wire   [11:0] tmp_120_i_fu_1048_p2;
reg   [11:0] tmp_120_i_reg_1378;
wire   [8:0] i_41_fu_1129_p2;
reg   [8:0] i_41_reg_1393;
wire    ap_CS_fsm_state59;
wire   [0:0] exitcond_i_i1_fu_1123_p2;
wire  signed [11:0] tmp_132_i_i_fu_1160_p2;
reg  signed [11:0] tmp_132_i_i_reg_1403;
reg   [9:0] b_coeffs_address0;
reg    b_coeffs_ce0;
reg    b_coeffs_we0;
wire   [15:0] b_coeffs_d0;
wire   [15:0] b_coeffs_q0;
reg   [9:0] c_coeffs_address0;
reg    c_coeffs_ce0;
reg    c_coeffs_we0;
reg   [15:0] c_coeffs_d0;
wire   [15:0] c_coeffs_q0;
reg   [9:0] s_coeffs_address0;
reg    s_coeffs_ce0;
reg    s_coeffs_we0;
wire   [15:0] s_coeffs_q0;
reg   [9:0] ai2_coeffs_address0;
reg    ai2_coeffs_ce0;
reg   [1:0] ai2_coeffs_we0;
wire   [15:0] ai2_coeffs_q0;
reg   [9:0] x1_coeffs_address0;
reg    x1_coeffs_ce0;
reg    x1_coeffs_we0;
reg   [15:0] x1_coeffs_d0;
wire   [15:0] x1_coeffs_q0;
reg    x1_coeffs_ce1;
wire   [15:0] x1_coeffs_q1;
reg   [9:0] x2_coeffs_address0;
reg    x2_coeffs_ce0;
reg   [1:0] x2_coeffs_we0;
reg   [15:0] x2_coeffs_d0;
wire   [15:0] x2_coeffs_q0;
reg   [9:0] x2_coeffs_address1;
reg    x2_coeffs_ce1;
reg   [1:0] x2_coeffs_we1;
wire   [15:0] x2_coeffs_q1;
reg   [9:0] x3_coeffs_address0;
reg    x3_coeffs_ce0;
reg    x3_coeffs_we0;
reg   [15:0] x3_coeffs_d0;
wire   [15:0] x3_coeffs_q0;
reg   [9:0] x3_coeffs_address1;
reg    x3_coeffs_ce1;
reg    x3_coeffs_we1;
wire   [15:0] x3_coeffs_d1;
wire   [15:0] x3_coeffs_q1;
reg   [9:0] x4_coeffs_address0;
reg    x4_coeffs_ce0;
reg    x4_coeffs_we0;
reg   [15:0] x4_coeffs_d0;
wire   [15:0] x4_coeffs_q0;
reg   [9:0] x5_coeffs_address0;
reg    x5_coeffs_ce0;
reg    x5_coeffs_we0;
wire   [15:0] x5_coeffs_q0;
wire    grp_sample_fixed_type_fu_499_ap_start;
wire    grp_sample_fixed_type_fu_499_ap_done;
wire    grp_sample_fixed_type_fu_499_ap_idle;
wire    grp_sample_fixed_type_fu_499_ap_ready;
wire   [9:0] grp_sample_fixed_type_fu_499_r_coeffs_address0;
wire    grp_sample_fixed_type_fu_499_r_coeffs_ce0;
wire    grp_sample_fixed_type_fu_499_r_coeffs_we0;
wire   [15:0] grp_sample_fixed_type_fu_499_r_coeffs_d0;
wire   [11:0] grp_sample_fixed_type_fu_499_u_address0;
wire    grp_sample_fixed_type_fu_499_u_ce0;
wire   [11:0] grp_sample_fixed_type_fu_499_u_address1;
wire    grp_sample_fixed_type_fu_499_u_ce1;
wire    grp_poly_S3_inv_fu_506_ap_start;
wire    grp_poly_S3_inv_fu_506_ap_done;
wire    grp_poly_S3_inv_fu_506_ap_idle;
wire    grp_poly_S3_inv_fu_506_ap_ready;
wire   [9:0] grp_poly_S3_inv_fu_506_r_coeffs_address0;
wire    grp_poly_S3_inv_fu_506_r_coeffs_ce0;
wire   [1:0] grp_poly_S3_inv_fu_506_r_coeffs_we0;
wire   [15:0] grp_poly_S3_inv_fu_506_r_coeffs_d0;
wire   [9:0] grp_poly_S3_inv_fu_506_r_coeffs_address1;
wire    grp_poly_S3_inv_fu_506_r_coeffs_ce1;
wire   [1:0] grp_poly_S3_inv_fu_506_r_coeffs_we1;
wire   [15:0] grp_poly_S3_inv_fu_506_r_coeffs_d1;
wire   [9:0] grp_poly_S3_inv_fu_506_a_coeffs_address0;
wire    grp_poly_S3_inv_fu_506_a_coeffs_ce0;
wire    grp_poly_R2_inv_fu_512_ap_start;
wire    grp_poly_R2_inv_fu_512_ap_done;
wire    grp_poly_R2_inv_fu_512_ap_idle;
wire    grp_poly_R2_inv_fu_512_ap_ready;
wire   [9:0] grp_poly_R2_inv_fu_512_r_coeffs_address0;
wire    grp_poly_R2_inv_fu_512_r_coeffs_ce0;
wire   [1:0] grp_poly_R2_inv_fu_512_r_coeffs_we0;
wire   [15:0] grp_poly_R2_inv_fu_512_r_coeffs_d0;
wire   [9:0] grp_poly_R2_inv_fu_512_a_coeffs_address0;
wire    grp_poly_R2_inv_fu_512_a_coeffs_ce0;
wire    grp_poly_Rq_mul_fu_518_ap_start;
wire    grp_poly_Rq_mul_fu_518_ap_idle;
wire   [9:0] grp_poly_Rq_mul_fu_518_r_coeffs_address0;
wire    grp_poly_Rq_mul_fu_518_r_coeffs_ce0;
wire    grp_poly_Rq_mul_fu_518_r_coeffs_we0;
wire   [15:0] grp_poly_Rq_mul_fu_518_r_coeffs_d0;
reg   [15:0] grp_poly_Rq_mul_fu_518_r_coeffs_q0;
wire   [9:0] grp_poly_Rq_mul_fu_518_a_coeffs_address0;
wire    grp_poly_Rq_mul_fu_518_a_coeffs_ce0;
reg   [15:0] grp_poly_Rq_mul_fu_518_a_coeffs_q0;
wire   [9:0] grp_poly_Rq_mul_fu_518_b_coeffs_address0;
wire    grp_poly_Rq_mul_fu_518_b_coeffs_ce0;
reg   [15:0] grp_poly_Rq_mul_fu_518_b_coeffs_q0;
wire    grp_poly_S3_tobytes_fu_525_ap_start;
wire    grp_poly_S3_tobytes_fu_525_ap_done;
wire    grp_poly_S3_tobytes_fu_525_ap_idle;
wire    grp_poly_S3_tobytes_fu_525_ap_ready;
wire   [10:0] grp_poly_S3_tobytes_fu_525_msg_address0;
wire    grp_poly_S3_tobytes_fu_525_msg_ce0;
wire    grp_poly_S3_tobytes_fu_525_msg_we0;
wire   [7:0] grp_poly_S3_tobytes_fu_525_msg_d0;
reg   [9:0] grp_poly_S3_tobytes_fu_525_msg_offset;
wire   [9:0] grp_poly_S3_tobytes_fu_525_a_coeffs_address0;
wire    grp_poly_S3_tobytes_fu_525_a_coeffs_ce0;
reg   [15:0] grp_poly_S3_tobytes_fu_525_a_coeffs_q0;
wire   [9:0] grp_poly_S3_tobytes_fu_525_a_coeffs_address1;
wire    grp_poly_S3_tobytes_fu_525_a_coeffs_ce1;
reg   [15:0] grp_poly_S3_tobytes_fu_525_a_coeffs_q1;
reg   [9:0] i_i_i_reg_400;
wire    ap_CS_fsm_state4;
reg   [9:0] i_i_reg_411;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
reg   [9:0] i_i5_reg_422;
wire    ap_CS_fsm_state14;
reg   [9:0] i_reg_433;
wire    ap_CS_fsm_state16;
reg   [9:0] i_i1_reg_444;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
reg   [9:0] i_1_i_reg_455;
wire    ap_CS_fsm_state23;
reg   [9:0] i_i2_reg_466;
wire    ap_CS_fsm_state52;
reg   [8:0] i_i3_reg_477;
wire    ap_CS_fsm_state55;
reg   [8:0] i_i_i1_reg_488;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state61;
reg    grp_sample_fixed_type_fu_499_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_poly_S3_inv_fu_506_ap_start_reg;
reg    grp_poly_R2_inv_fu_512_ap_start_reg;
wire    ap_CS_fsm_state18;
reg    grp_poly_Rq_mul_fu_518_ap_start_reg;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state56;
reg    grp_poly_S3_tobytes_fu_525_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state8;
wire   [63:0] tmp_i_fu_776_p1;
wire   [63:0] tmp_i7_fu_838_p1;
wire   [63:0] tmp_i2_fu_987_p1;
wire   [63:0] tmp_i5_fu_1031_p1;
wire   [63:0] tmp_123_i_fu_1060_p1;
wire  signed [63:0] sum_i_cast_fu_1075_p1;
wire  signed [63:0] sum2_i_cast_fu_1104_p1;
wire  signed [63:0] sum4_i_cast_fu_1114_p1;
wire   [63:0] tmp_i_i_78_fu_1143_p1;
wire   [63:0] tmp_136_i_i_fu_1172_p1;
wire   [63:0] tmp_133_i_i_fu_1185_p1;
wire   [63:0] tmp_141_i_i_fu_1218_p1;
wire   [63:0] tmp_145_i_i_fu_1232_p1;
wire   [15:0] tmp_287_i_i_i_fu_757_p2;
wire   [15:0] tmp_118_i_fu_817_p3;
wire   [15:0] tmp_118_i1_fu_879_p3;
wire   [15:0] tmp_235_cast_fu_921_p1;
wire    ap_CS_fsm_state26;
wire   [15:0] grp_fu_535_p2;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire   [7:0] tmp_210_fu_1065_p1;
wire   [7:0] tmp_212_fu_1177_p1;
wire   [3:0] tmp_24_fu_589_p4;
wire   [3:0] tmp_fu_585_p1;
wire   [4:0] tmp_279_i_i_i_cast_fu_603_p1;
wire   [4:0] tmp_278_i_i_i_cast_fu_599_p1;
wire   [4:0] r_fu_613_p2;
wire   [2:0] tmp_26_fu_619_p4;
wire   [1:0] tmp_39_fu_637_p4;
wire   [1:0] tmp_202_fu_633_p1;
wire   [1:0] fold1_i_i_i_cast_fu_647_p2;
wire   [3:0] tmp_281_i_i_i_cast_fu_653_p1;
wire   [3:0] tmp_280_i_i_i_cast_fu_629_p1;
wire   [3:0] r_1_fu_657_p2;
wire   [1:0] tmp_27_fu_663_p4;
wire   [3:0] tmp_25_fu_607_p2;
wire   [1:0] tmp_40_fu_677_p4;
wire   [1:0] fold2_i_i_i_cast_fu_687_p2;
wire   [2:0] tmp_283_i_i_i_cast_fu_693_p1;
wire   [2:0] tmp_282_i_i_i_cast_fu_673_p1;
wire   [2:0] t_fu_703_p2;
wire   [0:0] tmp_203_fu_708_p3;
wire   [2:0] c_cast_fu_716_p3;
wire   [2:0] tmp_284_i_i_i_fu_724_p2;
wire   [0:0] not_tmp_28_i_i_i_fu_733_p2;
wire   [2:0] tmp_285_i_i_i_cast_c_fu_739_p3;
wire   [2:0] tmp_286_i_i_i_fu_747_p2;
wire   [15:0] tmp_284_i_i_i_cast_fu_729_p1;
wire  signed [15:0] tmp_286_i_i_i_cast_fu_753_p1;
wire   [11:0] tmp_44_fu_781_p4;
wire   [11:0] tmp_204_fu_797_p1;
wire   [11:0] tmp_116_i_cast_fu_791_p2;
wire   [3:0] tmp_47_fu_807_p4;
wire   [11:0] tmp_46_fu_801_p2;
wire   [11:0] tmp_48_fu_843_p4;
wire   [11:0] tmp_205_fu_859_p1;
wire   [11:0] tmp_116_i1_cast_fu_853_p2;
wire   [3:0] tmp_51_fu_869_p4;
wire   [11:0] tmp_50_fu_863_p2;
wire   [15:0] tmp_206_fu_905_p2;
wire   [15:0] tmp_131_fu_911_p2;
wire   [11:0] tmp_207_fu_917_p1;
wire   [11:0] tmp_208_fu_943_p1;
wire   [11:0] tmp_i6_cast_fu_947_p2;
wire   [15:0] tmp_i4_75_fu_992_p2;
wire   [11:0] tmp_209_fu_998_p1;
wire   [9:0] tmp_i3_fu_1023_p3;
wire   [10:0] p_shl_i_fu_1036_p3;
wire   [11:0] p_shl_i_cast_fu_1044_p1;
wire   [11:0] i_i3_cast1_fu_1007_p1;
wire   [9:0] tmp_122_i_fu_1054_p2;
wire   [11:0] sum_i_fu_1070_p2;
wire   [3:0] tmp_211_fu_1080_p1;
wire   [7:0] tmp_125_i_fu_1084_p3;
wire   [7:0] grp_fu_542_p4;
wire   [11:0] sum2_i_fu_1099_p2;
wire   [11:0] sum4_i_fu_1109_p2;
wire   [9:0] tmp_i_i1_fu_1135_p3;
wire   [10:0] p_shl_i_i_fu_1148_p3;
wire   [11:0] p_shl_i_i_cast_fu_1156_p1;
wire   [11:0] i_i_i1_cast9_fu_1119_p1;
wire   [9:0] tmp_134_i_i_fu_1166_p2;
wire  signed [31:0] tmp_132_i_i_cast_fu_1182_p1;
wire   [3:0] tmp_213_fu_1190_p1;
wire   [7:0] tmp_138_i_i_fu_1194_p3;
wire   [11:0] tmp_140_i_i_fu_1209_p2;
wire  signed [31:0] tmp_140_i_i_cast_fu_1214_p1;
wire   [11:0] tmp_144_i_i_fu_1223_p2;
wire  signed [31:0] tmp_144_i_i_cast_fu_1228_p1;
reg   [60:0] ap_NS_fsm;
reg    ap_block_state6_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 61'd1;
#0 grp_sample_fixed_type_fu_499_ap_start_reg = 1'b0;
#0 grp_poly_S3_inv_fu_506_ap_start_reg = 1'b0;
#0 grp_poly_R2_inv_fu_512_ap_start_reg = 1'b0;
#0 grp_poly_Rq_mul_fu_518_ap_start_reg = 1'b0;
#0 grp_poly_S3_tobytes_fu_525_ap_start_reg = 1'b0;
end

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
b_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_coeffs_address0),
    .ce0(b_coeffs_ce0),
    .we0(b_coeffs_we0),
    .d0(b_coeffs_d0),
    .q0(b_coeffs_q0)
);

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
c_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(c_coeffs_address0),
    .ce0(c_coeffs_ce0),
    .we0(c_coeffs_we0),
    .d0(c_coeffs_d0),
    .q0(c_coeffs_q0)
);

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
s_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s_coeffs_address0),
    .ce0(s_coeffs_ce0),
    .we0(s_coeffs_we0),
    .d0(grp_poly_Rq_mul_fu_518_r_coeffs_d0),
    .q0(s_coeffs_q0)
);

owcpa_keypair_ai2_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
ai2_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ai2_coeffs_address0),
    .ce0(ai2_coeffs_ce0),
    .we0(ai2_coeffs_we0),
    .d0(grp_poly_R2_inv_fu_512_r_coeffs_d0),
    .q0(ai2_coeffs_q0)
);

owcpa_keypair_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
x1_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x1_coeffs_address0),
    .ce0(x1_coeffs_ce0),
    .we0(x1_coeffs_we0),
    .d0(x1_coeffs_d0),
    .q0(x1_coeffs_q0),
    .address1(grp_poly_S3_tobytes_fu_525_a_coeffs_address1),
    .ce1(x1_coeffs_ce1),
    .q1(x1_coeffs_q1)
);

owcpa_keypair_x2_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
x2_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x2_coeffs_address0),
    .ce0(x2_coeffs_ce0),
    .we0(x2_coeffs_we0),
    .d0(x2_coeffs_d0),
    .q0(x2_coeffs_q0),
    .address1(x2_coeffs_address1),
    .ce1(x2_coeffs_ce1),
    .we1(x2_coeffs_we1),
    .d1(grp_poly_S3_inv_fu_506_r_coeffs_d1),
    .q1(x2_coeffs_q1)
);

owcpa_keypair_x3_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
x3_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x3_coeffs_address0),
    .ce0(x3_coeffs_ce0),
    .we0(x3_coeffs_we0),
    .d0(x3_coeffs_d0),
    .q0(x3_coeffs_q0),
    .address1(x3_coeffs_address1),
    .ce1(x3_coeffs_ce1),
    .we1(x3_coeffs_we1),
    .d1(x3_coeffs_d1),
    .q1(x3_coeffs_q1)
);

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
x4_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x4_coeffs_address0),
    .ce0(x4_coeffs_ce0),
    .we0(x4_coeffs_we0),
    .d0(x4_coeffs_d0),
    .q0(x4_coeffs_q0)
);

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 821 ),
    .AddressWidth( 10 ))
x5_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x5_coeffs_address0),
    .ce0(x5_coeffs_ce0),
    .we0(x5_coeffs_we0),
    .d0(grp_poly_Rq_mul_fu_518_r_coeffs_d0),
    .q0(x5_coeffs_q0)
);

sample_fixed_type grp_sample_fixed_type_fu_499(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sample_fixed_type_fu_499_ap_start),
    .ap_done(grp_sample_fixed_type_fu_499_ap_done),
    .ap_idle(grp_sample_fixed_type_fu_499_ap_idle),
    .ap_ready(grp_sample_fixed_type_fu_499_ap_ready),
    .r_coeffs_address0(grp_sample_fixed_type_fu_499_r_coeffs_address0),
    .r_coeffs_ce0(grp_sample_fixed_type_fu_499_r_coeffs_ce0),
    .r_coeffs_we0(grp_sample_fixed_type_fu_499_r_coeffs_we0),
    .r_coeffs_d0(grp_sample_fixed_type_fu_499_r_coeffs_d0),
    .u_address0(grp_sample_fixed_type_fu_499_u_address0),
    .u_ce0(grp_sample_fixed_type_fu_499_u_ce0),
    .u_q0(seed_q0),
    .u_address1(grp_sample_fixed_type_fu_499_u_address1),
    .u_ce1(grp_sample_fixed_type_fu_499_u_ce1),
    .u_q1(seed_q1)
);

poly_S3_inv grp_poly_S3_inv_fu_506(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_inv_fu_506_ap_start),
    .ap_done(grp_poly_S3_inv_fu_506_ap_done),
    .ap_idle(grp_poly_S3_inv_fu_506_ap_idle),
    .ap_ready(grp_poly_S3_inv_fu_506_ap_ready),
    .r_coeffs_address0(grp_poly_S3_inv_fu_506_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_S3_inv_fu_506_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_S3_inv_fu_506_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_S3_inv_fu_506_r_coeffs_d0),
    .r_coeffs_q0(x2_coeffs_q0),
    .r_coeffs_address1(grp_poly_S3_inv_fu_506_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_S3_inv_fu_506_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_S3_inv_fu_506_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_S3_inv_fu_506_r_coeffs_d1),
    .r_coeffs_q1(x2_coeffs_q1),
    .a_coeffs_address0(grp_poly_S3_inv_fu_506_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_inv_fu_506_a_coeffs_ce0),
    .a_coeffs_q0(x1_coeffs_q0)
);

poly_R2_inv grp_poly_R2_inv_fu_512(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_R2_inv_fu_512_ap_start),
    .ap_done(grp_poly_R2_inv_fu_512_ap_done),
    .ap_idle(grp_poly_R2_inv_fu_512_ap_idle),
    .ap_ready(grp_poly_R2_inv_fu_512_ap_ready),
    .r_coeffs_address0(grp_poly_R2_inv_fu_512_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_R2_inv_fu_512_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_R2_inv_fu_512_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_R2_inv_fu_512_r_coeffs_d0),
    .r_coeffs_q0(ai2_coeffs_q0),
    .a_coeffs_address0(grp_poly_R2_inv_fu_512_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_R2_inv_fu_512_a_coeffs_ce0),
    .a_coeffs_q0(x3_coeffs_q0)
);

poly_Rq_mul grp_poly_Rq_mul_fu_518(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Rq_mul_fu_518_ap_start),
    .ap_done(grp_poly_Rq_mul_fu_518_ap_done),
    .ap_idle(grp_poly_Rq_mul_fu_518_ap_idle),
    .ap_ready(grp_poly_Rq_mul_fu_518_ap_ready),
    .r_coeffs_address0(grp_poly_Rq_mul_fu_518_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Rq_mul_fu_518_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Rq_mul_fu_518_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Rq_mul_fu_518_r_coeffs_d0),
    .r_coeffs_q0(grp_poly_Rq_mul_fu_518_r_coeffs_q0),
    .a_coeffs_address0(grp_poly_Rq_mul_fu_518_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Rq_mul_fu_518_a_coeffs_ce0),
    .a_coeffs_q0(grp_poly_Rq_mul_fu_518_a_coeffs_q0),
    .b_coeffs_address0(grp_poly_Rq_mul_fu_518_b_coeffs_address0),
    .b_coeffs_ce0(grp_poly_Rq_mul_fu_518_b_coeffs_ce0),
    .b_coeffs_q0(grp_poly_Rq_mul_fu_518_b_coeffs_q0)
);

poly_S3_tobytes grp_poly_S3_tobytes_fu_525(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_tobytes_fu_525_ap_start),
    .ap_done(grp_poly_S3_tobytes_fu_525_ap_done),
    .ap_idle(grp_poly_S3_tobytes_fu_525_ap_idle),
    .ap_ready(grp_poly_S3_tobytes_fu_525_ap_ready),
    .msg_address0(grp_poly_S3_tobytes_fu_525_msg_address0),
    .msg_ce0(grp_poly_S3_tobytes_fu_525_msg_ce0),
    .msg_we0(grp_poly_S3_tobytes_fu_525_msg_we0),
    .msg_d0(grp_poly_S3_tobytes_fu_525_msg_d0),
    .msg_offset(grp_poly_S3_tobytes_fu_525_msg_offset),
    .a_coeffs_address0(grp_poly_S3_tobytes_fu_525_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_tobytes_fu_525_a_coeffs_ce0),
    .a_coeffs_q0(grp_poly_S3_tobytes_fu_525_a_coeffs_q0),
    .a_coeffs_address1(grp_poly_S3_tobytes_fu_525_a_coeffs_address1),
    .a_coeffs_ce1(grp_poly_S3_tobytes_fu_525_a_coeffs_ce1),
    .a_coeffs_q1(grp_poly_S3_tobytes_fu_525_a_coeffs_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_R2_inv_fu_512_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_poly_R2_inv_fu_512_ap_start_reg <= 1'b1;
        end else if ((grp_poly_R2_inv_fu_512_ap_ready == 1'b1)) begin
            grp_poly_R2_inv_fu_512_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Rq_mul_fu_518_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | ((exitcond_i3_fu_1011_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53)) | ((exitcond_i7_fu_958_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22)) | ((1'b1 == ap_CS_fsm_state15) & (exitcond_fu_888_p2 == 1'd1)))) begin
            grp_poly_Rq_mul_fu_518_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Rq_mul_fu_518_ap_ready == 1'b1)) begin
            grp_poly_Rq_mul_fu_518_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_inv_fu_506_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_poly_S3_inv_fu_506_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_inv_fu_506_ap_ready == 1'b1)) begin
            grp_poly_S3_inv_fu_506_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_tobytes_fu_525_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
            grp_poly_S3_tobytes_fu_525_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_tobytes_fu_525_ap_ready == 1'b1)) begin
            grp_poly_S3_tobytes_fu_525_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sample_fixed_type_fu_499_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_sample_fixed_type_fu_499_ap_start_reg <= 1'b1;
        end else if ((grp_sample_fixed_type_fu_499_ap_ready == 1'b1)) begin
            grp_sample_fixed_type_fu_499_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (exitcond1_i_fu_926_p2 == 1'd1))) begin
        i_1_i_reg_455 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        i_1_i_reg_455 <= i_38_reg_1326;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_i1_reg_444 <= i_37_reg_1308;
    end else if (((grp_poly_R2_inv_fu_512_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        i_i1_reg_444 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        i_i2_reg_466 <= i_39_reg_1354;
    end else if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
        i_i2_reg_466 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i2_fu_975_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
        i_i3_reg_477 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        i_i3_reg_477 <= i_40_reg_1368;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond_i_fu_764_p2 == 1'd1))) begin
        i_i5_reg_422 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        i_i5_reg_422 <= i_35_reg_1277;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        i_i_i1_reg_488 <= i_41_reg_1393;
    end else if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
        i_i_i1_reg_488 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_i_i_reg_400 <= i_33_reg_1240;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_i_i_reg_400 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_i_reg_411 <= i_34_reg_1264;
    end else if (((grp_poly_S3_tobytes_fu_525_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_i_reg_411 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond_i6_fu_826_p2 == 1'd1))) begin
        i_reg_433 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i_reg_433 <= i_36_reg_1290;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond_i_fu_764_p2 == 1'd0))) begin
        f_coeffs_addr_2_reg_1269 <= tmp_i_fu_776_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (exitcond_i2_fu_975_p2 == 1'd0))) begin
        h_coeffs_addr_4_reg_1359 <= tmp_i2_fu_987_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond_i6_fu_826_p2 == 1'd0))) begin
        h_coeffs_addr_reg_1282 <= tmp_i7_fu_838_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_33_reg_1240 <= i_33_fu_574_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_34_reg_1264 <= i_34_fu_770_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_35_reg_1277 <= i_35_fu_832_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_36_reg_1290 <= i_36_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_37_reg_1308 <= i_37_fu_932_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_38_reg_1326 <= i_38_fu_964_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        i_39_reg_1354 <= i_39_fu_981_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        i_40_reg_1368 <= i_40_fu_1017_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        i_41_reg_1393 <= i_41_fu_1129_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        r_2_reg_1255 <= r_2_fu_697_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54))) begin
        reg_562 <= {{x3_coeffs_q0[11:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (exitcond_i3_fu_1011_p2 == 1'd0))) begin
        tmp_120_i_reg_1378 <= tmp_120_i_fu_1048_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) & (exitcond_i_i1_fu_1123_p2 == 1'd0))) begin
        tmp_132_i_i_reg_1403 <= tmp_132_i_i_fu_1160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond_i7_fu_958_p2 == 1'd0))) begin
        tmp_191_i_reg_1331[9 : 0] <= tmp_191_i_fu_970_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (exitcond1_i_fu_926_p2 == 1'd0))) begin
        tmp_i4_reg_1313[9 : 0] <= tmp_i4_fu_938_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_i_i_fu_568_p2 == 1'd0))) begin
        tmp_i_i_reg_1245[9 : 0] <= tmp_i_i_fu_580_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (exitcond_fu_888_p2 == 1'd0))) begin
        tmp_s_reg_1295[9 : 0] <= tmp_s_fu_900_p1[9 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ai2_coeffs_address0 = tmp_191_i_fu_970_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        ai2_coeffs_address0 = grp_poly_R2_inv_fu_512_r_coeffs_address0;
    end else begin
        ai2_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ai2_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        ai2_coeffs_ce0 = grp_poly_R2_inv_fu_512_r_coeffs_ce0;
    end else begin
        ai2_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ai2_coeffs_we0 = grp_poly_R2_inv_fu_512_r_coeffs_we0;
    end else begin
        ai2_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond_i_i1_fu_1123_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_i1_fu_1123_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        b_coeffs_address0 = tmp_i4_reg_1313;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        b_coeffs_address0 = grp_poly_Rq_mul_fu_518_b_coeffs_address0;
    end else begin
        b_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        b_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        b_coeffs_ce0 = grp_poly_Rq_mul_fu_518_b_coeffs_ce0;
    end else begin
        b_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        b_coeffs_we0 = 1'b1;
    end else begin
        b_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26))) begin
        c_coeffs_address0 = c_coeffs_addr_reg_1341;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        c_coeffs_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28))) begin
        c_coeffs_address0 = grp_poly_Rq_mul_fu_518_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        c_coeffs_address0 = grp_poly_Rq_mul_fu_518_r_coeffs_address0;
    end else begin
        c_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        c_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28))) begin
        c_coeffs_ce0 = grp_poly_Rq_mul_fu_518_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        c_coeffs_ce0 = grp_poly_Rq_mul_fu_518_r_coeffs_ce0;
    end else begin
        c_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26))) begin
        c_coeffs_d0 = grp_fu_535_p2;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        c_coeffs_d0 = grp_poly_Rq_mul_fu_518_r_coeffs_d0;
    end else begin
        c_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26))) begin
        c_coeffs_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        c_coeffs_we0 = grp_poly_Rq_mul_fu_518_r_coeffs_we0;
    end else begin
        c_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_poly_Rq_mul_fu_518_a_coeffs_q0 = x5_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_poly_Rq_mul_fu_518_a_coeffs_q0 = s_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_poly_Rq_mul_fu_518_a_coeffs_q0 = c_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_poly_Rq_mul_fu_518_a_coeffs_q0 = x4_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_poly_Rq_mul_fu_518_a_coeffs_q0 = x2_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_518_a_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state58))) begin
        grp_poly_Rq_mul_fu_518_b_coeffs_q0 = x2_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_poly_Rq_mul_fu_518_b_coeffs_q0 = s_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_poly_Rq_mul_fu_518_b_coeffs_q0 = x4_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_poly_Rq_mul_fu_518_b_coeffs_q0 = b_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_poly_Rq_mul_fu_518_b_coeffs_q0 = x1_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_518_b_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state48))) begin
        grp_poly_Rq_mul_fu_518_r_coeffs_q0 = x5_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        grp_poly_Rq_mul_fu_518_r_coeffs_q0 = x4_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_poly_Rq_mul_fu_518_r_coeffs_q0 = s_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_poly_Rq_mul_fu_518_r_coeffs_q0 = c_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_poly_Rq_mul_fu_518_r_coeffs_q0 = x3_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_518_r_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_poly_S3_tobytes_fu_525_a_coeffs_q0 = x2_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_poly_S3_tobytes_fu_525_a_coeffs_q0 = x1_coeffs_q0;
    end else begin
        grp_poly_S3_tobytes_fu_525_a_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_poly_S3_tobytes_fu_525_a_coeffs_q1 = x2_coeffs_q1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_poly_S3_tobytes_fu_525_a_coeffs_q1 = x1_coeffs_q1;
    end else begin
        grp_poly_S3_tobytes_fu_525_a_coeffs_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_poly_S3_tobytes_fu_525_msg_offset = 10'd164;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_poly_S3_tobytes_fu_525_msg_offset = 10'd0;
    end else begin
        grp_poly_S3_tobytes_fu_525_msg_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        pk_address0 = tmp_145_i_i_fu_1232_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        pk_address0 = tmp_133_i_i_fu_1185_p1;
    end else begin
        pk_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60))) begin
        pk_ce0 = 1'b1;
    end else begin
        pk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        pk_ce1 = 1'b1;
    end else begin
        pk_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        pk_d0 = reg_562;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        pk_d0 = tmp_212_fu_1177_p1;
    end else begin
        pk_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60))) begin
        pk_we0 = 1'b1;
    end else begin
        pk_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        pk_we1 = 1'b1;
    end else begin
        pk_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        s_coeffs_address0 = grp_poly_Rq_mul_fu_518_b_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        s_coeffs_address0 = grp_poly_Rq_mul_fu_518_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        s_coeffs_address0 = grp_poly_Rq_mul_fu_518_r_coeffs_address0;
    end else begin
        s_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        s_coeffs_ce0 = grp_poly_Rq_mul_fu_518_b_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        s_coeffs_ce0 = grp_poly_Rq_mul_fu_518_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        s_coeffs_ce0 = grp_poly_Rq_mul_fu_518_r_coeffs_ce0;
    end else begin
        s_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        s_coeffs_we0 = grp_poly_Rq_mul_fu_518_r_coeffs_we0;
    end else begin
        s_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        seed_address0 = tmp_i_i_fu_580_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_address0 = grp_sample_fixed_type_fu_499_u_address0;
    end else begin
        seed_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        seed_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_ce0 = grp_sample_fixed_type_fu_499_u_ce0;
    end else begin
        seed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        seed_ce1 = grp_sample_fixed_type_fu_499_u_ce1;
    end else begin
        seed_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        sk_address0 = sum4_i_cast_fu_1114_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        sk_address0 = sum_i_cast_fu_1075_p1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        sk_address0 = grp_poly_S3_tobytes_fu_525_msg_address0;
    end else begin
        sk_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54))) begin
        sk_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        sk_ce0 = grp_poly_S3_tobytes_fu_525_msg_ce0;
    end else begin
        sk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        sk_ce1 = 1'b1;
    end else begin
        sk_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        sk_d0 = reg_562;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        sk_d0 = tmp_210_fu_1065_p1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        sk_d0 = grp_poly_S3_tobytes_fu_525_msg_d0;
    end else begin
        sk_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54))) begin
        sk_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state10))) begin
        sk_we0 = grp_poly_S3_tobytes_fu_525_msg_we0;
    end else begin
        sk_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        sk_we1 = 1'b1;
    end else begin
        sk_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x1_coeffs_address0 = f_coeffs_addr_2_reg_1269;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x1_coeffs_address0 = tmp_i_fu_776_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x1_coeffs_address0 = tmp_i_i_reg_1245;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_address0 = 64'd820;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x1_coeffs_address0 = grp_poly_S3_tobytes_fu_525_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state50))) begin
        x1_coeffs_address0 = grp_poly_Rq_mul_fu_518_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x1_coeffs_address0 = grp_poly_S3_inv_fu_506_a_coeffs_address0;
    end else begin
        x1_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state2))) begin
        x1_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x1_coeffs_ce0 = grp_poly_S3_tobytes_fu_525_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state50))) begin
        x1_coeffs_ce0 = grp_poly_Rq_mul_fu_518_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x1_coeffs_ce0 = grp_poly_S3_inv_fu_506_a_coeffs_ce0;
    end else begin
        x1_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x1_coeffs_ce1 = grp_poly_S3_tobytes_fu_525_a_coeffs_ce1;
    end else begin
        x1_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x1_coeffs_d0 = tmp_118_i_fu_817_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x1_coeffs_d0 = tmp_287_i_i_i_fu_757_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_d0 = 16'd0;
    end else begin
        x1_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state2) & (exitcond_i_i_fu_568_p2 == 1'd1)))) begin
        x1_coeffs_we0 = 1'b1;
    end else begin
        x1_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        x2_coeffs_address0 = tmp_s_reg_1295;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x2_coeffs_address0 = grp_poly_S3_tobytes_fu_525_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state58))) begin
        x2_coeffs_address0 = grp_poly_Rq_mul_fu_518_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        x2_coeffs_address0 = grp_poly_Rq_mul_fu_518_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_address0 = grp_poly_S3_inv_fu_506_r_coeffs_address0;
    end else begin
        x2_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        x2_coeffs_address1 = grp_poly_S3_tobytes_fu_525_a_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_address1 = grp_poly_S3_inv_fu_506_r_coeffs_address1;
    end else begin
        x2_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        x2_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        x2_coeffs_ce0 = grp_poly_S3_tobytes_fu_525_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state58))) begin
        x2_coeffs_ce0 = grp_poly_Rq_mul_fu_518_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        x2_coeffs_ce0 = grp_poly_Rq_mul_fu_518_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_ce0 = grp_poly_S3_inv_fu_506_r_coeffs_ce0;
    end else begin
        x2_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        x2_coeffs_ce1 = grp_poly_S3_tobytes_fu_525_a_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_ce1 = grp_poly_S3_inv_fu_506_r_coeffs_ce1;
    end else begin
        x2_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        x2_coeffs_d0 = tmp_235_cast_fu_921_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_d0 = grp_poly_S3_inv_fu_506_r_coeffs_d0;
    end else begin
        x2_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        x2_coeffs_we0 = 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_we0 = grp_poly_S3_inv_fu_506_r_coeffs_we0;
    end else begin
        x2_coeffs_we0 = 2'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_we1 = grp_poly_S3_inv_fu_506_r_coeffs_we1;
    end else begin
        x2_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        x3_coeffs_address0 = tmp_136_i_i_fu_1172_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        x3_coeffs_address0 = tmp_123_i_fu_1060_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        x3_coeffs_address0 = tmp_i2_fu_987_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        x3_coeffs_address0 = tmp_i4_fu_938_p1;
    end else if (((1'b1 == ap_CS_fsm_state15) & (exitcond_fu_888_p2 == 1'd0))) begin
        x3_coeffs_address0 = tmp_s_fu_900_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        x3_coeffs_address0 = h_coeffs_addr_reg_1282;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_address0 = tmp_i7_fu_838_p1;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state50))) begin
        x3_coeffs_address0 = grp_poly_Rq_mul_fu_518_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x3_coeffs_address0 = grp_poly_R2_inv_fu_512_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x3_coeffs_address0 = grp_sample_fixed_type_fu_499_r_coeffs_address0;
    end else begin
        x3_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        x3_coeffs_address1 = tmp_i_i_78_fu_1143_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        x3_coeffs_address1 = tmp_i5_fu_1031_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        x3_coeffs_address1 = h_coeffs_addr_4_reg_1359;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        x3_coeffs_address1 = 64'd820;
    end else begin
        x3_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state13) | ((1'b1 == ap_CS_fsm_state15) & (exitcond_fu_888_p2 == 1'd0)))) begin
        x3_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state50))) begin
        x3_coeffs_ce0 = grp_poly_Rq_mul_fu_518_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x3_coeffs_ce0 = grp_poly_R2_inv_fu_512_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x3_coeffs_ce0 = grp_sample_fixed_type_fu_499_r_coeffs_ce0;
    end else begin
        x3_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state51))) begin
        x3_coeffs_ce1 = 1'b1;
    end else begin
        x3_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        x3_coeffs_d0 = tmp_118_i1_fu_879_p3;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state50))) begin
        x3_coeffs_d0 = grp_poly_Rq_mul_fu_518_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x3_coeffs_d0 = grp_sample_fixed_type_fu_499_r_coeffs_d0;
    end else begin
        x3_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        x3_coeffs_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state50))) begin
        x3_coeffs_we0 = grp_poly_Rq_mul_fu_518_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x3_coeffs_we0 = grp_sample_fixed_type_fu_499_r_coeffs_we0;
    end else begin
        x3_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        x3_coeffs_we1 = 1'b1;
    end else begin
        x3_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        x4_coeffs_address0 = tmp_191_i_reg_1331;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_518_b_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state24))) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_518_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_518_r_coeffs_address0;
    end else begin
        x4_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        x4_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state28))) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_518_b_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state24))) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_518_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_518_r_coeffs_ce0;
    end else begin
        x4_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        x4_coeffs_d0 = ai2_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        x4_coeffs_d0 = grp_poly_Rq_mul_fu_518_r_coeffs_d0;
    end else begin
        x4_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        x4_coeffs_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state34))) begin
        x4_coeffs_we0 = grp_poly_Rq_mul_fu_518_r_coeffs_we0;
    end else begin
        x4_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state50))) begin
        x5_coeffs_address0 = grp_poly_Rq_mul_fu_518_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state48))) begin
        x5_coeffs_address0 = grp_poly_Rq_mul_fu_518_r_coeffs_address0;
    end else begin
        x5_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state50))) begin
        x5_coeffs_ce0 = grp_poly_Rq_mul_fu_518_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state48))) begin
        x5_coeffs_ce0 = grp_poly_Rq_mul_fu_518_r_coeffs_ce0;
    end else begin
        x5_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state48))) begin
        x5_coeffs_we0 = grp_poly_Rq_mul_fu_518_r_coeffs_we0;
    end else begin
        x5_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_i_i_fu_568_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_poly_S3_tobytes_fu_525_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_poly_S3_tobytes_fu_525_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (exitcond_i_fu_764_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (exitcond_i6_fu_826_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (exitcond_fu_888_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_poly_R2_inv_fu_512_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (exitcond1_i_fu_926_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            if (((exitcond_i7_fu_958_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state24 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((exitcond_i2_fu_975_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state53 : begin
            if (((exitcond_i3_fu_1011_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state56 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((grp_poly_Rq_mul_fu_518_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((exitcond_i_i1_fu_1123_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state6_on_subcall_done = ((grp_poly_S3_inv_fu_506_ap_done == 1'b0) | (grp_sample_fixed_type_fu_499_ap_done == 1'b0));
end

assign b_coeffs_d0 = tmp_i6_cast_fu_947_p2;

assign c_cast_fu_716_p3 = ((tmp_203_fu_708_p3[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign c_coeffs_addr_reg_1341 = 64'd0;

assign exitcond1_i_fu_926_p2 = ((i_i1_reg_444 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_fu_888_p2 = ((i_reg_433 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_975_p2 = ((i_i2_reg_466 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_i3_fu_1011_p2 = ((i_i3_reg_477 == 9'd410) ? 1'b1 : 1'b0);

assign exitcond_i6_fu_826_p2 = ((i_i5_reg_422 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_i7_fu_958_p2 = ((i_1_i_reg_455 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_i_fu_764_p2 = ((i_i_reg_411 == 10'd821) ? 1'b1 : 1'b0);

assign exitcond_i_i1_fu_1123_p2 = ((i_i_i1_reg_488 == 9'd410) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_568_p2 = ((i_i_i_reg_400 == 10'd820) ? 1'b1 : 1'b0);

assign fold1_i_i_i_cast_fu_647_p2 = (tmp_39_fu_637_p4 + tmp_202_fu_633_p1);

assign fold2_i_i_i_cast_fu_687_p2 = (fold1_i_i_i_cast_fu_647_p2 + tmp_40_fu_677_p4);

assign grp_fu_535_p2 = (c_coeffs_q0 + 16'd2);

assign grp_fu_542_p4 = {{x3_coeffs_q1[15:8]}};

assign grp_poly_R2_inv_fu_512_ap_start = grp_poly_R2_inv_fu_512_ap_start_reg;

assign grp_poly_Rq_mul_fu_518_ap_start = grp_poly_Rq_mul_fu_518_ap_start_reg;

assign grp_poly_S3_inv_fu_506_ap_start = grp_poly_S3_inv_fu_506_ap_start_reg;

assign grp_poly_S3_tobytes_fu_525_ap_start = grp_poly_S3_tobytes_fu_525_ap_start_reg;

assign grp_sample_fixed_type_fu_499_ap_start = grp_sample_fixed_type_fu_499_ap_start_reg;

assign i_33_fu_574_p2 = (i_i_i_reg_400 + 10'd1);

assign i_34_fu_770_p2 = (i_i_reg_411 + 10'd1);

assign i_35_fu_832_p2 = (i_i5_reg_422 + 10'd1);

assign i_36_fu_894_p2 = (i_reg_433 + 10'd1);

assign i_37_fu_932_p2 = (i_i1_reg_444 + 10'd1);

assign i_38_fu_964_p2 = (i_1_i_reg_455 + 10'd1);

assign i_39_fu_981_p2 = (i_i2_reg_466 + 10'd1);

assign i_40_fu_1017_p2 = (i_i3_reg_477 + 9'd1);

assign i_41_fu_1129_p2 = (i_i_i1_reg_488 + 9'd1);

assign i_i3_cast1_fu_1007_p1 = i_i3_reg_477;

assign i_i_i1_cast9_fu_1119_p1 = i_i_i1_reg_488;

assign not_tmp_28_i_i_i_fu_733_p2 = (tmp_203_fu_708_p3 ^ 1'd1);

assign p_shl_i_cast_fu_1044_p1 = p_shl_i_fu_1036_p3;

assign p_shl_i_fu_1036_p3 = {{i_i3_reg_477}, {2'd0}};

assign p_shl_i_i_cast_fu_1156_p1 = p_shl_i_i_fu_1148_p3;

assign p_shl_i_i_fu_1148_p3 = {{i_i_i1_reg_488}, {2'd0}};

assign pk_address1 = tmp_141_i_i_fu_1218_p1;

assign pk_d1 = (tmp_138_i_i_fu_1194_p3 | grp_fu_542_p4);

assign r_1_fu_657_p2 = (tmp_281_i_i_i_cast_fu_653_p1 + tmp_280_i_i_i_cast_fu_629_p1);

assign r_2_fu_697_p2 = (tmp_283_i_i_i_cast_fu_693_p1 + tmp_282_i_i_i_cast_fu_673_p1);

assign r_fu_613_p2 = (tmp_279_i_i_i_cast_fu_603_p1 + tmp_278_i_i_i_cast_fu_599_p1);

assign seed_address1 = grp_sample_fixed_type_fu_499_u_address1;

assign sk_address1 = sum2_i_cast_fu_1104_p1;

assign sk_d1 = (tmp_125_i_fu_1084_p3 | grp_fu_542_p4);

assign sum2_i_cast_fu_1104_p1 = $signed(sum2_i_fu_1099_p2);

assign sum2_i_fu_1099_p2 = (12'd329 + tmp_120_i_reg_1378);

assign sum4_i_cast_fu_1114_p1 = $signed(sum4_i_fu_1109_p2);

assign sum4_i_fu_1109_p2 = (12'd330 + tmp_120_i_reg_1378);

assign sum_i_cast_fu_1075_p1 = $signed(sum_i_fu_1070_p2);

assign sum_i_fu_1070_p2 = (12'd328 + tmp_120_i_reg_1378);

assign t_fu_703_p2 = ($signed(3'd5) + $signed(r_2_reg_1255));

assign tmp_116_i1_cast_fu_853_p2 = (12'd0 - tmp_48_fu_843_p4);

assign tmp_116_i_cast_fu_791_p2 = (12'd0 - tmp_44_fu_781_p4);

assign tmp_118_i1_fu_879_p3 = {{tmp_51_fu_869_p4}, {tmp_50_fu_863_p2}};

assign tmp_118_i_fu_817_p3 = {{tmp_47_fu_807_p4}, {tmp_46_fu_801_p2}};

assign tmp_120_i_fu_1048_p2 = (p_shl_i_cast_fu_1044_p1 - i_i3_cast1_fu_1007_p1);

assign tmp_122_i_fu_1054_p2 = (tmp_i3_fu_1023_p3 | 10'd1);

assign tmp_123_i_fu_1060_p1 = tmp_122_i_fu_1054_p2;

assign tmp_125_i_fu_1084_p3 = {{tmp_211_fu_1080_p1}, {4'd0}};

assign tmp_131_fu_911_p2 = (tmp_206_fu_905_p2 - x3_coeffs_q0);

assign tmp_132_i_i_cast_fu_1182_p1 = tmp_132_i_i_reg_1403;

assign tmp_132_i_i_fu_1160_p2 = (p_shl_i_i_cast_fu_1156_p1 - i_i_i1_cast9_fu_1119_p1);

assign tmp_133_i_i_fu_1185_p1 = $unsigned(tmp_132_i_i_cast_fu_1182_p1);

assign tmp_134_i_i_fu_1166_p2 = (tmp_i_i1_fu_1135_p3 | 10'd1);

assign tmp_136_i_i_fu_1172_p1 = tmp_134_i_i_fu_1166_p2;

assign tmp_138_i_i_fu_1194_p3 = {{tmp_213_fu_1190_p1}, {4'd0}};

assign tmp_140_i_i_cast_fu_1214_p1 = $signed(tmp_140_i_i_fu_1209_p2);

assign tmp_140_i_i_fu_1209_p2 = ($signed(12'd1) + $signed(tmp_132_i_i_reg_1403));

assign tmp_141_i_i_fu_1218_p1 = $unsigned(tmp_140_i_i_cast_fu_1214_p1);

assign tmp_144_i_i_cast_fu_1228_p1 = $signed(tmp_144_i_i_fu_1223_p2);

assign tmp_144_i_i_fu_1223_p2 = ($signed(12'd2) + $signed(tmp_132_i_i_reg_1403));

assign tmp_145_i_i_fu_1232_p1 = $unsigned(tmp_144_i_i_cast_fu_1228_p1);

assign tmp_191_i_fu_970_p1 = i_1_i_reg_455;

assign tmp_202_fu_633_p1 = seed_q0[1:0];

assign tmp_203_fu_708_p3 = t_fu_703_p2[32'd2];

assign tmp_204_fu_797_p1 = x1_coeffs_q0[11:0];

assign tmp_205_fu_859_p1 = x3_coeffs_q0[11:0];

assign tmp_206_fu_905_p2 = x3_coeffs_q0 << 16'd2;

assign tmp_207_fu_917_p1 = tmp_131_fu_911_p2[11:0];

assign tmp_208_fu_943_p1 = x3_coeffs_q0[11:0];

assign tmp_209_fu_998_p1 = tmp_i4_75_fu_992_p2[11:0];

assign tmp_210_fu_1065_p1 = x3_coeffs_q1[7:0];

assign tmp_211_fu_1080_p1 = x3_coeffs_q0[3:0];

assign tmp_212_fu_1177_p1 = x3_coeffs_q1[7:0];

assign tmp_213_fu_1190_p1 = x3_coeffs_q0[3:0];

assign tmp_235_cast_fu_921_p1 = tmp_207_fu_917_p1;

assign tmp_24_fu_589_p4 = {{seed_q0[7:4]}};

assign tmp_25_fu_607_p2 = (tmp_24_fu_589_p4 + tmp_fu_585_p1);

assign tmp_26_fu_619_p4 = {{r_fu_613_p2[4:2]}};

assign tmp_278_i_i_i_cast_fu_599_p1 = tmp_24_fu_589_p4;

assign tmp_279_i_i_i_cast_fu_603_p1 = tmp_fu_585_p1;

assign tmp_27_fu_663_p4 = {{r_1_fu_657_p2[3:2]}};

assign tmp_280_i_i_i_cast_fu_629_p1 = tmp_26_fu_619_p4;

assign tmp_281_i_i_i_cast_fu_653_p1 = fold1_i_i_i_cast_fu_647_p2;

assign tmp_282_i_i_i_cast_fu_673_p1 = tmp_27_fu_663_p4;

assign tmp_283_i_i_i_cast_fu_693_p1 = fold2_i_i_i_cast_fu_687_p2;

assign tmp_284_i_i_i_cast_fu_729_p1 = tmp_284_i_i_i_fu_724_p2;

assign tmp_284_i_i_i_fu_724_p2 = (r_2_reg_1255 & c_cast_fu_716_p3);

assign tmp_285_i_i_i_cast_c_fu_739_p3 = ((not_tmp_28_i_i_i_fu_733_p2[0:0] === 1'b1) ? 3'd7 : 3'd0);

assign tmp_286_i_i_i_cast_fu_753_p1 = $signed(tmp_286_i_i_i_fu_747_p2);

assign tmp_286_i_i_i_fu_747_p2 = (tmp_285_i_i_i_cast_c_fu_739_p3 & t_fu_703_p2);

assign tmp_287_i_i_i_fu_757_p2 = (tmp_286_i_i_i_cast_fu_753_p1 ^ tmp_284_i_i_i_cast_fu_729_p1);

assign tmp_39_fu_637_p4 = {{seed_q0[5:4]}};

assign tmp_40_fu_677_p4 = {{tmp_25_fu_607_p2[3:2]}};

assign tmp_44_fu_781_p4 = {{x1_coeffs_q0[12:1]}};

assign tmp_46_fu_801_p2 = (tmp_204_fu_797_p1 | tmp_116_i_cast_fu_791_p2);

assign tmp_47_fu_807_p4 = {{x1_coeffs_q0[15:12]}};

assign tmp_48_fu_843_p4 = {{x3_coeffs_q0[12:1]}};

assign tmp_50_fu_863_p2 = (tmp_205_fu_859_p1 | tmp_116_i1_cast_fu_853_p2);

assign tmp_51_fu_869_p4 = {{x3_coeffs_q0[15:12]}};

assign tmp_fu_585_p1 = seed_q0[3:0];

assign tmp_i2_fu_987_p1 = i_i2_reg_466;

assign tmp_i3_fu_1023_p3 = {{i_i3_reg_477}, {1'd0}};

assign tmp_i4_75_fu_992_p2 = (x3_coeffs_q0 - x3_coeffs_q1);

assign tmp_i4_fu_938_p1 = i_i1_reg_444;

assign tmp_i5_fu_1031_p1 = tmp_i3_fu_1023_p3;

assign tmp_i6_cast_fu_947_p2 = (12'd0 - tmp_208_fu_943_p1);

assign tmp_i7_fu_838_p1 = i_i5_reg_422;

assign tmp_i_fu_776_p1 = i_i_reg_411;

assign tmp_i_i1_fu_1135_p3 = {{i_i_i1_reg_488}, {1'd0}};

assign tmp_i_i_78_fu_1143_p1 = tmp_i_i1_fu_1135_p3;

assign tmp_i_i_fu_580_p1 = i_i_i_reg_400;

assign tmp_s_fu_900_p1 = i_reg_433;

assign x3_coeffs_d1 = tmp_209_fu_998_p1;

always @ (posedge ap_clk) begin
    tmp_i_i_reg_1245[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_s_reg_1295[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_i4_reg_1313[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_191_i_reg_1331[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //owcpa_keypair
