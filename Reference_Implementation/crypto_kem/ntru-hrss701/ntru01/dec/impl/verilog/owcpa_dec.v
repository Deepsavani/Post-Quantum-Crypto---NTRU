// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module owcpa_dec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rm_address0,
        rm_ce0,
        rm_we0,
        rm_d0,
        ciphertext_address0,
        ciphertext_ce0,
        ciphertext_q0,
        ciphertext_address1,
        ciphertext_ce1,
        ciphertext_q1,
        secretkey_address0,
        secretkey_ce0,
        secretkey_q0,
        secretkey_address1,
        secretkey_ce1,
        secretkey_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 32'd1;
parameter    ap_ST_fsm_state2 = 32'd2;
parameter    ap_ST_fsm_state3 = 32'd4;
parameter    ap_ST_fsm_state4 = 32'd8;
parameter    ap_ST_fsm_state5 = 32'd16;
parameter    ap_ST_fsm_state6 = 32'd32;
parameter    ap_ST_fsm_state7 = 32'd64;
parameter    ap_ST_fsm_state8 = 32'd128;
parameter    ap_ST_fsm_state9 = 32'd256;
parameter    ap_ST_fsm_state10 = 32'd512;
parameter    ap_ST_fsm_state11 = 32'd1024;
parameter    ap_ST_fsm_state12 = 32'd2048;
parameter    ap_ST_fsm_state13 = 32'd4096;
parameter    ap_ST_fsm_state14 = 32'd8192;
parameter    ap_ST_fsm_state15 = 32'd16384;
parameter    ap_ST_fsm_state16 = 32'd32768;
parameter    ap_ST_fsm_state17 = 32'd65536;
parameter    ap_ST_fsm_state18 = 32'd131072;
parameter    ap_ST_fsm_state19 = 32'd262144;
parameter    ap_ST_fsm_state20 = 32'd524288;
parameter    ap_ST_fsm_state21 = 32'd1048576;
parameter    ap_ST_fsm_state22 = 32'd2097152;
parameter    ap_ST_fsm_state23 = 32'd4194304;
parameter    ap_ST_fsm_state24 = 32'd8388608;
parameter    ap_ST_fsm_state25 = 32'd16777216;
parameter    ap_ST_fsm_state26 = 32'd33554432;
parameter    ap_ST_fsm_state27 = 32'd67108864;
parameter    ap_ST_fsm_state28 = 32'd134217728;
parameter    ap_ST_fsm_state29 = 32'd268435456;
parameter    ap_ST_fsm_state30 = 32'd536870912;
parameter    ap_ST_fsm_state31 = 32'd1073741824;
parameter    ap_ST_fsm_state32 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] rm_address0;
output   rm_ce0;
output   rm_we0;
output  [7:0] rm_d0;
output  [10:0] ciphertext_address0;
output   ciphertext_ce0;
input  [7:0] ciphertext_q0;
output  [10:0] ciphertext_address1;
output   ciphertext_ce1;
input  [7:0] ciphertext_q1;
output  [10:0] secretkey_address0;
output   secretkey_ce0;
input  [7:0] secretkey_q0;
output  [10:0] secretkey_address1;
output   secretkey_ce1;
input  [7:0] secretkey_q1;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rm_ce0;
reg rm_we0;
reg[10:0] secretkey_address0;
reg secretkey_ce0;
reg secretkey_ce1;

(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] b_coeffs_addr_reg_717;
wire    ap_CS_fsm_state3;
wire   [9:0] i_17_fu_358_p2;
reg   [9:0] i_17_reg_726;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond_i_fu_352_p2;
wire   [12:0] phitmp_fu_395_p2;
wire    ap_CS_fsm_state5;
wire   [9:0] i_18_fu_407_p2;
reg   [9:0] i_18_reg_744;
wire    ap_CS_fsm_state7;
reg   [9:0] liftm_coeffs_addr_reg_749;
wire   [0:0] exitcond_i7_fu_401_p2;
wire   [9:0] i_19_fu_469_p2;
reg   [9:0] i_19_reg_757;
wire    ap_CS_fsm_state20;
reg   [9:0] b_coeffs_addr_11_reg_762;
wire   [0:0] exitcond_fu_463_p2;
wire    ap_CS_fsm_state24;
wire    grp_poly_Rq_mul_fu_335_ap_ready;
wire    grp_poly_Rq_mul_fu_335_ap_done;
wire   [9:0] i_20_fu_502_p2;
reg   [9:0] i_20_reg_781;
wire    ap_CS_fsm_state25;
reg   [9:0] r_coeffs_addr_22_reg_786;
wire   [0:0] exitcond_i1_fu_496_p2;
wire   [9:0] i_21_fu_534_p2;
reg   [9:0] i_21_reg_794;
wire    ap_CS_fsm_state27;
wire   [0:0] exitcond_i2_fu_528_p2;
wire   [63:0] t_2_fu_625_p3;
wire    ap_CS_fsm_state28;
reg   [0:0] tmp_257_reg_809;
wire    ap_CS_fsm_state29;
wire   [9:0] i_22_fu_681_p2;
reg   [9:0] i_22_reg_816;
wire    ap_CS_fsm_state30;
reg   [9:0] r_coeffs_addr_24_reg_821;
wire   [0:0] exitcond_i3_fu_675_p2;
reg   [9:0] x1_coeffs_address0;
reg    x1_coeffs_ce0;
reg    x1_coeffs_we0;
reg   [15:0] x1_coeffs_d0;
wire   [15:0] x1_coeffs_q0;
reg   [9:0] x1_coeffs_address1;
reg    x1_coeffs_ce1;
reg    x1_coeffs_we1;
reg   [15:0] x1_coeffs_d1;
wire   [15:0] x1_coeffs_q1;
reg   [9:0] x2_coeffs_address0;
reg    x2_coeffs_ce0;
reg    x2_coeffs_we0;
reg   [15:0] x2_coeffs_d0;
wire   [15:0] x2_coeffs_q0;
reg   [9:0] x2_coeffs_address1;
reg    x2_coeffs_ce1;
reg    x2_coeffs_we1;
reg   [15:0] x2_coeffs_d1;
wire   [15:0] x2_coeffs_q1;
reg   [9:0] x3_coeffs_address0;
reg    x3_coeffs_ce0;
reg    x3_coeffs_we0;
reg   [15:0] x3_coeffs_d0;
wire   [15:0] x3_coeffs_q0;
reg   [9:0] x3_coeffs_address1;
reg    x3_coeffs_ce1;
reg    x3_coeffs_we1;
reg   [15:0] x3_coeffs_d1;
reg   [9:0] x4_coeffs_address0;
reg    x4_coeffs_ce0;
reg    x4_coeffs_we0;
reg   [15:0] x4_coeffs_d0;
wire   [15:0] x4_coeffs_q0;
reg   [9:0] x4_coeffs_address1;
reg    x4_coeffs_ce1;
reg    x4_coeffs_we1;
wire   [15:0] x4_coeffs_q1;
wire    grp_poly_lift_fu_291_ap_start;
wire    grp_poly_lift_fu_291_ap_done;
wire    grp_poly_lift_fu_291_ap_idle;
wire    grp_poly_lift_fu_291_ap_ready;
wire   [9:0] grp_poly_lift_fu_291_r_coeffs_address0;
wire    grp_poly_lift_fu_291_r_coeffs_ce0;
wire    grp_poly_lift_fu_291_r_coeffs_we0;
wire   [15:0] grp_poly_lift_fu_291_r_coeffs_d0;
wire   [9:0] grp_poly_lift_fu_291_a_coeffs_address0;
wire    grp_poly_lift_fu_291_a_coeffs_ce0;
wire   [9:0] grp_poly_lift_fu_291_a_coeffs_address1;
wire    grp_poly_lift_fu_291_a_coeffs_ce1;
wire    grp_poly_Sq_frombytes_1_fu_297_ap_start;
wire    grp_poly_Sq_frombytes_1_fu_297_ap_done;
wire    grp_poly_Sq_frombytes_1_fu_297_ap_idle;
wire    grp_poly_Sq_frombytes_1_fu_297_ap_ready;
wire   [9:0] grp_poly_Sq_frombytes_1_fu_297_r_coeffs_address0;
wire    grp_poly_Sq_frombytes_1_fu_297_r_coeffs_ce0;
wire    grp_poly_Sq_frombytes_1_fu_297_r_coeffs_we0;
wire   [15:0] grp_poly_Sq_frombytes_1_fu_297_r_coeffs_d0;
wire   [9:0] grp_poly_Sq_frombytes_1_fu_297_r_coeffs_address1;
wire    grp_poly_Sq_frombytes_1_fu_297_r_coeffs_ce1;
wire    grp_poly_Sq_frombytes_1_fu_297_r_coeffs_we1;
wire   [15:0] grp_poly_Sq_frombytes_1_fu_297_r_coeffs_d1;
wire   [10:0] grp_poly_Sq_frombytes_1_fu_297_a_address0;
wire    grp_poly_Sq_frombytes_1_fu_297_a_ce0;
wire   [10:0] grp_poly_Sq_frombytes_1_fu_297_a_address1;
wire    grp_poly_Sq_frombytes_1_fu_297_a_ce1;
wire    grp_poly_Sq_frombytes_fu_304_ap_start;
wire    grp_poly_Sq_frombytes_fu_304_ap_done;
wire    grp_poly_Sq_frombytes_fu_304_ap_idle;
wire    grp_poly_Sq_frombytes_fu_304_ap_ready;
wire   [9:0] grp_poly_Sq_frombytes_fu_304_r_coeffs_address0;
wire    grp_poly_Sq_frombytes_fu_304_r_coeffs_ce0;
wire    grp_poly_Sq_frombytes_fu_304_r_coeffs_we0;
wire   [15:0] grp_poly_Sq_frombytes_fu_304_r_coeffs_d0;
wire   [9:0] grp_poly_Sq_frombytes_fu_304_r_coeffs_address1;
wire    grp_poly_Sq_frombytes_fu_304_r_coeffs_ce1;
wire    grp_poly_Sq_frombytes_fu_304_r_coeffs_we1;
wire   [15:0] grp_poly_Sq_frombytes_fu_304_r_coeffs_d1;
wire   [10:0] grp_poly_Sq_frombytes_fu_304_a_address0;
wire    grp_poly_Sq_frombytes_fu_304_a_ce0;
wire   [10:0] grp_poly_Sq_frombytes_fu_304_a_address1;
wire    grp_poly_Sq_frombytes_fu_304_a_ce1;
wire    grp_poly_S3_mul_fu_312_ap_start;
wire    grp_poly_S3_mul_fu_312_ap_done;
wire    grp_poly_S3_mul_fu_312_ap_idle;
wire    grp_poly_S3_mul_fu_312_ap_ready;
wire   [9:0] grp_poly_S3_mul_fu_312_r_coeffs_address0;
wire    grp_poly_S3_mul_fu_312_r_coeffs_ce0;
wire    grp_poly_S3_mul_fu_312_r_coeffs_we0;
wire   [15:0] grp_poly_S3_mul_fu_312_r_coeffs_d0;
wire   [9:0] grp_poly_S3_mul_fu_312_r_coeffs_address1;
wire    grp_poly_S3_mul_fu_312_r_coeffs_ce1;
wire    grp_poly_S3_mul_fu_312_r_coeffs_we1;
wire   [15:0] grp_poly_S3_mul_fu_312_r_coeffs_d1;
wire   [9:0] grp_poly_S3_mul_fu_312_a_coeffs_address0;
wire    grp_poly_S3_mul_fu_312_a_coeffs_ce0;
wire   [9:0] grp_poly_S3_mul_fu_312_b_coeffs_address0;
wire    grp_poly_S3_mul_fu_312_b_coeffs_ce0;
wire    grp_poly_S3_frombytes_fu_319_ap_start;
wire    grp_poly_S3_frombytes_fu_319_ap_done;
wire    grp_poly_S3_frombytes_fu_319_ap_idle;
wire    grp_poly_S3_frombytes_fu_319_ap_ready;
wire   [9:0] grp_poly_S3_frombytes_fu_319_r_coeffs_address0;
wire    grp_poly_S3_frombytes_fu_319_r_coeffs_ce0;
wire    grp_poly_S3_frombytes_fu_319_r_coeffs_we0;
wire   [15:0] grp_poly_S3_frombytes_fu_319_r_coeffs_d0;
wire   [9:0] grp_poly_S3_frombytes_fu_319_r_coeffs_address1;
wire    grp_poly_S3_frombytes_fu_319_r_coeffs_ce1;
wire    grp_poly_S3_frombytes_fu_319_r_coeffs_we1;
wire   [15:0] grp_poly_S3_frombytes_fu_319_r_coeffs_d1;
wire   [10:0] grp_poly_S3_frombytes_fu_319_msg_address0;
wire    grp_poly_S3_frombytes_fu_319_msg_ce0;
reg   [9:0] grp_poly_S3_frombytes_fu_319_msg_offset;
wire    grp_poly_Rq_to_S3_fu_329_ap_start;
wire    grp_poly_Rq_to_S3_fu_329_ap_done;
wire    grp_poly_Rq_to_S3_fu_329_ap_idle;
wire    grp_poly_Rq_to_S3_fu_329_ap_ready;
wire   [9:0] grp_poly_Rq_to_S3_fu_329_r_coeffs_address0;
wire    grp_poly_Rq_to_S3_fu_329_r_coeffs_ce0;
wire    grp_poly_Rq_to_S3_fu_329_r_coeffs_we0;
wire   [15:0] grp_poly_Rq_to_S3_fu_329_r_coeffs_d0;
wire   [9:0] grp_poly_Rq_to_S3_fu_329_r_coeffs_address1;
wire    grp_poly_Rq_to_S3_fu_329_r_coeffs_ce1;
wire    grp_poly_Rq_to_S3_fu_329_r_coeffs_we1;
wire   [15:0] grp_poly_Rq_to_S3_fu_329_r_coeffs_d1;
wire   [9:0] grp_poly_Rq_to_S3_fu_329_a_coeffs_address0;
wire    grp_poly_Rq_to_S3_fu_329_a_coeffs_ce0;
wire    grp_poly_Rq_mul_fu_335_ap_start;
wire    grp_poly_Rq_mul_fu_335_ap_idle;
wire   [9:0] grp_poly_Rq_mul_fu_335_r_coeffs_address0;
wire    grp_poly_Rq_mul_fu_335_r_coeffs_ce0;
wire    grp_poly_Rq_mul_fu_335_r_coeffs_we0;
wire   [15:0] grp_poly_Rq_mul_fu_335_r_coeffs_d0;
reg   [15:0] grp_poly_Rq_mul_fu_335_r_coeffs_q0;
wire   [9:0] grp_poly_Rq_mul_fu_335_a_coeffs_address0;
wire    grp_poly_Rq_mul_fu_335_a_coeffs_ce0;
wire   [9:0] grp_poly_Rq_mul_fu_335_b_coeffs_address0;
wire    grp_poly_Rq_mul_fu_335_b_coeffs_ce0;
reg   [15:0] grp_poly_Rq_mul_fu_335_b_coeffs_q0;
wire    grp_poly_S3_tobytes_fu_342_ap_start;
wire    grp_poly_S3_tobytes_fu_342_ap_done;
wire    grp_poly_S3_tobytes_fu_342_ap_idle;
wire    grp_poly_S3_tobytes_fu_342_ap_ready;
wire   [8:0] grp_poly_S3_tobytes_fu_342_msg_address0;
wire    grp_poly_S3_tobytes_fu_342_msg_ce0;
wire    grp_poly_S3_tobytes_fu_342_msg_we0;
wire   [7:0] grp_poly_S3_tobytes_fu_342_msg_d0;
reg   [8:0] grp_poly_S3_tobytes_fu_342_msg_offset;
wire   [9:0] grp_poly_S3_tobytes_fu_342_a_coeffs_address0;
wire    grp_poly_S3_tobytes_fu_342_a_coeffs_ce0;
wire   [9:0] grp_poly_S3_tobytes_fu_342_a_coeffs_address1;
wire    grp_poly_S3_tobytes_fu_342_a_coeffs_ce1;
reg   [12:0] tmp_i_reg_202;
reg   [9:0] i_i_reg_213;
reg   [9:0] i_i6_reg_224;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
reg   [9:0] i_reg_235;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state21;
reg   [9:0] i_i1_reg_246;
wire    ap_CS_fsm_state26;
reg   [9:0] i_i2_reg_257;
reg   [63:0] t_i_reg_268;
reg   [9:0] i_i3_reg_280;
wire    ap_CS_fsm_state31;
reg    grp_poly_lift_fu_291_ap_start_reg;
wire    ap_CS_fsm_state18;
reg    grp_poly_Sq_frombytes_1_fu_297_ap_start_reg;
wire    ap_CS_fsm_state22;
reg    grp_poly_Sq_frombytes_fu_304_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_poly_S3_mul_fu_312_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
reg    grp_poly_S3_frombytes_fu_319_ap_start_reg;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
reg    grp_poly_Rq_to_S3_fu_329_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_poly_Rq_mul_fu_335_ap_start_reg;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state9;
reg    grp_poly_S3_tobytes_fu_342_ap_start_reg;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state32;
wire   [63:0] tmp_233_i_fu_364_p1;
wire   [63:0] tmp_i8_fu_413_p1;
wire   [63:0] tmp_fu_475_p1;
wire   [63:0] tmp_i1_fu_508_p1;
wire   [63:0] tmp_255_i_fu_540_p1;
wire   [63:0] tmp_i3_44_fu_687_p1;
wire   [15:0] tmp_232_i_cast_fu_375_p1;
wire   [15:0] tmp_234_i_fu_388_p2;
wire   [15:0] tmp_243_cast_fu_491_p1;
wire   [15:0] tmp_39_i_fu_454_p3;
wire   [15:0] tmp_40_i_cast_fu_523_p1;
wire   [15:0] tmp_8_i_cast_fu_712_p1;
wire   [12:0] tmp_i_cast_fu_369_p2;
wire   [12:0] tmp_252_fu_384_p1;
wire   [12:0] tmp_251_fu_380_p1;
wire   [12:0] tmp_236_fu_418_p4;
wire   [12:0] tmp_253_fu_434_p1;
wire   [12:0] tmp_37_i_cast_fu_428_p2;
wire   [2:0] tmp_239_fu_444_p4;
wire   [12:0] tmp_238_fu_438_p2;
wire   [15:0] tmp_s_fu_481_p2;
wire   [12:0] tmp_254_fu_487_p1;
wire   [15:0] tmp_i2_fu_513_p2;
wire   [12:0] tmp_255_fu_519_p1;
wire   [12:0] tmp_258_fu_545_p1;
wire   [2:0] tmp_259_fu_549_p1;
wire   [2:0] tmp_242_fu_559_p2;
wire   [2:0] tmp_259_i_fu_565_p2;
wire   [2:0] tmp_243_fu_571_p2;
wire   [12:0] tmp_257_i_cast_fu_553_p2;
wire   [9:0] tmp_244_fu_585_p4;
wire   [0:0] tmp_260_fu_577_p3;
wire   [12:0] tmp_261_fu_605_p1;
wire   [12:0] tmp1_fu_595_p4;
wire   [50:0] tmp_246_fu_615_p4;
wire   [12:0] tmp_245_fu_609_p2;
wire   [15:0] tmp_256_fu_633_p1;
wire   [47:0] tmp_81_i_fu_643_p4;
wire   [15:0] tmp_80_i_fu_637_p2;
wire   [63:0] t_fu_653_p3;
wire   [63:0] tmp_i3_fu_661_p2;
wire   [1:0] tmp_262_fu_702_p1;
wire   [1:0] tmp_247_fu_692_p4;
wire   [1:0] tmp_7_i_cast_fu_706_p2;
reg   [31:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
#0 grp_poly_lift_fu_291_ap_start_reg = 1'b0;
#0 grp_poly_Sq_frombytes_1_fu_297_ap_start_reg = 1'b0;
#0 grp_poly_Sq_frombytes_fu_304_ap_start_reg = 1'b0;
#0 grp_poly_S3_mul_fu_312_ap_start_reg = 1'b0;
#0 grp_poly_S3_frombytes_fu_319_ap_start_reg = 1'b0;
#0 grp_poly_Rq_to_S3_fu_329_ap_start_reg = 1'b0;
#0 grp_poly_Rq_mul_fu_335_ap_start_reg = 1'b0;
#0 grp_poly_S3_tobytes_fu_342_ap_start_reg = 1'b0;
end

poly_lift_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
x1_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x1_coeffs_address0),
    .ce0(x1_coeffs_ce0),
    .we0(x1_coeffs_we0),
    .d0(x1_coeffs_d0),
    .q0(x1_coeffs_q0),
    .address1(x1_coeffs_address1),
    .ce1(x1_coeffs_ce1),
    .we1(x1_coeffs_we1),
    .d1(x1_coeffs_d1),
    .q1(x1_coeffs_q1)
);

poly_lift_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
x2_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x2_coeffs_address0),
    .ce0(x2_coeffs_ce0),
    .we0(x2_coeffs_we0),
    .d0(x2_coeffs_d0),
    .q0(x2_coeffs_q0),
    .address1(x2_coeffs_address1),
    .ce1(x2_coeffs_ce1),
    .we1(x2_coeffs_we1),
    .d1(x2_coeffs_d1),
    .q1(x2_coeffs_q1)
);

owcpa_dec_x3_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
x3_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x3_coeffs_address0),
    .ce0(x3_coeffs_ce0),
    .we0(x3_coeffs_we0),
    .d0(x3_coeffs_d0),
    .q0(x3_coeffs_q0),
    .address1(x3_coeffs_address1),
    .ce1(x3_coeffs_ce1),
    .we1(x3_coeffs_we1),
    .d1(x3_coeffs_d1)
);

poly_lift_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
x4_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x4_coeffs_address0),
    .ce0(x4_coeffs_ce0),
    .we0(x4_coeffs_we0),
    .d0(x4_coeffs_d0),
    .q0(x4_coeffs_q0),
    .address1(x4_coeffs_address1),
    .ce1(x4_coeffs_ce1),
    .we1(x4_coeffs_we1),
    .d1(grp_poly_S3_mul_fu_312_r_coeffs_d1),
    .q1(x4_coeffs_q1)
);

poly_lift grp_poly_lift_fu_291(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_lift_fu_291_ap_start),
    .ap_done(grp_poly_lift_fu_291_ap_done),
    .ap_idle(grp_poly_lift_fu_291_ap_idle),
    .ap_ready(grp_poly_lift_fu_291_ap_ready),
    .r_coeffs_address0(grp_poly_lift_fu_291_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_lift_fu_291_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_lift_fu_291_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_lift_fu_291_r_coeffs_d0),
    .a_coeffs_address0(grp_poly_lift_fu_291_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_lift_fu_291_a_coeffs_ce0),
    .a_coeffs_q0(x4_coeffs_q0),
    .a_coeffs_address1(grp_poly_lift_fu_291_a_coeffs_address1),
    .a_coeffs_ce1(grp_poly_lift_fu_291_a_coeffs_ce1),
    .a_coeffs_q1(x4_coeffs_q1)
);

poly_Sq_frombytes_1 grp_poly_Sq_frombytes_1_fu_297(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Sq_frombytes_1_fu_297_ap_start),
    .ap_done(grp_poly_Sq_frombytes_1_fu_297_ap_done),
    .ap_idle(grp_poly_Sq_frombytes_1_fu_297_ap_idle),
    .ap_ready(grp_poly_Sq_frombytes_1_fu_297_ap_ready),
    .r_coeffs_address0(grp_poly_Sq_frombytes_1_fu_297_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Sq_frombytes_1_fu_297_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Sq_frombytes_1_fu_297_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Sq_frombytes_1_fu_297_r_coeffs_d0),
    .r_coeffs_address1(grp_poly_Sq_frombytes_1_fu_297_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_Sq_frombytes_1_fu_297_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_Sq_frombytes_1_fu_297_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_Sq_frombytes_1_fu_297_r_coeffs_d1),
    .a_address0(grp_poly_Sq_frombytes_1_fu_297_a_address0),
    .a_ce0(grp_poly_Sq_frombytes_1_fu_297_a_ce0),
    .a_q0(secretkey_q0),
    .a_address1(grp_poly_Sq_frombytes_1_fu_297_a_address1),
    .a_ce1(grp_poly_Sq_frombytes_1_fu_297_a_ce1),
    .a_q1(secretkey_q1)
);

poly_Sq_frombytes grp_poly_Sq_frombytes_fu_304(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Sq_frombytes_fu_304_ap_start),
    .ap_done(grp_poly_Sq_frombytes_fu_304_ap_done),
    .ap_idle(grp_poly_Sq_frombytes_fu_304_ap_idle),
    .ap_ready(grp_poly_Sq_frombytes_fu_304_ap_ready),
    .r_coeffs_address0(grp_poly_Sq_frombytes_fu_304_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Sq_frombytes_fu_304_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Sq_frombytes_fu_304_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Sq_frombytes_fu_304_r_coeffs_d0),
    .r_coeffs_address1(grp_poly_Sq_frombytes_fu_304_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_Sq_frombytes_fu_304_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_Sq_frombytes_fu_304_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_Sq_frombytes_fu_304_r_coeffs_d1),
    .a_address0(grp_poly_Sq_frombytes_fu_304_a_address0),
    .a_ce0(grp_poly_Sq_frombytes_fu_304_a_ce0),
    .a_q0(ciphertext_q0),
    .a_address1(grp_poly_Sq_frombytes_fu_304_a_address1),
    .a_ce1(grp_poly_Sq_frombytes_fu_304_a_ce1),
    .a_q1(ciphertext_q1)
);

poly_S3_mul grp_poly_S3_mul_fu_312(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_mul_fu_312_ap_start),
    .ap_done(grp_poly_S3_mul_fu_312_ap_done),
    .ap_idle(grp_poly_S3_mul_fu_312_ap_idle),
    .ap_ready(grp_poly_S3_mul_fu_312_ap_ready),
    .r_coeffs_address0(grp_poly_S3_mul_fu_312_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_S3_mul_fu_312_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_S3_mul_fu_312_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_S3_mul_fu_312_r_coeffs_d0),
    .r_coeffs_q0(x4_coeffs_q0),
    .r_coeffs_address1(grp_poly_S3_mul_fu_312_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_S3_mul_fu_312_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_S3_mul_fu_312_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_S3_mul_fu_312_r_coeffs_d1),
    .r_coeffs_q1(x4_coeffs_q1),
    .a_coeffs_address0(grp_poly_S3_mul_fu_312_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_mul_fu_312_a_coeffs_ce0),
    .a_coeffs_q0(x2_coeffs_q0),
    .b_coeffs_address0(grp_poly_S3_mul_fu_312_b_coeffs_address0),
    .b_coeffs_ce0(grp_poly_S3_mul_fu_312_b_coeffs_ce0),
    .b_coeffs_q0(x3_coeffs_q0)
);

poly_S3_frombytes grp_poly_S3_frombytes_fu_319(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_frombytes_fu_319_ap_start),
    .ap_done(grp_poly_S3_frombytes_fu_319_ap_done),
    .ap_idle(grp_poly_S3_frombytes_fu_319_ap_idle),
    .ap_ready(grp_poly_S3_frombytes_fu_319_ap_ready),
    .r_coeffs_address0(grp_poly_S3_frombytes_fu_319_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_S3_frombytes_fu_319_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_S3_frombytes_fu_319_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_S3_frombytes_fu_319_r_coeffs_d0),
    .r_coeffs_address1(grp_poly_S3_frombytes_fu_319_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_S3_frombytes_fu_319_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_S3_frombytes_fu_319_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_S3_frombytes_fu_319_r_coeffs_d1),
    .msg_address0(grp_poly_S3_frombytes_fu_319_msg_address0),
    .msg_ce0(grp_poly_S3_frombytes_fu_319_msg_ce0),
    .msg_q0(secretkey_q0),
    .msg_offset(grp_poly_S3_frombytes_fu_319_msg_offset)
);

poly_Rq_to_S3 grp_poly_Rq_to_S3_fu_329(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Rq_to_S3_fu_329_ap_start),
    .ap_done(grp_poly_Rq_to_S3_fu_329_ap_done),
    .ap_idle(grp_poly_Rq_to_S3_fu_329_ap_idle),
    .ap_ready(grp_poly_Rq_to_S3_fu_329_ap_ready),
    .r_coeffs_address0(grp_poly_Rq_to_S3_fu_329_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Rq_to_S3_fu_329_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Rq_to_S3_fu_329_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Rq_to_S3_fu_329_r_coeffs_d0),
    .r_coeffs_q0(x2_coeffs_q0),
    .r_coeffs_address1(grp_poly_Rq_to_S3_fu_329_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_Rq_to_S3_fu_329_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_Rq_to_S3_fu_329_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_Rq_to_S3_fu_329_r_coeffs_d1),
    .r_coeffs_q1(x2_coeffs_q1),
    .a_coeffs_address0(grp_poly_Rq_to_S3_fu_329_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Rq_to_S3_fu_329_a_coeffs_ce0),
    .a_coeffs_q0(x3_coeffs_q0)
);

poly_Rq_mul grp_poly_Rq_mul_fu_335(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Rq_mul_fu_335_ap_start),
    .ap_done(grp_poly_Rq_mul_fu_335_ap_done),
    .ap_idle(grp_poly_Rq_mul_fu_335_ap_idle),
    .ap_ready(grp_poly_Rq_mul_fu_335_ap_ready),
    .r_coeffs_address0(grp_poly_Rq_mul_fu_335_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Rq_mul_fu_335_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Rq_mul_fu_335_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Rq_mul_fu_335_r_coeffs_d0),
    .r_coeffs_q0(grp_poly_Rq_mul_fu_335_r_coeffs_q0),
    .a_coeffs_address0(grp_poly_Rq_mul_fu_335_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Rq_mul_fu_335_a_coeffs_ce0),
    .a_coeffs_q0(x1_coeffs_q0),
    .b_coeffs_address0(grp_poly_Rq_mul_fu_335_b_coeffs_address0),
    .b_coeffs_ce0(grp_poly_Rq_mul_fu_335_b_coeffs_ce0),
    .b_coeffs_q0(grp_poly_Rq_mul_fu_335_b_coeffs_q0)
);

poly_S3_tobytes grp_poly_S3_tobytes_fu_342(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_tobytes_fu_342_ap_start),
    .ap_done(grp_poly_S3_tobytes_fu_342_ap_done),
    .ap_idle(grp_poly_S3_tobytes_fu_342_ap_idle),
    .ap_ready(grp_poly_S3_tobytes_fu_342_ap_ready),
    .msg_address0(grp_poly_S3_tobytes_fu_342_msg_address0),
    .msg_ce0(grp_poly_S3_tobytes_fu_342_msg_ce0),
    .msg_we0(grp_poly_S3_tobytes_fu_342_msg_we0),
    .msg_d0(grp_poly_S3_tobytes_fu_342_msg_d0),
    .msg_offset(grp_poly_S3_tobytes_fu_342_msg_offset),
    .a_coeffs_address0(grp_poly_S3_tobytes_fu_342_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_tobytes_fu_342_a_coeffs_ce0),
    .a_coeffs_q0(x4_coeffs_q0),
    .a_coeffs_address1(grp_poly_S3_tobytes_fu_342_a_coeffs_address1),
    .a_coeffs_ce1(grp_poly_S3_tobytes_fu_342_a_coeffs_ce1),
    .a_coeffs_q1(x4_coeffs_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Rq_mul_fu_335_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state23) | ((1'b1 == ap_CS_fsm_state7) & (exitcond_i7_fu_401_p2 == 1'd1)))) begin
            grp_poly_Rq_mul_fu_335_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Rq_mul_fu_335_ap_ready == 1'b1)) begin
            grp_poly_Rq_mul_fu_335_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Rq_to_S3_fu_329_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_poly_Rq_to_S3_fu_329_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Rq_to_S3_fu_329_ap_ready == 1'b1)) begin
            grp_poly_Rq_to_S3_fu_329_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_frombytes_fu_319_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state12) | ((exitcond_i_fu_352_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
            grp_poly_S3_frombytes_fu_319_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_frombytes_fu_319_ap_ready == 1'b1)) begin
            grp_poly_S3_frombytes_fu_319_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_mul_fu_312_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_poly_S3_mul_fu_312_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_mul_fu_312_ap_ready == 1'b1)) begin
            grp_poly_S3_mul_fu_312_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_tobytes_fu_342_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state30) & (exitcond_i3_fu_675_p2 == 1'd1)))) begin
            grp_poly_S3_tobytes_fu_342_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_tobytes_fu_342_ap_ready == 1'b1)) begin
            grp_poly_S3_tobytes_fu_342_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Sq_frombytes_1_fu_297_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state20) & (exitcond_fu_463_p2 == 1'd1))) begin
            grp_poly_Sq_frombytes_1_fu_297_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Sq_frombytes_1_fu_297_ap_ready == 1'b1)) begin
            grp_poly_Sq_frombytes_1_fu_297_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Sq_frombytes_fu_304_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_poly_Sq_frombytes_fu_304_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Sq_frombytes_fu_304_ap_ready == 1'b1)) begin
            grp_poly_Sq_frombytes_fu_304_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_lift_fu_291_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_poly_lift_fu_291_ap_start_reg <= 1'b1;
        end else if ((grp_poly_lift_fu_291_ap_ready == 1'b1)) begin
            grp_poly_lift_fu_291_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_i1_reg_246 <= i_20_reg_781;
    end else if (((1'b1 == ap_CS_fsm_state24) & (grp_poly_Rq_mul_fu_335_ap_done == 1'b1))) begin
        i_i1_reg_246 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (exitcond_i1_fu_496_p2 == 1'd1))) begin
        i_i2_reg_257 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        i_i2_reg_257 <= i_21_reg_794;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_i3_reg_280 <= i_22_reg_816;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        i_i3_reg_280 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_i6_reg_224 <= i_18_reg_744;
    end else if (((grp_poly_S3_frombytes_fu_319_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_i6_reg_224 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_i_reg_213 <= i_17_reg_726;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_i_reg_213 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_reg_235 <= i_19_reg_757;
    end else if (((grp_poly_lift_fu_291_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        i_reg_235 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (exitcond_i1_fu_496_p2 == 1'd1))) begin
        t_i_reg_268 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        t_i_reg_268 <= t_2_fu_625_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_i_reg_202 <= phitmp_fu_395_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_i_reg_202 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_463_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        b_coeffs_addr_11_reg_762 <= tmp_fu_475_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_17_reg_726 <= i_17_fu_358_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_18_reg_744 <= i_18_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_19_reg_757 <= i_19_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i_20_reg_781 <= i_20_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        i_21_reg_794 <= i_21_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i_22_reg_816 <= i_22_fu_681_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i7_fu_401_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        liftm_coeffs_addr_reg_749 <= tmp_i8_fu_413_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i1_fu_496_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        r_coeffs_addr_22_reg_786 <= tmp_i1_fu_508_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i3_fu_675_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        r_coeffs_addr_24_reg_821 <= tmp_i3_44_fu_687_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp_257_reg_809 <= tmp_i3_fu_661_p2[32'd63];
    end
end

always @ (*) begin
    if ((((grp_poly_S3_tobytes_fu_342_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_poly_S3_tobytes_fu_342_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_poly_Rq_mul_fu_335_b_coeffs_q0 = x3_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_poly_Rq_mul_fu_335_b_coeffs_q0 = x2_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_335_b_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_poly_Rq_mul_fu_335_r_coeffs_q0 = x4_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_poly_Rq_mul_fu_335_r_coeffs_q0 = x3_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_335_r_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_poly_S3_frombytes_fu_319_msg_offset = 10'd140;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_poly_S3_frombytes_fu_319_msg_offset = 10'd0;
    end else begin
        grp_poly_S3_frombytes_fu_319_msg_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_poly_S3_tobytes_fu_342_msg_offset = 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_poly_S3_tobytes_fu_342_msg_offset = 9'd140;
    end else begin
        grp_poly_S3_tobytes_fu_342_msg_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state17))) begin
        rm_ce0 = grp_poly_S3_tobytes_fu_342_msg_ce0;
    end else begin
        rm_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state17))) begin
        rm_we0 = grp_poly_S3_tobytes_fu_342_msg_we0;
    end else begin
        rm_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        secretkey_address0 = grp_poly_S3_frombytes_fu_319_msg_address0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        secretkey_address0 = grp_poly_Sq_frombytes_1_fu_297_a_address0;
    end else begin
        secretkey_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        secretkey_ce0 = grp_poly_S3_frombytes_fu_319_msg_ce0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        secretkey_ce0 = grp_poly_Sq_frombytes_1_fu_297_a_ce0;
    end else begin
        secretkey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        secretkey_ce1 = grp_poly_Sq_frombytes_1_fu_297_a_ce1;
    end else begin
        secretkey_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        x1_coeffs_address0 = b_coeffs_addr_11_reg_762;
    end else if (((exitcond_i_fu_352_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        x1_coeffs_address0 = b_coeffs_addr_reg_717;
    end else if (((exitcond_i_fu_352_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        x1_coeffs_address0 = tmp_233_i_fu_364_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        x1_coeffs_address0 = 64'd700;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state24))) begin
        x1_coeffs_address0 = grp_poly_Rq_mul_fu_335_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_address0 = grp_poly_Sq_frombytes_fu_304_r_coeffs_address0;
    end else begin
        x1_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        x1_coeffs_address1 = tmp_fu_475_p1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5))) begin
        x1_coeffs_address1 = 64'd700;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_address1 = grp_poly_Sq_frombytes_fu_304_r_coeffs_address1;
    end else begin
        x1_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state21) | ((exitcond_i_fu_352_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((exitcond_i_fu_352_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        x1_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state24))) begin
        x1_coeffs_ce0 = grp_poly_Rq_mul_fu_335_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_ce0 = grp_poly_Sq_frombytes_fu_304_r_coeffs_ce0;
    end else begin
        x1_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state5))) begin
        x1_coeffs_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_ce1 = grp_poly_Sq_frombytes_fu_304_r_coeffs_ce1;
    end else begin
        x1_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        x1_coeffs_d0 = tmp_243_cast_fu_491_p1;
    end else if (((exitcond_i_fu_352_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        x1_coeffs_d0 = tmp_232_i_cast_fu_375_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        x1_coeffs_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_d0 = grp_poly_Sq_frombytes_fu_304_r_coeffs_d0;
    end else begin
        x1_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        x1_coeffs_d1 = tmp_234_i_fu_388_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_d1 = grp_poly_Sq_frombytes_fu_304_r_coeffs_d1;
    end else begin
        x1_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state21) | ((exitcond_i_fu_352_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        x1_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_we0 = grp_poly_Sq_frombytes_fu_304_r_coeffs_we0;
    end else begin
        x1_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        x1_coeffs_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_we1 = grp_poly_Sq_frombytes_fu_304_r_coeffs_we1;
    end else begin
        x1_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        x2_coeffs_address0 = tmp_fu_475_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x2_coeffs_address0 = liftm_coeffs_addr_reg_749;
    end else if (((exitcond_i7_fu_401_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        x2_coeffs_address0 = tmp_i8_fu_413_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x2_coeffs_address0 = grp_poly_Rq_mul_fu_335_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_address0 = grp_poly_Rq_to_S3_fu_329_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_address0 = grp_poly_S3_frombytes_fu_319_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x2_coeffs_address0 = grp_poly_S3_mul_fu_312_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x2_coeffs_address0 = grp_poly_lift_fu_291_r_coeffs_address0;
    end else begin
        x2_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_address1 = grp_poly_Rq_to_S3_fu_329_r_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_address1 = grp_poly_S3_frombytes_fu_319_r_coeffs_address1;
    end else begin
        x2_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state20) | ((exitcond_i7_fu_401_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        x2_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x2_coeffs_ce0 = grp_poly_Rq_mul_fu_335_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_ce0 = grp_poly_Rq_to_S3_fu_329_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_ce0 = grp_poly_S3_frombytes_fu_319_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x2_coeffs_ce0 = grp_poly_S3_mul_fu_312_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x2_coeffs_ce0 = grp_poly_lift_fu_291_r_coeffs_ce0;
    end else begin
        x2_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_ce1 = grp_poly_Rq_to_S3_fu_329_r_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_ce1 = grp_poly_S3_frombytes_fu_319_r_coeffs_ce1;
    end else begin
        x2_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x2_coeffs_d0 = tmp_39_i_fu_454_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_d0 = grp_poly_Rq_to_S3_fu_329_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_d0 = grp_poly_S3_frombytes_fu_319_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x2_coeffs_d0 = grp_poly_lift_fu_291_r_coeffs_d0;
    end else begin
        x2_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_d1 = grp_poly_Rq_to_S3_fu_329_r_coeffs_d1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_d1 = grp_poly_S3_frombytes_fu_319_r_coeffs_d1;
    end else begin
        x2_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x2_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_we0 = grp_poly_Rq_to_S3_fu_329_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_we0 = grp_poly_S3_frombytes_fu_319_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x2_coeffs_we0 = grp_poly_lift_fu_291_r_coeffs_we0;
    end else begin
        x2_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        x2_coeffs_we1 = grp_poly_Rq_to_S3_fu_329_r_coeffs_we1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x2_coeffs_we1 = grp_poly_S3_frombytes_fu_319_r_coeffs_we1;
    end else begin
        x2_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        x3_coeffs_address0 = grp_poly_Rq_mul_fu_335_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_address0 = grp_poly_Rq_mul_fu_335_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x3_coeffs_address0 = grp_poly_Rq_to_S3_fu_329_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_address0 = grp_poly_S3_frombytes_fu_319_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x3_coeffs_address0 = grp_poly_S3_mul_fu_312_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        x3_coeffs_address0 = grp_poly_Sq_frombytes_1_fu_297_r_coeffs_address0;
    end else begin
        x3_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_address1 = grp_poly_S3_frombytes_fu_319_r_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        x3_coeffs_address1 = grp_poly_Sq_frombytes_1_fu_297_r_coeffs_address1;
    end else begin
        x3_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        x3_coeffs_ce0 = grp_poly_Rq_mul_fu_335_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_ce0 = grp_poly_Rq_mul_fu_335_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        x3_coeffs_ce0 = grp_poly_Rq_to_S3_fu_329_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_ce0 = grp_poly_S3_frombytes_fu_319_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x3_coeffs_ce0 = grp_poly_S3_mul_fu_312_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        x3_coeffs_ce0 = grp_poly_Sq_frombytes_1_fu_297_r_coeffs_ce0;
    end else begin
        x3_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_ce1 = grp_poly_S3_frombytes_fu_319_r_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        x3_coeffs_ce1 = grp_poly_Sq_frombytes_1_fu_297_r_coeffs_ce1;
    end else begin
        x3_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_d0 = grp_poly_Rq_mul_fu_335_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_d0 = grp_poly_S3_frombytes_fu_319_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        x3_coeffs_d0 = grp_poly_Sq_frombytes_1_fu_297_r_coeffs_d0;
    end else begin
        x3_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_d1 = grp_poly_S3_frombytes_fu_319_r_coeffs_d1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        x3_coeffs_d1 = grp_poly_Sq_frombytes_1_fu_297_r_coeffs_d1;
    end else begin
        x3_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        x3_coeffs_we0 = grp_poly_Rq_mul_fu_335_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_we0 = grp_poly_S3_frombytes_fu_319_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        x3_coeffs_we0 = grp_poly_Sq_frombytes_1_fu_297_r_coeffs_we0;
    end else begin
        x3_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x3_coeffs_we1 = grp_poly_S3_frombytes_fu_319_r_coeffs_we1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        x3_coeffs_we1 = grp_poly_Sq_frombytes_1_fu_297_r_coeffs_we1;
    end else begin
        x3_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        x4_coeffs_address0 = r_coeffs_addr_24_reg_821;
    end else if (((exitcond_i3_fu_675_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        x4_coeffs_address0 = tmp_i3_44_fu_687_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x4_coeffs_address0 = r_coeffs_addr_22_reg_786;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        x4_coeffs_address0 = tmp_i1_fu_508_p1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state17))) begin
        x4_coeffs_address0 = grp_poly_S3_tobytes_fu_342_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_335_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_address0 = grp_poly_S3_mul_fu_312_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x4_coeffs_address0 = grp_poly_lift_fu_291_a_coeffs_address0;
    end else begin
        x4_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond_i2_fu_528_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        x4_coeffs_address1 = tmp_255_i_fu_540_p1;
    end else if (((1'b1 == ap_CS_fsm_state25) | ((1'b1 == ap_CS_fsm_state27) & (exitcond_i2_fu_528_p2 == 1'd1)))) begin
        x4_coeffs_address1 = 64'd700;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state17))) begin
        x4_coeffs_address1 = grp_poly_S3_tobytes_fu_342_a_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_address1 = grp_poly_S3_mul_fu_312_r_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x4_coeffs_address1 = grp_poly_lift_fu_291_a_coeffs_address1;
    end else begin
        x4_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | ((exitcond_i3_fu_675_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30)))) begin
        x4_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state17))) begin
        x4_coeffs_ce0 = grp_poly_S3_tobytes_fu_342_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_335_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_ce0 = grp_poly_S3_mul_fu_312_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x4_coeffs_ce0 = grp_poly_lift_fu_291_a_coeffs_ce0;
    end else begin
        x4_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | ((1'b1 == ap_CS_fsm_state27) & (exitcond_i2_fu_528_p2 == 1'd1)) | ((exitcond_i2_fu_528_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27)))) begin
        x4_coeffs_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state17))) begin
        x4_coeffs_ce1 = grp_poly_S3_tobytes_fu_342_a_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_ce1 = grp_poly_S3_mul_fu_312_r_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x4_coeffs_ce1 = grp_poly_lift_fu_291_a_coeffs_ce1;
    end else begin
        x4_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        x4_coeffs_d0 = tmp_8_i_cast_fu_712_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        x4_coeffs_d0 = tmp_40_i_cast_fu_523_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        x4_coeffs_d0 = grp_poly_Rq_mul_fu_335_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_d0 = grp_poly_S3_mul_fu_312_r_coeffs_d0;
    end else begin
        x4_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26))) begin
        x4_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        x4_coeffs_we0 = grp_poly_Rq_mul_fu_335_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_we0 = grp_poly_S3_mul_fu_312_r_coeffs_we0;
    end else begin
        x4_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        x4_coeffs_we1 = grp_poly_S3_mul_fu_312_r_coeffs_we1;
    end else begin
        x4_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_poly_Sq_frombytes_fu_304_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond_i_fu_352_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_poly_S3_frombytes_fu_319_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (exitcond_i7_fu_401_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_poly_Rq_mul_fu_335_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_poly_Rq_to_S3_fu_329_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_poly_S3_frombytes_fu_319_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_poly_S3_mul_fu_312_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_poly_S3_tobytes_fu_342_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_poly_lift_fu_291_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (exitcond_fu_463_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_poly_Sq_frombytes_1_fu_297_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (grp_poly_Rq_mul_fu_335_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (exitcond_i1_fu_496_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (exitcond_i2_fu_528_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (exitcond_i3_fu_675_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state32 : begin
            if (((grp_poly_S3_tobytes_fu_342_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = tmp_257_reg_809;

assign b_coeffs_addr_reg_717 = 64'd700;

assign ciphertext_address0 = grp_poly_Sq_frombytes_fu_304_a_address0;

assign ciphertext_address1 = grp_poly_Sq_frombytes_fu_304_a_address1;

assign ciphertext_ce0 = grp_poly_Sq_frombytes_fu_304_a_ce0;

assign ciphertext_ce1 = grp_poly_Sq_frombytes_fu_304_a_ce1;

assign exitcond_fu_463_p2 = ((i_reg_235 == 10'd701) ? 1'b1 : 1'b0);

assign exitcond_i1_fu_496_p2 = ((i_i1_reg_246 == 10'd701) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_528_p2 = ((i_i2_reg_257 == 10'd701) ? 1'b1 : 1'b0);

assign exitcond_i3_fu_675_p2 = ((i_i3_reg_280 == 10'd701) ? 1'b1 : 1'b0);

assign exitcond_i7_fu_401_p2 = ((i_i6_reg_224 == 10'd701) ? 1'b1 : 1'b0);

assign exitcond_i_fu_352_p2 = ((i_i_reg_213 == 10'd700) ? 1'b1 : 1'b0);

assign grp_poly_Rq_mul_fu_335_ap_start = grp_poly_Rq_mul_fu_335_ap_start_reg;

assign grp_poly_Rq_to_S3_fu_329_ap_start = grp_poly_Rq_to_S3_fu_329_ap_start_reg;

assign grp_poly_S3_frombytes_fu_319_ap_start = grp_poly_S3_frombytes_fu_319_ap_start_reg;

assign grp_poly_S3_mul_fu_312_ap_start = grp_poly_S3_mul_fu_312_ap_start_reg;

assign grp_poly_S3_tobytes_fu_342_ap_start = grp_poly_S3_tobytes_fu_342_ap_start_reg;

assign grp_poly_Sq_frombytes_1_fu_297_ap_start = grp_poly_Sq_frombytes_1_fu_297_ap_start_reg;

assign grp_poly_Sq_frombytes_fu_304_ap_start = grp_poly_Sq_frombytes_fu_304_ap_start_reg;

assign grp_poly_lift_fu_291_ap_start = grp_poly_lift_fu_291_ap_start_reg;

assign i_17_fu_358_p2 = (i_i_reg_213 + 10'd1);

assign i_18_fu_407_p2 = (i_i6_reg_224 + 10'd1);

assign i_19_fu_469_p2 = (i_reg_235 + 10'd1);

assign i_20_fu_502_p2 = (i_i1_reg_246 + 10'd1);

assign i_21_fu_534_p2 = (i_i2_reg_257 + 10'd1);

assign i_22_fu_681_p2 = (i_i3_reg_280 + 10'd1);

assign phitmp_fu_395_p2 = (tmp_252_fu_384_p1 + tmp_251_fu_380_p1);

assign rm_address0 = grp_poly_S3_tobytes_fu_342_msg_address0;

assign rm_d0 = grp_poly_S3_tobytes_fu_342_msg_d0;

assign secretkey_address1 = grp_poly_Sq_frombytes_1_fu_297_a_address1;

assign t_2_fu_625_p3 = {{tmp_246_fu_615_p4}, {tmp_245_fu_609_p2}};

assign t_fu_653_p3 = {{tmp_81_i_fu_643_p4}, {tmp_80_i_fu_637_p2}};

assign tmp1_fu_595_p4 = {{{tmp_244_fu_585_p4}, {tmp_260_fu_577_p3}}, {2'd0}};

assign tmp_232_i_cast_fu_375_p1 = tmp_i_cast_fu_369_p2;

assign tmp_233_i_fu_364_p1 = i_i_reg_213;

assign tmp_234_i_fu_388_p2 = (x1_coeffs_q1 + x1_coeffs_q0);

assign tmp_236_fu_418_p4 = {{x2_coeffs_q0[13:1]}};

assign tmp_238_fu_438_p2 = (tmp_37_i_cast_fu_428_p2 | tmp_253_fu_434_p1);

assign tmp_239_fu_444_p4 = {{x2_coeffs_q0[15:13]}};

assign tmp_242_fu_559_p2 = (3'd1 + tmp_259_fu_549_p1);

assign tmp_243_cast_fu_491_p1 = tmp_254_fu_487_p1;

assign tmp_243_fu_571_p2 = (tmp_259_i_fu_565_p2 | tmp_242_fu_559_p2);

assign tmp_244_fu_585_p4 = {{tmp_257_i_cast_fu_553_p2[12:3]}};

assign tmp_245_fu_609_p2 = (tmp_261_fu_605_p1 | tmp1_fu_595_p4);

assign tmp_246_fu_615_p4 = {{t_i_reg_268[63:13]}};

assign tmp_247_fu_692_p4 = {{x4_coeffs_q0[13:12]}};

assign tmp_251_fu_380_p1 = x1_coeffs_q1[12:0];

assign tmp_252_fu_384_p1 = x1_coeffs_q0[12:0];

assign tmp_253_fu_434_p1 = x2_coeffs_q0[12:0];

assign tmp_254_fu_487_p1 = tmp_s_fu_481_p2[12:0];

assign tmp_255_fu_519_p1 = tmp_i2_fu_513_p2[12:0];

assign tmp_255_i_fu_540_p1 = i_i2_reg_257;

assign tmp_256_fu_633_p1 = t_i_reg_268[15:0];

assign tmp_257_i_cast_fu_553_p2 = (13'd1 + tmp_258_fu_545_p1);

assign tmp_258_fu_545_p1 = x4_coeffs_q1[12:0];

assign tmp_259_fu_549_p1 = x4_coeffs_q1[2:0];

assign tmp_259_i_fu_565_p2 = (3'd2 + tmp_259_fu_549_p1);

assign tmp_260_fu_577_p3 = tmp_243_fu_571_p2[32'd2];

assign tmp_261_fu_605_p1 = t_i_reg_268[12:0];

assign tmp_262_fu_702_p1 = x4_coeffs_q0[1:0];

assign tmp_37_i_cast_fu_428_p2 = (13'd0 - tmp_236_fu_418_p4);

assign tmp_39_i_fu_454_p3 = {{tmp_239_fu_444_p4}, {tmp_238_fu_438_p2}};

assign tmp_40_i_cast_fu_523_p1 = tmp_255_fu_519_p1;

assign tmp_7_i_cast_fu_706_p2 = (tmp_262_fu_702_p1 ^ tmp_247_fu_692_p4);

assign tmp_80_i_fu_637_p2 = (x4_coeffs_q1 | tmp_256_fu_633_p1);

assign tmp_81_i_fu_643_p4 = {{t_i_reg_268[63:16]}};

assign tmp_8_i_cast_fu_712_p1 = tmp_7_i_cast_fu_706_p2;

assign tmp_fu_475_p1 = i_reg_235;

assign tmp_i1_fu_508_p1 = i_i1_reg_246;

assign tmp_i2_fu_513_p2 = (x4_coeffs_q0 - x4_coeffs_q1);

assign tmp_i3_44_fu_687_p1 = i_i3_reg_280;

assign tmp_i3_fu_661_p2 = (64'd0 - t_fu_653_p3);

assign tmp_i8_fu_413_p1 = i_i6_reg_224;

assign tmp_i_cast_fu_369_p2 = (13'd0 - tmp_i_reg_202);

assign tmp_s_fu_481_p2 = (x1_coeffs_q1 - x2_coeffs_q0);

endmodule //owcpa_dec
