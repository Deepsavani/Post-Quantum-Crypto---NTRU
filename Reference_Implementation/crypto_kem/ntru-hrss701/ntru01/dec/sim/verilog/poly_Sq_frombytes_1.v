// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module poly_Sq_frombytes_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        r_coeffs_address0,
        r_coeffs_ce0,
        r_coeffs_we0,
        r_coeffs_d0,
        r_coeffs_address1,
        r_coeffs_ce1,
        r_coeffs_we1,
        r_coeffs_d1,
        a_address0,
        a_ce0,
        a_q0,
        a_address1,
        a_ce1,
        a_q1
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] r_coeffs_address0;
output   r_coeffs_ce0;
output   r_coeffs_we0;
output  [15:0] r_coeffs_d0;
output  [9:0] r_coeffs_address1;
output   r_coeffs_ce1;
output   r_coeffs_we1;
output  [15:0] r_coeffs_d1;
output  [10:0] a_address0;
output   a_ce0;
input  [7:0] a_q0;
output  [10:0] a_address1;
output   a_ce1;
input  [7:0] a_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] r_coeffs_address0;
reg r_coeffs_ce0;
reg r_coeffs_we0;
reg[15:0] r_coeffs_d0;
reg[9:0] r_coeffs_address1;
reg r_coeffs_ce1;
reg r_coeffs_we1;
reg[15:0] r_coeffs_d1;
reg[10:0] a_address0;
reg a_ce0;
reg[10:0] a_address1;
reg a_ce1;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] reg_479;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
wire   [6:0] tmp_s_fu_490_p2;
reg   [6:0] tmp_s_reg_1137;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond_fu_484_p2;
wire   [9:0] tmp_51_fu_535_p3;
reg   [9:0] tmp_51_reg_1162;
wire    ap_CS_fsm_state3;
wire   [2:0] grp_fu_461_p4;
reg   [2:0] tmp_53_reg_1173;
reg   [5:0] tmp_61_reg_1188;
wire    ap_CS_fsm_state4;
reg   [0:0] tmp_99_reg_1198;
wire    ap_CS_fsm_state5;
reg   [3:0] tmp_82_reg_1213;
wire    ap_CS_fsm_state6;
reg   [6:0] tmp_90_reg_1228;
wire    ap_CS_fsm_state7;
wire   [10:0] next_mul_fu_859_p2;
reg   [10:0] next_mul_reg_1243;
reg   [1:0] tmp_97_reg_1248;
reg   [0:0] tmp_reg_1263;
wire   [6:0] tmp_66_fu_1008_p1;
reg   [6:0] tmp_66_reg_1278;
wire    ap_CS_fsm_state11;
wire   [1:0] tmp_70_fu_1076_p1;
reg   [1:0] tmp_70_reg_1293;
wire    ap_CS_fsm_state12;
wire   [4:0] tmp_74_fu_1118_p1;
reg   [4:0] tmp_74_reg_1303;
reg   [6:0] i_reg_437;
wire    ap_CS_fsm_state9;
reg   [10:0] phi_mul_reg_449;
wire   [63:0] sum_cast_fu_502_p1;
wire   [63:0] sum2_cast_fu_513_p1;
wire   [63:0] tmp_52_fu_543_p1;
wire   [63:0] sum4_cast_fu_554_p1;
wire   [63:0] sum6_cast_fu_565_p1;
wire   [63:0] tmp_60_fu_617_p1;
wire   [63:0] sum8_cast_fu_638_p1;
wire   [63:0] tmp_73_fu_664_p1;
wire   [63:0] sum1_cast_fu_675_p1;
wire   [63:0] sum3_cast_fu_686_p1;
wire   [63:0] tmp_81_fu_738_p1;
wire   [63:0] sum5_cast_fu_759_p1;
wire   [63:0] sum7_cast_fu_770_p1;
wire   [63:0] tmp_89_fu_822_p1;
wire   [63:0] sum9_cast_fu_843_p1;
wire   [63:0] sum10_cast_fu_854_p1;
wire   [63:0] tmp_96_fu_886_p1;
wire   [63:0] sum11_cast_fu_907_p1;
wire   [63:0] sum12_cast_fu_918_p1;
wire   [63:0] tmp_104_fu_970_p1;
wire   [63:0] tmp_110_fu_1003_p1;
wire    ap_CS_fsm_state13;
wire   [15:0] tmp_50_fu_530_p1;
wire   [15:0] tmp_83_cast_fu_607_p1;
wire   [15:0] tmp_92_cast_fu_654_p1;
wire   [15:0] tmp_106_cast_fu_728_p1;
wire   [15:0] tmp_120_cast_fu_812_p1;
wire   [15:0] tmp_129_cast_fu_876_p1;
wire   [15:0] tmp_143_cast_fu_960_p1;
wire   [15:0] tmp_151_cast_fu_993_p1;
wire   [15:0] tmp_47_cast_fu_1049_p1;
wire   [15:0] tmp_52_cast_fu_1071_p1;
wire   [15:0] tmp_60_cast_fu_1113_p1;
wire   [15:0] tmp_46_fu_1129_p1;
wire   [10:0] sum_fu_496_p2;
wire   [10:0] sum2_fu_507_p2;
wire   [4:0] tmp_76_fu_518_p1;
wire   [12:0] tmp_49_fu_522_p3;
wire   [10:0] sum4_fu_548_p2;
wire   [10:0] sum6_fu_559_p2;
wire   [7:0] tmp_71_fu_570_p1;
wire   [10:0] tmp_67_fu_585_p3;
wire   [10:0] tmp_54_fu_573_p3;
wire   [1:0] tmp_84_fu_581_p1;
wire   [10:0] tmp_68_fu_593_p2;
wire   [12:0] tmp_55_fu_599_p3;
wire   [9:0] tmp_56_fu_612_p2;
wire   [10:0] sum8_fu_632_p2;
wire   [6:0] tmp_92_fu_643_p1;
wire   [12:0] tmp_69_fu_647_p3;
wire   [9:0] tmp_72_fu_659_p2;
wire   [10:0] sum1_fu_669_p2;
wire   [10:0] sum3_fu_680_p2;
wire   [7:0] tmp_93_fu_691_p1;
wire   [8:0] tmp_77_fu_706_p3;
wire   [8:0] tmp_75_fu_694_p3;
wire   [3:0] tmp_107_fu_702_p1;
wire   [8:0] tmp_78_fu_714_p2;
wire   [12:0] tmp_79_fu_720_p3;
wire   [9:0] tmp_80_fu_733_p2;
wire   [10:0] sum5_fu_753_p2;
wire   [10:0] sum7_fu_764_p2;
wire   [7:0] tmp_94_fu_775_p1;
wire   [11:0] tmp_85_fu_790_p3;
wire   [11:0] tmp_83_fu_778_p3;
wire   [0:0] tmp_111_fu_786_p1;
wire   [11:0] tmp_86_fu_798_p2;
wire   [12:0] tmp_87_fu_804_p3;
wire   [9:0] tmp_88_fu_817_p2;
wire   [10:0] sum9_fu_837_p2;
wire   [10:0] sum10_fu_848_p2;
wire   [5:0] tmp_112_fu_865_p1;
wire   [12:0] tmp_91_fu_869_p3;
wire   [9:0] tmp_95_fu_881_p2;
wire   [10:0] sum11_fu_901_p2;
wire   [10:0] sum12_fu_912_p2;
wire   [7:0] tmp_108_fu_923_p1;
wire   [9:0] tmp_100_fu_938_p3;
wire   [9:0] tmp_98_fu_926_p3;
wire   [2:0] tmp_113_fu_934_p1;
wire   [9:0] tmp_101_fu_946_p2;
wire   [12:0] tmp_102_fu_952_p3;
wire   [9:0] tmp_103_fu_965_p2;
wire   [4:0] tmp_105_fu_975_p4;
wire   [12:0] tmp_106_fu_985_p3;
wire   [9:0] tmp_109_fu_998_p2;
wire   [7:0] tmp_59_fu_1012_p1;
wire   [8:0] tmp_57_fu_1027_p3;
wire   [8:0] tmp_36_fu_1015_p3;
wire   [3:0] tmp_63_fu_1023_p1;
wire   [8:0] tmp_58_fu_1035_p2;
wire   [12:0] tmp_37_fu_1041_p3;
wire   [5:0] tmp_38_fu_1054_p4;
wire   [12:0] tmp_42_fu_1064_p3;
wire   [7:0] tmp_62_fu_1080_p1;
wire   [10:0] tmp_64_fu_1092_p3;
wire   [10:0] tmp_44_fu_1084_p3;
wire   [10:0] tmp_65_fu_1100_p2;
wire   [12:0] tmp_45_fu_1106_p3;
wire   [12:0] tmp_40_fu_1122_p3;
reg   [12:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_reg_437 <= tmp_s_reg_1137;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_437 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        phi_mul_reg_449 <= next_mul_reg_1243;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_mul_reg_449 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_479 <= a_q1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_479 <= a_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        next_mul_reg_1243 <= next_mul_fu_859_p2;
        tmp_97_reg_1248 <= {{a_q1[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_51_reg_1162[9 : 3] <= tmp_51_fu_535_p3[9 : 3];
        tmp_53_reg_1173 <= {{a_q1[7:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_61_reg_1188 <= {{a_q1[7:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_66_reg_1278 <= tmp_66_fu_1008_p1;
        tmp_reg_1263 <= a_q0[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_70_reg_1293 <= tmp_70_fu_1076_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_74_reg_1303 <= tmp_74_fu_1118_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_82_reg_1213 <= {{a_q0[7:4]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_90_reg_1228 <= {{a_q0[7:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_99_reg_1198 <= a_q0[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_s_reg_1137 <= tmp_s_fu_490_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        a_address0 = 64'd1413;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a_address0 = 64'd1414;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_address0 = sum12_cast_fu_918_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        a_address0 = sum10_cast_fu_854_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_address0 = sum7_cast_fu_770_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address0 = sum3_cast_fu_686_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        a_address0 = sum8_cast_fu_638_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_address0 = sum4_cast_fu_554_p1;
    end else if (((exitcond_fu_484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        a_address0 = 64'd1415;
    end else if (((exitcond_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        a_address0 = sum_cast_fu_502_p1;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        a_address1 = 64'd1411;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        a_address1 = 64'd1412;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        a_address1 = 64'd1417;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        a_address1 = sum11_cast_fu_907_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        a_address1 = sum9_cast_fu_843_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        a_address1 = sum5_cast_fu_759_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        a_address1 = sum1_cast_fu_675_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_address1 = sum6_cast_fu_565_p1;
    end else if (((exitcond_fu_484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        a_address1 = 64'd1416;
    end else if (((exitcond_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        a_address1 = sum2_cast_fu_513_p1;
    end else begin
        a_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((exitcond_fu_484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((exitcond_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((exitcond_fu_484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((exitcond_fu_484_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        a_ce1 = 1'b1;
    end else begin
        a_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        r_coeffs_address0 = 64'd698;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_coeffs_address0 = tmp_104_fu_970_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_coeffs_address0 = tmp_96_fu_886_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_coeffs_address0 = tmp_89_fu_822_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_coeffs_address0 = tmp_81_fu_738_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_coeffs_address0 = tmp_73_fu_664_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_coeffs_address0 = tmp_60_fu_617_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_coeffs_address0 = tmp_52_fu_543_p1;
    end else begin
        r_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        r_coeffs_address1 = 64'd696;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r_coeffs_address1 = 64'd697;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_coeffs_address1 = 64'd699;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_coeffs_address1 = tmp_110_fu_1003_p1;
    end else begin
        r_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        r_coeffs_ce0 = 1'b1;
    end else begin
        r_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        r_coeffs_ce1 = 1'b1;
    end else begin
        r_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        r_coeffs_d0 = tmp_52_cast_fu_1071_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_coeffs_d0 = tmp_143_cast_fu_960_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_coeffs_d0 = tmp_129_cast_fu_876_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_coeffs_d0 = tmp_120_cast_fu_812_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_coeffs_d0 = tmp_106_cast_fu_728_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_coeffs_d0 = tmp_92_cast_fu_654_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_coeffs_d0 = tmp_83_cast_fu_607_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_coeffs_d0 = tmp_50_fu_530_p1;
    end else begin
        r_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        r_coeffs_d1 = tmp_46_fu_1129_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r_coeffs_d1 = tmp_60_cast_fu_1113_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_coeffs_d1 = tmp_47_cast_fu_1049_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_coeffs_d1 = tmp_151_cast_fu_993_p1;
    end else begin
        r_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        r_coeffs_we0 = 1'b1;
    end else begin
        r_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        r_coeffs_we1 = 1'b1;
    end else begin
        r_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond_fu_484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond_fu_484_p2 = ((i_reg_437 == 7'd87) ? 1'b1 : 1'b0);

assign grp_fu_461_p4 = {{a_q1[7:5]}};

assign next_mul_fu_859_p2 = (11'd13 + phi_mul_reg_449);

assign sum10_cast_fu_854_p1 = sum10_fu_848_p2;

assign sum10_fu_848_p2 = (11'd290 + phi_mul_reg_449);

assign sum11_cast_fu_907_p1 = sum11_fu_901_p2;

assign sum11_fu_901_p2 = (11'd291 + phi_mul_reg_449);

assign sum12_cast_fu_918_p1 = sum12_fu_912_p2;

assign sum12_fu_912_p2 = (11'd292 + phi_mul_reg_449);

assign sum1_cast_fu_675_p1 = sum1_fu_669_p2;

assign sum1_fu_669_p2 = (11'd285 + phi_mul_reg_449);

assign sum2_cast_fu_513_p1 = sum2_fu_507_p2;

assign sum2_fu_507_p2 = (11'd281 + phi_mul_reg_449);

assign sum3_cast_fu_686_p1 = sum3_fu_680_p2;

assign sum3_fu_680_p2 = (11'd286 + phi_mul_reg_449);

assign sum4_cast_fu_554_p1 = sum4_fu_548_p2;

assign sum4_fu_548_p2 = (11'd282 + phi_mul_reg_449);

assign sum5_cast_fu_759_p1 = sum5_fu_753_p2;

assign sum5_fu_753_p2 = (11'd287 + phi_mul_reg_449);

assign sum6_cast_fu_565_p1 = sum6_fu_559_p2;

assign sum6_fu_559_p2 = (11'd283 + phi_mul_reg_449);

assign sum7_cast_fu_770_p1 = sum7_fu_764_p2;

assign sum7_fu_764_p2 = (11'd288 + phi_mul_reg_449);

assign sum8_cast_fu_638_p1 = sum8_fu_632_p2;

assign sum8_fu_632_p2 = (11'd284 + phi_mul_reg_449);

assign sum9_cast_fu_843_p1 = sum9_fu_837_p2;

assign sum9_fu_837_p2 = (11'd289 + phi_mul_reg_449);

assign sum_cast_fu_502_p1 = sum_fu_496_p2;

assign sum_fu_496_p2 = (11'd280 + phi_mul_reg_449);

assign tmp_100_fu_938_p3 = {{2'd0}, {tmp_108_fu_923_p1}};

assign tmp_101_fu_946_p2 = (tmp_98_fu_926_p3 | tmp_100_fu_938_p3);

assign tmp_102_fu_952_p3 = {{tmp_113_fu_934_p1}, {tmp_101_fu_946_p2}};

assign tmp_103_fu_965_p2 = (tmp_51_reg_1162 | 10'd6);

assign tmp_104_fu_970_p1 = tmp_103_fu_965_p2;

assign tmp_105_fu_975_p4 = {{a_q1[7:3]}};

assign tmp_106_cast_fu_728_p1 = tmp_79_fu_720_p3;

assign tmp_106_fu_985_p3 = {{a_q0}, {tmp_105_fu_975_p4}};

assign tmp_107_fu_702_p1 = a_q0[3:0];

assign tmp_108_fu_923_p1 = tmp_97_reg_1248;

assign tmp_109_fu_998_p2 = (tmp_51_reg_1162 | 10'd7);

assign tmp_110_fu_1003_p1 = tmp_109_fu_998_p2;

assign tmp_111_fu_786_p1 = a_q0[0:0];

assign tmp_112_fu_865_p1 = a_q1[5:0];

assign tmp_113_fu_934_p1 = a_q1[2:0];

assign tmp_120_cast_fu_812_p1 = tmp_87_fu_804_p3;

assign tmp_129_cast_fu_876_p1 = tmp_91_fu_869_p3;

assign tmp_143_cast_fu_960_p1 = tmp_102_fu_952_p3;

assign tmp_151_cast_fu_993_p1 = tmp_106_fu_985_p3;

assign tmp_36_fu_1015_p3 = {{reg_479}, {1'd0}};

assign tmp_37_fu_1041_p3 = {{tmp_63_fu_1023_p1}, {tmp_58_fu_1035_p2}};

assign tmp_38_fu_1054_p4 = {{a_q0[7:2]}};

assign tmp_40_fu_1122_p3 = {{tmp_74_reg_1303}, {a_q1}};

assign tmp_42_fu_1064_p3 = {{tmp_66_reg_1278}, {tmp_38_fu_1054_p4}};

assign tmp_44_fu_1084_p3 = {{a_q0}, {3'd0}};

assign tmp_45_fu_1106_p3 = {{tmp_70_reg_1293}, {tmp_65_fu_1100_p2}};

assign tmp_46_fu_1129_p1 = tmp_40_fu_1122_p3;

assign tmp_47_cast_fu_1049_p1 = tmp_37_fu_1041_p3;

assign tmp_49_fu_522_p3 = {{tmp_76_fu_518_p1}, {a_q0}};

assign tmp_50_fu_530_p1 = tmp_49_fu_522_p3;

assign tmp_51_fu_535_p3 = {{i_reg_437}, {3'd0}};

assign tmp_52_cast_fu_1071_p1 = tmp_42_fu_1064_p3;

assign tmp_52_fu_543_p1 = tmp_51_fu_535_p3;

assign tmp_54_fu_573_p3 = {{a_q0}, {3'd0}};

assign tmp_55_fu_599_p3 = {{tmp_84_fu_581_p1}, {tmp_68_fu_593_p2}};

assign tmp_56_fu_612_p2 = (tmp_51_reg_1162 | 10'd1);

assign tmp_57_fu_1027_p3 = {{1'd0}, {tmp_59_fu_1012_p1}};

assign tmp_58_fu_1035_p2 = (tmp_57_fu_1027_p3 | tmp_36_fu_1015_p3);

assign tmp_59_fu_1012_p1 = tmp_reg_1263;

assign tmp_60_cast_fu_1113_p1 = tmp_45_fu_1106_p3;

assign tmp_60_fu_617_p1 = tmp_56_fu_612_p2;

assign tmp_62_fu_1080_p1 = grp_fu_461_p4;

assign tmp_63_fu_1023_p1 = a_q1[3:0];

assign tmp_64_fu_1092_p3 = {{3'd0}, {tmp_62_fu_1080_p1}};

assign tmp_65_fu_1100_p2 = (tmp_64_fu_1092_p3 | tmp_44_fu_1084_p3);

assign tmp_66_fu_1008_p1 = a_q0[6:0];

assign tmp_67_fu_585_p3 = {{3'd0}, {tmp_71_fu_570_p1}};

assign tmp_68_fu_593_p2 = (tmp_67_fu_585_p3 | tmp_54_fu_573_p3);

assign tmp_69_fu_647_p3 = {{tmp_92_fu_643_p1}, {tmp_61_reg_1188}};

assign tmp_70_fu_1076_p1 = a_q0[1:0];

assign tmp_71_fu_570_p1 = tmp_53_reg_1173;

assign tmp_72_fu_659_p2 = (tmp_51_reg_1162 | 10'd2);

assign tmp_73_fu_664_p1 = tmp_72_fu_659_p2;

assign tmp_74_fu_1118_p1 = a_q1[4:0];

assign tmp_75_fu_694_p3 = {{a_q1}, {1'd0}};

assign tmp_76_fu_518_p1 = a_q1[4:0];

assign tmp_77_fu_706_p3 = {{1'd0}, {tmp_93_fu_691_p1}};

assign tmp_78_fu_714_p2 = (tmp_77_fu_706_p3 | tmp_75_fu_694_p3);

assign tmp_79_fu_720_p3 = {{tmp_107_fu_702_p1}, {tmp_78_fu_714_p2}};

assign tmp_80_fu_733_p2 = (tmp_51_reg_1162 | 10'd3);

assign tmp_81_fu_738_p1 = tmp_80_fu_733_p2;

assign tmp_83_cast_fu_607_p1 = tmp_55_fu_599_p3;

assign tmp_83_fu_778_p3 = {{a_q1}, {4'd0}};

assign tmp_84_fu_581_p1 = a_q1[1:0];

assign tmp_85_fu_790_p3 = {{4'd0}, {tmp_94_fu_775_p1}};

assign tmp_86_fu_798_p2 = (tmp_85_fu_790_p3 | tmp_83_fu_778_p3);

assign tmp_87_fu_804_p3 = {{tmp_111_fu_786_p1}, {tmp_86_fu_798_p2}};

assign tmp_88_fu_817_p2 = (tmp_51_reg_1162 | 10'd4);

assign tmp_89_fu_822_p1 = tmp_88_fu_817_p2;

assign tmp_91_fu_869_p3 = {{tmp_112_fu_865_p1}, {tmp_90_reg_1228}};

assign tmp_92_cast_fu_654_p1 = tmp_69_fu_647_p3;

assign tmp_92_fu_643_p1 = a_q0[6:0];

assign tmp_93_fu_691_p1 = tmp_99_reg_1198;

assign tmp_94_fu_775_p1 = tmp_82_reg_1213;

assign tmp_95_fu_881_p2 = (tmp_51_reg_1162 | 10'd5);

assign tmp_96_fu_886_p1 = tmp_95_fu_881_p2;

assign tmp_98_fu_926_p3 = {{reg_479}, {2'd0}};

assign tmp_s_fu_490_p2 = (i_reg_437 + 7'd1);

always @ (posedge ap_clk) begin
    tmp_51_reg_1162[2:0] <= 3'b000;
end

endmodule //poly_Sq_frombytes_1
