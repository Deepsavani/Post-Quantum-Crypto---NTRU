// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _crypto_kem_dec_HH_
#define _crypto_kem_dec_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sha3_256.h"
#include "sha3_256_1.h"
#include "owcpa_dec.h"
#include "crypto_kem_dec_rm.h"
#include "crypto_kem_dec_buf.h"

namespace ap_rtl {

struct crypto_kem_dec : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > k_address0;
    sc_out< sc_logic > k_ce0;
    sc_out< sc_logic > k_we0;
    sc_out< sc_lv<8> > k_d0;
    sc_in< sc_lv<8> > k_q0;
    sc_out< sc_lv<11> > c_address0;
    sc_out< sc_logic > c_ce0;
    sc_in< sc_lv<8> > c_q0;
    sc_out< sc_lv<11> > c_address1;
    sc_out< sc_logic > c_ce1;
    sc_in< sc_lv<8> > c_q1;
    sc_out< sc_lv<11> > sk_address0;
    sc_out< sc_logic > sk_ce0;
    sc_in< sc_lv<8> > sk_q0;
    sc_out< sc_lv<11> > sk_address1;
    sc_out< sc_logic > sk_ce1;
    sc_in< sc_lv<8> > sk_q1;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    crypto_kem_dec(sc_module_name name);
    SC_HAS_PROCESS(crypto_kem_dec);

    ~crypto_kem_dec();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    crypto_kem_dec_rm* rm_U;
    crypto_kem_dec_buf* buf_U;
    sha3_256* grp_sha3_256_fu_167;
    sha3_256_1* grp_sha3_256_1_fu_175;
    owcpa_dec* grp_owcpa_dec_fu_184;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > grp_owcpa_dec_fu_184_ap_return;
    sc_signal< sc_lv<1> > fail_reg_297;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_owcpa_dec_fu_184_ap_ready;
    sc_signal< sc_logic > grp_owcpa_dec_fu_184_ap_done;
    sc_signal< sc_lv<6> > i_33_fu_204_p2;
    sc_signal< sc_lv<6> > i_33_reg_305;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond1_fu_198_p2;
    sc_signal< sc_lv<11> > i_34_fu_232_p2;
    sc_signal< sc_lv<11> > i_34_reg_318;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > exitcond_fu_226_p2;
    sc_signal< sc_lv<8> > b_assign_1_fu_254_p3;
    sc_signal< sc_lv<8> > b_assign_1_reg_328;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > grp_sha3_256_fu_167_ap_ready;
    sc_signal< sc_logic > grp_sha3_256_fu_167_ap_done;
    sc_signal< sc_lv<6> > i_35_fu_273_p2;
    sc_signal< sc_lv<6> > i_35_reg_336;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > exitcond_i_fu_267_p2;
    sc_signal< sc_lv<5> > k_addr_reg_346;
    sc_signal< sc_lv<9> > rm_address0;
    sc_signal< sc_logic > rm_ce0;
    sc_signal< sc_logic > rm_we0;
    sc_signal< sc_lv<8> > rm_d0;
    sc_signal< sc_lv<8> > rm_q0;
    sc_signal< sc_lv<11> > buf_address0;
    sc_signal< sc_logic > buf_ce0;
    sc_signal< sc_logic > buf_we0;
    sc_signal< sc_lv<8> > buf_d0;
    sc_signal< sc_lv<8> > buf_q0;
    sc_signal< sc_logic > grp_sha3_256_fu_167_ap_start;
    sc_signal< sc_logic > grp_sha3_256_fu_167_ap_idle;
    sc_signal< sc_lv<9> > grp_sha3_256_fu_167_output_r_address0;
    sc_signal< sc_logic > grp_sha3_256_fu_167_output_r_ce0;
    sc_signal< sc_logic > grp_sha3_256_fu_167_output_r_we0;
    sc_signal< sc_lv<8> > grp_sha3_256_fu_167_output_r_d0;
    sc_signal< sc_lv<11> > grp_sha3_256_fu_167_input_r_address0;
    sc_signal< sc_logic > grp_sha3_256_fu_167_input_r_ce0;
    sc_signal< sc_logic > grp_sha3_256_1_fu_175_ap_start;
    sc_signal< sc_logic > grp_sha3_256_1_fu_175_ap_done;
    sc_signal< sc_logic > grp_sha3_256_1_fu_175_ap_idle;
    sc_signal< sc_logic > grp_sha3_256_1_fu_175_ap_ready;
    sc_signal< sc_lv<5> > grp_sha3_256_1_fu_175_output_r_address0;
    sc_signal< sc_logic > grp_sha3_256_1_fu_175_output_r_ce0;
    sc_signal< sc_logic > grp_sha3_256_1_fu_175_output_r_we0;
    sc_signal< sc_lv<8> > grp_sha3_256_1_fu_175_output_r_d0;
    sc_signal< sc_lv<9> > grp_sha3_256_1_fu_175_input_r_address0;
    sc_signal< sc_logic > grp_sha3_256_1_fu_175_input_r_ce0;
    sc_signal< sc_logic > grp_owcpa_dec_fu_184_ap_start;
    sc_signal< sc_logic > grp_owcpa_dec_fu_184_ap_idle;
    sc_signal< sc_lv<9> > grp_owcpa_dec_fu_184_rm_address0;
    sc_signal< sc_logic > grp_owcpa_dec_fu_184_rm_ce0;
    sc_signal< sc_logic > grp_owcpa_dec_fu_184_rm_we0;
    sc_signal< sc_lv<8> > grp_owcpa_dec_fu_184_rm_d0;
    sc_signal< sc_lv<11> > grp_owcpa_dec_fu_184_ciphertext_address0;
    sc_signal< sc_logic > grp_owcpa_dec_fu_184_ciphertext_ce0;
    sc_signal< sc_lv<11> > grp_owcpa_dec_fu_184_ciphertext_address1;
    sc_signal< sc_logic > grp_owcpa_dec_fu_184_ciphertext_ce1;
    sc_signal< sc_lv<11> > grp_owcpa_dec_fu_184_secretkey_address0;
    sc_signal< sc_logic > grp_owcpa_dec_fu_184_secretkey_ce0;
    sc_signal< sc_lv<11> > grp_owcpa_dec_fu_184_secretkey_address1;
    sc_signal< sc_logic > grp_owcpa_dec_fu_184_secretkey_ce1;
    sc_signal< sc_lv<6> > i_reg_132;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<11> > i_1_reg_144;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<6> > i_i_reg_156;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > grp_sha3_256_fu_167_ap_start_reg;
    sc_signal< sc_logic > grp_sha3_256_1_fu_175_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > grp_owcpa_dec_fu_184_ap_start_reg;
    sc_signal< sc_lv<64> > tmp_s_fu_216_p1;
    sc_signal< sc_lv<64> > tmp_258_fu_221_p1;
    sc_signal< sc_lv<64> > tmp_259_fu_238_p1;
    sc_signal< sc_lv<64> > cmp_0_sum_cast_fu_249_p1;
    sc_signal< sc_lv<64> > i_i_cast1_fu_261_p1;
    sc_signal< sc_lv<8> > tmp_290_i_fu_290_p2;
    sc_signal< sc_lv<11> > i_cast4_fu_194_p1;
    sc_signal< sc_lv<11> > tmp_fu_210_p2;
    sc_signal< sc_lv<11> > cmp_0_sum_fu_243_p2;
    sc_signal< sc_lv<8> > tmp_i_fu_279_p2;
    sc_signal< sc_lv<8> > tmp_i_63_fu_285_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<11> ap_const_lv11_58A;
    static const sc_lv<11> ap_const_lv11_472;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_20;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_b_assign_1_fu_254_p3();
    void thread_buf_address0();
    void thread_buf_ce0();
    void thread_buf_d0();
    void thread_buf_we0();
    void thread_c_address0();
    void thread_c_address1();
    void thread_c_ce0();
    void thread_c_ce1();
    void thread_cmp_0_sum_cast_fu_249_p1();
    void thread_cmp_0_sum_fu_243_p2();
    void thread_exitcond1_fu_198_p2();
    void thread_exitcond_fu_226_p2();
    void thread_exitcond_i_fu_267_p2();
    void thread_grp_owcpa_dec_fu_184_ap_start();
    void thread_grp_sha3_256_1_fu_175_ap_start();
    void thread_grp_sha3_256_fu_167_ap_start();
    void thread_i_33_fu_204_p2();
    void thread_i_34_fu_232_p2();
    void thread_i_35_fu_273_p2();
    void thread_i_cast4_fu_194_p1();
    void thread_i_i_cast1_fu_261_p1();
    void thread_k_address0();
    void thread_k_ce0();
    void thread_k_d0();
    void thread_k_we0();
    void thread_rm_address0();
    void thread_rm_ce0();
    void thread_rm_d0();
    void thread_rm_we0();
    void thread_sk_address0();
    void thread_sk_address1();
    void thread_sk_ce0();
    void thread_sk_ce1();
    void thread_tmp_258_fu_221_p1();
    void thread_tmp_259_fu_238_p1();
    void thread_tmp_290_i_fu_290_p2();
    void thread_tmp_fu_210_p2();
    void thread_tmp_i_63_fu_285_p2();
    void thread_tmp_i_fu_279_p2();
    void thread_tmp_s_fu_216_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
