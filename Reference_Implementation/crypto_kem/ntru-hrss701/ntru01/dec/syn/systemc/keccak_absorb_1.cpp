// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "keccak_absorb_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic keccak_absorb_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic keccak_absorb_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state1 = "1";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state2 = "10";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state3 = "100";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state4 = "1000";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state5 = "10000";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state6 = "100000";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state12 = "100000000000";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<16> keccak_absorb_1::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_1 = "1";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_3 = "11";
const sc_lv<1> keccak_absorb_1::ap_const_lv1_0 = "0";
const sc_lv<1> keccak_absorb_1::ap_const_lv1_1 = "1";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_4 = "100";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_5 = "101";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_8 = "1000";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_9 = "1001";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_C = "1100";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_D = "1101";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_E = "1110";
const sc_lv<5> keccak_absorb_1::ap_const_lv5_0 = "00000";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_7 = "111";
const sc_lv<11> keccak_absorb_1::ap_const_lv11_492 = "10010010010";
const sc_lv<11> keccak_absorb_1::ap_const_lv11_0 = "00000000000";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_6 = "110";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_2 = "10";
const sc_lv<64> keccak_absorb_1::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<4> keccak_absorb_1::ap_const_lv4_0 = "0000";
const sc_lv<8> keccak_absorb_1::ap_const_lv8_0 = "00000000";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_A = "1010";
const sc_lv<7> keccak_absorb_1::ap_const_lv7_0 = "0000000";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_B = "1011";
const sc_lv<32> keccak_absorb_1::ap_const_lv32_F = "1111";
const sc_lv<64> keccak_absorb_1::ap_const_lv64_87 = "10000111";
const sc_lv<64> keccak_absorb_1::ap_const_lv64_52 = "1010010";
const sc_lv<8> keccak_absorb_1::ap_const_lv8_6 = "110";
const sc_lv<5> keccak_absorb_1::ap_const_lv5_19 = "11001";
const sc_lv<5> keccak_absorb_1::ap_const_lv5_1 = "1";
const sc_lv<11> keccak_absorb_1::ap_const_lv11_88 = "10001000";
const sc_lv<5> keccak_absorb_1::ap_const_lv5_11 = "10001";
const sc_lv<3> keccak_absorb_1::ap_const_lv3_0 = "000";
const sc_lv<11> keccak_absorb_1::ap_const_lv11_778 = "11101111000";
const sc_lv<4> keccak_absorb_1::ap_const_lv4_8 = "1000";
const sc_lv<4> keccak_absorb_1::ap_const_lv4_1 = "1";
const sc_lv<2> keccak_absorb_1::ap_const_lv2_2 = "10";
const sc_lv<8> keccak_absorb_1::ap_const_lv8_88 = "10001000";
const sc_lv<8> keccak_absorb_1::ap_const_lv8_1 = "1";
const sc_lv<7> keccak_absorb_1::ap_const_lv7_52 = "1010010";
const sc_lv<7> keccak_absorb_1::ap_const_lv7_1 = "1";
const sc_lv<11> keccak_absorb_1::ap_const_lv11_460 = "10001100000";
const sc_lv<8> keccak_absorb_1::ap_const_lv8_80 = "10000000";
const bool keccak_absorb_1::ap_const_boolean_1 = true;

keccak_absorb_1::keccak_absorb_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new keccak_absorb_t("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    t_U->address1(t_address1);
    t_U->ce1(t_ce1);
    t_U->we1(t_we1);
    t_U->d1(t_d1);
    t_U->q1(t_q1);
    grp_KeccakF1600_StatePer_fu_307 = new KeccakF1600_StatePer("grp_KeccakF1600_StatePer_fu_307");
    grp_KeccakF1600_StatePer_fu_307->ap_clk(ap_clk);
    grp_KeccakF1600_StatePer_fu_307->ap_rst(ap_rst);
    grp_KeccakF1600_StatePer_fu_307->ap_start(grp_KeccakF1600_StatePer_fu_307_ap_start);
    grp_KeccakF1600_StatePer_fu_307->ap_done(grp_KeccakF1600_StatePer_fu_307_ap_done);
    grp_KeccakF1600_StatePer_fu_307->ap_idle(grp_KeccakF1600_StatePer_fu_307_ap_idle);
    grp_KeccakF1600_StatePer_fu_307->ap_ready(grp_KeccakF1600_StatePer_fu_307_ap_ready);
    grp_KeccakF1600_StatePer_fu_307->state_address0(grp_KeccakF1600_StatePer_fu_307_state_address0);
    grp_KeccakF1600_StatePer_fu_307->state_ce0(grp_KeccakF1600_StatePer_fu_307_state_ce0);
    grp_KeccakF1600_StatePer_fu_307->state_we0(grp_KeccakF1600_StatePer_fu_307_state_we0);
    grp_KeccakF1600_StatePer_fu_307->state_d0(grp_KeccakF1600_StatePer_fu_307_state_d0);
    grp_KeccakF1600_StatePer_fu_307->state_q0(s_q0);
    grp_KeccakF1600_StatePer_fu_307->state_address1(grp_KeccakF1600_StatePer_fu_307_state_address1);
    grp_KeccakF1600_StatePer_fu_307->state_ce1(grp_KeccakF1600_StatePer_fu_307_state_ce1);
    grp_KeccakF1600_StatePer_fu_307->state_we1(grp_KeccakF1600_StatePer_fu_307_state_we1);
    grp_KeccakF1600_StatePer_fu_307->state_d1(grp_KeccakF1600_StatePer_fu_307_state_d1);
    grp_KeccakF1600_StatePer_fu_307->state_q1(s_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_516_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_516_p2 );

    SC_METHOD(thread_exitcond2_fu_482_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i_3_reg_261 );

    SC_METHOD(thread_exitcond3_fu_462_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_2_reg_250 );

    SC_METHOD(thread_exitcond4_fu_342_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_reg_215 );

    SC_METHOD(thread_exitcond_fu_516_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( i_4_reg_272 );

    SC_METHOD(thread_grp_KeccakF1600_StatePer_fu_307_ap_start);
    sensitive << ( grp_KeccakF1600_StatePer_fu_307_ap_start_reg );

    SC_METHOD(thread_i_1_cast_fu_338_p1);
    sensitive << ( i_1_reg_215 );

    SC_METHOD(thread_i_23_fu_326_p2);
    sensitive << ( i_reg_180 );

    SC_METHOD(thread_i_25_fu_468_p2);
    sensitive << ( i_2_reg_250 );

    SC_METHOD(thread_i_26_fu_390_p2);
    sensitive << ( i_i_reg_238 );

    SC_METHOD(thread_i_27_fu_522_p2);
    sensitive << ( i_4_reg_272 );

    SC_METHOD(thread_i_2_cast9_fu_457_p1);
    sensitive << ( i_2_reg_250 );

    SC_METHOD(thread_i_3_cast7_fu_478_p1);
    sensitive << ( i_3_reg_261 );

    SC_METHOD(thread_i_3_cast8_fu_474_p1);
    sensitive << ( i_3_reg_261 );

    SC_METHOD(thread_i_4_cast6_fu_512_p1);
    sensitive << ( i_4_reg_272 );

    SC_METHOD(thread_i_5_fu_348_p2);
    sensitive << ( i_1_reg_215 );

    SC_METHOD(thread_i_6_fu_546_p2);
    sensitive << ( i_i2_reg_295 );

    SC_METHOD(thread_i_cast_fu_315_p1);
    sensitive << ( i_reg_180 );

    SC_METHOD(thread_i_i2_cast4_fu_536_p1);
    sensitive << ( i_i2_reg_295 );

    SC_METHOD(thread_m_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( sum_i_cast_fu_413_p1 );
    sensitive << ( sum2_cast_fu_500_p1 );

    SC_METHOD(thread_m_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_mlen_assign_fu_372_p2);
    sensitive << ( i_24_reg_191 );

    SC_METHOD(thread_p_rec_fu_378_p2);
    sensitive << ( p_01_rec_reg_203 );

    SC_METHOD(thread_r_14_fu_588_p2);
    sensitive << ( r_i1_reg_283 );
    sensitive << ( tmp_276_i_fu_582_p2 );

    SC_METHOD(thread_r_fu_444_p2);
    sensitive << ( r_i_reg_226 );
    sensitive << ( tmp_274_i_fu_438_p2 );

    SC_METHOD(thread_s_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_1_cast_reg_612 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( s_addr_1_reg_653 );
    sensitive << ( i_4_cast6_reg_695 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( s_addr_2_reg_726 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_307_state_address0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( i_cast_fu_315_p1 );

    SC_METHOD(thread_s_address1);
    sensitive << ( grp_KeccakF1600_StatePer_fu_307_state_address1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_s_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_307_state_ce0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_s_ce1);
    sensitive << ( grp_KeccakF1600_StatePer_fu_307_state_ce1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_s_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_307_state_d0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_249_fu_450_p2 );
    sensitive << ( tmp_251_fu_594_p2 );

    SC_METHOD(thread_s_d1);
    sensitive << ( grp_KeccakF1600_StatePer_fu_307_state_d1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_s_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_307_state_we0 );
    sensitive << ( tmp_fu_320_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_s_we1);
    sensitive << ( grp_KeccakF1600_StatePer_fu_307_state_we1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_sum2_cast_fu_500_p1);
    sensitive << ( sum2_fu_494_p2 );

    SC_METHOD(thread_sum2_fu_494_p2);
    sensitive << ( i_3_cast8_fu_474_p1 );

    SC_METHOD(thread_sum_i4_cast_fu_557_p1);
    sensitive << ( sum_i4_fu_552_p2 );

    SC_METHOD(thread_sum_i4_fu_552_p2);
    sensitive << ( tmp_250_reg_708 );
    sensitive << ( i_i2_cast4_fu_536_p1 );

    SC_METHOD(thread_sum_i_cast_fu_413_p1);
    sensitive << ( sum_i_fu_408_p2 );

    SC_METHOD(thread_sum_i_fu_408_p2);
    sensitive << ( tmp1_reg_625 );
    sensitive << ( tmp2_cast_fu_404_p1 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_3_cast7_reg_671 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( i_2_cast9_fu_457_p1 );

    SC_METHOD(thread_t_address1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( sum_i4_cast_fu_557_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_t_ce1);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_t_d0);
    sensitive << ( m_q0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_t_d1);
    sensitive << ( t_q0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond3_fu_462_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_t_we1);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_tmp1_fu_366_p2);
    sensitive << ( p_01_rec_reg_203 );
    sensitive << ( tmp_254_cast_fu_362_p1 );

    SC_METHOD(thread_tmp214_fu_396_p3);
    sensitive << ( i_i_reg_238 );

    SC_METHOD(thread_tmp2_cast_fu_404_p1);
    sensitive << ( tmp214_fu_396_p3 );

    SC_METHOD(thread_tmp_246_fu_354_p3);
    sensitive << ( i_1_reg_215 );

    SC_METHOD(thread_tmp_248_fu_488_p2);
    sensitive << ( i_3_reg_261 );

    SC_METHOD(thread_tmp_249_fu_450_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_i_reg_226 );

    SC_METHOD(thread_tmp_250_fu_528_p3);
    sensitive << ( i_4_reg_272 );

    SC_METHOD(thread_tmp_251_fu_594_p2);
    sensitive << ( s_q0 );
    sensitive << ( r_i1_reg_283 );

    SC_METHOD(thread_tmp_254_cast_fu_362_p1);
    sensitive << ( tmp_246_fu_354_p3 );

    SC_METHOD(thread_tmp_265_fu_422_p1);
    sensitive << ( i_i_reg_238 );

    SC_METHOD(thread_tmp_266_fu_566_p1);
    sensitive << ( i_i2_reg_295 );

    SC_METHOD(thread_tmp_273_i_cast_fu_434_p1);
    sensitive << ( tmp_273_i_fu_426_p3 );

    SC_METHOD(thread_tmp_273_i_fu_426_p3);
    sensitive << ( tmp_265_fu_422_p1 );

    SC_METHOD(thread_tmp_274_i_fu_438_p2);
    sensitive << ( tmp_i_48_fu_418_p1 );
    sensitive << ( tmp_273_i_cast_fu_434_p1 );

    SC_METHOD(thread_tmp_275_i_cast_fu_578_p1);
    sensitive << ( tmp_275_i_fu_570_p3 );

    SC_METHOD(thread_tmp_275_i_fu_570_p3);
    sensitive << ( tmp_266_fu_566_p1 );

    SC_METHOD(thread_tmp_276_i_fu_582_p2);
    sensitive << ( tmp_i7_fu_562_p1 );
    sensitive << ( tmp_275_i_cast_fu_578_p1 );

    SC_METHOD(thread_tmp_fu_320_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_180 );

    SC_METHOD(thread_tmp_i3_fu_540_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( i_i2_reg_295 );

    SC_METHOD(thread_tmp_i7_fu_562_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_i_48_fu_418_p1);
    sensitive << ( m_q0 );

    SC_METHOD(thread_tmp_i_fu_384_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_i_reg_238 );

    SC_METHOD(thread_tmp_s_fu_332_p2);
    sensitive << ( i_24_reg_191 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond4_fu_342_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_i_fu_384_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond2_fu_482_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_516_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_i3_fu_540_p2 );
    sensitive << ( grp_KeccakF1600_StatePer_fu_307_ap_done );
    sensitive << ( tmp_fu_320_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_s_fu_332_p2 );
    sensitive << ( exitcond3_fu_462_p2 );

    ap_CS_fsm = "0000000000000001";
    grp_KeccakF1600_StatePer_fu_307_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "keccak_absorb_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, s_address0, "(port)s_address0");
    sc_trace(mVcdFile, s_ce0, "(port)s_ce0");
    sc_trace(mVcdFile, s_we0, "(port)s_we0");
    sc_trace(mVcdFile, s_d0, "(port)s_d0");
    sc_trace(mVcdFile, s_q0, "(port)s_q0");
    sc_trace(mVcdFile, s_address1, "(port)s_address1");
    sc_trace(mVcdFile, s_ce1, "(port)s_ce1");
    sc_trace(mVcdFile, s_we1, "(port)s_we1");
    sc_trace(mVcdFile, s_d1, "(port)s_d1");
    sc_trace(mVcdFile, s_q1, "(port)s_q1");
    sc_trace(mVcdFile, m_address0, "(port)m_address0");
    sc_trace(mVcdFile, m_ce0, "(port)m_ce0");
    sc_trace(mVcdFile, m_q0, "(port)m_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_23_fu_326_p2, "i_23_fu_326_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_cast_fu_338_p1, "i_1_cast_fu_338_p1");
    sc_trace(mVcdFile, i_1_cast_reg_612, "i_1_cast_reg_612");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_5_fu_348_p2, "i_5_fu_348_p2");
    sc_trace(mVcdFile, i_5_reg_620, "i_5_reg_620");
    sc_trace(mVcdFile, tmp1_fu_366_p2, "tmp1_fu_366_p2");
    sc_trace(mVcdFile, tmp1_reg_625, "tmp1_reg_625");
    sc_trace(mVcdFile, exitcond4_fu_342_p2, "exitcond4_fu_342_p2");
    sc_trace(mVcdFile, mlen_assign_fu_372_p2, "mlen_assign_fu_372_p2");
    sc_trace(mVcdFile, mlen_assign_reg_630, "mlen_assign_reg_630");
    sc_trace(mVcdFile, p_rec_fu_378_p2, "p_rec_fu_378_p2");
    sc_trace(mVcdFile, p_rec_reg_635, "p_rec_reg_635");
    sc_trace(mVcdFile, i_26_fu_390_p2, "i_26_fu_390_p2");
    sc_trace(mVcdFile, i_26_reg_643, "i_26_reg_643");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_i_fu_384_p2, "tmp_i_fu_384_p2");
    sc_trace(mVcdFile, s_addr_1_reg_653, "s_addr_1_reg_653");
    sc_trace(mVcdFile, r_fu_444_p2, "r_fu_444_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_25_fu_468_p2, "i_25_fu_468_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_3_cast7_fu_478_p1, "i_3_cast7_fu_478_p1");
    sc_trace(mVcdFile, i_3_cast7_reg_671, "i_3_cast7_reg_671");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_248_fu_488_p2, "tmp_248_fu_488_p2");
    sc_trace(mVcdFile, tmp_248_reg_679, "tmp_248_reg_679");
    sc_trace(mVcdFile, exitcond2_fu_482_p2, "exitcond2_fu_482_p2");
    sc_trace(mVcdFile, i_4_cast6_fu_512_p1, "i_4_cast6_fu_512_p1");
    sc_trace(mVcdFile, i_4_cast6_reg_695, "i_4_cast6_reg_695");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, i_27_fu_522_p2, "i_27_fu_522_p2");
    sc_trace(mVcdFile, i_27_reg_703, "i_27_reg_703");
    sc_trace(mVcdFile, tmp_250_fu_528_p3, "tmp_250_fu_528_p3");
    sc_trace(mVcdFile, tmp_250_reg_708, "tmp_250_reg_708");
    sc_trace(mVcdFile, exitcond_fu_516_p2, "exitcond_fu_516_p2");
    sc_trace(mVcdFile, i_6_fu_546_p2, "i_6_fu_546_p2");
    sc_trace(mVcdFile, i_6_reg_716, "i_6_reg_716");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_i3_fu_540_p2, "tmp_i3_fu_540_p2");
    sc_trace(mVcdFile, s_addr_2_reg_726, "s_addr_2_reg_726");
    sc_trace(mVcdFile, r_14_fu_588_p2, "r_14_fu_588_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, t_address1, "t_address1");
    sc_trace(mVcdFile, t_ce1, "t_ce1");
    sc_trace(mVcdFile, t_we1, "t_we1");
    sc_trace(mVcdFile, t_d1, "t_d1");
    sc_trace(mVcdFile, t_q1, "t_q1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_ap_start, "grp_KeccakF1600_StatePer_fu_307_ap_start");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_ap_done, "grp_KeccakF1600_StatePer_fu_307_ap_done");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_ap_idle, "grp_KeccakF1600_StatePer_fu_307_ap_idle");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_ap_ready, "grp_KeccakF1600_StatePer_fu_307_ap_ready");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_state_address0, "grp_KeccakF1600_StatePer_fu_307_state_address0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_state_ce0, "grp_KeccakF1600_StatePer_fu_307_state_ce0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_state_we0, "grp_KeccakF1600_StatePer_fu_307_state_we0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_state_d0, "grp_KeccakF1600_StatePer_fu_307_state_d0");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_state_address1, "grp_KeccakF1600_StatePer_fu_307_state_address1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_state_ce1, "grp_KeccakF1600_StatePer_fu_307_state_ce1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_state_we1, "grp_KeccakF1600_StatePer_fu_307_state_we1");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_state_d1, "grp_KeccakF1600_StatePer_fu_307_state_d1");
    sc_trace(mVcdFile, i_reg_180, "i_reg_180");
    sc_trace(mVcdFile, tmp_fu_320_p2, "tmp_fu_320_p2");
    sc_trace(mVcdFile, i_24_reg_191, "i_24_reg_191");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, p_01_rec_reg_203, "p_01_rec_reg_203");
    sc_trace(mVcdFile, i_1_reg_215, "i_1_reg_215");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_s_fu_332_p2, "tmp_s_fu_332_p2");
    sc_trace(mVcdFile, r_i_reg_226, "r_i_reg_226");
    sc_trace(mVcdFile, i_i_reg_238, "i_i_reg_238");
    sc_trace(mVcdFile, i_2_reg_250, "i_2_reg_250");
    sc_trace(mVcdFile, exitcond3_fu_462_p2, "exitcond3_fu_462_p2");
    sc_trace(mVcdFile, i_3_reg_261, "i_3_reg_261");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_4_reg_272, "i_4_reg_272");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, r_i1_reg_283, "r_i1_reg_283");
    sc_trace(mVcdFile, i_i2_reg_295, "i_i2_reg_295");
    sc_trace(mVcdFile, grp_KeccakF1600_StatePer_fu_307_ap_start_reg, "grp_KeccakF1600_StatePer_fu_307_ap_start_reg");
    sc_trace(mVcdFile, i_cast_fu_315_p1, "i_cast_fu_315_p1");
    sc_trace(mVcdFile, sum_i_cast_fu_413_p1, "sum_i_cast_fu_413_p1");
    sc_trace(mVcdFile, i_2_cast9_fu_457_p1, "i_2_cast9_fu_457_p1");
    sc_trace(mVcdFile, sum2_cast_fu_500_p1, "sum2_cast_fu_500_p1");
    sc_trace(mVcdFile, sum_i4_cast_fu_557_p1, "sum_i4_cast_fu_557_p1");
    sc_trace(mVcdFile, tmp_249_fu_450_p2, "tmp_249_fu_450_p2");
    sc_trace(mVcdFile, tmp_251_fu_594_p2, "tmp_251_fu_594_p2");
    sc_trace(mVcdFile, tmp_246_fu_354_p3, "tmp_246_fu_354_p3");
    sc_trace(mVcdFile, tmp_254_cast_fu_362_p1, "tmp_254_cast_fu_362_p1");
    sc_trace(mVcdFile, tmp214_fu_396_p3, "tmp214_fu_396_p3");
    sc_trace(mVcdFile, tmp2_cast_fu_404_p1, "tmp2_cast_fu_404_p1");
    sc_trace(mVcdFile, sum_i_fu_408_p2, "sum_i_fu_408_p2");
    sc_trace(mVcdFile, tmp_265_fu_422_p1, "tmp_265_fu_422_p1");
    sc_trace(mVcdFile, tmp_273_i_fu_426_p3, "tmp_273_i_fu_426_p3");
    sc_trace(mVcdFile, tmp_i_48_fu_418_p1, "tmp_i_48_fu_418_p1");
    sc_trace(mVcdFile, tmp_273_i_cast_fu_434_p1, "tmp_273_i_cast_fu_434_p1");
    sc_trace(mVcdFile, tmp_274_i_fu_438_p2, "tmp_274_i_fu_438_p2");
    sc_trace(mVcdFile, i_3_cast8_fu_474_p1, "i_3_cast8_fu_474_p1");
    sc_trace(mVcdFile, sum2_fu_494_p2, "sum2_fu_494_p2");
    sc_trace(mVcdFile, i_i2_cast4_fu_536_p1, "i_i2_cast4_fu_536_p1");
    sc_trace(mVcdFile, sum_i4_fu_552_p2, "sum_i4_fu_552_p2");
    sc_trace(mVcdFile, tmp_266_fu_566_p1, "tmp_266_fu_566_p1");
    sc_trace(mVcdFile, tmp_275_i_fu_570_p3, "tmp_275_i_fu_570_p3");
    sc_trace(mVcdFile, tmp_i7_fu_562_p1, "tmp_i7_fu_562_p1");
    sc_trace(mVcdFile, tmp_275_i_cast_fu_578_p1, "tmp_275_i_cast_fu_578_p1");
    sc_trace(mVcdFile, tmp_276_i_fu_582_p2, "tmp_276_i_fu_582_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

keccak_absorb_1::~keccak_absorb_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
    delete grp_KeccakF1600_StatePer_fu_307;
}

void keccak_absorb_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_KeccakF1600_StatePer_fu_307_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
             esl_seteq<1,1,1>(exitcond4_fu_342_p2.read(), ap_const_lv1_1))) {
            grp_KeccakF1600_StatePer_fu_307_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_KeccakF1600_StatePer_fu_307_ap_ready.read())) {
            grp_KeccakF1600_StatePer_fu_307_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_332_p2.read()))) {
        i_1_reg_215 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_1_reg_215 = i_5_reg_620.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_320_p2.read()))) {
        i_24_reg_191 = ap_const_lv11_492;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_307_ap_done.read(), ap_const_logic_1))) {
        i_24_reg_191 = mlen_assign_reg_630.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_332_p2.read()))) {
        i_2_reg_250 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_462_p2.read()))) {
        i_2_reg_250 = i_25_fu_468_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_462_p2.read()))) {
        i_3_reg_261 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_3_reg_261 = tmp_248_reg_679.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i_4_reg_272 = i_27_reg_703.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_4_reg_272 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_i2_reg_295 = i_6_reg_716.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_516_p2.read()))) {
        i_i2_reg_295 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_i_reg_238 = i_26_reg_643.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_342_p2.read(), ap_const_lv1_0))) {
        i_i_reg_238 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_320_p2.read()))) {
        i_reg_180 = i_23_fu_326_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_180 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_320_p2.read()))) {
        p_01_rec_reg_203 = ap_const_lv11_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_307_ap_done.read(), ap_const_logic_1))) {
        p_01_rec_reg_203 = p_rec_reg_635.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_i1_reg_283 = r_14_fu_588_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_516_p2.read()))) {
        r_i1_reg_283 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_i_reg_226 = r_fu_444_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_342_p2.read(), ap_const_lv1_0))) {
        r_i_reg_226 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_1_cast_reg_612 = i_1_cast_fu_338_p1.read();
        i_5_reg_620 = i_5_fu_348_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_26_reg_643 = i_26_fu_390_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_27_reg_703 = i_27_fu_522_p2.read();
        i_4_cast6_reg_695 = i_4_cast6_fu_512_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_3_cast7_reg_671 = i_3_cast7_fu_478_p1.read();
        tmp_248_reg_679 = tmp_248_fu_488_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_6_reg_716 = i_6_fu_546_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond4_fu_342_p2.read(), ap_const_lv1_1))) {
        mlen_assign_reg_630 = mlen_assign_fu_372_p2.read();
        p_rec_reg_635 = p_rec_fu_378_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_384_p2.read()))) {
        s_addr_1_reg_653 =  (sc_lv<5>) (i_1_cast_reg_612.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i3_fu_540_p2.read()))) {
        s_addr_2_reg_726 =  (sc_lv<5>) (i_4_cast6_reg_695.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond4_fu_342_p2.read(), ap_const_lv1_0))) {
        tmp1_reg_625 = tmp1_fu_366_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_516_p2.read()))) {
        tmp_250_reg_708 = tmp_250_fu_528_p3.read();
    }
}

void keccak_absorb_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void keccak_absorb_1::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void keccak_absorb_1::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void keccak_absorb_1::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void keccak_absorb_1::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void keccak_absorb_1::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void keccak_absorb_1::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void keccak_absorb_1::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void keccak_absorb_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void keccak_absorb_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void keccak_absorb_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void keccak_absorb_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void keccak_absorb_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void keccak_absorb_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void keccak_absorb_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void keccak_absorb_1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void keccak_absorb_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_516_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void keccak_absorb_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void keccak_absorb_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_516_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void keccak_absorb_1::thread_exitcond2_fu_482_p2() {
    exitcond2_fu_482_p2 = (!i_3_reg_261.read().is_01() || !ap_const_lv7_52.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_261.read() == ap_const_lv7_52);
}

void keccak_absorb_1::thread_exitcond3_fu_462_p2() {
    exitcond3_fu_462_p2 = (!i_2_reg_250.read().is_01() || !ap_const_lv8_88.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_250.read() == ap_const_lv8_88);
}

void keccak_absorb_1::thread_exitcond4_fu_342_p2() {
    exitcond4_fu_342_p2 = (!i_1_reg_215.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_215.read() == ap_const_lv5_11);
}

void keccak_absorb_1::thread_exitcond_fu_516_p2() {
    exitcond_fu_516_p2 = (!i_4_reg_272.read().is_01() || !ap_const_lv5_11.is_01())? sc_lv<1>(): sc_lv<1>(i_4_reg_272.read() == ap_const_lv5_11);
}

void keccak_absorb_1::thread_grp_KeccakF1600_StatePer_fu_307_ap_start() {
    grp_KeccakF1600_StatePer_fu_307_ap_start = grp_KeccakF1600_StatePer_fu_307_ap_start_reg.read();
}

void keccak_absorb_1::thread_i_1_cast_fu_338_p1() {
    i_1_cast_fu_338_p1 = esl_zext<64,5>(i_1_reg_215.read());
}

void keccak_absorb_1::thread_i_23_fu_326_p2() {
    i_23_fu_326_p2 = (!i_reg_180.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_180.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb_1::thread_i_25_fu_468_p2() {
    i_25_fu_468_p2 = (!i_2_reg_250.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_2_reg_250.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void keccak_absorb_1::thread_i_26_fu_390_p2() {
    i_26_fu_390_p2 = (!i_i_reg_238.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i_reg_238.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void keccak_absorb_1::thread_i_27_fu_522_p2() {
    i_27_fu_522_p2 = (!i_4_reg_272.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_4_reg_272.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb_1::thread_i_2_cast9_fu_457_p1() {
    i_2_cast9_fu_457_p1 = esl_zext<64,8>(i_2_reg_250.read());
}

void keccak_absorb_1::thread_i_3_cast7_fu_478_p1() {
    i_3_cast7_fu_478_p1 = esl_zext<64,7>(i_3_reg_261.read());
}

void keccak_absorb_1::thread_i_3_cast8_fu_474_p1() {
    i_3_cast8_fu_474_p1 = esl_zext<11,7>(i_3_reg_261.read());
}

void keccak_absorb_1::thread_i_4_cast6_fu_512_p1() {
    i_4_cast6_fu_512_p1 = esl_zext<64,5>(i_4_reg_272.read());
}

void keccak_absorb_1::thread_i_5_fu_348_p2() {
    i_5_fu_348_p2 = (!i_1_reg_215.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_1_reg_215.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void keccak_absorb_1::thread_i_6_fu_546_p2() {
    i_6_fu_546_p2 = (!i_i2_reg_295.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i2_reg_295.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void keccak_absorb_1::thread_i_cast_fu_315_p1() {
    i_cast_fu_315_p1 = esl_zext<64,5>(i_reg_180.read());
}

void keccak_absorb_1::thread_i_i2_cast4_fu_536_p1() {
    i_i2_cast4_fu_536_p1 = esl_zext<8,4>(i_i2_reg_295.read());
}

void keccak_absorb_1::thread_m_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        m_address0 =  (sc_lv<11>) (sum2_cast_fu_500_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        m_address0 =  (sc_lv<11>) (sum_i_cast_fu_413_p1.read());
    } else {
        m_address0 = "XXXXXXXXXXX";
    }
}

void keccak_absorb_1::thread_m_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        m_ce0 = ap_const_logic_1;
    } else {
        m_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb_1::thread_mlen_assign_fu_372_p2() {
    mlen_assign_fu_372_p2 = (!i_24_reg_191.read().is_01() || !ap_const_lv11_778.is_01())? sc_lv<11>(): (sc_biguint<11>(i_24_reg_191.read()) + sc_bigint<11>(ap_const_lv11_778));
}

void keccak_absorb_1::thread_p_rec_fu_378_p2() {
    p_rec_fu_378_p2 = (!p_01_rec_reg_203.read().is_01() || !ap_const_lv11_88.is_01())? sc_lv<11>(): (sc_biguint<11>(p_01_rec_reg_203.read()) + sc_biguint<11>(ap_const_lv11_88));
}

void keccak_absorb_1::thread_r_14_fu_588_p2() {
    r_14_fu_588_p2 = (tmp_276_i_fu_582_p2.read() | r_i1_reg_283.read());
}

void keccak_absorb_1::thread_r_fu_444_p2() {
    r_fu_444_p2 = (tmp_274_i_fu_438_p2.read() | r_i_reg_226.read());
}

void keccak_absorb_1::thread_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        s_address0 = s_addr_2_reg_726.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        s_address0 =  (sc_lv<5>) (i_4_cast6_reg_695.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_address0 = s_addr_1_reg_653.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        s_address0 =  (sc_lv<5>) (i_1_cast_reg_612.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_address0 =  (sc_lv<5>) (i_cast_fu_315_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_address0 = grp_KeccakF1600_StatePer_fu_307_state_address0.read();
    } else {
        s_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void keccak_absorb_1::thread_s_address1() {
    s_address1 = grp_KeccakF1600_StatePer_fu_307_state_address1.read();
}

void keccak_absorb_1::thread_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        s_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_ce0 = grp_KeccakF1600_StatePer_fu_307_state_ce0.read();
    } else {
        s_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb_1::thread_s_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_ce1 = grp_KeccakF1600_StatePer_fu_307_state_ce1.read();
    } else {
        s_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb_1::thread_s_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        s_d0 = tmp_251_fu_594_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        s_d0 = tmp_249_fu_450_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        s_d0 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_d0 = grp_KeccakF1600_StatePer_fu_307_state_d0.read();
    } else {
        s_d0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void keccak_absorb_1::thread_s_d1() {
    s_d1 = grp_KeccakF1600_StatePer_fu_307_state_d1.read();
}

void keccak_absorb_1::thread_s_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_320_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        s_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_we0 = grp_KeccakF1600_StatePer_fu_307_state_we0.read();
    } else {
        s_we0 = ap_const_logic_0;
    }
}

void keccak_absorb_1::thread_s_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        s_we1 = grp_KeccakF1600_StatePer_fu_307_state_we1.read();
    } else {
        s_we1 = ap_const_logic_0;
    }
}

void keccak_absorb_1::thread_sum2_cast_fu_500_p1() {
    sum2_cast_fu_500_p1 = esl_zext<64,11>(sum2_fu_494_p2.read());
}

void keccak_absorb_1::thread_sum2_fu_494_p2() {
    sum2_fu_494_p2 = (!i_3_cast8_fu_474_p1.read().is_01() || !ap_const_lv11_460.is_01())? sc_lv<11>(): (sc_biguint<11>(i_3_cast8_fu_474_p1.read()) + sc_bigint<11>(ap_const_lv11_460));
}

void keccak_absorb_1::thread_sum_i4_cast_fu_557_p1() {
    sum_i4_cast_fu_557_p1 = esl_zext<64,8>(sum_i4_fu_552_p2.read());
}

void keccak_absorb_1::thread_sum_i4_fu_552_p2() {
    sum_i4_fu_552_p2 = (!tmp_250_reg_708.read().is_01() || !i_i2_cast4_fu_536_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_250_reg_708.read()) + sc_biguint<8>(i_i2_cast4_fu_536_p1.read()));
}

void keccak_absorb_1::thread_sum_i_cast_fu_413_p1() {
    sum_i_cast_fu_413_p1 = esl_zext<64,11>(sum_i_fu_408_p2.read());
}

void keccak_absorb_1::thread_sum_i_fu_408_p2() {
    sum_i_fu_408_p2 = (!tmp1_reg_625.read().is_01() || !tmp2_cast_fu_404_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp1_reg_625.read()) + sc_biguint<11>(tmp2_cast_fu_404_p1.read()));
}

void keccak_absorb_1::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_address0 =  (sc_lv<8>) (ap_const_lv64_52);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        t_address0 =  (sc_lv<8>) (i_3_cast7_reg_671.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_address0 =  (sc_lv<8>) (ap_const_lv64_87);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_address0 =  (sc_lv<8>) (i_2_cast9_fu_457_p1.read());
    } else {
        t_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb_1::thread_t_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        t_address1 =  (sc_lv<8>) (sum_i4_cast_fu_557_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_address1 =  (sc_lv<8>) (ap_const_lv64_87);
    } else {
        t_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb_1::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void keccak_absorb_1::thread_t_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        t_ce1 = ap_const_logic_1;
    } else {
        t_ce1 = ap_const_logic_0;
    }
}

void keccak_absorb_1::thread_t_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_d0 = ap_const_lv8_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        t_d0 = m_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_d0 = ap_const_lv8_0;
    } else {
        t_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void keccak_absorb_1::thread_t_d1() {
    t_d1 = (t_q0.read() | ap_const_lv8_80);
}

void keccak_absorb_1::thread_t_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_462_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void keccak_absorb_1::thread_t_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        t_we1 = ap_const_logic_1;
    } else {
        t_we1 = ap_const_logic_0;
    }
}

void keccak_absorb_1::thread_tmp1_fu_366_p2() {
    tmp1_fu_366_p2 = (!p_01_rec_reg_203.read().is_01() || !tmp_254_cast_fu_362_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_01_rec_reg_203.read()) + sc_biguint<11>(tmp_254_cast_fu_362_p1.read()));
}

void keccak_absorb_1::thread_tmp214_fu_396_p3() {
    tmp214_fu_396_p3 = esl_concat<2,4>(ap_const_lv2_2, i_i_reg_238.read());
}

void keccak_absorb_1::thread_tmp2_cast_fu_404_p1() {
    tmp2_cast_fu_404_p1 = esl_zext<11,6>(tmp214_fu_396_p3.read());
}

void keccak_absorb_1::thread_tmp_246_fu_354_p3() {
    tmp_246_fu_354_p3 = esl_concat<5,3>(i_1_reg_215.read(), ap_const_lv3_0);
}

void keccak_absorb_1::thread_tmp_248_fu_488_p2() {
    tmp_248_fu_488_p2 = (!i_3_reg_261.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_3_reg_261.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void keccak_absorb_1::thread_tmp_249_fu_450_p2() {
    tmp_249_fu_450_p2 = (s_q0.read() ^ r_i_reg_226.read());
}

void keccak_absorb_1::thread_tmp_250_fu_528_p3() {
    tmp_250_fu_528_p3 = esl_concat<5,3>(i_4_reg_272.read(), ap_const_lv3_0);
}

void keccak_absorb_1::thread_tmp_251_fu_594_p2() {
    tmp_251_fu_594_p2 = (s_q0.read() ^ r_i1_reg_283.read());
}

void keccak_absorb_1::thread_tmp_254_cast_fu_362_p1() {
    tmp_254_cast_fu_362_p1 = esl_zext<11,8>(tmp_246_fu_354_p3.read());
}

void keccak_absorb_1::thread_tmp_265_fu_422_p1() {
    tmp_265_fu_422_p1 = i_i_reg_238.read().range(3-1, 0);
}

void keccak_absorb_1::thread_tmp_266_fu_566_p1() {
    tmp_266_fu_566_p1 = i_i2_reg_295.read().range(3-1, 0);
}

void keccak_absorb_1::thread_tmp_273_i_cast_fu_434_p1() {
    tmp_273_i_cast_fu_434_p1 = esl_zext<64,6>(tmp_273_i_fu_426_p3.read());
}

void keccak_absorb_1::thread_tmp_273_i_fu_426_p3() {
    tmp_273_i_fu_426_p3 = esl_concat<3,3>(tmp_265_fu_422_p1.read(), ap_const_lv3_0);
}

void keccak_absorb_1::thread_tmp_274_i_fu_438_p2() {
    tmp_274_i_fu_438_p2 = (!tmp_273_i_cast_fu_434_p1.read().is_01())? sc_lv<64>(): tmp_i_48_fu_418_p1.read() << (unsigned short)tmp_273_i_cast_fu_434_p1.read().to_uint();
}

void keccak_absorb_1::thread_tmp_275_i_cast_fu_578_p1() {
    tmp_275_i_cast_fu_578_p1 = esl_zext<64,6>(tmp_275_i_fu_570_p3.read());
}

void keccak_absorb_1::thread_tmp_275_i_fu_570_p3() {
    tmp_275_i_fu_570_p3 = esl_concat<3,3>(tmp_266_fu_566_p1.read(), ap_const_lv3_0);
}

void keccak_absorb_1::thread_tmp_276_i_fu_582_p2() {
    tmp_276_i_fu_582_p2 = (!tmp_275_i_cast_fu_578_p1.read().is_01())? sc_lv<64>(): tmp_i7_fu_562_p1.read() << (unsigned short)tmp_275_i_cast_fu_578_p1.read().to_uint();
}

void keccak_absorb_1::thread_tmp_fu_320_p2() {
    tmp_fu_320_p2 = (!i_reg_180.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_180.read() == ap_const_lv5_19);
}

void keccak_absorb_1::thread_tmp_i3_fu_540_p2() {
    tmp_i3_fu_540_p2 = (!i_i2_reg_295.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i2_reg_295.read() == ap_const_lv4_8);
}

void keccak_absorb_1::thread_tmp_i7_fu_562_p1() {
    tmp_i7_fu_562_p1 = esl_zext<64,8>(t_q1.read());
}

void keccak_absorb_1::thread_tmp_i_48_fu_418_p1() {
    tmp_i_48_fu_418_p1 = esl_zext<64,8>(m_q0.read());
}

void keccak_absorb_1::thread_tmp_i_fu_384_p2() {
    tmp_i_fu_384_p2 = (!i_i_reg_238.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_238.read() == ap_const_lv4_8);
}

void keccak_absorb_1::thread_tmp_s_fu_332_p2() {
    tmp_s_fu_332_p2 = (!i_24_reg_191.read().is_01() || !ap_const_lv11_88.is_01())? sc_lv<1>(): (sc_biguint<11>(i_24_reg_191.read()) < sc_biguint<11>(ap_const_lv11_88));
}

void keccak_absorb_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_320_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_s_fu_332_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond4_fu_342_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_384_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_KeccakF1600_StatePer_fu_307_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_462_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_482_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_516_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i3_fu_540_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
            break;
    }
}

}

