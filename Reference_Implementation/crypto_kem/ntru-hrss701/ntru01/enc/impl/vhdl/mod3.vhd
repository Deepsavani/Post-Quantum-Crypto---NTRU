-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mod3 is
port (
    ap_ready : OUT STD_LOGIC;
    a : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of mod3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_230_fu_38_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_52_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_297_cast_fu_56_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_296_cast_fu_48_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_1_fu_66_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_232_fu_72_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_93_fu_90_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_244_fu_86_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal fold1_cast_fu_100_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_299_cast_fu_106_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_298_cast_fu_82_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_2_fu_110_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_233_fu_116_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_231_fu_60_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_94_fu_130_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal fold2_cast_fu_140_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_301_cast_fu_146_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_300_cast_fu_126_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_3_fu_150_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_fu_156_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_247_fu_162_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_cast_fu_170_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_178_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal not_tmp_s_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_303_cast_cast_fu_194_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_245_fu_202_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_302_cast_fu_184_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_304_cast_fu_208_p1 : STD_LOGIC_VECTOR (15 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= (tmp_304_cast_fu_208_p1 xor tmp_302_cast_fu_184_p1);
    c_cast_fu_170_p3 <= 
        ap_const_lv3_7 when (tmp_247_fu_162_p3(0) = '1') else 
        ap_const_lv3_0;
    fold1_cast_fu_100_p2 <= std_logic_vector(unsigned(tmp_93_fu_90_p4) + unsigned(tmp_244_fu_86_p1));
    fold2_cast_fu_140_p2 <= std_logic_vector(unsigned(fold1_cast_fu_100_p2) + unsigned(tmp_94_fu_130_p4));
    not_tmp_s_fu_188_p2 <= (tmp_247_fu_162_p3 xor ap_const_lv1_1);
    r_1_fu_66_p2 <= std_logic_vector(unsigned(tmp_297_cast_fu_56_p1) + unsigned(tmp_296_cast_fu_48_p1));
    r_2_fu_110_p2 <= std_logic_vector(unsigned(tmp_299_cast_fu_106_p1) + unsigned(tmp_298_cast_fu_82_p1));
    r_3_fu_150_p2 <= std_logic_vector(unsigned(tmp_301_cast_fu_146_p1) + unsigned(tmp_300_cast_fu_126_p1));
    t_fu_156_p2 <= std_logic_vector(signed(ap_const_lv3_5) + signed(r_3_fu_150_p2));
    tmp_230_fu_38_p4 <= a(7 downto 4);
    tmp_231_fu_60_p2 <= std_logic_vector(unsigned(tmp_230_fu_38_p4) + unsigned(tmp_fu_52_p1));
    tmp_232_fu_72_p4 <= r_1_fu_66_p2(4 downto 2);
    tmp_233_fu_116_p4 <= r_2_fu_110_p2(3 downto 2);
    tmp_244_fu_86_p1 <= a(2 - 1 downto 0);
    tmp_245_fu_202_p2 <= (tmp_303_cast_cast_fu_194_p3 and t_fu_156_p2);
    tmp_247_fu_162_p3 <= t_fu_156_p2(2 downto 2);
    tmp_296_cast_fu_48_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_230_fu_38_p4),5));
    tmp_297_cast_fu_56_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_52_p1),5));
    tmp_298_cast_fu_82_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_232_fu_72_p4),4));
    tmp_299_cast_fu_106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fold1_cast_fu_100_p2),4));
    tmp_300_cast_fu_126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_233_fu_116_p4),3));
    tmp_301_cast_fu_146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fold2_cast_fu_140_p2),3));
    tmp_302_cast_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_178_p2),16));
    tmp_303_cast_cast_fu_194_p3 <= 
        ap_const_lv3_7 when (not_tmp_s_fu_188_p2(0) = '1') else 
        ap_const_lv3_0;
        tmp_304_cast_fu_208_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_245_fu_202_p2),16));

    tmp_93_fu_90_p4 <= a(5 downto 4);
    tmp_94_fu_130_p4 <= tmp_231_fu_60_p2(3 downto 2);
    tmp_fu_52_p1 <= a(4 - 1 downto 0);
    tmp_s_fu_178_p2 <= (r_3_fu_150_p2 and c_cast_fu_170_p3);
end behav;
