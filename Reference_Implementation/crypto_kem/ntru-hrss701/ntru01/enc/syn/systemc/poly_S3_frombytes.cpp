// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "poly_S3_frombytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic poly_S3_frombytes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic poly_S3_frombytes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> poly_S3_frombytes::ap_ST_fsm_state1 = "1";
const sc_lv<7> poly_S3_frombytes::ap_ST_fsm_state2 = "10";
const sc_lv<7> poly_S3_frombytes::ap_ST_fsm_state3 = "100";
const sc_lv<7> poly_S3_frombytes::ap_ST_fsm_state4 = "1000";
const sc_lv<7> poly_S3_frombytes::ap_ST_fsm_state5 = "10000";
const sc_lv<7> poly_S3_frombytes::ap_ST_fsm_state6 = "100000";
const sc_lv<7> poly_S3_frombytes::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> poly_S3_frombytes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> poly_S3_frombytes::ap_const_lv32_3 = "11";
const sc_lv<32> poly_S3_frombytes::ap_const_lv32_4 = "100";
const sc_lv<32> poly_S3_frombytes::ap_const_lv32_5 = "101";
const sc_lv<32> poly_S3_frombytes::ap_const_lv32_1 = "1";
const sc_lv<1> poly_S3_frombytes::ap_const_lv1_0 = "0";
const sc_lv<32> poly_S3_frombytes::ap_const_lv32_2 = "10";
const sc_lv<8> poly_S3_frombytes::ap_const_lv8_0 = "00000000";
const sc_lv<32> poly_S3_frombytes::ap_const_lv32_6 = "110";
const sc_lv<64> poly_S3_frombytes::ap_const_lv64_2BC = "1010111100";
const sc_lv<1> poly_S3_frombytes::ap_const_lv1_1 = "1";
const sc_lv<16> poly_S3_frombytes::ap_const_lv16_0 = "0000000000000000";
const sc_lv<8> poly_S3_frombytes::ap_const_lv8_8C = "10001100";
const sc_lv<8> poly_S3_frombytes::ap_const_lv8_1 = "1";
const sc_lv<2> poly_S3_frombytes::ap_const_lv2_0 = "00";
const sc_lv<16> poly_S3_frombytes::ap_const_lv16_AB = "10101011";
const sc_lv<32> poly_S3_frombytes::ap_const_lv32_9 = "1001";
const sc_lv<32> poly_S3_frombytes::ap_const_lv32_F = "1111";
const sc_lv<16> poly_S3_frombytes::ap_const_lv16_CB = "11001011";
const sc_lv<32> poly_S3_frombytes::ap_const_lv32_E = "1110";
const sc_lv<14> poly_S3_frombytes::ap_const_lv14_39 = "111001";
const sc_lv<32> poly_S3_frombytes::ap_const_lv32_D = "1101";
const sc_lv<13> poly_S3_frombytes::ap_const_lv13_13 = "10011";
const sc_lv<32> poly_S3_frombytes::ap_const_lv32_C = "1100";
const sc_lv<10> poly_S3_frombytes::ap_const_lv10_1 = "1";
const sc_lv<10> poly_S3_frombytes::ap_const_lv10_2 = "10";
const sc_lv<10> poly_S3_frombytes::ap_const_lv10_3 = "11";
const sc_lv<10> poly_S3_frombytes::ap_const_lv10_4 = "100";
const bool poly_S3_frombytes::ap_const_boolean_1 = true;

poly_S3_frombytes::poly_S3_frombytes(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_mod3_fu_153 = new mod3("grp_mod3_fu_153");
    grp_mod3_fu_153->ap_ready(grp_mod3_fu_153_ap_ready);
    grp_mod3_fu_153->a(grp_mod3_fu_153_a);
    grp_mod3_fu_153->ap_return(grp_mod3_fu_153_ap_return);
    grp_mod3_fu_158 = new mod3("grp_mod3_fu_158");
    grp_mod3_fu_158->ap_ready(grp_mod3_fu_158_ap_ready);
    grp_mod3_fu_158->a(grp_mod3_fu_158_a);
    grp_mod3_fu_158->ap_return(grp_mod3_fu_158_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_183_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_183_p2 );

    SC_METHOD(thread_exitcond_fu_183_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_142 );

    SC_METHOD(thread_grp_mod3_fu_153_a);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( c_reg_384 );
    sensitive << ( tmp_268_cast_cast_fu_315_p1 );
    sensitive << ( tmp_278_cast_fu_343_p1 );

    SC_METHOD(thread_grp_mod3_fu_158_a);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_263_cast_fu_265_p1 );
    sensitive << ( tmp_273_cast_cast_fu_319_p1 );

    SC_METHOD(thread_i_10_fu_189_p2);
    sensitive << ( i_reg_142 );

    SC_METHOD(thread_i_cast3_fu_179_p1);
    sensitive << ( i_reg_142 );

    SC_METHOD(thread_msg_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( sum_cast_fu_204_p1 );

    SC_METHOD(thread_msg_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_p_shl_fu_209_p3);
    sensitive << ( i_reg_142 );

    SC_METHOD(thread_r_coeffs_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_211_fu_301_p1 );
    sensitive << ( tmp_225_fu_338_p1 );

    SC_METHOD(thread_r_coeffs_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_215_fu_310_p1 );
    sensitive << ( tmp_220_fu_328_p1 );
    sensitive << ( tmp_230_fu_352_p1 );

    SC_METHOD(thread_r_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_r_coeffs_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_r_coeffs_d0);
    sensitive << ( reg_163 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( reg_169 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_r_coeffs_d1);
    sensitive << ( reg_163 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( reg_169 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_r_coeffs_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_183_p2 );

    SC_METHOD(thread_r_coeffs_we1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_sum_cast_fu_204_p1);
    sensitive << ( sum_fu_199_p2 );

    SC_METHOD(thread_sum_fu_199_p2);
    sensitive << ( tmp_233_reg_357 );
    sensitive << ( tmp_cast_fu_195_p1 );

    SC_METHOD(thread_tmp_210_fu_217_p2);
    sensitive << ( p_shl_fu_209_p3 );
    sensitive << ( i_cast3_fu_179_p1 );

    SC_METHOD(thread_tmp_211_fu_301_p1);
    sensitive << ( tmp_210_reg_375 );

    SC_METHOD(thread_tmp_212_fu_227_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_s_fu_223_p1 );

    SC_METHOD(thread_tmp_212_fu_227_p2);
    sensitive << ( tmp_212_fu_227_p0 );

    SC_METHOD(thread_tmp_214_fu_305_p2);
    sensitive << ( tmp_210_reg_375 );

    SC_METHOD(thread_tmp_215_fu_310_p1);
    sensitive << ( tmp_214_fu_305_p2 );

    SC_METHOD(thread_tmp_216_fu_269_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_216_fu_269_p00 );

    SC_METHOD(thread_tmp_216_fu_269_p00);
    sensitive << ( c_reg_384 );

    SC_METHOD(thread_tmp_216_fu_269_p2);
    sensitive << ( tmp_216_fu_269_p0 );

    SC_METHOD(thread_tmp_219_fu_323_p2);
    sensitive << ( tmp_210_reg_375 );

    SC_METHOD(thread_tmp_220_fu_328_p1);
    sensitive << ( tmp_219_fu_323_p2 );

    SC_METHOD(thread_tmp_221_fu_285_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_221_fu_285_p00 );

    SC_METHOD(thread_tmp_221_fu_285_p00);
    sensitive << ( c_reg_384 );

    SC_METHOD(thread_tmp_221_fu_285_p2);
    sensitive << ( tmp_221_fu_285_p0 );

    SC_METHOD(thread_tmp_224_fu_333_p2);
    sensitive << ( tmp_210_reg_375 );

    SC_METHOD(thread_tmp_225_fu_338_p1);
    sensitive << ( tmp_224_fu_333_p2 );

    SC_METHOD(thread_tmp_226_fu_243_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_s_fu_223_p1 );

    SC_METHOD(thread_tmp_226_fu_243_p2);
    sensitive << ( tmp_226_fu_243_p0 );

    SC_METHOD(thread_tmp_229_fu_347_p2);
    sensitive << ( tmp_210_reg_375 );

    SC_METHOD(thread_tmp_230_fu_352_p1);
    sensitive << ( tmp_229_fu_347_p2 );

    SC_METHOD(thread_tmp_233_fu_175_p1);
    sensitive << ( msg_offset );

    SC_METHOD(thread_tmp_263_cast_fu_265_p1);
    sensitive << ( tmp_reg_391 );

    SC_METHOD(thread_tmp_268_cast_cast_fu_315_p1);
    sensitive << ( tmp_217_reg_401 );

    SC_METHOD(thread_tmp_273_cast_cast_fu_319_p1);
    sensitive << ( tmp_222_reg_406 );

    SC_METHOD(thread_tmp_278_cast_fu_343_p1);
    sensitive << ( tmp_227_reg_396 );

    SC_METHOD(thread_tmp_cast_fu_195_p1);
    sensitive << ( i_reg_142 );

    SC_METHOD(thread_tmp_s_fu_223_p1);
    sensitive << ( msg_q0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_183_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "poly_S3_frombytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_coeffs_address0, "(port)r_coeffs_address0");
    sc_trace(mVcdFile, r_coeffs_ce0, "(port)r_coeffs_ce0");
    sc_trace(mVcdFile, r_coeffs_we0, "(port)r_coeffs_we0");
    sc_trace(mVcdFile, r_coeffs_d0, "(port)r_coeffs_d0");
    sc_trace(mVcdFile, r_coeffs_address1, "(port)r_coeffs_address1");
    sc_trace(mVcdFile, r_coeffs_ce1, "(port)r_coeffs_ce1");
    sc_trace(mVcdFile, r_coeffs_we1, "(port)r_coeffs_we1");
    sc_trace(mVcdFile, r_coeffs_d1, "(port)r_coeffs_d1");
    sc_trace(mVcdFile, msg_address0, "(port)msg_address0");
    sc_trace(mVcdFile, msg_ce0, "(port)msg_ce0");
    sc_trace(mVcdFile, msg_q0, "(port)msg_q0");
    sc_trace(mVcdFile, msg_offset, "(port)msg_offset");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_mod3_fu_153_ap_return, "grp_mod3_fu_153_ap_return");
    sc_trace(mVcdFile, reg_163, "reg_163");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_mod3_fu_158_ap_return, "grp_mod3_fu_158_ap_return");
    sc_trace(mVcdFile, reg_169, "reg_169");
    sc_trace(mVcdFile, tmp_233_fu_175_p1, "tmp_233_fu_175_p1");
    sc_trace(mVcdFile, tmp_233_reg_357, "tmp_233_reg_357");
    sc_trace(mVcdFile, i_10_fu_189_p2, "i_10_fu_189_p2");
    sc_trace(mVcdFile, i_10_reg_365, "i_10_reg_365");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_fu_183_p2, "exitcond_fu_183_p2");
    sc_trace(mVcdFile, tmp_210_fu_217_p2, "tmp_210_fu_217_p2");
    sc_trace(mVcdFile, tmp_210_reg_375, "tmp_210_reg_375");
    sc_trace(mVcdFile, c_reg_384, "c_reg_384");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_reg_391, "tmp_reg_391");
    sc_trace(mVcdFile, tmp_227_reg_396, "tmp_227_reg_396");
    sc_trace(mVcdFile, tmp_217_reg_401, "tmp_217_reg_401");
    sc_trace(mVcdFile, tmp_222_reg_406, "tmp_222_reg_406");
    sc_trace(mVcdFile, grp_mod3_fu_153_ap_ready, "grp_mod3_fu_153_ap_ready");
    sc_trace(mVcdFile, grp_mod3_fu_153_a, "grp_mod3_fu_153_a");
    sc_trace(mVcdFile, grp_mod3_fu_158_ap_ready, "grp_mod3_fu_158_ap_ready");
    sc_trace(mVcdFile, grp_mod3_fu_158_a, "grp_mod3_fu_158_a");
    sc_trace(mVcdFile, i_reg_142, "i_reg_142");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_268_cast_cast_fu_315_p1, "tmp_268_cast_cast_fu_315_p1");
    sc_trace(mVcdFile, tmp_278_cast_fu_343_p1, "tmp_278_cast_fu_343_p1");
    sc_trace(mVcdFile, tmp_263_cast_fu_265_p1, "tmp_263_cast_fu_265_p1");
    sc_trace(mVcdFile, tmp_273_cast_cast_fu_319_p1, "tmp_273_cast_cast_fu_319_p1");
    sc_trace(mVcdFile, sum_cast_fu_204_p1, "sum_cast_fu_204_p1");
    sc_trace(mVcdFile, tmp_211_fu_301_p1, "tmp_211_fu_301_p1");
    sc_trace(mVcdFile, tmp_215_fu_310_p1, "tmp_215_fu_310_p1");
    sc_trace(mVcdFile, tmp_220_fu_328_p1, "tmp_220_fu_328_p1");
    sc_trace(mVcdFile, tmp_225_fu_338_p1, "tmp_225_fu_338_p1");
    sc_trace(mVcdFile, tmp_230_fu_352_p1, "tmp_230_fu_352_p1");
    sc_trace(mVcdFile, tmp_cast_fu_195_p1, "tmp_cast_fu_195_p1");
    sc_trace(mVcdFile, sum_fu_199_p2, "sum_fu_199_p2");
    sc_trace(mVcdFile, p_shl_fu_209_p3, "p_shl_fu_209_p3");
    sc_trace(mVcdFile, i_cast3_fu_179_p1, "i_cast3_fu_179_p1");
    sc_trace(mVcdFile, tmp_212_fu_227_p0, "tmp_212_fu_227_p0");
    sc_trace(mVcdFile, tmp_s_fu_223_p1, "tmp_s_fu_223_p1");
    sc_trace(mVcdFile, tmp_212_fu_227_p2, "tmp_212_fu_227_p2");
    sc_trace(mVcdFile, tmp_226_fu_243_p0, "tmp_226_fu_243_p0");
    sc_trace(mVcdFile, tmp_226_fu_243_p2, "tmp_226_fu_243_p2");
    sc_trace(mVcdFile, tmp_216_fu_269_p0, "tmp_216_fu_269_p0");
    sc_trace(mVcdFile, tmp_216_fu_269_p2, "tmp_216_fu_269_p2");
    sc_trace(mVcdFile, tmp_221_fu_285_p0, "tmp_221_fu_285_p0");
    sc_trace(mVcdFile, tmp_221_fu_285_p2, "tmp_221_fu_285_p2");
    sc_trace(mVcdFile, tmp_214_fu_305_p2, "tmp_214_fu_305_p2");
    sc_trace(mVcdFile, tmp_219_fu_323_p2, "tmp_219_fu_323_p2");
    sc_trace(mVcdFile, tmp_224_fu_333_p2, "tmp_224_fu_333_p2");
    sc_trace(mVcdFile, tmp_229_fu_347_p2, "tmp_229_fu_347_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp_216_fu_269_p00, "tmp_216_fu_269_p00");
    sc_trace(mVcdFile, tmp_221_fu_285_p00, "tmp_221_fu_285_p00");
#endif

    }
}

poly_S3_frombytes::~poly_S3_frombytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_mod3_fu_153;
    delete grp_mod3_fu_158;
}

void poly_S3_frombytes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_reg_142 = i_10_reg_365.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_142 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_reg_384 = msg_q0.read();
        tmp_227_reg_396 = tmp_226_fu_243_p2.read().range(15, 14);
        tmp_reg_391 = tmp_212_fu_227_p2.read().range(15, 9);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_10_reg_365 = i_10_fu_189_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        reg_163 = grp_mod3_fu_153_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        reg_169 = grp_mod3_fu_158_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_183_p2.read(), ap_const_lv1_0))) {
        tmp_210_reg_375 = tmp_210_fu_217_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_217_reg_401 = tmp_216_fu_269_p2.read().range(13, 9);
        tmp_222_reg_406 = tmp_221_fu_285_p2.read().range(12, 9);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_233_reg_357 = tmp_233_fu_175_p1.read();
    }
}

void poly_S3_frombytes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void poly_S3_frombytes::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void poly_S3_frombytes::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void poly_S3_frombytes::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void poly_S3_frombytes::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void poly_S3_frombytes::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void poly_S3_frombytes::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void poly_S3_frombytes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_183_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void poly_S3_frombytes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void poly_S3_frombytes::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_183_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void poly_S3_frombytes::thread_exitcond_fu_183_p2() {
    exitcond_fu_183_p2 = (!i_reg_142.read().is_01() || !ap_const_lv8_8C.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_142.read() == ap_const_lv8_8C);
}

void poly_S3_frombytes::thread_grp_mod3_fu_153_a() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_mod3_fu_153_a = tmp_278_cast_fu_343_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_mod3_fu_153_a = tmp_268_cast_cast_fu_315_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_mod3_fu_153_a = c_reg_384.read();
    } else {
        grp_mod3_fu_153_a = "XXXXXXXX";
    }
}

void poly_S3_frombytes::thread_grp_mod3_fu_158_a() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_mod3_fu_158_a = tmp_273_cast_cast_fu_319_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_mod3_fu_158_a = tmp_263_cast_fu_265_p1.read();
    } else {
        grp_mod3_fu_158_a = "XXXXXXXX";
    }
}

void poly_S3_frombytes::thread_i_10_fu_189_p2() {
    i_10_fu_189_p2 = (!i_reg_142.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_142.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void poly_S3_frombytes::thread_i_cast3_fu_179_p1() {
    i_cast3_fu_179_p1 = esl_zext<10,8>(i_reg_142.read());
}

void poly_S3_frombytes::thread_msg_address0() {
    msg_address0 =  (sc_lv<9>) (sum_cast_fu_204_p1.read());
}

void poly_S3_frombytes::thread_msg_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        msg_ce0 = ap_const_logic_1;
    } else {
        msg_ce0 = ap_const_logic_0;
    }
}

void poly_S3_frombytes::thread_p_shl_fu_209_p3() {
    p_shl_fu_209_p3 = esl_concat<8,2>(i_reg_142.read(), ap_const_lv2_0);
}

void poly_S3_frombytes::thread_r_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_225_fu_338_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_211_fu_301_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (ap_const_lv64_2BC);
    } else {
        r_coeffs_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void poly_S3_frombytes::thread_r_coeffs_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (tmp_230_fu_352_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (tmp_220_fu_328_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (tmp_215_fu_310_p1.read());
    } else {
        r_coeffs_address1 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void poly_S3_frombytes::thread_r_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        r_coeffs_ce0 = ap_const_logic_1;
    } else {
        r_coeffs_ce0 = ap_const_logic_0;
    }
}

void poly_S3_frombytes::thread_r_coeffs_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        r_coeffs_ce1 = ap_const_logic_1;
    } else {
        r_coeffs_ce1 = ap_const_logic_0;
    }
}

void poly_S3_frombytes::thread_r_coeffs_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_d0 = reg_169.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_coeffs_d0 = reg_163.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_coeffs_d0 = ap_const_lv16_0;
    } else {
        r_coeffs_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void poly_S3_frombytes::thread_r_coeffs_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        r_coeffs_d1 = reg_163.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_coeffs_d1 = reg_169.read();
    } else {
        r_coeffs_d1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void poly_S3_frombytes::thread_r_coeffs_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_183_p2.read(), ap_const_lv1_1)))) {
        r_coeffs_we0 = ap_const_logic_1;
    } else {
        r_coeffs_we0 = ap_const_logic_0;
    }
}

void poly_S3_frombytes::thread_r_coeffs_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        r_coeffs_we1 = ap_const_logic_1;
    } else {
        r_coeffs_we1 = ap_const_logic_0;
    }
}

void poly_S3_frombytes::thread_sum_cast_fu_204_p1() {
    sum_cast_fu_204_p1 = esl_zext<64,9>(sum_fu_199_p2.read());
}

void poly_S3_frombytes::thread_sum_fu_199_p2() {
    sum_fu_199_p2 = (!tmp_cast_fu_195_p1.read().is_01() || !tmp_233_reg_357.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_cast_fu_195_p1.read()) + sc_biguint<9>(tmp_233_reg_357.read()));
}

void poly_S3_frombytes::thread_tmp_210_fu_217_p2() {
    tmp_210_fu_217_p2 = (!p_shl_fu_209_p3.read().is_01() || !i_cast3_fu_179_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl_fu_209_p3.read()) + sc_biguint<10>(i_cast3_fu_179_p1.read()));
}

void poly_S3_frombytes::thread_tmp_211_fu_301_p1() {
    tmp_211_fu_301_p1 = esl_zext<64,10>(tmp_210_reg_375.read());
}

void poly_S3_frombytes::thread_tmp_212_fu_227_p0() {
    tmp_212_fu_227_p0 =  (sc_lv<8>) (tmp_s_fu_223_p1.read());
}

void poly_S3_frombytes::thread_tmp_212_fu_227_p2() {
    tmp_212_fu_227_p2 = (!tmp_212_fu_227_p0.read().is_01() || !ap_const_lv16_AB.is_01())? sc_lv<16>(): sc_biguint<8>(tmp_212_fu_227_p0.read()) * sc_biguint<16>(ap_const_lv16_AB);
}

void poly_S3_frombytes::thread_tmp_214_fu_305_p2() {
    tmp_214_fu_305_p2 = (!tmp_210_reg_375.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_210_reg_375.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void poly_S3_frombytes::thread_tmp_215_fu_310_p1() {
    tmp_215_fu_310_p1 = esl_zext<64,10>(tmp_214_fu_305_p2.read());
}

void poly_S3_frombytes::thread_tmp_216_fu_269_p0() {
    tmp_216_fu_269_p0 =  (sc_lv<8>) (tmp_216_fu_269_p00.read());
}

void poly_S3_frombytes::thread_tmp_216_fu_269_p00() {
    tmp_216_fu_269_p00 = esl_zext<14,8>(c_reg_384.read());
}

void poly_S3_frombytes::thread_tmp_216_fu_269_p2() {
    tmp_216_fu_269_p2 = (!tmp_216_fu_269_p0.read().is_01() || !ap_const_lv14_39.is_01())? sc_lv<14>(): sc_biguint<8>(tmp_216_fu_269_p0.read()) * sc_biguint<14>(ap_const_lv14_39);
}

void poly_S3_frombytes::thread_tmp_219_fu_323_p2() {
    tmp_219_fu_323_p2 = (!tmp_210_reg_375.read().is_01() || !ap_const_lv10_2.is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_210_reg_375.read()) + sc_biguint<10>(ap_const_lv10_2));
}

void poly_S3_frombytes::thread_tmp_220_fu_328_p1() {
    tmp_220_fu_328_p1 = esl_zext<64,10>(tmp_219_fu_323_p2.read());
}

void poly_S3_frombytes::thread_tmp_221_fu_285_p0() {
    tmp_221_fu_285_p0 =  (sc_lv<8>) (tmp_221_fu_285_p00.read());
}

void poly_S3_frombytes::thread_tmp_221_fu_285_p00() {
    tmp_221_fu_285_p00 = esl_zext<13,8>(c_reg_384.read());
}

void poly_S3_frombytes::thread_tmp_221_fu_285_p2() {
    tmp_221_fu_285_p2 = (!tmp_221_fu_285_p0.read().is_01() || !ap_const_lv13_13.is_01())? sc_lv<13>(): sc_biguint<8>(tmp_221_fu_285_p0.read()) * sc_biguint<13>(ap_const_lv13_13);
}

void poly_S3_frombytes::thread_tmp_224_fu_333_p2() {
    tmp_224_fu_333_p2 = (!tmp_210_reg_375.read().is_01() || !ap_const_lv10_3.is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_210_reg_375.read()) + sc_biguint<10>(ap_const_lv10_3));
}

void poly_S3_frombytes::thread_tmp_225_fu_338_p1() {
    tmp_225_fu_338_p1 = esl_zext<64,10>(tmp_224_fu_333_p2.read());
}

void poly_S3_frombytes::thread_tmp_226_fu_243_p0() {
    tmp_226_fu_243_p0 =  (sc_lv<8>) (tmp_s_fu_223_p1.read());
}

void poly_S3_frombytes::thread_tmp_226_fu_243_p2() {
    tmp_226_fu_243_p2 = (!tmp_226_fu_243_p0.read().is_01() || !ap_const_lv16_CB.is_01())? sc_lv<16>(): sc_biguint<8>(tmp_226_fu_243_p0.read()) * sc_biguint<16>(ap_const_lv16_CB);
}

void poly_S3_frombytes::thread_tmp_229_fu_347_p2() {
    tmp_229_fu_347_p2 = (!tmp_210_reg_375.read().is_01() || !ap_const_lv10_4.is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_210_reg_375.read()) + sc_biguint<10>(ap_const_lv10_4));
}

void poly_S3_frombytes::thread_tmp_230_fu_352_p1() {
    tmp_230_fu_352_p1 = esl_zext<64,10>(tmp_229_fu_347_p2.read());
}

void poly_S3_frombytes::thread_tmp_233_fu_175_p1() {
    tmp_233_fu_175_p1 = msg_offset.read().range(9-1, 0);
}

void poly_S3_frombytes::thread_tmp_263_cast_fu_265_p1() {
    tmp_263_cast_fu_265_p1 = esl_zext<8,7>(tmp_reg_391.read());
}

void poly_S3_frombytes::thread_tmp_268_cast_cast_fu_315_p1() {
    tmp_268_cast_cast_fu_315_p1 = esl_zext<8,5>(tmp_217_reg_401.read());
}

void poly_S3_frombytes::thread_tmp_273_cast_cast_fu_319_p1() {
    tmp_273_cast_cast_fu_319_p1 = esl_zext<8,4>(tmp_222_reg_406.read());
}

void poly_S3_frombytes::thread_tmp_278_cast_fu_343_p1() {
    tmp_278_cast_fu_343_p1 = esl_zext<8,2>(tmp_227_reg_396.read());
}

void poly_S3_frombytes::thread_tmp_cast_fu_195_p1() {
    tmp_cast_fu_195_p1 = esl_zext<9,8>(i_reg_142.read());
}

void poly_S3_frombytes::thread_tmp_s_fu_223_p1() {
    tmp_s_fu_223_p1 = esl_zext<16,8>(msg_q0.read());
}

void poly_S3_frombytes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_183_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

