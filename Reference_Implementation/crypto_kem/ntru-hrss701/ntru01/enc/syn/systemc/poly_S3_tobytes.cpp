// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "poly_S3_tobytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic poly_S3_tobytes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic poly_S3_tobytes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state1 = "1";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state2 = "10";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state3 = "100";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state4 = "1000";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state5 = "10000";
const sc_lv<6> poly_S3_tobytes::ap_ST_fsm_state6 = "100000";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_1 = "1";
const sc_lv<1> poly_S3_tobytes::ap_const_lv1_0 = "0";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_2 = "10";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_3 = "11";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_4 = "100";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_0 = "00000000";
const sc_lv<32> poly_S3_tobytes::ap_const_lv32_5 = "101";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_8C = "10001100";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_1 = "1";
const sc_lv<2> poly_S3_tobytes::ap_const_lv2_0 = "00";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_4 = "100";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_3 = "11";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_2 = "10";
const sc_lv<8> poly_S3_tobytes::ap_const_lv8_2 = "10";
const sc_lv<10> poly_S3_tobytes::ap_const_lv10_1 = "1";
const sc_lv<1> poly_S3_tobytes::ap_const_lv1_1 = "1";
const bool poly_S3_tobytes::ap_const_boolean_1 = true;

poly_S3_tobytes::poly_S3_tobytes(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_coeffs_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_195_fu_155_p1 );
    sensitive << ( tmp_202_fu_217_p1 );
    sensitive << ( tmp_208_fu_252_p1 );

    SC_METHOD(thread_a_coeffs_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_198_fu_166_p1 );
    sensitive << ( tmp_206_fu_247_p1 );

    SC_METHOD(thread_a_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_a_coeffs_ce1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_123_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_123_p2 );

    SC_METHOD(thread_c_1_fu_206_p2);
    sensitive << ( tmp_196_fu_196_p2 );
    sensitive << ( tmp_213_fu_202_p1 );

    SC_METHOD(thread_c_2_fu_236_p2);
    sensitive << ( tmp_215_fu_232_p1 );
    sensitive << ( tmp_200_fu_227_p2 );

    SC_METHOD(thread_c_3_fu_270_p2);
    sensitive << ( tmp_217_fu_266_p1 );
    sensitive << ( tmp_204_fu_261_p2 );

    SC_METHOD(thread_c_fu_180_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_exitcond_fu_123_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_i_9_fu_129_p2);
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_i_cast1_fu_119_p1);
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_msg_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sum_cast_fu_296_p1 );

    SC_METHOD(thread_msg_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_msg_d0);
    sensitive << ( tmp_219_reg_368 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_207_fu_285_p2 );

    SC_METHOD(thread_msg_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_p_shl4_fu_188_p3);
    sensitive << ( tmp_212_fu_184_p1 );

    SC_METHOD(thread_p_shl5_fu_135_p3);
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_sum_cast_fu_296_p1);
    sensitive << ( sum_reg_330 );

    SC_METHOD(thread_sum_fu_175_p2);
    sensitive << ( tmp_210_reg_300 );
    sensitive << ( tmp_258_cast_fu_171_p1 );

    SC_METHOD(thread_tmp_195_fu_155_p1);
    sensitive << ( tmp_s_fu_149_p2 );

    SC_METHOD(thread_tmp_196_fu_196_p2);
    sensitive << ( p_shl4_fu_188_p3 );
    sensitive << ( c_fu_180_p1 );

    SC_METHOD(thread_tmp_197_fu_160_p2);
    sensitive << ( tmp_fu_143_p2 );

    SC_METHOD(thread_tmp_198_fu_166_p1);
    sensitive << ( tmp_197_fu_160_p2 );

    SC_METHOD(thread_tmp_200_fu_227_p2);
    sensitive << ( c_1_reg_335 );
    sensitive << ( tmp_214_fu_222_p2 );

    SC_METHOD(thread_tmp_201_fu_212_p2);
    sensitive << ( tmp_reg_313 );

    SC_METHOD(thread_tmp_202_fu_217_p1);
    sensitive << ( tmp_201_fu_212_p2 );

    SC_METHOD(thread_tmp_204_fu_261_p2);
    sensitive << ( c_2_reg_346 );
    sensitive << ( tmp_216_fu_256_p2 );

    SC_METHOD(thread_tmp_205_fu_242_p2);
    sensitive << ( tmp_reg_313 );

    SC_METHOD(thread_tmp_206_fu_247_p1);
    sensitive << ( tmp_205_fu_242_p2 );

    SC_METHOD(thread_tmp_207_fu_285_p2);
    sensitive << ( c_3_reg_362 );
    sensitive << ( tmp_218_fu_280_p2 );

    SC_METHOD(thread_tmp_208_fu_252_p1);
    sensitive << ( tmp_reg_313 );

    SC_METHOD(thread_tmp_210_fu_115_p1);
    sensitive << ( msg_offset );

    SC_METHOD(thread_tmp_212_fu_184_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_tmp_213_fu_202_p1);
    sensitive << ( a_coeffs_q1 );

    SC_METHOD(thread_tmp_214_fu_222_p2);
    sensitive << ( c_1_reg_335 );

    SC_METHOD(thread_tmp_215_fu_232_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_tmp_216_fu_256_p2);
    sensitive << ( c_2_reg_346 );

    SC_METHOD(thread_tmp_217_fu_266_p1);
    sensitive << ( a_coeffs_q1 );

    SC_METHOD(thread_tmp_218_fu_280_p2);
    sensitive << ( c_3_reg_362 );

    SC_METHOD(thread_tmp_219_fu_276_p1);
    sensitive << ( a_coeffs_q0 );

    SC_METHOD(thread_tmp_258_cast_fu_171_p1);
    sensitive << ( i_reg_104 );

    SC_METHOD(thread_tmp_fu_143_p2);
    sensitive << ( p_shl5_fu_135_p3 );
    sensitive << ( i_cast1_fu_119_p1 );

    SC_METHOD(thread_tmp_s_fu_149_p2);
    sensitive << ( tmp_fu_143_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_123_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "poly_S3_tobytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, msg_address0, "(port)msg_address0");
    sc_trace(mVcdFile, msg_ce0, "(port)msg_ce0");
    sc_trace(mVcdFile, msg_we0, "(port)msg_we0");
    sc_trace(mVcdFile, msg_d0, "(port)msg_d0");
    sc_trace(mVcdFile, msg_offset, "(port)msg_offset");
    sc_trace(mVcdFile, a_coeffs_address0, "(port)a_coeffs_address0");
    sc_trace(mVcdFile, a_coeffs_ce0, "(port)a_coeffs_ce0");
    sc_trace(mVcdFile, a_coeffs_q0, "(port)a_coeffs_q0");
    sc_trace(mVcdFile, a_coeffs_address1, "(port)a_coeffs_address1");
    sc_trace(mVcdFile, a_coeffs_ce1, "(port)a_coeffs_ce1");
    sc_trace(mVcdFile, a_coeffs_q1, "(port)a_coeffs_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_210_fu_115_p1, "tmp_210_fu_115_p1");
    sc_trace(mVcdFile, tmp_210_reg_300, "tmp_210_reg_300");
    sc_trace(mVcdFile, i_9_fu_129_p2, "i_9_fu_129_p2");
    sc_trace(mVcdFile, i_9_reg_308, "i_9_reg_308");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_143_p2, "tmp_fu_143_p2");
    sc_trace(mVcdFile, tmp_reg_313, "tmp_reg_313");
    sc_trace(mVcdFile, exitcond_fu_123_p2, "exitcond_fu_123_p2");
    sc_trace(mVcdFile, sum_fu_175_p2, "sum_fu_175_p2");
    sc_trace(mVcdFile, sum_reg_330, "sum_reg_330");
    sc_trace(mVcdFile, c_1_fu_206_p2, "c_1_fu_206_p2");
    sc_trace(mVcdFile, c_1_reg_335, "c_1_reg_335");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, c_2_fu_236_p2, "c_2_fu_236_p2");
    sc_trace(mVcdFile, c_2_reg_346, "c_2_reg_346");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, c_3_fu_270_p2, "c_3_fu_270_p2");
    sc_trace(mVcdFile, c_3_reg_362, "c_3_reg_362");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_219_fu_276_p1, "tmp_219_fu_276_p1");
    sc_trace(mVcdFile, tmp_219_reg_368, "tmp_219_reg_368");
    sc_trace(mVcdFile, i_reg_104, "i_reg_104");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_195_fu_155_p1, "tmp_195_fu_155_p1");
    sc_trace(mVcdFile, tmp_198_fu_166_p1, "tmp_198_fu_166_p1");
    sc_trace(mVcdFile, tmp_202_fu_217_p1, "tmp_202_fu_217_p1");
    sc_trace(mVcdFile, tmp_206_fu_247_p1, "tmp_206_fu_247_p1");
    sc_trace(mVcdFile, tmp_208_fu_252_p1, "tmp_208_fu_252_p1");
    sc_trace(mVcdFile, sum_cast_fu_296_p1, "sum_cast_fu_296_p1");
    sc_trace(mVcdFile, p_shl5_fu_135_p3, "p_shl5_fu_135_p3");
    sc_trace(mVcdFile, i_cast1_fu_119_p1, "i_cast1_fu_119_p1");
    sc_trace(mVcdFile, tmp_s_fu_149_p2, "tmp_s_fu_149_p2");
    sc_trace(mVcdFile, tmp_197_fu_160_p2, "tmp_197_fu_160_p2");
    sc_trace(mVcdFile, tmp_258_cast_fu_171_p1, "tmp_258_cast_fu_171_p1");
    sc_trace(mVcdFile, tmp_212_fu_184_p1, "tmp_212_fu_184_p1");
    sc_trace(mVcdFile, p_shl4_fu_188_p3, "p_shl4_fu_188_p3");
    sc_trace(mVcdFile, c_fu_180_p1, "c_fu_180_p1");
    sc_trace(mVcdFile, tmp_196_fu_196_p2, "tmp_196_fu_196_p2");
    sc_trace(mVcdFile, tmp_213_fu_202_p1, "tmp_213_fu_202_p1");
    sc_trace(mVcdFile, tmp_201_fu_212_p2, "tmp_201_fu_212_p2");
    sc_trace(mVcdFile, tmp_214_fu_222_p2, "tmp_214_fu_222_p2");
    sc_trace(mVcdFile, tmp_215_fu_232_p1, "tmp_215_fu_232_p1");
    sc_trace(mVcdFile, tmp_200_fu_227_p2, "tmp_200_fu_227_p2");
    sc_trace(mVcdFile, tmp_205_fu_242_p2, "tmp_205_fu_242_p2");
    sc_trace(mVcdFile, tmp_216_fu_256_p2, "tmp_216_fu_256_p2");
    sc_trace(mVcdFile, tmp_217_fu_266_p1, "tmp_217_fu_266_p1");
    sc_trace(mVcdFile, tmp_204_fu_261_p2, "tmp_204_fu_261_p2");
    sc_trace(mVcdFile, tmp_218_fu_280_p2, "tmp_218_fu_280_p2");
    sc_trace(mVcdFile, tmp_207_fu_285_p2, "tmp_207_fu_285_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

poly_S3_tobytes::~poly_S3_tobytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void poly_S3_tobytes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_reg_104 = i_9_reg_308.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_104 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_1_reg_335 = c_1_fu_206_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_2_reg_346 = c_2_fu_236_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        c_3_reg_362 = c_3_fu_270_p2.read();
        tmp_219_reg_368 = tmp_219_fu_276_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_9_reg_308 = i_9_fu_129_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_123_p2.read(), ap_const_lv1_0))) {
        sum_reg_330 = sum_fu_175_p2.read();
        tmp_reg_313 = tmp_fu_143_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_210_reg_300 = tmp_210_fu_115_p1.read();
    }
}

void poly_S3_tobytes::thread_a_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_208_fu_252_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_202_fu_217_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_195_fu_155_p1.read());
    } else {
        a_coeffs_address0 = "XXXXXXXXXX";
    }
}

void poly_S3_tobytes::thread_a_coeffs_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_coeffs_address1 =  (sc_lv<10>) (tmp_206_fu_247_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        a_coeffs_address1 =  (sc_lv<10>) (tmp_198_fu_166_p1.read());
    } else {
        a_coeffs_address1 = "XXXXXXXXXX";
    }
}

void poly_S3_tobytes::thread_a_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        a_coeffs_ce0 = ap_const_logic_1;
    } else {
        a_coeffs_ce0 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_a_coeffs_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        a_coeffs_ce1 = ap_const_logic_1;
    } else {
        a_coeffs_ce1 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void poly_S3_tobytes::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void poly_S3_tobytes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_123_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_123_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_c_1_fu_206_p2() {
    c_1_fu_206_p2 = (!tmp_196_fu_196_p2.read().is_01() || !tmp_213_fu_202_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_196_fu_196_p2.read()) + sc_biguint<8>(tmp_213_fu_202_p1.read()));
}

void poly_S3_tobytes::thread_c_2_fu_236_p2() {
    c_2_fu_236_p2 = (!tmp_215_fu_232_p1.read().is_01() || !tmp_200_fu_227_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_215_fu_232_p1.read()) + sc_biguint<8>(tmp_200_fu_227_p2.read()));
}

void poly_S3_tobytes::thread_c_3_fu_270_p2() {
    c_3_fu_270_p2 = (!tmp_217_fu_266_p1.read().is_01() || !tmp_204_fu_261_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_217_fu_266_p1.read()) + sc_biguint<8>(tmp_204_fu_261_p2.read()));
}

void poly_S3_tobytes::thread_c_fu_180_p1() {
    c_fu_180_p1 = a_coeffs_q0.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_exitcond_fu_123_p2() {
    exitcond_fu_123_p2 = (!i_reg_104.read().is_01() || !ap_const_lv8_8C.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_104.read() == ap_const_lv8_8C);
}

void poly_S3_tobytes::thread_i_9_fu_129_p2() {
    i_9_fu_129_p2 = (!i_reg_104.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_104.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void poly_S3_tobytes::thread_i_cast1_fu_119_p1() {
    i_cast1_fu_119_p1 = esl_zext<10,8>(i_reg_104.read());
}

void poly_S3_tobytes::thread_msg_address0() {
    msg_address0 =  (sc_lv<9>) (sum_cast_fu_296_p1.read());
}

void poly_S3_tobytes::thread_msg_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        msg_ce0 = ap_const_logic_1;
    } else {
        msg_ce0 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_msg_d0() {
    msg_d0 = (!tmp_219_reg_368.read().is_01() || !tmp_207_fu_285_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_219_reg_368.read()) + sc_biguint<8>(tmp_207_fu_285_p2.read()));
}

void poly_S3_tobytes::thread_msg_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        msg_we0 = ap_const_logic_1;
    } else {
        msg_we0 = ap_const_logic_0;
    }
}

void poly_S3_tobytes::thread_p_shl4_fu_188_p3() {
    p_shl4_fu_188_p3 = esl_concat<6,2>(tmp_212_fu_184_p1.read(), ap_const_lv2_0);
}

void poly_S3_tobytes::thread_p_shl5_fu_135_p3() {
    p_shl5_fu_135_p3 = esl_concat<8,2>(i_reg_104.read(), ap_const_lv2_0);
}

void poly_S3_tobytes::thread_sum_cast_fu_296_p1() {
    sum_cast_fu_296_p1 = esl_zext<64,9>(sum_reg_330.read());
}

void poly_S3_tobytes::thread_sum_fu_175_p2() {
    sum_fu_175_p2 = (!tmp_258_cast_fu_171_p1.read().is_01() || !tmp_210_reg_300.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_258_cast_fu_171_p1.read()) + sc_biguint<9>(tmp_210_reg_300.read()));
}

void poly_S3_tobytes::thread_tmp_195_fu_155_p1() {
    tmp_195_fu_155_p1 = esl_zext<64,10>(tmp_s_fu_149_p2.read());
}

void poly_S3_tobytes::thread_tmp_196_fu_196_p2() {
    tmp_196_fu_196_p2 = (!p_shl4_fu_188_p3.read().is_01() || !c_fu_180_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl4_fu_188_p3.read()) - sc_biguint<8>(c_fu_180_p1.read()));
}

void poly_S3_tobytes::thread_tmp_197_fu_160_p2() {
    tmp_197_fu_160_p2 = (!ap_const_lv10_3.is_01() || !tmp_fu_143_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_3) + sc_biguint<10>(tmp_fu_143_p2.read()));
}

void poly_S3_tobytes::thread_tmp_198_fu_166_p1() {
    tmp_198_fu_166_p1 = esl_zext<64,10>(tmp_197_fu_160_p2.read());
}

void poly_S3_tobytes::thread_tmp_200_fu_227_p2() {
    tmp_200_fu_227_p2 = (!tmp_214_fu_222_p2.read().is_01() || !c_1_reg_335.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_214_fu_222_p2.read()) - sc_biguint<8>(c_1_reg_335.read()));
}

void poly_S3_tobytes::thread_tmp_201_fu_212_p2() {
    tmp_201_fu_212_p2 = (!ap_const_lv10_2.is_01() || !tmp_reg_313.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_2) + sc_biguint<10>(tmp_reg_313.read()));
}

void poly_S3_tobytes::thread_tmp_202_fu_217_p1() {
    tmp_202_fu_217_p1 = esl_zext<64,10>(tmp_201_fu_212_p2.read());
}

void poly_S3_tobytes::thread_tmp_204_fu_261_p2() {
    tmp_204_fu_261_p2 = (!tmp_216_fu_256_p2.read().is_01() || !c_2_reg_346.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_216_fu_256_p2.read()) - sc_biguint<8>(c_2_reg_346.read()));
}

void poly_S3_tobytes::thread_tmp_205_fu_242_p2() {
    tmp_205_fu_242_p2 = (!ap_const_lv10_1.is_01() || !tmp_reg_313.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(tmp_reg_313.read()));
}

void poly_S3_tobytes::thread_tmp_206_fu_247_p1() {
    tmp_206_fu_247_p1 = esl_zext<64,10>(tmp_205_fu_242_p2.read());
}

void poly_S3_tobytes::thread_tmp_207_fu_285_p2() {
    tmp_207_fu_285_p2 = (!tmp_218_fu_280_p2.read().is_01() || !c_3_reg_362.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_218_fu_280_p2.read()) - sc_biguint<8>(c_3_reg_362.read()));
}

void poly_S3_tobytes::thread_tmp_208_fu_252_p1() {
    tmp_208_fu_252_p1 = esl_zext<64,10>(tmp_reg_313.read());
}

void poly_S3_tobytes::thread_tmp_210_fu_115_p1() {
    tmp_210_fu_115_p1 = msg_offset.read().range(9-1, 0);
}

void poly_S3_tobytes::thread_tmp_212_fu_184_p1() {
    tmp_212_fu_184_p1 = a_coeffs_q0.read().range(6-1, 0);
}

void poly_S3_tobytes::thread_tmp_213_fu_202_p1() {
    tmp_213_fu_202_p1 = a_coeffs_q1.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_214_fu_222_p2() {
    tmp_214_fu_222_p2 = (!ap_const_lv8_2.is_01())? sc_lv<8>(): c_1_reg_335.read() << (unsigned short)ap_const_lv8_2.to_uint();
}

void poly_S3_tobytes::thread_tmp_215_fu_232_p1() {
    tmp_215_fu_232_p1 = a_coeffs_q0.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_216_fu_256_p2() {
    tmp_216_fu_256_p2 = (!ap_const_lv8_2.is_01())? sc_lv<8>(): c_2_reg_346.read() << (unsigned short)ap_const_lv8_2.to_uint();
}

void poly_S3_tobytes::thread_tmp_217_fu_266_p1() {
    tmp_217_fu_266_p1 = a_coeffs_q1.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_218_fu_280_p2() {
    tmp_218_fu_280_p2 = (!ap_const_lv8_2.is_01())? sc_lv<8>(): c_3_reg_362.read() << (unsigned short)ap_const_lv8_2.to_uint();
}

void poly_S3_tobytes::thread_tmp_219_fu_276_p1() {
    tmp_219_fu_276_p1 = a_coeffs_q0.read().range(8-1, 0);
}

void poly_S3_tobytes::thread_tmp_258_cast_fu_171_p1() {
    tmp_258_cast_fu_171_p1 = esl_zext<9,8>(i_reg_104.read());
}

void poly_S3_tobytes::thread_tmp_fu_143_p2() {
    tmp_fu_143_p2 = (!p_shl5_fu_135_p3.read().is_01() || !i_cast1_fu_119_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(p_shl5_fu_135_p3.read()) + sc_biguint<10>(i_cast1_fu_119_p1.read()));
}

void poly_S3_tobytes::thread_tmp_s_fu_149_p2() {
    tmp_s_fu_149_p2 = (!ap_const_lv10_4.is_01() || !tmp_fu_143_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_4) + sc_biguint<10>(tmp_fu_143_p2.read()));
}

void poly_S3_tobytes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_123_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

