// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "poly_Sq_frombytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic poly_Sq_frombytes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic poly_Sq_frombytes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state1 = "1";
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state2 = "10";
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state3 = "100";
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state4 = "1000";
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state5 = "10000";
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state6 = "100000";
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state10 = "1000000000";
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state11 = "10000000000";
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state12 = "100000000000";
const sc_lv<13> poly_Sq_frombytes::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_7 = "111";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_9 = "1001";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_1 = "1";
const sc_lv<1> poly_Sq_frombytes::ap_const_lv1_0 = "0";
const sc_lv<1> poly_Sq_frombytes::ap_const_lv1_1 = "1";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_2 = "10";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_3 = "11";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_4 = "100";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_5 = "101";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_6 = "110";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_A = "1010";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_B = "1011";
const sc_lv<7> poly_Sq_frombytes::ap_const_lv7_0 = "0000000";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_8 = "1000";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_0 = "00000000000";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_46F = "10001101111";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_470 = "10001110000";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_471 = "10001110001";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_46E = "10001101110";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_2BB = "1010111011";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_2BA = "1010111010";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_46C = "10001101100";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_46D = "10001101101";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_2B9 = "1010111001";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_46B = "10001101011";
const sc_lv<64> poly_Sq_frombytes::ap_const_lv64_2B8 = "1010111000";
const sc_lv<32> poly_Sq_frombytes::ap_const_lv32_C = "1100";
const sc_lv<7> poly_Sq_frombytes::ap_const_lv7_57 = "1010111";
const sc_lv<7> poly_Sq_frombytes::ap_const_lv7_1 = "1";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_1 = "1";
const sc_lv<3> poly_Sq_frombytes::ap_const_lv3_0 = "000";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_2 = "10";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_3 = "11";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_1 = "1";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_4 = "100";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_2 = "10";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_5 = "101";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_6 = "110";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_3 = "11";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_7 = "111";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_8 = "1000";
const sc_lv<4> poly_Sq_frombytes::ap_const_lv4_0 = "0000";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_4 = "100";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_9 = "1001";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_A = "1010";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_D = "1101";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_5 = "101";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_B = "1011";
const sc_lv<11> poly_Sq_frombytes::ap_const_lv11_C = "1100";
const sc_lv<2> poly_Sq_frombytes::ap_const_lv2_0 = "00";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_6 = "110";
const sc_lv<10> poly_Sq_frombytes::ap_const_lv10_7 = "111";
const bool poly_Sq_frombytes::ap_const_boolean_1 = true;

poly_Sq_frombytes::poly_Sq_frombytes(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_482_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_132_fu_494_p1 );
    sensitive << ( tmp_140_fu_546_p1 );
    sensitive << ( tmp_149_fu_630_p1 );
    sensitive << ( tmp_159_fu_678_p1 );
    sensitive << ( tmp_168_fu_762_p1 );
    sensitive << ( tmp_181_fu_846_p1 );
    sensitive << ( tmp_190_fu_910_p1 );

    SC_METHOD(thread_a_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_482_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_134_fu_505_p1 );
    sensitive << ( tmp_143_fu_557_p1 );
    sensitive << ( tmp_156_fu_667_p1 );
    sensitive << ( tmp_165_fu_751_p1 );
    sensitive << ( tmp_174_fu_835_p1 );
    sensitive << ( tmp_184_fu_899_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_482_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_a_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_482_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_exitcond_fu_482_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_435 );

    SC_METHOD(thread_grp_fu_459_p4);
    sensitive << ( a_q1 );

    SC_METHOD(thread_next_mul_fu_851_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_r_coeffs_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_137_fu_535_p1 );
    sensitive << ( tmp_146_fu_609_p1 );
    sensitive << ( tmp_152_fu_656_p1 );
    sensitive << ( tmp_162_fu_730_p1 );
    sensitive << ( tmp_171_fu_814_p1 );
    sensitive << ( tmp_177_fu_878_p1 );
    sensitive << ( tmp_187_fu_962_p1 );

    SC_METHOD(thread_r_coeffs_address1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_193_fu_995_p1 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_r_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_r_coeffs_ce1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_r_coeffs_d0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_135_fu_522_p1 );
    sensitive << ( tmp_170_cast_fu_599_p1 );
    sensitive << ( tmp_179_cast_fu_646_p1 );
    sensitive << ( tmp_193_cast_fu_720_p1 );
    sensitive << ( tmp_207_cast_fu_804_p1 );
    sensitive << ( tmp_216_cast_fu_868_p1 );
    sensitive << ( tmp_230_cast_fu_952_p1 );
    sensitive << ( tmp_141_cast_fu_1063_p1 );

    SC_METHOD(thread_r_coeffs_d1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_238_cast_fu_985_p1 );
    sensitive << ( tmp_136_cast_fu_1041_p1 );
    sensitive << ( tmp_149_cast_fu_1105_p1 );
    sensitive << ( tmp_130_fu_1121_p1 );

    SC_METHOD(thread_r_coeffs_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_r_coeffs_we1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_tmp_123_fu_1007_p3);
    sensitive << ( reg_477 );

    SC_METHOD(thread_tmp_124_fu_1033_p3);
    sensitive << ( tmp_154_fu_1015_p1 );
    sensitive << ( tmp_61_fu_1027_p2 );

    SC_METHOD(thread_tmp_125_fu_1046_p4);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_126_fu_1056_p3);
    sensitive << ( tmp_179_reg_1270 );
    sensitive << ( tmp_125_fu_1046_p4 );

    SC_METHOD(thread_tmp_128_fu_1076_p3);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_129_fu_1098_p3);
    sensitive << ( tmp_195_reg_1285 );
    sensitive << ( tmp_66_fu_1092_p2 );

    SC_METHOD(thread_tmp_130_fu_1121_p1);
    sensitive << ( tmp_33_fu_1114_p3 );

    SC_METHOD(thread_tmp_132_fu_494_p1);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_133_fu_499_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_134_fu_505_p1);
    sensitive << ( tmp_133_fu_499_p2 );

    SC_METHOD(thread_tmp_135_fu_522_p1);
    sensitive << ( tmp_35_fu_514_p3 );

    SC_METHOD(thread_tmp_136_cast_fu_1041_p1);
    sensitive << ( tmp_124_fu_1033_p3 );

    SC_METHOD(thread_tmp_136_fu_527_p3);
    sensitive << ( i_reg_435 );

    SC_METHOD(thread_tmp_137_fu_535_p1);
    sensitive << ( tmp_136_fu_527_p3 );

    SC_METHOD(thread_tmp_139_fu_540_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_140_fu_546_p1);
    sensitive << ( tmp_139_fu_540_p2 );

    SC_METHOD(thread_tmp_141_cast_fu_1063_p1);
    sensitive << ( tmp_126_fu_1056_p3 );

    SC_METHOD(thread_tmp_141_fu_565_p3);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_142_fu_551_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_143_fu_557_p1);
    sensitive << ( tmp_142_fu_551_p2 );

    SC_METHOD(thread_tmp_144_fu_591_p3);
    sensitive << ( tmp_199_fu_573_p1 );
    sensitive << ( tmp_69_fu_585_p2 );

    SC_METHOD(thread_tmp_145_fu_604_p2);
    sensitive << ( tmp_136_reg_1154 );

    SC_METHOD(thread_tmp_146_fu_609_p1);
    sensitive << ( tmp_145_fu_604_p2 );

    SC_METHOD(thread_tmp_148_fu_624_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_149_cast_fu_1105_p1);
    sensitive << ( tmp_129_fu_1098_p3 );

    SC_METHOD(thread_tmp_149_fu_630_p1);
    sensitive << ( tmp_148_fu_624_p2 );

    SC_METHOD(thread_tmp_150_fu_639_p3);
    sensitive << ( tmp_147_reg_1180 );
    sensitive << ( tmp_200_fu_635_p1 );

    SC_METHOD(thread_tmp_151_fu_651_p2);
    sensitive << ( tmp_136_reg_1154 );

    SC_METHOD(thread_tmp_152_fu_656_p1);
    sensitive << ( tmp_151_fu_651_p2 );

    SC_METHOD(thread_tmp_153_fu_1004_p1);
    sensitive << ( tmp_reg_1255 );

    SC_METHOD(thread_tmp_154_fu_1015_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_155_fu_661_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_156_fu_667_p1);
    sensitive << ( tmp_155_fu_661_p2 );

    SC_METHOD(thread_tmp_157_fu_686_p3);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_158_fu_672_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_159_fu_678_p1);
    sensitive << ( tmp_158_fu_672_p2 );

    SC_METHOD(thread_tmp_160_fu_712_p3);
    sensitive << ( tmp_204_fu_694_p1 );
    sensitive << ( tmp_74_fu_706_p2 );

    SC_METHOD(thread_tmp_161_fu_725_p2);
    sensitive << ( tmp_136_reg_1154 );

    SC_METHOD(thread_tmp_162_fu_730_p1);
    sensitive << ( tmp_161_fu_725_p2 );

    SC_METHOD(thread_tmp_164_fu_745_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_165_fu_751_p1);
    sensitive << ( tmp_164_fu_745_p2 );

    SC_METHOD(thread_tmp_166_fu_770_p3);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_167_fu_756_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_168_fu_762_p1);
    sensitive << ( tmp_167_fu_756_p2 );

    SC_METHOD(thread_tmp_169_fu_796_p3);
    sensitive << ( tmp_206_fu_778_p1 );
    sensitive << ( tmp_77_fu_790_p2 );

    SC_METHOD(thread_tmp_170_cast_fu_599_p1);
    sensitive << ( tmp_144_fu_591_p3 );

    SC_METHOD(thread_tmp_170_fu_809_p2);
    sensitive << ( tmp_136_reg_1154 );

    SC_METHOD(thread_tmp_171_fu_814_p1);
    sensitive << ( tmp_170_fu_809_p2 );

    SC_METHOD(thread_tmp_173_fu_829_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_174_fu_835_p1);
    sensitive << ( tmp_173_fu_829_p2 );

    SC_METHOD(thread_tmp_175_fu_861_p3);
    sensitive << ( tmp_172_reg_1220 );
    sensitive << ( tmp_207_fu_857_p1 );

    SC_METHOD(thread_tmp_176_fu_873_p2);
    sensitive << ( tmp_136_reg_1154 );

    SC_METHOD(thread_tmp_177_fu_878_p1);
    sensitive << ( tmp_176_fu_873_p2 );

    SC_METHOD(thread_tmp_179_cast_fu_646_p1);
    sensitive << ( tmp_150_fu_639_p3 );

    SC_METHOD(thread_tmp_179_fu_1000_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_180_fu_840_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_181_fu_846_p1);
    sensitive << ( tmp_180_fu_840_p2 );

    SC_METHOD(thread_tmp_182_fu_918_p3);
    sensitive << ( reg_477 );

    SC_METHOD(thread_tmp_183_fu_893_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_184_fu_899_p1);
    sensitive << ( tmp_183_fu_893_p2 );

    SC_METHOD(thread_tmp_185_fu_944_p3);
    sensitive << ( tmp_208_fu_926_p1 );
    sensitive << ( tmp_82_fu_938_p2 );

    SC_METHOD(thread_tmp_186_fu_957_p2);
    sensitive << ( tmp_136_reg_1154 );

    SC_METHOD(thread_tmp_187_fu_962_p1);
    sensitive << ( tmp_186_fu_957_p2 );

    SC_METHOD(thread_tmp_188_fu_967_p4);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_189_fu_904_p2);
    sensitive << ( phi_mul_reg_447 );

    SC_METHOD(thread_tmp_190_fu_910_p1);
    sensitive << ( tmp_189_fu_904_p2 );

    SC_METHOD(thread_tmp_191_fu_977_p3);
    sensitive << ( a_q0 );
    sensitive << ( tmp_188_fu_967_p4 );

    SC_METHOD(thread_tmp_192_fu_990_p2);
    sensitive << ( tmp_136_reg_1154 );

    SC_METHOD(thread_tmp_193_cast_fu_720_p1);
    sensitive << ( tmp_160_fu_712_p3 );

    SC_METHOD(thread_tmp_193_fu_995_p1);
    sensitive << ( tmp_192_fu_990_p2 );

    SC_METHOD(thread_tmp_194_fu_1072_p1);
    sensitive << ( grp_fu_459_p4 );

    SC_METHOD(thread_tmp_195_fu_1068_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_196_fu_1110_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_197_fu_510_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_198_fu_562_p1);
    sensitive << ( tmp_138_reg_1165 );

    SC_METHOD(thread_tmp_199_fu_573_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_200_fu_635_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_202_fu_683_p1);
    sensitive << ( tmp_201_reg_1190 );

    SC_METHOD(thread_tmp_203_fu_767_p1);
    sensitive << ( tmp_163_reg_1205 );

    SC_METHOD(thread_tmp_204_fu_694_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_205_fu_915_p1);
    sensitive << ( tmp_178_reg_1240 );

    SC_METHOD(thread_tmp_206_fu_778_p1);
    sensitive << ( a_q0 );

    SC_METHOD(thread_tmp_207_cast_fu_804_p1);
    sensitive << ( tmp_169_fu_796_p3 );

    SC_METHOD(thread_tmp_207_fu_857_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_208_fu_926_p1);
    sensitive << ( a_q1 );

    SC_METHOD(thread_tmp_216_cast_fu_868_p1);
    sensitive << ( tmp_175_fu_861_p3 );

    SC_METHOD(thread_tmp_230_cast_fu_952_p1);
    sensitive << ( tmp_185_fu_944_p3 );

    SC_METHOD(thread_tmp_238_cast_fu_985_p1);
    sensitive << ( tmp_191_fu_977_p3 );

    SC_METHOD(thread_tmp_33_fu_1114_p3);
    sensitive << ( a_q1 );
    sensitive << ( tmp_196_reg_1295 );

    SC_METHOD(thread_tmp_35_fu_514_p3);
    sensitive << ( a_q0 );
    sensitive << ( tmp_197_fu_510_p1 );

    SC_METHOD(thread_tmp_60_fu_1019_p3);
    sensitive << ( tmp_153_fu_1004_p1 );

    SC_METHOD(thread_tmp_61_fu_1027_p2);
    sensitive << ( tmp_60_fu_1019_p3 );
    sensitive << ( tmp_123_fu_1007_p3 );

    SC_METHOD(thread_tmp_65_fu_1084_p3);
    sensitive << ( tmp_194_fu_1072_p1 );

    SC_METHOD(thread_tmp_66_fu_1092_p2);
    sensitive << ( tmp_65_fu_1084_p3 );
    sensitive << ( tmp_128_fu_1076_p3 );

    SC_METHOD(thread_tmp_68_fu_577_p3);
    sensitive << ( tmp_198_fu_562_p1 );

    SC_METHOD(thread_tmp_69_fu_585_p2);
    sensitive << ( tmp_68_fu_577_p3 );
    sensitive << ( tmp_141_fu_565_p3 );

    SC_METHOD(thread_tmp_73_fu_698_p3);
    sensitive << ( tmp_202_fu_683_p1 );

    SC_METHOD(thread_tmp_74_fu_706_p2);
    sensitive << ( tmp_73_fu_698_p3 );
    sensitive << ( tmp_157_fu_686_p3 );

    SC_METHOD(thread_tmp_76_fu_782_p3);
    sensitive << ( tmp_203_fu_767_p1 );

    SC_METHOD(thread_tmp_77_fu_790_p2);
    sensitive << ( tmp_76_fu_782_p3 );
    sensitive << ( tmp_166_fu_770_p3 );

    SC_METHOD(thread_tmp_81_fu_930_p3);
    sensitive << ( tmp_205_fu_915_p1 );

    SC_METHOD(thread_tmp_82_fu_938_p2);
    sensitive << ( tmp_81_fu_930_p3 );
    sensitive << ( tmp_182_fu_918_p3 );

    SC_METHOD(thread_tmp_s_fu_488_p2);
    sensitive << ( i_reg_435 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_482_p2 );

    ap_CS_fsm = "0000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "poly_Sq_frombytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_coeffs_address0, "(port)r_coeffs_address0");
    sc_trace(mVcdFile, r_coeffs_ce0, "(port)r_coeffs_ce0");
    sc_trace(mVcdFile, r_coeffs_we0, "(port)r_coeffs_we0");
    sc_trace(mVcdFile, r_coeffs_d0, "(port)r_coeffs_d0");
    sc_trace(mVcdFile, r_coeffs_address1, "(port)r_coeffs_address1");
    sc_trace(mVcdFile, r_coeffs_ce1, "(port)r_coeffs_ce1");
    sc_trace(mVcdFile, r_coeffs_we1, "(port)r_coeffs_we1");
    sc_trace(mVcdFile, r_coeffs_d1, "(port)r_coeffs_d1");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_q0, "(port)a_q0");
    sc_trace(mVcdFile, a_address1, "(port)a_address1");
    sc_trace(mVcdFile, a_ce1, "(port)a_ce1");
    sc_trace(mVcdFile, a_q1, "(port)a_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_477, "reg_477");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_s_fu_488_p2, "tmp_s_fu_488_p2");
    sc_trace(mVcdFile, tmp_s_reg_1129, "tmp_s_reg_1129");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_fu_482_p2, "exitcond_fu_482_p2");
    sc_trace(mVcdFile, tmp_136_fu_527_p3, "tmp_136_fu_527_p3");
    sc_trace(mVcdFile, tmp_136_reg_1154, "tmp_136_reg_1154");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_fu_459_p4, "grp_fu_459_p4");
    sc_trace(mVcdFile, tmp_138_reg_1165, "tmp_138_reg_1165");
    sc_trace(mVcdFile, tmp_147_reg_1180, "tmp_147_reg_1180");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_201_reg_1190, "tmp_201_reg_1190");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_163_reg_1205, "tmp_163_reg_1205");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_172_reg_1220, "tmp_172_reg_1220");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, next_mul_fu_851_p2, "next_mul_fu_851_p2");
    sc_trace(mVcdFile, next_mul_reg_1235, "next_mul_reg_1235");
    sc_trace(mVcdFile, tmp_178_reg_1240, "tmp_178_reg_1240");
    sc_trace(mVcdFile, tmp_reg_1255, "tmp_reg_1255");
    sc_trace(mVcdFile, tmp_179_fu_1000_p1, "tmp_179_fu_1000_p1");
    sc_trace(mVcdFile, tmp_179_reg_1270, "tmp_179_reg_1270");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_195_fu_1068_p1, "tmp_195_fu_1068_p1");
    sc_trace(mVcdFile, tmp_195_reg_1285, "tmp_195_reg_1285");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_196_fu_1110_p1, "tmp_196_fu_1110_p1");
    sc_trace(mVcdFile, tmp_196_reg_1295, "tmp_196_reg_1295");
    sc_trace(mVcdFile, i_reg_435, "i_reg_435");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, phi_mul_reg_447, "phi_mul_reg_447");
    sc_trace(mVcdFile, tmp_132_fu_494_p1, "tmp_132_fu_494_p1");
    sc_trace(mVcdFile, tmp_134_fu_505_p1, "tmp_134_fu_505_p1");
    sc_trace(mVcdFile, tmp_137_fu_535_p1, "tmp_137_fu_535_p1");
    sc_trace(mVcdFile, tmp_140_fu_546_p1, "tmp_140_fu_546_p1");
    sc_trace(mVcdFile, tmp_143_fu_557_p1, "tmp_143_fu_557_p1");
    sc_trace(mVcdFile, tmp_146_fu_609_p1, "tmp_146_fu_609_p1");
    sc_trace(mVcdFile, tmp_149_fu_630_p1, "tmp_149_fu_630_p1");
    sc_trace(mVcdFile, tmp_152_fu_656_p1, "tmp_152_fu_656_p1");
    sc_trace(mVcdFile, tmp_156_fu_667_p1, "tmp_156_fu_667_p1");
    sc_trace(mVcdFile, tmp_159_fu_678_p1, "tmp_159_fu_678_p1");
    sc_trace(mVcdFile, tmp_162_fu_730_p1, "tmp_162_fu_730_p1");
    sc_trace(mVcdFile, tmp_165_fu_751_p1, "tmp_165_fu_751_p1");
    sc_trace(mVcdFile, tmp_168_fu_762_p1, "tmp_168_fu_762_p1");
    sc_trace(mVcdFile, tmp_171_fu_814_p1, "tmp_171_fu_814_p1");
    sc_trace(mVcdFile, tmp_174_fu_835_p1, "tmp_174_fu_835_p1");
    sc_trace(mVcdFile, tmp_181_fu_846_p1, "tmp_181_fu_846_p1");
    sc_trace(mVcdFile, tmp_177_fu_878_p1, "tmp_177_fu_878_p1");
    sc_trace(mVcdFile, tmp_184_fu_899_p1, "tmp_184_fu_899_p1");
    sc_trace(mVcdFile, tmp_190_fu_910_p1, "tmp_190_fu_910_p1");
    sc_trace(mVcdFile, tmp_187_fu_962_p1, "tmp_187_fu_962_p1");
    sc_trace(mVcdFile, tmp_193_fu_995_p1, "tmp_193_fu_995_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_135_fu_522_p1, "tmp_135_fu_522_p1");
    sc_trace(mVcdFile, tmp_170_cast_fu_599_p1, "tmp_170_cast_fu_599_p1");
    sc_trace(mVcdFile, tmp_179_cast_fu_646_p1, "tmp_179_cast_fu_646_p1");
    sc_trace(mVcdFile, tmp_193_cast_fu_720_p1, "tmp_193_cast_fu_720_p1");
    sc_trace(mVcdFile, tmp_207_cast_fu_804_p1, "tmp_207_cast_fu_804_p1");
    sc_trace(mVcdFile, tmp_216_cast_fu_868_p1, "tmp_216_cast_fu_868_p1");
    sc_trace(mVcdFile, tmp_230_cast_fu_952_p1, "tmp_230_cast_fu_952_p1");
    sc_trace(mVcdFile, tmp_238_cast_fu_985_p1, "tmp_238_cast_fu_985_p1");
    sc_trace(mVcdFile, tmp_136_cast_fu_1041_p1, "tmp_136_cast_fu_1041_p1");
    sc_trace(mVcdFile, tmp_141_cast_fu_1063_p1, "tmp_141_cast_fu_1063_p1");
    sc_trace(mVcdFile, tmp_149_cast_fu_1105_p1, "tmp_149_cast_fu_1105_p1");
    sc_trace(mVcdFile, tmp_130_fu_1121_p1, "tmp_130_fu_1121_p1");
    sc_trace(mVcdFile, tmp_133_fu_499_p2, "tmp_133_fu_499_p2");
    sc_trace(mVcdFile, tmp_197_fu_510_p1, "tmp_197_fu_510_p1");
    sc_trace(mVcdFile, tmp_35_fu_514_p3, "tmp_35_fu_514_p3");
    sc_trace(mVcdFile, tmp_139_fu_540_p2, "tmp_139_fu_540_p2");
    sc_trace(mVcdFile, tmp_142_fu_551_p2, "tmp_142_fu_551_p2");
    sc_trace(mVcdFile, tmp_198_fu_562_p1, "tmp_198_fu_562_p1");
    sc_trace(mVcdFile, tmp_68_fu_577_p3, "tmp_68_fu_577_p3");
    sc_trace(mVcdFile, tmp_141_fu_565_p3, "tmp_141_fu_565_p3");
    sc_trace(mVcdFile, tmp_199_fu_573_p1, "tmp_199_fu_573_p1");
    sc_trace(mVcdFile, tmp_69_fu_585_p2, "tmp_69_fu_585_p2");
    sc_trace(mVcdFile, tmp_144_fu_591_p3, "tmp_144_fu_591_p3");
    sc_trace(mVcdFile, tmp_145_fu_604_p2, "tmp_145_fu_604_p2");
    sc_trace(mVcdFile, tmp_148_fu_624_p2, "tmp_148_fu_624_p2");
    sc_trace(mVcdFile, tmp_200_fu_635_p1, "tmp_200_fu_635_p1");
    sc_trace(mVcdFile, tmp_150_fu_639_p3, "tmp_150_fu_639_p3");
    sc_trace(mVcdFile, tmp_151_fu_651_p2, "tmp_151_fu_651_p2");
    sc_trace(mVcdFile, tmp_155_fu_661_p2, "tmp_155_fu_661_p2");
    sc_trace(mVcdFile, tmp_158_fu_672_p2, "tmp_158_fu_672_p2");
    sc_trace(mVcdFile, tmp_202_fu_683_p1, "tmp_202_fu_683_p1");
    sc_trace(mVcdFile, tmp_73_fu_698_p3, "tmp_73_fu_698_p3");
    sc_trace(mVcdFile, tmp_157_fu_686_p3, "tmp_157_fu_686_p3");
    sc_trace(mVcdFile, tmp_204_fu_694_p1, "tmp_204_fu_694_p1");
    sc_trace(mVcdFile, tmp_74_fu_706_p2, "tmp_74_fu_706_p2");
    sc_trace(mVcdFile, tmp_160_fu_712_p3, "tmp_160_fu_712_p3");
    sc_trace(mVcdFile, tmp_161_fu_725_p2, "tmp_161_fu_725_p2");
    sc_trace(mVcdFile, tmp_164_fu_745_p2, "tmp_164_fu_745_p2");
    sc_trace(mVcdFile, tmp_167_fu_756_p2, "tmp_167_fu_756_p2");
    sc_trace(mVcdFile, tmp_203_fu_767_p1, "tmp_203_fu_767_p1");
    sc_trace(mVcdFile, tmp_76_fu_782_p3, "tmp_76_fu_782_p3");
    sc_trace(mVcdFile, tmp_166_fu_770_p3, "tmp_166_fu_770_p3");
    sc_trace(mVcdFile, tmp_206_fu_778_p1, "tmp_206_fu_778_p1");
    sc_trace(mVcdFile, tmp_77_fu_790_p2, "tmp_77_fu_790_p2");
    sc_trace(mVcdFile, tmp_169_fu_796_p3, "tmp_169_fu_796_p3");
    sc_trace(mVcdFile, tmp_170_fu_809_p2, "tmp_170_fu_809_p2");
    sc_trace(mVcdFile, tmp_173_fu_829_p2, "tmp_173_fu_829_p2");
    sc_trace(mVcdFile, tmp_180_fu_840_p2, "tmp_180_fu_840_p2");
    sc_trace(mVcdFile, tmp_207_fu_857_p1, "tmp_207_fu_857_p1");
    sc_trace(mVcdFile, tmp_175_fu_861_p3, "tmp_175_fu_861_p3");
    sc_trace(mVcdFile, tmp_176_fu_873_p2, "tmp_176_fu_873_p2");
    sc_trace(mVcdFile, tmp_183_fu_893_p2, "tmp_183_fu_893_p2");
    sc_trace(mVcdFile, tmp_189_fu_904_p2, "tmp_189_fu_904_p2");
    sc_trace(mVcdFile, tmp_205_fu_915_p1, "tmp_205_fu_915_p1");
    sc_trace(mVcdFile, tmp_81_fu_930_p3, "tmp_81_fu_930_p3");
    sc_trace(mVcdFile, tmp_182_fu_918_p3, "tmp_182_fu_918_p3");
    sc_trace(mVcdFile, tmp_208_fu_926_p1, "tmp_208_fu_926_p1");
    sc_trace(mVcdFile, tmp_82_fu_938_p2, "tmp_82_fu_938_p2");
    sc_trace(mVcdFile, tmp_185_fu_944_p3, "tmp_185_fu_944_p3");
    sc_trace(mVcdFile, tmp_186_fu_957_p2, "tmp_186_fu_957_p2");
    sc_trace(mVcdFile, tmp_188_fu_967_p4, "tmp_188_fu_967_p4");
    sc_trace(mVcdFile, tmp_191_fu_977_p3, "tmp_191_fu_977_p3");
    sc_trace(mVcdFile, tmp_192_fu_990_p2, "tmp_192_fu_990_p2");
    sc_trace(mVcdFile, tmp_153_fu_1004_p1, "tmp_153_fu_1004_p1");
    sc_trace(mVcdFile, tmp_60_fu_1019_p3, "tmp_60_fu_1019_p3");
    sc_trace(mVcdFile, tmp_123_fu_1007_p3, "tmp_123_fu_1007_p3");
    sc_trace(mVcdFile, tmp_154_fu_1015_p1, "tmp_154_fu_1015_p1");
    sc_trace(mVcdFile, tmp_61_fu_1027_p2, "tmp_61_fu_1027_p2");
    sc_trace(mVcdFile, tmp_124_fu_1033_p3, "tmp_124_fu_1033_p3");
    sc_trace(mVcdFile, tmp_125_fu_1046_p4, "tmp_125_fu_1046_p4");
    sc_trace(mVcdFile, tmp_126_fu_1056_p3, "tmp_126_fu_1056_p3");
    sc_trace(mVcdFile, tmp_194_fu_1072_p1, "tmp_194_fu_1072_p1");
    sc_trace(mVcdFile, tmp_65_fu_1084_p3, "tmp_65_fu_1084_p3");
    sc_trace(mVcdFile, tmp_128_fu_1076_p3, "tmp_128_fu_1076_p3");
    sc_trace(mVcdFile, tmp_66_fu_1092_p2, "tmp_66_fu_1092_p2");
    sc_trace(mVcdFile, tmp_129_fu_1098_p3, "tmp_129_fu_1098_p3");
    sc_trace(mVcdFile, tmp_33_fu_1114_p3, "tmp_33_fu_1114_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

poly_Sq_frombytes::~poly_Sq_frombytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void poly_Sq_frombytes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_reg_435 = tmp_s_reg_1129.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_435 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        phi_mul_reg_447 = next_mul_reg_1235.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_447 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        reg_477 = a_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        reg_477 = a_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        next_mul_reg_1235 = next_mul_fu_851_p2.read();
        tmp_178_reg_1240 = a_q1.read().range(7, 6);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_136_reg_1154 = tmp_136_fu_527_p3.read();
        tmp_138_reg_1165 = a_q1.read().range(7, 5);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_147_reg_1180 = a_q1.read().range(7, 2);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_163_reg_1205 = a_q0.read().range(7, 4);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_172_reg_1220 = a_q0.read().range(7, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_179_reg_1270 = tmp_179_fu_1000_p1.read();
        tmp_reg_1255 = a_q0.read().range(7, 7);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_195_reg_1285 = tmp_195_fu_1068_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_196_reg_1295 = tmp_196_fu_1110_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_201_reg_1190 = a_q0.read().range(7, 7);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_s_reg_1129 = tmp_s_fu_488_p2.read();
    }
}

void poly_Sq_frombytes::thread_a_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        a_address0 =  (sc_lv<11>) (ap_const_lv64_46D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        a_address0 =  (sc_lv<11>) (ap_const_lv64_46E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        a_address0 =  (sc_lv<11>) (tmp_190_fu_910_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        a_address0 =  (sc_lv<11>) (tmp_181_fu_846_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        a_address0 =  (sc_lv<11>) (tmp_168_fu_762_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_address0 =  (sc_lv<11>) (tmp_159_fu_678_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_address0 =  (sc_lv<11>) (tmp_149_fu_630_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_address0 =  (sc_lv<11>) (tmp_140_fu_546_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_482_p2.read(), ap_const_lv1_1))) {
        a_address0 =  (sc_lv<11>) (ap_const_lv64_46F);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_482_p2.read(), ap_const_lv1_0))) {
        a_address0 =  (sc_lv<11>) (tmp_132_fu_494_p1.read());
    } else {
        a_address0 = "XXXXXXXXXXX";
    }
}

void poly_Sq_frombytes::thread_a_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        a_address1 =  (sc_lv<11>) (ap_const_lv64_46B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        a_address1 =  (sc_lv<11>) (ap_const_lv64_46C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        a_address1 =  (sc_lv<11>) (ap_const_lv64_471);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        a_address1 =  (sc_lv<11>) (tmp_184_fu_899_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        a_address1 =  (sc_lv<11>) (tmp_174_fu_835_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        a_address1 =  (sc_lv<11>) (tmp_165_fu_751_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_address1 =  (sc_lv<11>) (tmp_156_fu_667_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_address1 =  (sc_lv<11>) (tmp_143_fu_557_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_482_p2.read(), ap_const_lv1_1))) {
        a_address1 =  (sc_lv<11>) (ap_const_lv64_470);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_482_p2.read(), ap_const_lv1_0))) {
        a_address1 =  (sc_lv<11>) (tmp_134_fu_505_p1.read());
    } else {
        a_address1 = "XXXXXXXXXXX";
    }
}

void poly_Sq_frombytes::thread_a_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_482_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_482_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_a_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_482_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_482_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        a_ce1 = ap_const_logic_1;
    } else {
        a_ce1 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void poly_Sq_frombytes::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void poly_Sq_frombytes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_exitcond_fu_482_p2() {
    exitcond_fu_482_p2 = (!i_reg_435.read().is_01() || !ap_const_lv7_57.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_435.read() == ap_const_lv7_57);
}

void poly_Sq_frombytes::thread_grp_fu_459_p4() {
    grp_fu_459_p4 = a_q1.read().range(7, 5);
}

void poly_Sq_frombytes::thread_next_mul_fu_851_p2() {
    next_mul_fu_851_p2 = (!ap_const_lv11_D.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_D) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_r_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (ap_const_lv64_2BA);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_187_fu_962_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_177_fu_878_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_171_fu_814_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_162_fu_730_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_152_fu_656_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_146_fu_609_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_137_fu_535_p1.read());
    } else {
        r_coeffs_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void poly_Sq_frombytes::thread_r_coeffs_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (ap_const_lv64_2B8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (ap_const_lv64_2B9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (ap_const_lv64_2BB);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_coeffs_address1 =  (sc_lv<10>) (tmp_193_fu_995_p1.read());
    } else {
        r_coeffs_address1 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void poly_Sq_frombytes::thread_r_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        r_coeffs_ce0 = ap_const_logic_1;
    } else {
        r_coeffs_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_r_coeffs_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        r_coeffs_ce1 = ap_const_logic_1;
    } else {
        r_coeffs_ce1 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_r_coeffs_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_coeffs_d0 = tmp_141_cast_fu_1063_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_coeffs_d0 = tmp_230_cast_fu_952_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_coeffs_d0 = tmp_216_cast_fu_868_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_coeffs_d0 = tmp_207_cast_fu_804_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_coeffs_d0 = tmp_193_cast_fu_720_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_coeffs_d0 = tmp_179_cast_fu_646_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_coeffs_d0 = tmp_170_cast_fu_599_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_coeffs_d0 = tmp_135_fu_522_p1.read();
    } else {
        r_coeffs_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void poly_Sq_frombytes::thread_r_coeffs_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        r_coeffs_d1 = tmp_130_fu_1121_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        r_coeffs_d1 = tmp_149_cast_fu_1105_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_coeffs_d1 = tmp_136_cast_fu_1041_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_coeffs_d1 = tmp_238_cast_fu_985_p1.read();
    } else {
        r_coeffs_d1 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void poly_Sq_frombytes::thread_r_coeffs_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        r_coeffs_we0 = ap_const_logic_1;
    } else {
        r_coeffs_we0 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_r_coeffs_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        r_coeffs_we1 = ap_const_logic_1;
    } else {
        r_coeffs_we1 = ap_const_logic_0;
    }
}

void poly_Sq_frombytes::thread_tmp_123_fu_1007_p3() {
    tmp_123_fu_1007_p3 = esl_concat<8,1>(reg_477.read(), ap_const_lv1_0);
}

void poly_Sq_frombytes::thread_tmp_124_fu_1033_p3() {
    tmp_124_fu_1033_p3 = esl_concat<4,9>(tmp_154_fu_1015_p1.read(), tmp_61_fu_1027_p2.read());
}

void poly_Sq_frombytes::thread_tmp_125_fu_1046_p4() {
    tmp_125_fu_1046_p4 = a_q0.read().range(7, 2);
}

void poly_Sq_frombytes::thread_tmp_126_fu_1056_p3() {
    tmp_126_fu_1056_p3 = esl_concat<7,6>(tmp_179_reg_1270.read(), tmp_125_fu_1046_p4.read());
}

void poly_Sq_frombytes::thread_tmp_128_fu_1076_p3() {
    tmp_128_fu_1076_p3 = esl_concat<8,3>(a_q0.read(), ap_const_lv3_0);
}

void poly_Sq_frombytes::thread_tmp_129_fu_1098_p3() {
    tmp_129_fu_1098_p3 = esl_concat<2,11>(tmp_195_reg_1285.read(), tmp_66_fu_1092_p2.read());
}

void poly_Sq_frombytes::thread_tmp_130_fu_1121_p1() {
    tmp_130_fu_1121_p1 = esl_zext<16,13>(tmp_33_fu_1114_p3.read());
}

void poly_Sq_frombytes::thread_tmp_132_fu_494_p1() {
    tmp_132_fu_494_p1 = esl_zext<64,11>(phi_mul_reg_447.read());
}

void poly_Sq_frombytes::thread_tmp_133_fu_499_p2() {
    tmp_133_fu_499_p2 = (!ap_const_lv11_1.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_tmp_134_fu_505_p1() {
    tmp_134_fu_505_p1 = esl_zext<64,11>(tmp_133_fu_499_p2.read());
}

void poly_Sq_frombytes::thread_tmp_135_fu_522_p1() {
    tmp_135_fu_522_p1 = esl_zext<16,13>(tmp_35_fu_514_p3.read());
}

void poly_Sq_frombytes::thread_tmp_136_cast_fu_1041_p1() {
    tmp_136_cast_fu_1041_p1 = esl_zext<16,13>(tmp_124_fu_1033_p3.read());
}

void poly_Sq_frombytes::thread_tmp_136_fu_527_p3() {
    tmp_136_fu_527_p3 = esl_concat<7,3>(i_reg_435.read(), ap_const_lv3_0);
}

void poly_Sq_frombytes::thread_tmp_137_fu_535_p1() {
    tmp_137_fu_535_p1 = esl_zext<64,10>(tmp_136_fu_527_p3.read());
}

void poly_Sq_frombytes::thread_tmp_139_fu_540_p2() {
    tmp_139_fu_540_p2 = (!ap_const_lv11_2.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_2) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_tmp_140_fu_546_p1() {
    tmp_140_fu_546_p1 = esl_zext<64,11>(tmp_139_fu_540_p2.read());
}

void poly_Sq_frombytes::thread_tmp_141_cast_fu_1063_p1() {
    tmp_141_cast_fu_1063_p1 = esl_zext<16,13>(tmp_126_fu_1056_p3.read());
}

void poly_Sq_frombytes::thread_tmp_141_fu_565_p3() {
    tmp_141_fu_565_p3 = esl_concat<8,3>(a_q0.read(), ap_const_lv3_0);
}

void poly_Sq_frombytes::thread_tmp_142_fu_551_p2() {
    tmp_142_fu_551_p2 = (!ap_const_lv11_3.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_tmp_143_fu_557_p1() {
    tmp_143_fu_557_p1 = esl_zext<64,11>(tmp_142_fu_551_p2.read());
}

void poly_Sq_frombytes::thread_tmp_144_fu_591_p3() {
    tmp_144_fu_591_p3 = esl_concat<2,11>(tmp_199_fu_573_p1.read(), tmp_69_fu_585_p2.read());
}

void poly_Sq_frombytes::thread_tmp_145_fu_604_p2() {
    tmp_145_fu_604_p2 = (tmp_136_reg_1154.read() | ap_const_lv10_1);
}

void poly_Sq_frombytes::thread_tmp_146_fu_609_p1() {
    tmp_146_fu_609_p1 = esl_zext<64,10>(tmp_145_fu_604_p2.read());
}

void poly_Sq_frombytes::thread_tmp_148_fu_624_p2() {
    tmp_148_fu_624_p2 = (!ap_const_lv11_4.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_4) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_tmp_149_cast_fu_1105_p1() {
    tmp_149_cast_fu_1105_p1 = esl_zext<16,13>(tmp_129_fu_1098_p3.read());
}

void poly_Sq_frombytes::thread_tmp_149_fu_630_p1() {
    tmp_149_fu_630_p1 = esl_zext<64,11>(tmp_148_fu_624_p2.read());
}

void poly_Sq_frombytes::thread_tmp_150_fu_639_p3() {
    tmp_150_fu_639_p3 = esl_concat<7,6>(tmp_200_fu_635_p1.read(), tmp_147_reg_1180.read());
}

void poly_Sq_frombytes::thread_tmp_151_fu_651_p2() {
    tmp_151_fu_651_p2 = (tmp_136_reg_1154.read() | ap_const_lv10_2);
}

void poly_Sq_frombytes::thread_tmp_152_fu_656_p1() {
    tmp_152_fu_656_p1 = esl_zext<64,10>(tmp_151_fu_651_p2.read());
}

void poly_Sq_frombytes::thread_tmp_153_fu_1004_p1() {
    tmp_153_fu_1004_p1 = esl_zext<8,1>(tmp_reg_1255.read());
}

void poly_Sq_frombytes::thread_tmp_154_fu_1015_p1() {
    tmp_154_fu_1015_p1 = a_q1.read().range(4-1, 0);
}

void poly_Sq_frombytes::thread_tmp_155_fu_661_p2() {
    tmp_155_fu_661_p2 = (!ap_const_lv11_5.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_5) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_tmp_156_fu_667_p1() {
    tmp_156_fu_667_p1 = esl_zext<64,11>(tmp_155_fu_661_p2.read());
}

void poly_Sq_frombytes::thread_tmp_157_fu_686_p3() {
    tmp_157_fu_686_p3 = esl_concat<8,1>(a_q1.read(), ap_const_lv1_0);
}

void poly_Sq_frombytes::thread_tmp_158_fu_672_p2() {
    tmp_158_fu_672_p2 = (!ap_const_lv11_6.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_6) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_tmp_159_fu_678_p1() {
    tmp_159_fu_678_p1 = esl_zext<64,11>(tmp_158_fu_672_p2.read());
}

void poly_Sq_frombytes::thread_tmp_160_fu_712_p3() {
    tmp_160_fu_712_p3 = esl_concat<4,9>(tmp_204_fu_694_p1.read(), tmp_74_fu_706_p2.read());
}

void poly_Sq_frombytes::thread_tmp_161_fu_725_p2() {
    tmp_161_fu_725_p2 = (tmp_136_reg_1154.read() | ap_const_lv10_3);
}

void poly_Sq_frombytes::thread_tmp_162_fu_730_p1() {
    tmp_162_fu_730_p1 = esl_zext<64,10>(tmp_161_fu_725_p2.read());
}

void poly_Sq_frombytes::thread_tmp_164_fu_745_p2() {
    tmp_164_fu_745_p2 = (!ap_const_lv11_7.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_7) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_tmp_165_fu_751_p1() {
    tmp_165_fu_751_p1 = esl_zext<64,11>(tmp_164_fu_745_p2.read());
}

void poly_Sq_frombytes::thread_tmp_166_fu_770_p3() {
    tmp_166_fu_770_p3 = esl_concat<8,4>(a_q1.read(), ap_const_lv4_0);
}

void poly_Sq_frombytes::thread_tmp_167_fu_756_p2() {
    tmp_167_fu_756_p2 = (!ap_const_lv11_8.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_8) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_tmp_168_fu_762_p1() {
    tmp_168_fu_762_p1 = esl_zext<64,11>(tmp_167_fu_756_p2.read());
}

void poly_Sq_frombytes::thread_tmp_169_fu_796_p3() {
    tmp_169_fu_796_p3 = esl_concat<1,12>(tmp_206_fu_778_p1.read(), tmp_77_fu_790_p2.read());
}

void poly_Sq_frombytes::thread_tmp_170_cast_fu_599_p1() {
    tmp_170_cast_fu_599_p1 = esl_zext<16,13>(tmp_144_fu_591_p3.read());
}

void poly_Sq_frombytes::thread_tmp_170_fu_809_p2() {
    tmp_170_fu_809_p2 = (tmp_136_reg_1154.read() | ap_const_lv10_4);
}

void poly_Sq_frombytes::thread_tmp_171_fu_814_p1() {
    tmp_171_fu_814_p1 = esl_zext<64,10>(tmp_170_fu_809_p2.read());
}

void poly_Sq_frombytes::thread_tmp_173_fu_829_p2() {
    tmp_173_fu_829_p2 = (!ap_const_lv11_9.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_9) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_tmp_174_fu_835_p1() {
    tmp_174_fu_835_p1 = esl_zext<64,11>(tmp_173_fu_829_p2.read());
}

void poly_Sq_frombytes::thread_tmp_175_fu_861_p3() {
    tmp_175_fu_861_p3 = esl_concat<6,7>(tmp_207_fu_857_p1.read(), tmp_172_reg_1220.read());
}

void poly_Sq_frombytes::thread_tmp_176_fu_873_p2() {
    tmp_176_fu_873_p2 = (tmp_136_reg_1154.read() | ap_const_lv10_5);
}

void poly_Sq_frombytes::thread_tmp_177_fu_878_p1() {
    tmp_177_fu_878_p1 = esl_zext<64,10>(tmp_176_fu_873_p2.read());
}

void poly_Sq_frombytes::thread_tmp_179_cast_fu_646_p1() {
    tmp_179_cast_fu_646_p1 = esl_zext<16,13>(tmp_150_fu_639_p3.read());
}

void poly_Sq_frombytes::thread_tmp_179_fu_1000_p1() {
    tmp_179_fu_1000_p1 = a_q0.read().range(7-1, 0);
}

void poly_Sq_frombytes::thread_tmp_180_fu_840_p2() {
    tmp_180_fu_840_p2 = (!ap_const_lv11_A.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_A) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_tmp_181_fu_846_p1() {
    tmp_181_fu_846_p1 = esl_zext<64,11>(tmp_180_fu_840_p2.read());
}

void poly_Sq_frombytes::thread_tmp_182_fu_918_p3() {
    tmp_182_fu_918_p3 = esl_concat<8,2>(reg_477.read(), ap_const_lv2_0);
}

void poly_Sq_frombytes::thread_tmp_183_fu_893_p2() {
    tmp_183_fu_893_p2 = (!ap_const_lv11_B.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_B) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_tmp_184_fu_899_p1() {
    tmp_184_fu_899_p1 = esl_zext<64,11>(tmp_183_fu_893_p2.read());
}

void poly_Sq_frombytes::thread_tmp_185_fu_944_p3() {
    tmp_185_fu_944_p3 = esl_concat<3,10>(tmp_208_fu_926_p1.read(), tmp_82_fu_938_p2.read());
}

void poly_Sq_frombytes::thread_tmp_186_fu_957_p2() {
    tmp_186_fu_957_p2 = (tmp_136_reg_1154.read() | ap_const_lv10_6);
}

void poly_Sq_frombytes::thread_tmp_187_fu_962_p1() {
    tmp_187_fu_962_p1 = esl_zext<64,10>(tmp_186_fu_957_p2.read());
}

void poly_Sq_frombytes::thread_tmp_188_fu_967_p4() {
    tmp_188_fu_967_p4 = a_q1.read().range(7, 3);
}

void poly_Sq_frombytes::thread_tmp_189_fu_904_p2() {
    tmp_189_fu_904_p2 = (!ap_const_lv11_C.is_01() || !phi_mul_reg_447.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_C) + sc_biguint<11>(phi_mul_reg_447.read()));
}

void poly_Sq_frombytes::thread_tmp_190_fu_910_p1() {
    tmp_190_fu_910_p1 = esl_zext<64,11>(tmp_189_fu_904_p2.read());
}

void poly_Sq_frombytes::thread_tmp_191_fu_977_p3() {
    tmp_191_fu_977_p3 = esl_concat<8,5>(a_q0.read(), tmp_188_fu_967_p4.read());
}

void poly_Sq_frombytes::thread_tmp_192_fu_990_p2() {
    tmp_192_fu_990_p2 = (tmp_136_reg_1154.read() | ap_const_lv10_7);
}

void poly_Sq_frombytes::thread_tmp_193_cast_fu_720_p1() {
    tmp_193_cast_fu_720_p1 = esl_zext<16,13>(tmp_160_fu_712_p3.read());
}

void poly_Sq_frombytes::thread_tmp_193_fu_995_p1() {
    tmp_193_fu_995_p1 = esl_zext<64,10>(tmp_192_fu_990_p2.read());
}

void poly_Sq_frombytes::thread_tmp_194_fu_1072_p1() {
    tmp_194_fu_1072_p1 = esl_zext<8,3>(grp_fu_459_p4.read());
}

void poly_Sq_frombytes::thread_tmp_195_fu_1068_p1() {
    tmp_195_fu_1068_p1 = a_q0.read().range(2-1, 0);
}

void poly_Sq_frombytes::thread_tmp_196_fu_1110_p1() {
    tmp_196_fu_1110_p1 = a_q1.read().range(5-1, 0);
}

void poly_Sq_frombytes::thread_tmp_197_fu_510_p1() {
    tmp_197_fu_510_p1 = a_q1.read().range(5-1, 0);
}

void poly_Sq_frombytes::thread_tmp_198_fu_562_p1() {
    tmp_198_fu_562_p1 = esl_zext<8,3>(tmp_138_reg_1165.read());
}

void poly_Sq_frombytes::thread_tmp_199_fu_573_p1() {
    tmp_199_fu_573_p1 = a_q1.read().range(2-1, 0);
}

void poly_Sq_frombytes::thread_tmp_200_fu_635_p1() {
    tmp_200_fu_635_p1 = a_q0.read().range(7-1, 0);
}

void poly_Sq_frombytes::thread_tmp_202_fu_683_p1() {
    tmp_202_fu_683_p1 = esl_zext<8,1>(tmp_201_reg_1190.read());
}

void poly_Sq_frombytes::thread_tmp_203_fu_767_p1() {
    tmp_203_fu_767_p1 = esl_zext<8,4>(tmp_163_reg_1205.read());
}

void poly_Sq_frombytes::thread_tmp_204_fu_694_p1() {
    tmp_204_fu_694_p1 = a_q0.read().range(4-1, 0);
}

void poly_Sq_frombytes::thread_tmp_205_fu_915_p1() {
    tmp_205_fu_915_p1 = esl_zext<8,2>(tmp_178_reg_1240.read());
}

void poly_Sq_frombytes::thread_tmp_206_fu_778_p1() {
    tmp_206_fu_778_p1 = a_q0.read().range(1-1, 0);
}

void poly_Sq_frombytes::thread_tmp_207_cast_fu_804_p1() {
    tmp_207_cast_fu_804_p1 = esl_zext<16,13>(tmp_169_fu_796_p3.read());
}

void poly_Sq_frombytes::thread_tmp_207_fu_857_p1() {
    tmp_207_fu_857_p1 = a_q1.read().range(6-1, 0);
}

void poly_Sq_frombytes::thread_tmp_208_fu_926_p1() {
    tmp_208_fu_926_p1 = a_q1.read().range(3-1, 0);
}

void poly_Sq_frombytes::thread_tmp_216_cast_fu_868_p1() {
    tmp_216_cast_fu_868_p1 = esl_zext<16,13>(tmp_175_fu_861_p3.read());
}

void poly_Sq_frombytes::thread_tmp_230_cast_fu_952_p1() {
    tmp_230_cast_fu_952_p1 = esl_zext<16,13>(tmp_185_fu_944_p3.read());
}

void poly_Sq_frombytes::thread_tmp_238_cast_fu_985_p1() {
    tmp_238_cast_fu_985_p1 = esl_zext<16,13>(tmp_191_fu_977_p3.read());
}

void poly_Sq_frombytes::thread_tmp_33_fu_1114_p3() {
    tmp_33_fu_1114_p3 = esl_concat<5,8>(tmp_196_reg_1295.read(), a_q1.read());
}

void poly_Sq_frombytes::thread_tmp_35_fu_514_p3() {
    tmp_35_fu_514_p3 = esl_concat<5,8>(tmp_197_fu_510_p1.read(), a_q0.read());
}

void poly_Sq_frombytes::thread_tmp_60_fu_1019_p3() {
    tmp_60_fu_1019_p3 = esl_concat<1,8>(ap_const_lv1_0, tmp_153_fu_1004_p1.read());
}

void poly_Sq_frombytes::thread_tmp_61_fu_1027_p2() {
    tmp_61_fu_1027_p2 = (tmp_60_fu_1019_p3.read() | tmp_123_fu_1007_p3.read());
}

void poly_Sq_frombytes::thread_tmp_65_fu_1084_p3() {
    tmp_65_fu_1084_p3 = esl_concat<3,8>(ap_const_lv3_0, tmp_194_fu_1072_p1.read());
}

void poly_Sq_frombytes::thread_tmp_66_fu_1092_p2() {
    tmp_66_fu_1092_p2 = (tmp_65_fu_1084_p3.read() | tmp_128_fu_1076_p3.read());
}

void poly_Sq_frombytes::thread_tmp_68_fu_577_p3() {
    tmp_68_fu_577_p3 = esl_concat<3,8>(ap_const_lv3_0, tmp_198_fu_562_p1.read());
}

void poly_Sq_frombytes::thread_tmp_69_fu_585_p2() {
    tmp_69_fu_585_p2 = (tmp_68_fu_577_p3.read() | tmp_141_fu_565_p3.read());
}

void poly_Sq_frombytes::thread_tmp_73_fu_698_p3() {
    tmp_73_fu_698_p3 = esl_concat<1,8>(ap_const_lv1_0, tmp_202_fu_683_p1.read());
}

void poly_Sq_frombytes::thread_tmp_74_fu_706_p2() {
    tmp_74_fu_706_p2 = (tmp_73_fu_698_p3.read() | tmp_157_fu_686_p3.read());
}

void poly_Sq_frombytes::thread_tmp_76_fu_782_p3() {
    tmp_76_fu_782_p3 = esl_concat<4,8>(ap_const_lv4_0, tmp_203_fu_767_p1.read());
}

void poly_Sq_frombytes::thread_tmp_77_fu_790_p2() {
    tmp_77_fu_790_p2 = (tmp_76_fu_782_p3.read() | tmp_166_fu_770_p3.read());
}

void poly_Sq_frombytes::thread_tmp_81_fu_930_p3() {
    tmp_81_fu_930_p3 = esl_concat<2,8>(ap_const_lv2_0, tmp_205_fu_915_p1.read());
}

void poly_Sq_frombytes::thread_tmp_82_fu_938_p2() {
    tmp_82_fu_938_p2 = (tmp_81_fu_930_p3.read() | tmp_182_fu_918_p3.read());
}

void poly_Sq_frombytes::thread_tmp_s_fu_488_p2() {
    tmp_s_fu_488_p2 = (!i_reg_435.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_reg_435.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void poly_Sq_frombytes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_482_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

}

