// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sample_iid.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sample_iid::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sample_iid::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> sample_iid::ap_ST_fsm_state1 = "1";
const sc_lv<4> sample_iid::ap_ST_fsm_state2 = "10";
const sc_lv<4> sample_iid::ap_ST_fsm_state3 = "100";
const sc_lv<4> sample_iid::ap_ST_fsm_state4 = "1000";
const sc_lv<32> sample_iid::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sample_iid::ap_const_lv32_1 = "1";
const sc_lv<32> sample_iid::ap_const_lv32_2 = "10";
const sc_lv<10> sample_iid::ap_const_lv10_0 = "0000000000";
const sc_lv<32> sample_iid::ap_const_lv32_3 = "11";
const sc_lv<64> sample_iid::ap_const_lv64_2BC = "1010111100";
const sc_lv<1> sample_iid::ap_const_lv1_1 = "1";
const sc_lv<16> sample_iid::ap_const_lv16_0 = "0000000000000000";
const sc_lv<10> sample_iid::ap_const_lv10_2BC = "1010111100";
const sc_lv<10> sample_iid::ap_const_lv10_1 = "1";
const sc_lv<32> sample_iid::ap_const_lv32_4 = "100";
const sc_lv<32> sample_iid::ap_const_lv32_7 = "111";
const sc_lv<32> sample_iid::ap_const_lv32_5 = "101";
const sc_lv<3> sample_iid::ap_const_lv3_5 = "101";
const sc_lv<3> sample_iid::ap_const_lv3_7 = "111";
const sc_lv<3> sample_iid::ap_const_lv3_0 = "000";
const bool sample_iid::ap_const_boolean_1 = true;

sample_iid::sample_iid(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_108_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_108_p2 );

    SC_METHOD(thread_c_cast_fu_270_p3);
    sensitive << ( tmp_11_fu_262_p3 );

    SC_METHOD(thread_exitcond_fu_108_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_92 );

    SC_METHOD(thread_fold1_i_cast_fu_196_p2);
    sensitive << ( tmp_2_fu_186_p4 );
    sensitive << ( tmp_10_fu_182_p1 );

    SC_METHOD(thread_fold2_i_cast_fu_236_p2);
    sensitive << ( fold1_i_cast_fu_196_p2 );
    sensitive << ( tmp_3_fu_226_p4 );

    SC_METHOD(thread_i_3_fu_114_p2);
    sensitive << ( i_reg_92 );

    SC_METHOD(thread_not_tmp_37_i_fu_287_p2);
    sensitive << ( tmp_11_fu_262_p3 );

    SC_METHOD(thread_r_1_fu_206_p2);
    sensitive << ( tmp_311_i_cast_fu_202_p1 );
    sensitive << ( tmp_310_i_cast_fu_178_p1 );

    SC_METHOD(thread_r_2_fu_246_p2);
    sensitive << ( tmp_313_i_cast_fu_242_p1 );
    sensitive << ( tmp_312_i_cast_fu_222_p1 );

    SC_METHOD(thread_r_coeffs_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_252_p1 );

    SC_METHOD(thread_r_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_r_coeffs_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_317_i_fu_311_p2 );

    SC_METHOD(thread_r_coeffs_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_108_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_r_fu_162_p2);
    sensitive << ( tmp_309_i_cast_fu_152_p1 );
    sensitive << ( tmp_308_i_cast_fu_148_p1 );

    SC_METHOD(thread_sum_cast_fu_129_p1);
    sensitive << ( sum_fu_124_p2 );

    SC_METHOD(thread_sum_fu_124_p2);
    sensitive << ( tmp_6_reg_318 );
    sensitive << ( tmp_cast_fu_120_p1 );

    SC_METHOD(thread_t_fu_257_p2);
    sensitive << ( r_2_reg_336 );

    SC_METHOD(thread_tmp_10_fu_182_p1);
    sensitive << ( uniformbytes_q0 );

    SC_METHOD(thread_tmp_11_fu_262_p3);
    sensitive << ( t_fu_257_p2 );

    SC_METHOD(thread_tmp_2_fu_186_p4);
    sensitive << ( uniformbytes_q0 );

    SC_METHOD(thread_tmp_308_i_cast_fu_148_p1);
    sensitive << ( tmp_4_fu_138_p4 );

    SC_METHOD(thread_tmp_309_i_cast_fu_152_p1);
    sensitive << ( tmp_9_fu_134_p1 );

    SC_METHOD(thread_tmp_310_i_cast_fu_178_p1);
    sensitive << ( tmp_7_fu_168_p4 );

    SC_METHOD(thread_tmp_311_i_cast_fu_202_p1);
    sensitive << ( fold1_i_cast_fu_196_p2 );

    SC_METHOD(thread_tmp_312_i_cast_fu_222_p1);
    sensitive << ( tmp_8_fu_212_p4 );

    SC_METHOD(thread_tmp_313_i_cast_fu_242_p1);
    sensitive << ( fold2_i_cast_fu_236_p2 );

    SC_METHOD(thread_tmp_314_i_cast_fu_283_p1);
    sensitive << ( tmp_314_i_fu_278_p2 );

    SC_METHOD(thread_tmp_314_i_fu_278_p2);
    sensitive << ( r_2_reg_336 );
    sensitive << ( c_cast_fu_270_p3 );

    SC_METHOD(thread_tmp_315_i_cast_cast_fu_293_p3);
    sensitive << ( not_tmp_37_i_fu_287_p2 );

    SC_METHOD(thread_tmp_316_i_cast_fu_307_p1);
    sensitive << ( tmp_316_i_fu_301_p2 );

    SC_METHOD(thread_tmp_316_i_fu_301_p2);
    sensitive << ( t_fu_257_p2 );
    sensitive << ( tmp_315_i_cast_cast_fu_293_p3 );

    SC_METHOD(thread_tmp_317_i_fu_311_p2);
    sensitive << ( tmp_314_i_cast_fu_283_p1 );
    sensitive << ( tmp_316_i_cast_fu_307_p1 );

    SC_METHOD(thread_tmp_3_fu_226_p4);
    sensitive << ( tmp_5_fu_156_p2 );

    SC_METHOD(thread_tmp_4_fu_138_p4);
    sensitive << ( uniformbytes_q0 );

    SC_METHOD(thread_tmp_5_fu_156_p2);
    sensitive << ( tmp_4_fu_138_p4 );
    sensitive << ( tmp_9_fu_134_p1 );

    SC_METHOD(thread_tmp_6_fu_104_p1);
    sensitive << ( uniformbytes_offset );

    SC_METHOD(thread_tmp_7_fu_168_p4);
    sensitive << ( r_fu_162_p2 );

    SC_METHOD(thread_tmp_8_fu_212_p4);
    sensitive << ( r_1_fu_206_p2 );

    SC_METHOD(thread_tmp_9_fu_134_p1);
    sensitive << ( uniformbytes_q0 );

    SC_METHOD(thread_tmp_cast_fu_120_p1);
    sensitive << ( i_reg_92 );

    SC_METHOD(thread_tmp_fu_252_p1);
    sensitive << ( i_reg_92 );

    SC_METHOD(thread_uniformbytes_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( sum_cast_fu_129_p1 );

    SC_METHOD(thread_uniformbytes_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_108_p2 );

    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sample_iid_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_coeffs_address0, "(port)r_coeffs_address0");
    sc_trace(mVcdFile, r_coeffs_ce0, "(port)r_coeffs_ce0");
    sc_trace(mVcdFile, r_coeffs_we0, "(port)r_coeffs_we0");
    sc_trace(mVcdFile, r_coeffs_d0, "(port)r_coeffs_d0");
    sc_trace(mVcdFile, uniformbytes_address0, "(port)uniformbytes_address0");
    sc_trace(mVcdFile, uniformbytes_ce0, "(port)uniformbytes_ce0");
    sc_trace(mVcdFile, uniformbytes_q0, "(port)uniformbytes_q0");
    sc_trace(mVcdFile, uniformbytes_offset, "(port)uniformbytes_offset");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_6_fu_104_p1, "tmp_6_fu_104_p1");
    sc_trace(mVcdFile, tmp_6_reg_318, "tmp_6_reg_318");
    sc_trace(mVcdFile, i_3_fu_114_p2, "i_3_fu_114_p2");
    sc_trace(mVcdFile, i_3_reg_326, "i_3_reg_326");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond_fu_108_p2, "exitcond_fu_108_p2");
    sc_trace(mVcdFile, r_2_fu_246_p2, "r_2_fu_246_p2");
    sc_trace(mVcdFile, r_2_reg_336, "r_2_reg_336");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_reg_92, "i_reg_92");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, sum_cast_fu_129_p1, "sum_cast_fu_129_p1");
    sc_trace(mVcdFile, tmp_fu_252_p1, "tmp_fu_252_p1");
    sc_trace(mVcdFile, tmp_317_i_fu_311_p2, "tmp_317_i_fu_311_p2");
    sc_trace(mVcdFile, tmp_cast_fu_120_p1, "tmp_cast_fu_120_p1");
    sc_trace(mVcdFile, sum_fu_124_p2, "sum_fu_124_p2");
    sc_trace(mVcdFile, tmp_4_fu_138_p4, "tmp_4_fu_138_p4");
    sc_trace(mVcdFile, tmp_9_fu_134_p1, "tmp_9_fu_134_p1");
    sc_trace(mVcdFile, tmp_309_i_cast_fu_152_p1, "tmp_309_i_cast_fu_152_p1");
    sc_trace(mVcdFile, tmp_308_i_cast_fu_148_p1, "tmp_308_i_cast_fu_148_p1");
    sc_trace(mVcdFile, r_fu_162_p2, "r_fu_162_p2");
    sc_trace(mVcdFile, tmp_7_fu_168_p4, "tmp_7_fu_168_p4");
    sc_trace(mVcdFile, tmp_2_fu_186_p4, "tmp_2_fu_186_p4");
    sc_trace(mVcdFile, tmp_10_fu_182_p1, "tmp_10_fu_182_p1");
    sc_trace(mVcdFile, fold1_i_cast_fu_196_p2, "fold1_i_cast_fu_196_p2");
    sc_trace(mVcdFile, tmp_311_i_cast_fu_202_p1, "tmp_311_i_cast_fu_202_p1");
    sc_trace(mVcdFile, tmp_310_i_cast_fu_178_p1, "tmp_310_i_cast_fu_178_p1");
    sc_trace(mVcdFile, r_1_fu_206_p2, "r_1_fu_206_p2");
    sc_trace(mVcdFile, tmp_8_fu_212_p4, "tmp_8_fu_212_p4");
    sc_trace(mVcdFile, tmp_5_fu_156_p2, "tmp_5_fu_156_p2");
    sc_trace(mVcdFile, tmp_3_fu_226_p4, "tmp_3_fu_226_p4");
    sc_trace(mVcdFile, fold2_i_cast_fu_236_p2, "fold2_i_cast_fu_236_p2");
    sc_trace(mVcdFile, tmp_313_i_cast_fu_242_p1, "tmp_313_i_cast_fu_242_p1");
    sc_trace(mVcdFile, tmp_312_i_cast_fu_222_p1, "tmp_312_i_cast_fu_222_p1");
    sc_trace(mVcdFile, t_fu_257_p2, "t_fu_257_p2");
    sc_trace(mVcdFile, tmp_11_fu_262_p3, "tmp_11_fu_262_p3");
    sc_trace(mVcdFile, c_cast_fu_270_p3, "c_cast_fu_270_p3");
    sc_trace(mVcdFile, tmp_314_i_fu_278_p2, "tmp_314_i_fu_278_p2");
    sc_trace(mVcdFile, not_tmp_37_i_fu_287_p2, "not_tmp_37_i_fu_287_p2");
    sc_trace(mVcdFile, tmp_315_i_cast_cast_fu_293_p3, "tmp_315_i_cast_cast_fu_293_p3");
    sc_trace(mVcdFile, tmp_316_i_fu_301_p2, "tmp_316_i_fu_301_p2");
    sc_trace(mVcdFile, tmp_314_i_cast_fu_283_p1, "tmp_314_i_cast_fu_283_p1");
    sc_trace(mVcdFile, tmp_316_i_cast_fu_307_p1, "tmp_316_i_cast_fu_307_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sample_iid::~sample_iid() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void sample_iid::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_92 = i_3_reg_326.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_92 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_3_reg_326 = i_3_fu_114_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_2_reg_336 = r_2_fu_246_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_6_reg_318 = tmp_6_fu_104_p1.read();
    }
}

void sample_iid::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sample_iid::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sample_iid::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sample_iid::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sample_iid::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_108_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sample_iid::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sample_iid::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_108_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sample_iid::thread_c_cast_fu_270_p3() {
    c_cast_fu_270_p3 = (!tmp_11_fu_262_p3.read()[0].is_01())? sc_lv<3>(): ((tmp_11_fu_262_p3.read()[0].to_bool())? ap_const_lv3_7: ap_const_lv3_0);
}

void sample_iid::thread_exitcond_fu_108_p2() {
    exitcond_fu_108_p2 = (!i_reg_92.read().is_01() || !ap_const_lv10_2BC.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_92.read() == ap_const_lv10_2BC);
}

void sample_iid::thread_fold1_i_cast_fu_196_p2() {
    fold1_i_cast_fu_196_p2 = (!tmp_2_fu_186_p4.read().is_01() || !tmp_10_fu_182_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(tmp_2_fu_186_p4.read()) + sc_biguint<2>(tmp_10_fu_182_p1.read()));
}

void sample_iid::thread_fold2_i_cast_fu_236_p2() {
    fold2_i_cast_fu_236_p2 = (!fold1_i_cast_fu_196_p2.read().is_01() || !tmp_3_fu_226_p4.read().is_01())? sc_lv<2>(): (sc_biguint<2>(fold1_i_cast_fu_196_p2.read()) + sc_biguint<2>(tmp_3_fu_226_p4.read()));
}

void sample_iid::thread_i_3_fu_114_p2() {
    i_3_fu_114_p2 = (!i_reg_92.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_92.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void sample_iid::thread_not_tmp_37_i_fu_287_p2() {
    not_tmp_37_i_fu_287_p2 = (tmp_11_fu_262_p3.read() ^ ap_const_lv1_1);
}

void sample_iid::thread_r_1_fu_206_p2() {
    r_1_fu_206_p2 = (!tmp_311_i_cast_fu_202_p1.read().is_01() || !tmp_310_i_cast_fu_178_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_311_i_cast_fu_202_p1.read()) + sc_biguint<4>(tmp_310_i_cast_fu_178_p1.read()));
}

void sample_iid::thread_r_2_fu_246_p2() {
    r_2_fu_246_p2 = (!tmp_313_i_cast_fu_242_p1.read().is_01() || !tmp_312_i_cast_fu_222_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_313_i_cast_fu_242_p1.read()) + sc_biguint<3>(tmp_312_i_cast_fu_222_p1.read()));
}

void sample_iid::thread_r_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (tmp_fu_252_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_coeffs_address0 =  (sc_lv<10>) (ap_const_lv64_2BC);
    } else {
        r_coeffs_address0 = "XXXXXXXXXX";
    }
}

void sample_iid::thread_r_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        r_coeffs_ce0 = ap_const_logic_1;
    } else {
        r_coeffs_ce0 = ap_const_logic_0;
    }
}

void sample_iid::thread_r_coeffs_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        r_coeffs_d0 = tmp_317_i_fu_311_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_coeffs_d0 = ap_const_lv16_0;
    } else {
        r_coeffs_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void sample_iid::thread_r_coeffs_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_108_p2.read(), ap_const_lv1_1)))) {
        r_coeffs_we0 = ap_const_logic_1;
    } else {
        r_coeffs_we0 = ap_const_logic_0;
    }
}

void sample_iid::thread_r_fu_162_p2() {
    r_fu_162_p2 = (!tmp_309_i_cast_fu_152_p1.read().is_01() || !tmp_308_i_cast_fu_148_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_309_i_cast_fu_152_p1.read()) + sc_biguint<5>(tmp_308_i_cast_fu_148_p1.read()));
}

void sample_iid::thread_sum_cast_fu_129_p1() {
    sum_cast_fu_129_p1 = esl_zext<64,11>(sum_fu_124_p2.read());
}

void sample_iid::thread_sum_fu_124_p2() {
    sum_fu_124_p2 = (!tmp_6_reg_318.read().is_01() || !tmp_cast_fu_120_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_6_reg_318.read()) + sc_biguint<11>(tmp_cast_fu_120_p1.read()));
}

void sample_iid::thread_t_fu_257_p2() {
    t_fu_257_p2 = (!ap_const_lv3_5.is_01() || !r_2_reg_336.read().is_01())? sc_lv<3>(): (sc_bigint<3>(ap_const_lv3_5) + sc_biguint<3>(r_2_reg_336.read()));
}

void sample_iid::thread_tmp_10_fu_182_p1() {
    tmp_10_fu_182_p1 = uniformbytes_q0.read().range(2-1, 0);
}

void sample_iid::thread_tmp_11_fu_262_p3() {
    tmp_11_fu_262_p3 = t_fu_257_p2.read().range(2, 2);
}

void sample_iid::thread_tmp_2_fu_186_p4() {
    tmp_2_fu_186_p4 = uniformbytes_q0.read().range(5, 4);
}

void sample_iid::thread_tmp_308_i_cast_fu_148_p1() {
    tmp_308_i_cast_fu_148_p1 = esl_zext<5,4>(tmp_4_fu_138_p4.read());
}

void sample_iid::thread_tmp_309_i_cast_fu_152_p1() {
    tmp_309_i_cast_fu_152_p1 = esl_zext<5,4>(tmp_9_fu_134_p1.read());
}

void sample_iid::thread_tmp_310_i_cast_fu_178_p1() {
    tmp_310_i_cast_fu_178_p1 = esl_zext<4,3>(tmp_7_fu_168_p4.read());
}

void sample_iid::thread_tmp_311_i_cast_fu_202_p1() {
    tmp_311_i_cast_fu_202_p1 = esl_zext<4,2>(fold1_i_cast_fu_196_p2.read());
}

void sample_iid::thread_tmp_312_i_cast_fu_222_p1() {
    tmp_312_i_cast_fu_222_p1 = esl_zext<3,2>(tmp_8_fu_212_p4.read());
}

void sample_iid::thread_tmp_313_i_cast_fu_242_p1() {
    tmp_313_i_cast_fu_242_p1 = esl_zext<3,2>(fold2_i_cast_fu_236_p2.read());
}

void sample_iid::thread_tmp_314_i_cast_fu_283_p1() {
    tmp_314_i_cast_fu_283_p1 = esl_zext<16,3>(tmp_314_i_fu_278_p2.read());
}

void sample_iid::thread_tmp_314_i_fu_278_p2() {
    tmp_314_i_fu_278_p2 = (r_2_reg_336.read() & c_cast_fu_270_p3.read());
}

void sample_iid::thread_tmp_315_i_cast_cast_fu_293_p3() {
    tmp_315_i_cast_cast_fu_293_p3 = (!not_tmp_37_i_fu_287_p2.read()[0].is_01())? sc_lv<3>(): ((not_tmp_37_i_fu_287_p2.read()[0].to_bool())? ap_const_lv3_7: ap_const_lv3_0);
}

void sample_iid::thread_tmp_316_i_cast_fu_307_p1() {
    tmp_316_i_cast_fu_307_p1 = esl_sext<16,3>(tmp_316_i_fu_301_p2.read());
}

void sample_iid::thread_tmp_316_i_fu_301_p2() {
    tmp_316_i_fu_301_p2 = (t_fu_257_p2.read() & tmp_315_i_cast_cast_fu_293_p3.read());
}

void sample_iid::thread_tmp_317_i_fu_311_p2() {
    tmp_317_i_fu_311_p2 = (tmp_314_i_cast_fu_283_p1.read() ^ tmp_316_i_cast_fu_307_p1.read());
}

void sample_iid::thread_tmp_3_fu_226_p4() {
    tmp_3_fu_226_p4 = tmp_5_fu_156_p2.read().range(3, 2);
}

void sample_iid::thread_tmp_4_fu_138_p4() {
    tmp_4_fu_138_p4 = uniformbytes_q0.read().range(7, 4);
}

void sample_iid::thread_tmp_5_fu_156_p2() {
    tmp_5_fu_156_p2 = (!tmp_4_fu_138_p4.read().is_01() || !tmp_9_fu_134_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_4_fu_138_p4.read()) + sc_biguint<4>(tmp_9_fu_134_p1.read()));
}

void sample_iid::thread_tmp_6_fu_104_p1() {
    tmp_6_fu_104_p1 = uniformbytes_offset.read().range(11-1, 0);
}

void sample_iid::thread_tmp_7_fu_168_p4() {
    tmp_7_fu_168_p4 = r_fu_162_p2.read().range(4, 2);
}

void sample_iid::thread_tmp_8_fu_212_p4() {
    tmp_8_fu_212_p4 = r_1_fu_206_p2.read().range(3, 2);
}

void sample_iid::thread_tmp_9_fu_134_p1() {
    tmp_9_fu_134_p1 = uniformbytes_q0.read().range(4-1, 0);
}

void sample_iid::thread_tmp_cast_fu_120_p1() {
    tmp_cast_fu_120_p1 = esl_zext<11,10>(i_reg_92.read());
}

void sample_iid::thread_tmp_fu_252_p1() {
    tmp_fu_252_p1 = esl_zext<64,10>(i_reg_92.read());
}

void sample_iid::thread_uniformbytes_address0() {
    uniformbytes_address0 =  (sc_lv<11>) (sum_cast_fu_129_p1.read());
}

void sample_iid::thread_uniformbytes_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        uniformbytes_ce0 = ap_const_logic_1;
    } else {
        uniformbytes_ce0 = ap_const_logic_0;
    }
}

void sample_iid::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_108_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

}

