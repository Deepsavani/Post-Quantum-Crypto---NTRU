// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sample_iid_HH_
#define _sample_iid_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct sample_iid : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > r_coeffs_address0;
    sc_out< sc_logic > r_coeffs_ce0;
    sc_out< sc_logic > r_coeffs_we0;
    sc_out< sc_lv<16> > r_coeffs_d0;
    sc_out< sc_lv<11> > uniformbytes_address0;
    sc_out< sc_logic > uniformbytes_ce0;
    sc_in< sc_lv<8> > uniformbytes_q0;
    sc_in< sc_lv<12> > uniformbytes_offset;


    // Module declarations
    sample_iid(sc_module_name name);
    SC_HAS_PROCESS(sample_iid);

    ~sample_iid();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > tmp_6_fu_104_p1;
    sc_signal< sc_lv<11> > tmp_6_reg_318;
    sc_signal< sc_lv<10> > i_3_fu_114_p2;
    sc_signal< sc_lv<10> > i_3_reg_326;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_fu_108_p2;
    sc_signal< sc_lv<3> > r_2_fu_246_p2;
    sc_signal< sc_lv<3> > r_2_reg_336;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<10> > i_reg_92;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > sum_cast_fu_129_p1;
    sc_signal< sc_lv<64> > tmp_fu_252_p1;
    sc_signal< sc_lv<16> > tmp_317_i_fu_311_p2;
    sc_signal< sc_lv<11> > tmp_cast_fu_120_p1;
    sc_signal< sc_lv<11> > sum_fu_124_p2;
    sc_signal< sc_lv<4> > tmp_4_fu_138_p4;
    sc_signal< sc_lv<4> > tmp_9_fu_134_p1;
    sc_signal< sc_lv<5> > tmp_309_i_cast_fu_152_p1;
    sc_signal< sc_lv<5> > tmp_308_i_cast_fu_148_p1;
    sc_signal< sc_lv<5> > r_fu_162_p2;
    sc_signal< sc_lv<3> > tmp_7_fu_168_p4;
    sc_signal< sc_lv<2> > tmp_2_fu_186_p4;
    sc_signal< sc_lv<2> > tmp_10_fu_182_p1;
    sc_signal< sc_lv<2> > fold1_i_cast_fu_196_p2;
    sc_signal< sc_lv<4> > tmp_311_i_cast_fu_202_p1;
    sc_signal< sc_lv<4> > tmp_310_i_cast_fu_178_p1;
    sc_signal< sc_lv<4> > r_1_fu_206_p2;
    sc_signal< sc_lv<2> > tmp_8_fu_212_p4;
    sc_signal< sc_lv<4> > tmp_5_fu_156_p2;
    sc_signal< sc_lv<2> > tmp_3_fu_226_p4;
    sc_signal< sc_lv<2> > fold2_i_cast_fu_236_p2;
    sc_signal< sc_lv<3> > tmp_313_i_cast_fu_242_p1;
    sc_signal< sc_lv<3> > tmp_312_i_cast_fu_222_p1;
    sc_signal< sc_lv<3> > t_fu_257_p2;
    sc_signal< sc_lv<1> > tmp_11_fu_262_p3;
    sc_signal< sc_lv<3> > c_cast_fu_270_p3;
    sc_signal< sc_lv<3> > tmp_314_i_fu_278_p2;
    sc_signal< sc_lv<1> > not_tmp_37_i_fu_287_p2;
    sc_signal< sc_lv<3> > tmp_315_i_cast_cast_fu_293_p3;
    sc_signal< sc_lv<3> > tmp_316_i_fu_301_p2;
    sc_signal< sc_lv<16> > tmp_314_i_cast_fu_283_p1;
    sc_signal< sc_lv<16> > tmp_316_i_cast_fu_307_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<64> ap_const_lv64_2BC;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<10> ap_const_lv10_2BC;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_cast_fu_270_p3();
    void thread_exitcond_fu_108_p2();
    void thread_fold1_i_cast_fu_196_p2();
    void thread_fold2_i_cast_fu_236_p2();
    void thread_i_3_fu_114_p2();
    void thread_not_tmp_37_i_fu_287_p2();
    void thread_r_1_fu_206_p2();
    void thread_r_2_fu_246_p2();
    void thread_r_coeffs_address0();
    void thread_r_coeffs_ce0();
    void thread_r_coeffs_d0();
    void thread_r_coeffs_we0();
    void thread_r_fu_162_p2();
    void thread_sum_cast_fu_129_p1();
    void thread_sum_fu_124_p2();
    void thread_t_fu_257_p2();
    void thread_tmp_10_fu_182_p1();
    void thread_tmp_11_fu_262_p3();
    void thread_tmp_2_fu_186_p4();
    void thread_tmp_308_i_cast_fu_148_p1();
    void thread_tmp_309_i_cast_fu_152_p1();
    void thread_tmp_310_i_cast_fu_178_p1();
    void thread_tmp_311_i_cast_fu_202_p1();
    void thread_tmp_312_i_cast_fu_222_p1();
    void thread_tmp_313_i_cast_fu_242_p1();
    void thread_tmp_314_i_cast_fu_283_p1();
    void thread_tmp_314_i_fu_278_p2();
    void thread_tmp_315_i_cast_cast_fu_293_p3();
    void thread_tmp_316_i_cast_fu_307_p1();
    void thread_tmp_316_i_fu_301_p2();
    void thread_tmp_317_i_fu_311_p2();
    void thread_tmp_3_fu_226_p4();
    void thread_tmp_4_fu_138_p4();
    void thread_tmp_5_fu_156_p2();
    void thread_tmp_6_fu_104_p1();
    void thread_tmp_7_fu_168_p4();
    void thread_tmp_8_fu_212_p4();
    void thread_tmp_9_fu_134_p1();
    void thread_tmp_cast_fu_120_p1();
    void thread_tmp_fu_252_p1();
    void thread_uniformbytes_address0();
    void thread_uniformbytes_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
