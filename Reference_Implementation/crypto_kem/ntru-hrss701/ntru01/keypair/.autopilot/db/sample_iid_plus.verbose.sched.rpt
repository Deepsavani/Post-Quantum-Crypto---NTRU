

================================================================
== Vivado HLS Report for 'sample_iid_plus'
================================================================
* Date:           Sun Aug 23 22:38:11 2020

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        ntru01
* Solution:       keypair
* Product family: artix7
* Target device:  xc7a200tfbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.448|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  7709|  7709|  7709|  7709|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  2100|  2100|         3|          -|          -|   700|    no    |
        |- Loop 2  |  1400|  1400|         2|          -|          -|   700|    no    |
        |- Loop 3  |  2100|  2100|         3|          -|          -|   700|    no    |
        |- Loop 4  |   702|   702|         2|          -|          -|   351|    no    |
        |- Loop 5  |  1402|  1402|         2|          -|          -|   701|    no    |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond_i)
	5  / (exitcond_i)
3 --> 
	4  / true
4 --> 
	2  / true
5 --> 
	6  / (!exitcond2)
	7  / (exitcond2)
6 --> 
	5  / true
7 --> 
	8  / (!exitcond1)
	10  / (exitcond1)
8 --> 
	9  / true
9 --> 
	7  / true
10 --> 
	11  / (tmp_3)
	12  / (!tmp_3)
11 --> 
	10  / true
12 --> 
	13  / (!exitcond)
13 --> 
	12  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%uniformbytes_offset_s = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %uniformbytes_offset)" [sample.c:41]   --->   Operation 14 'read' 'uniformbytes_offset_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_12 = trunc i12 %uniformbytes_offset_s to i11" [sample.c:35->sample.c:49]   --->   Operation 15 'trunc' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.35ns)   --->   "br label %1" [sample.c:34->sample.c:49]   --->   Operation 16 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 4.53>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%i_i = phi i10 [ 0, %0 ], [ %i_8, %2 ]"   --->   Operation 17 'phi' 'i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.43ns)   --->   "%exitcond_i = icmp eq i10 %i_i, -324" [sample.c:34->sample.c:49]   --->   Operation 18 'icmp' 'exitcond_i' <Predicate = true> <Delay = 1.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 700, i64 700, i64 700)"   --->   Operation 19 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.74ns)   --->   "%i_8 = add i10 %i_i, 1" [sample.c:34->sample.c:49]   --->   Operation 20 'add' 'i_8' <Predicate = true> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "br i1 %exitcond_i, label %sample_iid.exit, label %2" [sample.c:34->sample.c:49]   --->   Operation 21 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_i_cast = zext i10 %i_i to i11" [sample.c:35->sample.c:49]   --->   Operation 22 'zext' 'tmp_i_cast' <Predicate = (!exitcond_i)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.76ns)   --->   "%sum_i = add i11 %tmp_12, %tmp_i_cast" [sample.c:35->sample.c:49]   --->   Operation 23 'add' 'sum_i' <Predicate = (!exitcond_i)> <Delay = 1.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%sum_i_cast = zext i11 %sum_i to i64" [sample.c:35->sample.c:49]   --->   Operation 24 'zext' 'sum_i_cast' <Predicate = (!exitcond_i)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%uniformbytes_addr = getelementptr [1400 x i8]* %uniformbytes, i64 0, i64 %sum_i_cast" [sample.c:35->sample.c:49]   --->   Operation 25 'getelementptr' 'uniformbytes_addr' <Predicate = (!exitcond_i)> <Delay = 0.00>
ST_2 : Operation 26 [2/2] (2.77ns)   --->   "%uniformbytes_load = load i8* %uniformbytes_addr, align 1" [sample.c:35->sample.c:49]   --->   Operation 26 'load' 'uniformbytes_load' <Predicate = (!exitcond_i)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%r_coeffs_addr_5 = getelementptr [701 x i16]* %r_coeffs, i64 0, i64 700" [sample.c:37->sample.c:49]   --->   Operation 27 'getelementptr' 'r_coeffs_addr_5' <Predicate = (exitcond_i)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (2.77ns)   --->   "store i16 0, i16* %r_coeffs_addr_5, align 2" [sample.c:37->sample.c:49]   --->   Operation 28 'store' <Predicate = (exitcond_i)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_2 : Operation 29 [1/1] (1.35ns)   --->   "br label %3" [sample.c:52]   --->   Operation 29 'br' <Predicate = (exitcond_i)> <Delay = 1.35>

State 3 <SV = 2> <Delay = 6.81>
ST_3 : Operation 30 [1/2] (2.77ns)   --->   "%uniformbytes_load = load i8* %uniformbytes_addr, align 1" [sample.c:35->sample.c:49]   --->   Operation 30 'load' 'uniformbytes_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_14 = trunc i8 %uniformbytes_load to i4" [poly.c:5->sample.c:35->sample.c:49]   --->   Operation 31 'trunc' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_8 = call i4 @_ssdm_op_PartSelect.i4.i8.i32.i32(i8 %uniformbytes_load, i32 4, i32 7)" [poly.c:11->sample.c:35->sample.c:49]   --->   Operation 32 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_297_i_i_cast = zext i4 %tmp_8 to i5" [poly.c:11->sample.c:35->sample.c:49]   --->   Operation 33 'zext' 'tmp_297_i_i_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_298_i_i_cast = zext i4 %tmp_14 to i5" [poly.c:11->sample.c:35->sample.c:49]   --->   Operation 34 'zext' 'tmp_298_i_i_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (1.49ns)   --->   "%tmp_11 = add i4 %tmp_8, %tmp_14" [poly.c:11->sample.c:35->sample.c:49]   --->   Operation 35 'add' 'tmp_11' <Predicate = true> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (1.49ns)   --->   "%r = add i5 %tmp_298_i_i_cast, %tmp_297_i_i_cast" [poly.c:11->sample.c:35->sample.c:49]   --->   Operation 36 'add' 'r' <Predicate = true> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_17 = call i3 @_ssdm_op_PartSelect.i3.i5.i32.i32(i5 %r, i32 2, i32 4)" [poly.c:12->sample.c:35->sample.c:49]   --->   Operation 37 'partselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_299_i_i_cast = zext i3 %tmp_17 to i4" [poly.c:12->sample.c:35->sample.c:49]   --->   Operation 38 'zext' 'tmp_299_i_i_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_19 = trunc i8 %uniformbytes_load to i2" [sample.c:35->sample.c:49]   --->   Operation 39 'trunc' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_15 = call i2 @_ssdm_op_PartSelect.i2.i8.i32.i32(i8 %uniformbytes_load, i32 4, i32 5)" [sample.c:35->sample.c:49]   --->   Operation 40 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (1.20ns)   --->   "%fold1_i_i_cast = add i2 %tmp_15, %tmp_19" [poly.c:12->sample.c:35->sample.c:49]   --->   Operation 41 'add' 'fold1_i_i_cast' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_300_i_i_cast = zext i2 %fold1_i_i_cast to i4" [poly.c:12->sample.c:35->sample.c:49]   --->   Operation 42 'zext' 'tmp_300_i_i_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (1.34ns)   --->   "%r_1 = add i4 %tmp_300_i_i_cast, %tmp_299_i_i_cast" [poly.c:12->sample.c:35->sample.c:49]   --->   Operation 43 'add' 'r_1' <Predicate = true> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_18 = call i2 @_ssdm_op_PartSelect.i2.i4.i32.i32(i4 %r_1, i32 2, i32 3)" [poly.c:13->sample.c:35->sample.c:49]   --->   Operation 44 'partselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_301_i_i_cast = zext i2 %tmp_18 to i3" [poly.c:13->sample.c:35->sample.c:49]   --->   Operation 45 'zext' 'tmp_301_i_i_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_16 = call i2 @_ssdm_op_PartSelect.i2.i4.i32.i32(i4 %tmp_11, i32 2, i32 3)" [poly.c:13->sample.c:35->sample.c:49]   --->   Operation 46 'partselect' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (1.20ns)   --->   "%fold2_i_i_cast = add i2 %fold1_i_i_cast, %tmp_16" [poly.c:13->sample.c:35->sample.c:49]   --->   Operation 47 'add' 'fold2_i_i_cast' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_302_i_i_cast = zext i2 %fold2_i_i_cast to i3" [poly.c:13->sample.c:35->sample.c:49]   --->   Operation 48 'zext' 'tmp_302_i_i_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (1.20ns)   --->   "%r_2 = add i3 %tmp_302_i_i_cast, %tmp_301_i_i_cast" [poly.c:13->sample.c:35->sample.c:49]   --->   Operation 49 'add' 'r_2' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 4.93>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_i = zext i10 %i_i to i64" [sample.c:35->sample.c:49]   --->   Operation 50 'zext' 'tmp_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (1.34ns)   --->   "%t = add i3 -3, %r_2" [poly.c:15->sample.c:35->sample.c:49]   --->   Operation 51 'add' 't' <Predicate = true> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_21 = call i1 @_ssdm_op_BitSelect.i1.i3.i32(i3 %t, i32 2)" [poly.c:16->sample.c:35->sample.c:49]   --->   Operation 52 'bitselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node tmp_306_i_i)   --->   "%c_cast = select i1 %tmp_21, i3 -1, i3 0" [poly.c:16->sample.c:35->sample.c:49]   --->   Operation 53 'select' 'c_cast' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node tmp_306_i_i)   --->   "%tmp_303_i_i = and i3 %r_2, %c_cast" [poly.c:18->sample.c:35->sample.c:49]   --->   Operation 54 'and' 'tmp_303_i_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node tmp_306_i_i)   --->   "%tmp_303_i_i_cast = zext i3 %tmp_303_i_i to i16" [poly.c:18->sample.c:35->sample.c:49]   --->   Operation 55 'zext' 'tmp_303_i_i_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node tmp_306_i_i)   --->   "%not_tmp_240_i_i = xor i1 %tmp_21, true" [poly.c:16->sample.c:35->sample.c:49]   --->   Operation 56 'xor' 'not_tmp_240_i_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node tmp_306_i_i)   --->   "%tmp_304_i_i_cast_cas = select i1 %not_tmp_240_i_i, i3 -1, i3 0" [poly.c:18->sample.c:35->sample.c:49]   --->   Operation 57 'select' 'tmp_304_i_i_cast_cas' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node tmp_306_i_i)   --->   "%tmp_305_i_i = and i3 %t, %tmp_304_i_i_cast_cas" [poly.c:18->sample.c:35->sample.c:49]   --->   Operation 58 'and' 'tmp_305_i_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node tmp_306_i_i)   --->   "%tmp_305_i_i_cast = sext i3 %tmp_305_i_i to i16" [poly.c:18->sample.c:35->sample.c:49]   --->   Operation 59 'sext' 'tmp_305_i_i_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.81ns) (out node of the LUT)   --->   "%tmp_306_i_i = xor i16 %tmp_303_i_i_cast, %tmp_305_i_i_cast" [poly.c:18->sample.c:35->sample.c:49]   --->   Operation 60 'xor' 'tmp_306_i_i' <Predicate = true> <Delay = 0.81> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%r_coeffs_addr_6 = getelementptr [701 x i16]* %r_coeffs, i64 0, i64 %tmp_i" [sample.c:35->sample.c:49]   --->   Operation 61 'getelementptr' 'r_coeffs_addr_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (2.77ns)   --->   "store i16 %tmp_306_i_i, i16* %r_coeffs_addr_6, align 2" [sample.c:35->sample.c:49]   --->   Operation 62 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "br label %1" [sample.c:34->sample.c:49]   --->   Operation 63 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 2> <Delay = 2.77>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%i = phi i10 [ 0, %sample_iid.exit ], [ %i_4, %4 ]"   --->   Operation 64 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (1.43ns)   --->   "%exitcond2 = icmp eq i10 %i, -324" [sample.c:52]   --->   Operation 65 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%empty_24 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 700, i64 700, i64 700)"   --->   Operation 66 'speclooptripcount' 'empty_24' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (1.74ns)   --->   "%i_4 = add i10 %i, 1" [sample.c:52]   --->   Operation 67 'add' 'i_4' <Predicate = true> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %.preheader3.preheader, label %4" [sample.c:52]   --->   Operation 68 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%tmp = zext i10 %i to i64" [sample.c:53]   --->   Operation 69 'zext' 'tmp' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%r_coeffs_addr = getelementptr [701 x i16]* %r_coeffs, i64 0, i64 %tmp" [sample.c:53]   --->   Operation 70 'getelementptr' 'r_coeffs_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_5 : Operation 71 [2/2] (2.77ns)   --->   "%r_coeffs_load = load i16* %r_coeffs_addr, align 2" [sample.c:53]   --->   Operation 71 'load' 'r_coeffs_load' <Predicate = (!exitcond2)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_5 : Operation 72 [1/1] (1.35ns)   --->   "br label %.preheader3" [sample.c:56]   --->   Operation 72 'br' <Predicate = (exitcond2)> <Delay = 1.35>

State 6 <SV = 3> <Delay = 8.17>
ST_6 : Operation 73 [1/2] (2.77ns)   --->   "%r_coeffs_load = load i16* %r_coeffs_addr, align 2" [sample.c:53]   --->   Operation 73 'load' 'r_coeffs_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_4 = call i15 @_ssdm_op_PartSelect.i15.i16.i32.i32(i16 %r_coeffs_load, i32 1, i32 15)" [sample.c:53]   --->   Operation 74 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_20 = zext i15 %tmp_4 to i16" [sample.c:53]   --->   Operation 75 'zext' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (1.82ns)   --->   "%tmp_5 = sub i16 0, %tmp_20" [sample.c:53]   --->   Operation 76 'sub' 'tmp_5' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 77 [1/1] (0.80ns)   --->   "%tmp_6 = or i16 %r_coeffs_load, %tmp_5" [sample.c:53]   --->   Operation 77 'or' 'tmp_6' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 78 [1/1] (2.77ns)   --->   "store i16 %tmp_6, i16* %r_coeffs_addr, align 2" [sample.c:53]   --->   Operation 78 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "br label %3" [sample.c:52]   --->   Operation 79 'br' <Predicate = true> <Delay = 0.00>

State 7 <SV = 3> <Delay = 4.52>
ST_7 : Operation 80 [1/1] (0.00ns)   --->   "%i_1 = phi i10 [ %i_5, %5 ], [ 0, %.preheader3.preheader ]"   --->   Operation 80 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 81 [1/1] (0.00ns)   --->   "%s = phi i16 [ %s_1, %5 ], [ 0, %.preheader3.preheader ]"   --->   Operation 81 'phi' 's' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 82 [1/1] (1.43ns)   --->   "%exitcond1 = icmp eq i10 %i_1, -324" [sample.c:56]   --->   Operation 82 'icmp' 'exitcond1' <Predicate = true> <Delay = 1.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 83 [1/1] (0.00ns)   --->   "%empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 700, i64 700, i64 700)"   --->   Operation 83 'speclooptripcount' 'empty_25' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 84 [1/1] (1.74ns)   --->   "%i_5 = add i10 %i_1, 1" [sample.c:57]   --->   Operation 84 'add' 'i_5' <Predicate = true> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 85 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %6, label %5" [sample.c:56]   --->   Operation 85 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_s = zext i10 %i_5 to i64" [sample.c:57]   --->   Operation 86 'zext' 'tmp_s' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "%r_coeffs_addr_1 = getelementptr [701 x i16]* %r_coeffs, i64 0, i64 %tmp_s" [sample.c:57]   --->   Operation 87 'getelementptr' 'r_coeffs_addr_1' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_7 : Operation 88 [2/2] (2.77ns)   --->   "%r_coeffs_load_1 = load i16* %r_coeffs_addr_1, align 2" [sample.c:57]   --->   Operation 88 'load' 'r_coeffs_load_1' <Predicate = (!exitcond1)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_7 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_1 = zext i10 %i_1 to i64" [sample.c:57]   --->   Operation 89 'zext' 'tmp_1' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_7 : Operation 90 [1/1] (0.00ns)   --->   "%r_coeffs_addr_2 = getelementptr [701 x i16]* %r_coeffs, i64 0, i64 %tmp_1" [sample.c:57]   --->   Operation 90 'getelementptr' 'r_coeffs_addr_2' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_7 : Operation 91 [2/2] (2.77ns)   --->   "%r_coeffs_load_2 = load i16* %r_coeffs_addr_2, align 2" [sample.c:57]   --->   Operation 91 'load' 'r_coeffs_load_2' <Predicate = (!exitcond1)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_7 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_22 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %s, i32 15)" [sample.c:60]   --->   Operation 92 'bitselect' 'tmp_22' <Predicate = (exitcond1)> <Delay = 0.00>
ST_7 : Operation 93 [1/1] (1.35ns)   --->   "br label %7" [sample.c:62]   --->   Operation 93 'br' <Predicate = (exitcond1)> <Delay = 1.35>

State 8 <SV = 4> <Delay = 2.77>
ST_8 : Operation 94 [1/2] (2.77ns)   --->   "%r_coeffs_load_1 = load i16* %r_coeffs_addr_1, align 2" [sample.c:57]   --->   Operation 94 'load' 'r_coeffs_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_8 : Operation 95 [1/2] (2.77ns)   --->   "%r_coeffs_load_2 = load i16* %r_coeffs_addr_2, align 2" [sample.c:57]   --->   Operation 95 'load' 'r_coeffs_load_2' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>

State 9 <SV = 5> <Delay = 6.35>
ST_9 : Operation 96 [1/1] (2.82ns) (grouped into DSP with root node s_1)   --->   "%tmp_2 = mul i16 %r_coeffs_load_1, %r_coeffs_load_2" [sample.c:57]   --->   Operation 96 'mul' 'tmp_2' <Predicate = true> <Delay = 2.82> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 6.35> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 97 [1/1] (3.53ns) (root node of the DSP)   --->   "%s_1 = add i16 %tmp_2, %s" [sample.c:57]   --->   Operation 97 'add' 's_1' <Predicate = true> <Delay = 3.53> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 6.35> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 98 [1/1] (0.00ns)   --->   "br label %.preheader3" [sample.c:56]   --->   Operation 98 'br' <Predicate = true> <Delay = 0.00>

State 10 <SV = 4> <Delay = 2.77>
ST_10 : Operation 99 [1/1] (0.00ns)   --->   "%i_2 = phi i10 [ 0, %6 ], [ %i_6, %8 ]"   --->   Operation 99 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 100 [1/1] (1.43ns)   --->   "%tmp_3 = icmp ult i10 %i_2, -323" [sample.c:62]   --->   Operation 100 'icmp' 'tmp_3' <Predicate = true> <Delay = 1.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 101 [1/1] (0.00ns)   --->   "%empty_26 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 351, i64 351, i64 351)"   --->   Operation 101 'speclooptripcount' 'empty_26' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 102 [1/1] (0.00ns)   --->   "br i1 %tmp_3, label %8, label %.preheader.preheader" [sample.c:62]   --->   Operation 102 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_7 = zext i10 %i_2 to i64" [sample.c:63]   --->   Operation 103 'zext' 'tmp_7' <Predicate = (tmp_3)> <Delay = 0.00>
ST_10 : Operation 104 [1/1] (0.00ns)   --->   "%r_coeffs_addr_3 = getelementptr [701 x i16]* %r_coeffs, i64 0, i64 %tmp_7" [sample.c:63]   --->   Operation 104 'getelementptr' 'r_coeffs_addr_3' <Predicate = (tmp_3)> <Delay = 0.00>
ST_10 : Operation 105 [2/2] (2.77ns)   --->   "%r_coeffs_load_3 = load i16* %r_coeffs_addr_3, align 2" [sample.c:63]   --->   Operation 105 'load' 'r_coeffs_load_3' <Predicate = (tmp_3)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_10 : Operation 106 [1/1] (1.74ns)   --->   "%i_6 = add i10 %i_2, 2" [sample.c:62]   --->   Operation 106 'add' 'i_6' <Predicate = (tmp_3)> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 107 [1/1] (1.35ns)   --->   "br label %.preheader" [sample.c:66]   --->   Operation 107 'br' <Predicate = (!tmp_3)> <Delay = 1.35>

State 11 <SV = 5> <Delay = 8.44>
ST_11 : Operation 108 [1/2] (2.77ns)   --->   "%r_coeffs_load_3 = load i16* %r_coeffs_addr_3, align 2" [sample.c:63]   --->   Operation 108 'load' 'r_coeffs_load_3' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_11 : Operation 109 [1/1] (1.84ns)   --->   "%mt = sub i16 0, %r_coeffs_load_3" [sample.c:63]   --->   Operation 109 'sub' 'mt' <Predicate = (tmp_22)> <Delay = 1.84> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 110 [1/1] (1.06ns)   --->   "%tmp_9 = select i1 %tmp_22, i16 %mt, i16 %r_coeffs_load_3" [sample.c:60]   --->   Operation 110 'select' 'tmp_9' <Predicate = true> <Delay = 1.06> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 111 [1/1] (2.77ns)   --->   "store i16 %tmp_9, i16* %r_coeffs_addr_3, align 2" [sample.c:63]   --->   Operation 111 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_11 : Operation 112 [1/1] (0.00ns)   --->   "br label %7" [sample.c:62]   --->   Operation 112 'br' <Predicate = true> <Delay = 0.00>

State 12 <SV = 5> <Delay = 2.77>
ST_12 : Operation 113 [1/1] (0.00ns)   --->   "%i_3 = phi i10 [ %i_7, %9 ], [ 0, %.preheader.preheader ]"   --->   Operation 113 'phi' 'i_3' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 114 [1/1] (1.43ns)   --->   "%exitcond = icmp eq i10 %i_3, -323" [sample.c:66]   --->   Operation 114 'icmp' 'exitcond' <Predicate = true> <Delay = 1.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 115 [1/1] (0.00ns)   --->   "%empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 701, i64 701, i64 701)"   --->   Operation 115 'speclooptripcount' 'empty_27' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 116 [1/1] (1.74ns)   --->   "%i_7 = add i10 %i_3, 1" [sample.c:66]   --->   Operation 116 'add' 'i_7' <Predicate = true> <Delay = 1.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 117 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %10, label %9" [sample.c:66]   --->   Operation 117 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_10 = zext i10 %i_3 to i64" [sample.c:67]   --->   Operation 118 'zext' 'tmp_10' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 119 [1/1] (0.00ns)   --->   "%r_coeffs_addr_4 = getelementptr [701 x i16]* %r_coeffs, i64 0, i64 %tmp_10" [sample.c:67]   --->   Operation 119 'getelementptr' 'r_coeffs_addr_4' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 120 [2/2] (2.77ns)   --->   "%r_coeffs_load_4 = load i16* %r_coeffs_addr_4, align 2" [sample.c:67]   --->   Operation 120 'load' 'r_coeffs_load_4' <Predicate = (!exitcond)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_12 : Operation 121 [1/1] (0.00ns)   --->   "ret void" [sample.c:68]   --->   Operation 121 'ret' <Predicate = (exitcond)> <Delay = 0.00>

State 13 <SV = 6> <Delay = 6.34>
ST_13 : Operation 122 [1/2] (2.77ns)   --->   "%r_coeffs_load_4 = load i16* %r_coeffs_addr_4, align 2" [sample.c:67]   --->   Operation 122 'load' 'r_coeffs_load_4' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_13 : Operation 123 [1/1] (0.00ns)   --->   "%tmp_23 = trunc i16 %r_coeffs_load_4 to i2" [sample.c:67]   --->   Operation 123 'trunc' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_24 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %r_coeffs_load_4, i32 15)" [sample.c:67]   --->   Operation 124 'bitselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_11_cast = zext i1 %tmp_24 to i2" [sample.c:67]   --->   Operation 125 'zext' 'tmp_11_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 126 [1/1] (0.80ns)   --->   "%tmp_13 = xor i2 %tmp_11_cast, %tmp_23" [sample.c:67]   --->   Operation 126 'xor' 'tmp_13' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_13_cast = zext i2 %tmp_13 to i16" [sample.c:67]   --->   Operation 127 'zext' 'tmp_13_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 128 [1/1] (2.77ns)   --->   "store i16 %tmp_13_cast, i16* %r_coeffs_addr_4, align 2" [sample.c:67]   --->   Operation 128 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 701> <RAM>
ST_13 : Operation 129 [1/1] (0.00ns)   --->   "br label %.preheader" [sample.c:66]   --->   Operation 129 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', sample.c:34->sample.c:49) [8]  (1.35 ns)

 <State 2>: 4.54ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sample.c:34->sample.c:49) [8]  (0 ns)
	'add' operation ('sum_i', sample.c:35->sample.c:49) [16]  (1.76 ns)
	'getelementptr' operation ('uniformbytes_addr', sample.c:35->sample.c:49) [18]  (0 ns)
	'load' operation ('uniformbytes_load', sample.c:35->sample.c:49) on array 'uniformbytes' [19]  (2.77 ns)

 <State 3>: 6.81ns
The critical path consists of the following:
	'load' operation ('uniformbytes_load', sample.c:35->sample.c:49) on array 'uniformbytes' [19]  (2.77 ns)
	'add' operation ('r', poly.c:11->sample.c:35->sample.c:49) [25]  (1.49 ns)
	'add' operation ('r', poly.c:12->sample.c:35->sample.c:49) [32]  (1.35 ns)
	'add' operation ('r', poly.c:13->sample.c:35->sample.c:49) [38]  (1.2 ns)

 <State 4>: 4.93ns
The critical path consists of the following:
	'add' operation ('t', poly.c:15->sample.c:35->sample.c:49) [39]  (1.35 ns)
	'select' operation ('c_cast', poly.c:16->sample.c:35->sample.c:49) [41]  (0 ns)
	'and' operation ('tmp_303_i_i', poly.c:18->sample.c:35->sample.c:49) [42]  (0 ns)
	'xor' operation ('tmp_306_i_i', poly.c:18->sample.c:35->sample.c:49) [48]  (0.813 ns)
	'store' operation (sample.c:35->sample.c:49) of variable 'tmp_306_i_i', poly.c:18->sample.c:35->sample.c:49 on array 'r_coeffs' [50]  (2.77 ns)

 <State 5>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sample.c:52) [57]  (0 ns)
	'getelementptr' operation ('r_coeffs_addr', sample.c:53) [64]  (0 ns)
	'load' operation ('r_coeffs_load', sample.c:53) on array 'r_coeffs' [65]  (2.77 ns)

 <State 6>: 8.18ns
The critical path consists of the following:
	'load' operation ('r_coeffs_load', sample.c:53) on array 'r_coeffs' [65]  (2.77 ns)
	'sub' operation ('tmp_5', sample.c:53) [68]  (1.82 ns)
	'or' operation ('tmp_6', sample.c:53) [69]  (0.808 ns)
	'store' operation (sample.c:53) of variable 'tmp_6', sample.c:53 on array 'r_coeffs' [70]  (2.77 ns)

 <State 7>: 4.52ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sample.c:57) [75]  (0 ns)
	'add' operation ('i', sample.c:57) [79]  (1.75 ns)
	'getelementptr' operation ('r_coeffs_addr_1', sample.c:57) [83]  (0 ns)
	'load' operation ('r_coeffs_load_1', sample.c:57) on array 'r_coeffs' [84]  (2.77 ns)

 <State 8>: 2.77ns
The critical path consists of the following:
	'load' operation ('r_coeffs_load_1', sample.c:57) on array 'r_coeffs' [84]  (2.77 ns)

 <State 9>: 6.35ns
The critical path consists of the following:
	'mul' operation of DSP[89] ('tmp_2', sample.c:57) [88]  (2.82 ns)
	'add' operation of DSP[89] ('s', sample.c:57) [89]  (3.53 ns)

 <State 10>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sample.c:62) [95]  (0 ns)
	'getelementptr' operation ('r_coeffs_addr_3', sample.c:63) [101]  (0 ns)
	'load' operation ('r_coeffs_load_3', sample.c:63) on array 'r_coeffs' [102]  (2.77 ns)

 <State 11>: 8.45ns
The critical path consists of the following:
	'load' operation ('r_coeffs_load_3', sample.c:63) on array 'r_coeffs' [102]  (2.77 ns)
	'sub' operation ('mt', sample.c:63) [103]  (1.84 ns)
	'select' operation ('tmp_9', sample.c:60) [104]  (1.06 ns)
	'store' operation (sample.c:63) of variable 'tmp_9', sample.c:60 on array 'r_coeffs' [105]  (2.77 ns)

 <State 12>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sample.c:66) [111]  (0 ns)
	'getelementptr' operation ('r_coeffs_addr_4', sample.c:67) [118]  (0 ns)
	'load' operation ('r_coeffs_load_4', sample.c:67) on array 'r_coeffs' [119]  (2.77 ns)

 <State 13>: 6.34ns
The critical path consists of the following:
	'load' operation ('r_coeffs_load_4', sample.c:67) on array 'r_coeffs' [119]  (2.77 ns)
	'xor' operation ('tmp_13', sample.c:67) [123]  (0.8 ns)
	'store' operation (sample.c:67) of variable 'tmp_13_cast', sample.c:67 on array 'r_coeffs' [125]  (2.77 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
