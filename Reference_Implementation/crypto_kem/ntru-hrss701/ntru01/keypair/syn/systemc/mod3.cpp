// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mod3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mod3::ap_const_logic_1 = sc_dt::Log_1;
const bool mod3::ap_const_boolean_1 = true;
const sc_lv<32> mod3::ap_const_lv32_8 = "1000";
const sc_lv<32> mod3::ap_const_lv32_F = "1111";
const sc_lv<32> mod3::ap_const_lv32_4 = "100";
const sc_lv<32> mod3::ap_const_lv32_B = "1011";
const sc_lv<32> mod3::ap_const_lv32_9 = "1001";
const sc_lv<32> mod3::ap_const_lv32_2 = "10";
const sc_lv<32> mod3::ap_const_lv32_5 = "101";
const sc_lv<32> mod3::ap_const_lv32_3 = "11";
const sc_lv<3> mod3::ap_const_lv3_5 = "101";
const sc_lv<3> mod3::ap_const_lv3_7 = "111";
const sc_lv<3> mod3::ap_const_lv3_0 = "000";
const sc_lv<1> mod3::ap_const_lv1_1 = "1";
const sc_logic mod3::ap_const_logic_0 = sc_dt::Log_0;

mod3::mod3(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( tmp_303_cast_fu_254_p1 );
    sensitive << ( tmp_305_cast_fu_278_p1 );

    SC_METHOD(thread_c_cast_fu_240_p3);
    sensitive << ( tmp_347_fu_232_p3 );

    SC_METHOD(thread_fold1_cast_fu_170_p2);
    sensitive << ( tmp_51_fu_160_p4 );
    sensitive << ( tmp_50_fu_154_p2 );

    SC_METHOD(thread_fold2_cast_fu_210_p2);
    sensitive << ( fold1_cast_fu_170_p2 );
    sensitive << ( tmp_52_fu_200_p4 );

    SC_METHOD(thread_fold_cast_fu_128_p2);
    sensitive << ( tmp_47_fu_104_p4 );
    sensitive << ( tmp_345_fu_100_p1 );

    SC_METHOD(thread_not_tmp_s_fu_258_p2);
    sensitive << ( tmp_347_fu_232_p3 );

    SC_METHOD(thread_r_1_fu_138_p2);
    sensitive << ( tmp_298_cast_fu_134_p1 );
    sensitive << ( tmp_297_cast_fu_96_p1 );

    SC_METHOD(thread_r_2_fu_180_p2);
    sensitive << ( tmp_300_cast_fu_176_p1 );
    sensitive << ( tmp_299_cast_fu_144_p4 );

    SC_METHOD(thread_r_3_fu_220_p2);
    sensitive << ( tmp_302_cast_fu_216_p1 );
    sensitive << ( tmp_301_cast_fu_196_p1 );

    SC_METHOD(thread_r_fu_80_p2);
    sensitive << ( tmp_cast_79_fu_70_p1 );
    sensitive << ( tmp_cast_fu_62_p1 );

    SC_METHOD(thread_t_fu_226_p2);
    sensitive << ( r_3_fu_220_p2 );

    SC_METHOD(thread_tmp_207_fu_74_p2);
    sensitive << ( tmp_fu_52_p4 );
    sensitive << ( tmp_344_fu_66_p1 );

    SC_METHOD(thread_tmp_208_fu_86_p4);
    sensitive << ( r_fu_80_p2 );

    SC_METHOD(thread_tmp_209_fu_186_p4);
    sensitive << ( r_2_fu_180_p2 );

    SC_METHOD(thread_tmp_243_fu_272_p2);
    sensitive << ( t_fu_226_p2 );
    sensitive << ( tmp_304_cast_cast_fu_264_p3 );

    SC_METHOD(thread_tmp_297_cast_fu_96_p1);
    sensitive << ( tmp_208_fu_86_p4 );

    SC_METHOD(thread_tmp_298_cast_fu_134_p1);
    sensitive << ( fold_cast_fu_128_p2 );

    SC_METHOD(thread_tmp_299_cast_fu_144_p4);
    sensitive << ( r_1_fu_138_p2 );

    SC_METHOD(thread_tmp_300_cast_fu_176_p1);
    sensitive << ( fold1_cast_fu_170_p2 );

    SC_METHOD(thread_tmp_301_cast_fu_196_p1);
    sensitive << ( tmp_209_fu_186_p4 );

    SC_METHOD(thread_tmp_302_cast_fu_216_p1);
    sensitive << ( fold2_cast_fu_210_p2 );

    SC_METHOD(thread_tmp_303_cast_fu_254_p1);
    sensitive << ( tmp_s_fu_248_p2 );

    SC_METHOD(thread_tmp_304_cast_cast_fu_264_p3);
    sensitive << ( not_tmp_s_fu_258_p2 );

    SC_METHOD(thread_tmp_305_cast_fu_278_p1);
    sensitive << ( tmp_243_fu_272_p2 );

    SC_METHOD(thread_tmp_344_fu_66_p1);
    sensitive << ( a );

    SC_METHOD(thread_tmp_345_fu_100_p1);
    sensitive << ( a );

    SC_METHOD(thread_tmp_346_fu_124_p1);
    sensitive << ( a );

    SC_METHOD(thread_tmp_347_fu_232_p3);
    sensitive << ( t_fu_226_p2 );

    SC_METHOD(thread_tmp_47_fu_104_p4);
    sensitive << ( a );

    SC_METHOD(thread_tmp_48_fu_114_p4);
    sensitive << ( a );

    SC_METHOD(thread_tmp_50_fu_154_p2);
    sensitive << ( tmp_48_fu_114_p4 );
    sensitive << ( tmp_346_fu_124_p1 );

    SC_METHOD(thread_tmp_51_fu_160_p4);
    sensitive << ( tmp_207_fu_74_p2 );

    SC_METHOD(thread_tmp_52_fu_200_p4);
    sensitive << ( r_1_fu_138_p2 );

    SC_METHOD(thread_tmp_cast_79_fu_70_p1);
    sensitive << ( tmp_344_fu_66_p1 );

    SC_METHOD(thread_tmp_cast_fu_62_p1);
    sensitive << ( tmp_fu_52_p4 );

    SC_METHOD(thread_tmp_fu_52_p4);
    sensitive << ( a );

    SC_METHOD(thread_tmp_s_fu_248_p2);
    sensitive << ( r_3_fu_220_p2 );
    sensitive << ( c_cast_fu_240_p3 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mod3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a, "(port)a");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, tmp_fu_52_p4, "tmp_fu_52_p4");
    sc_trace(mVcdFile, tmp_344_fu_66_p1, "tmp_344_fu_66_p1");
    sc_trace(mVcdFile, tmp_cast_79_fu_70_p1, "tmp_cast_79_fu_70_p1");
    sc_trace(mVcdFile, tmp_cast_fu_62_p1, "tmp_cast_fu_62_p1");
    sc_trace(mVcdFile, r_fu_80_p2, "r_fu_80_p2");
    sc_trace(mVcdFile, tmp_208_fu_86_p4, "tmp_208_fu_86_p4");
    sc_trace(mVcdFile, tmp_47_fu_104_p4, "tmp_47_fu_104_p4");
    sc_trace(mVcdFile, tmp_345_fu_100_p1, "tmp_345_fu_100_p1");
    sc_trace(mVcdFile, fold_cast_fu_128_p2, "fold_cast_fu_128_p2");
    sc_trace(mVcdFile, tmp_298_cast_fu_134_p1, "tmp_298_cast_fu_134_p1");
    sc_trace(mVcdFile, tmp_297_cast_fu_96_p1, "tmp_297_cast_fu_96_p1");
    sc_trace(mVcdFile, r_1_fu_138_p2, "r_1_fu_138_p2");
    sc_trace(mVcdFile, tmp_48_fu_114_p4, "tmp_48_fu_114_p4");
    sc_trace(mVcdFile, tmp_346_fu_124_p1, "tmp_346_fu_124_p1");
    sc_trace(mVcdFile, tmp_207_fu_74_p2, "tmp_207_fu_74_p2");
    sc_trace(mVcdFile, tmp_51_fu_160_p4, "tmp_51_fu_160_p4");
    sc_trace(mVcdFile, tmp_50_fu_154_p2, "tmp_50_fu_154_p2");
    sc_trace(mVcdFile, fold1_cast_fu_170_p2, "fold1_cast_fu_170_p2");
    sc_trace(mVcdFile, tmp_300_cast_fu_176_p1, "tmp_300_cast_fu_176_p1");
    sc_trace(mVcdFile, tmp_299_cast_fu_144_p4, "tmp_299_cast_fu_144_p4");
    sc_trace(mVcdFile, r_2_fu_180_p2, "r_2_fu_180_p2");
    sc_trace(mVcdFile, tmp_209_fu_186_p4, "tmp_209_fu_186_p4");
    sc_trace(mVcdFile, tmp_52_fu_200_p4, "tmp_52_fu_200_p4");
    sc_trace(mVcdFile, fold2_cast_fu_210_p2, "fold2_cast_fu_210_p2");
    sc_trace(mVcdFile, tmp_302_cast_fu_216_p1, "tmp_302_cast_fu_216_p1");
    sc_trace(mVcdFile, tmp_301_cast_fu_196_p1, "tmp_301_cast_fu_196_p1");
    sc_trace(mVcdFile, r_3_fu_220_p2, "r_3_fu_220_p2");
    sc_trace(mVcdFile, t_fu_226_p2, "t_fu_226_p2");
    sc_trace(mVcdFile, tmp_347_fu_232_p3, "tmp_347_fu_232_p3");
    sc_trace(mVcdFile, c_cast_fu_240_p3, "c_cast_fu_240_p3");
    sc_trace(mVcdFile, tmp_s_fu_248_p2, "tmp_s_fu_248_p2");
    sc_trace(mVcdFile, not_tmp_s_fu_258_p2, "not_tmp_s_fu_258_p2");
    sc_trace(mVcdFile, tmp_304_cast_cast_fu_264_p3, "tmp_304_cast_cast_fu_264_p3");
    sc_trace(mVcdFile, tmp_243_fu_272_p2, "tmp_243_fu_272_p2");
    sc_trace(mVcdFile, tmp_303_cast_fu_254_p1, "tmp_303_cast_fu_254_p1");
    sc_trace(mVcdFile, tmp_305_cast_fu_278_p1, "tmp_305_cast_fu_278_p1");
#endif

    }
}

mod3::~mod3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void mod3::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void mod3::thread_ap_return() {
    ap_return = (tmp_303_cast_fu_254_p1.read() ^ tmp_305_cast_fu_278_p1.read());
}

void mod3::thread_c_cast_fu_240_p3() {
    c_cast_fu_240_p3 = (!tmp_347_fu_232_p3.read()[0].is_01())? sc_lv<3>(): ((tmp_347_fu_232_p3.read()[0].to_bool())? ap_const_lv3_7: ap_const_lv3_0);
}

void mod3::thread_fold1_cast_fu_170_p2() {
    fold1_cast_fu_170_p2 = (!tmp_51_fu_160_p4.read().is_01() || !tmp_50_fu_154_p2.read().is_01())? sc_lv<2>(): (sc_biguint<2>(tmp_51_fu_160_p4.read()) + sc_biguint<2>(tmp_50_fu_154_p2.read()));
}

void mod3::thread_fold2_cast_fu_210_p2() {
    fold2_cast_fu_210_p2 = (!fold1_cast_fu_170_p2.read().is_01() || !tmp_52_fu_200_p4.read().is_01())? sc_lv<2>(): (sc_biguint<2>(fold1_cast_fu_170_p2.read()) + sc_biguint<2>(tmp_52_fu_200_p4.read()));
}

void mod3::thread_fold_cast_fu_128_p2() {
    fold_cast_fu_128_p2 = (!tmp_47_fu_104_p4.read().is_01() || !tmp_345_fu_100_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_47_fu_104_p4.read()) + sc_biguint<4>(tmp_345_fu_100_p1.read()));
}

void mod3::thread_not_tmp_s_fu_258_p2() {
    not_tmp_s_fu_258_p2 = (tmp_347_fu_232_p3.read() ^ ap_const_lv1_1);
}

void mod3::thread_r_1_fu_138_p2() {
    r_1_fu_138_p2 = (!tmp_298_cast_fu_134_p1.read().is_01() || !tmp_297_cast_fu_96_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_298_cast_fu_134_p1.read()) + sc_biguint<6>(tmp_297_cast_fu_96_p1.read()));
}

void mod3::thread_r_2_fu_180_p2() {
    r_2_fu_180_p2 = (!tmp_300_cast_fu_176_p1.read().is_01() || !tmp_299_cast_fu_144_p4.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_300_cast_fu_176_p1.read()) + sc_biguint<4>(tmp_299_cast_fu_144_p4.read()));
}

void mod3::thread_r_3_fu_220_p2() {
    r_3_fu_220_p2 = (!tmp_302_cast_fu_216_p1.read().is_01() || !tmp_301_cast_fu_196_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_302_cast_fu_216_p1.read()) + sc_biguint<3>(tmp_301_cast_fu_196_p1.read()));
}

void mod3::thread_r_fu_80_p2() {
    r_fu_80_p2 = (!tmp_cast_79_fu_70_p1.read().is_01() || !tmp_cast_fu_62_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_cast_79_fu_70_p1.read()) + sc_biguint<9>(tmp_cast_fu_62_p1.read()));
}

void mod3::thread_t_fu_226_p2() {
    t_fu_226_p2 = (!ap_const_lv3_5.is_01() || !r_3_fu_220_p2.read().is_01())? sc_lv<3>(): (sc_bigint<3>(ap_const_lv3_5) + sc_biguint<3>(r_3_fu_220_p2.read()));
}

void mod3::thread_tmp_207_fu_74_p2() {
    tmp_207_fu_74_p2 = (!tmp_fu_52_p4.read().is_01() || !tmp_344_fu_66_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_fu_52_p4.read()) + sc_biguint<8>(tmp_344_fu_66_p1.read()));
}

void mod3::thread_tmp_208_fu_86_p4() {
    tmp_208_fu_86_p4 = r_fu_80_p2.read().range(8, 4);
}

void mod3::thread_tmp_209_fu_186_p4() {
    tmp_209_fu_186_p4 = r_2_fu_180_p2.read().range(3, 2);
}

void mod3::thread_tmp_243_fu_272_p2() {
    tmp_243_fu_272_p2 = (t_fu_226_p2.read() & tmp_304_cast_cast_fu_264_p3.read());
}

void mod3::thread_tmp_297_cast_fu_96_p1() {
    tmp_297_cast_fu_96_p1 = esl_zext<6,5>(tmp_208_fu_86_p4.read());
}

void mod3::thread_tmp_298_cast_fu_134_p1() {
    tmp_298_cast_fu_134_p1 = esl_zext<6,4>(fold_cast_fu_128_p2.read());
}

void mod3::thread_tmp_299_cast_fu_144_p4() {
    tmp_299_cast_fu_144_p4 = r_1_fu_138_p2.read().range(5, 2);
}

void mod3::thread_tmp_300_cast_fu_176_p1() {
    tmp_300_cast_fu_176_p1 = esl_zext<4,2>(fold1_cast_fu_170_p2.read());
}

void mod3::thread_tmp_301_cast_fu_196_p1() {
    tmp_301_cast_fu_196_p1 = esl_zext<3,2>(tmp_209_fu_186_p4.read());
}

void mod3::thread_tmp_302_cast_fu_216_p1() {
    tmp_302_cast_fu_216_p1 = esl_zext<3,2>(fold2_cast_fu_210_p2.read());
}

void mod3::thread_tmp_303_cast_fu_254_p1() {
    tmp_303_cast_fu_254_p1 = esl_zext<16,3>(tmp_s_fu_248_p2.read());
}

void mod3::thread_tmp_304_cast_cast_fu_264_p3() {
    tmp_304_cast_cast_fu_264_p3 = (!not_tmp_s_fu_258_p2.read()[0].is_01())? sc_lv<3>(): ((not_tmp_s_fu_258_p2.read()[0].to_bool())? ap_const_lv3_7: ap_const_lv3_0);
}

void mod3::thread_tmp_305_cast_fu_278_p1() {
    tmp_305_cast_fu_278_p1 = esl_sext<16,3>(tmp_243_fu_272_p2.read());
}

void mod3::thread_tmp_344_fu_66_p1() {
    tmp_344_fu_66_p1 = a.read().range(8-1, 0);
}

void mod3::thread_tmp_345_fu_100_p1() {
    tmp_345_fu_100_p1 = a.read().range(4-1, 0);
}

void mod3::thread_tmp_346_fu_124_p1() {
    tmp_346_fu_124_p1 = a.read().range(2-1, 0);
}

void mod3::thread_tmp_347_fu_232_p3() {
    tmp_347_fu_232_p3 = t_fu_226_p2.read().range(2, 2);
}

void mod3::thread_tmp_47_fu_104_p4() {
    tmp_47_fu_104_p4 = a.read().range(11, 8);
}

void mod3::thread_tmp_48_fu_114_p4() {
    tmp_48_fu_114_p4 = a.read().range(9, 8);
}

void mod3::thread_tmp_50_fu_154_p2() {
    tmp_50_fu_154_p2 = (!tmp_48_fu_114_p4.read().is_01() || !tmp_346_fu_124_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(tmp_48_fu_114_p4.read()) + sc_biguint<2>(tmp_346_fu_124_p1.read()));
}

void mod3::thread_tmp_51_fu_160_p4() {
    tmp_51_fu_160_p4 = tmp_207_fu_74_p2.read().range(5, 4);
}

void mod3::thread_tmp_52_fu_200_p4() {
    tmp_52_fu_200_p4 = r_1_fu_138_p2.read().range(3, 2);
}

void mod3::thread_tmp_cast_79_fu_70_p1() {
    tmp_cast_79_fu_70_p1 = esl_zext<9,8>(tmp_344_fu_66_p1.read());
}

void mod3::thread_tmp_cast_fu_62_p1() {
    tmp_cast_fu_62_p1 = esl_zext<9,8>(tmp_fu_52_p4.read());
}

void mod3::thread_tmp_fu_52_p4() {
    tmp_fu_52_p4 = a.read().range(15, 8);
}

void mod3::thread_tmp_s_fu_248_p2() {
    tmp_s_fu_248_p2 = (r_3_fu_220_p2.read() & c_cast_fu_240_p3.read());
}

}

