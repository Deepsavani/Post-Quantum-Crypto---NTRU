// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "poly_Sq_tobytes.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic poly_Sq_tobytes::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic poly_Sq_tobytes::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state1 = "1";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state2 = "10";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state3 = "100";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state4 = "1000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state5 = "10000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state6 = "100000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state7 = "1000000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state8 = "10000000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state9 = "100000000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state10 = "1000000000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state11 = "10000000000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state12 = "100000000000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<18> poly_Sq_tobytes::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_1 = "1";
const sc_lv<1> poly_Sq_tobytes::ap_const_lv1_0 = "0";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_2 = "10";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_4 = "100";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_5 = "101";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_6 = "110";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_7 = "111";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_8 = "1000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_9 = "1001";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_B = "1011";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_D = "1101";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_E = "1110";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_F = "1111";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_10 = "10000";
const sc_lv<7> poly_Sq_tobytes::ap_const_lv7_0 = "0000000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_A = "1010";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_0 = "00000000000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_3 = "11";
const sc_lv<4> poly_Sq_tobytes::ap_const_lv4_0 = "0000";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_C = "1100";
const sc_lv<3> poly_Sq_tobytes::ap_const_lv3_0 = "000";
const sc_lv<1> poly_Sq_tobytes::ap_const_lv1_1 = "1";
const sc_lv<4> poly_Sq_tobytes::ap_const_lv4_4 = "100";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_1 = "1";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_2 = "10";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_3 = "11";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_4 = "100";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_5 = "101";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_6 = "110";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_7 = "111";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_471 = "10001110001";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_470 = "10001110000";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_46F = "10001101111";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_46E = "10001101110";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_46D = "10001101101";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_46C = "10001101100";
const sc_lv<32> poly_Sq_tobytes::ap_const_lv32_11 = "10001";
const sc_lv<64> poly_Sq_tobytes::ap_const_lv64_46B = "10001101011";
const sc_lv<16> poly_Sq_tobytes::ap_const_lv16_0 = "0000000000000000";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_D = "1101";
const sc_lv<7> poly_Sq_tobytes::ap_const_lv7_57 = "1010111";
const sc_lv<7> poly_Sq_tobytes::ap_const_lv7_1 = "1";
const sc_lv<4> poly_Sq_tobytes::ap_const_lv4_8 = "1000";
const sc_lv<4> poly_Sq_tobytes::ap_const_lv4_1 = "1";
const sc_lv<5> poly_Sq_tobytes::ap_const_lv5_0 = "00000";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_1 = "1";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_2 = "10";
const sc_lv<2> poly_Sq_tobytes::ap_const_lv2_0 = "00";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_3 = "11";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_4 = "100";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_5 = "101";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_6 = "110";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_7 = "111";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_8 = "1000";
const sc_lv<6> poly_Sq_tobytes::ap_const_lv6_0 = "000000";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_9 = "1001";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_A = "1010";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_B = "1011";
const sc_lv<11> poly_Sq_tobytes::ap_const_lv11_C = "1100";
const sc_lv<3> poly_Sq_tobytes::ap_const_lv3_4 = "100";
const sc_lv<3> poly_Sq_tobytes::ap_const_lv3_1 = "1";
const bool poly_Sq_tobytes::ap_const_boolean_1 = true;

poly_Sq_tobytes::poly_Sq_tobytes(sc_module_name name) : sc_module(name), mVcdFile(0) {
    t_U = new poly_Sq_tobytes_1_t("t_U");
    t_U->clk(ap_clk);
    t_U->reset(ap_rst);
    t_U->address0(t_address0);
    t_U->ce0(t_ce0);
    t_U->we0(t_we0);
    t_U->d0(t_d0);
    t_U->q0(t_q0);
    t_U->address1(t_address1);
    t_U->ce1(t_ce1);
    t_U->we1(t_we1);
    t_U->d1(a_coeffs_q0);
    t_U->q1(t_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_coeffs_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_131_fu_615_p1 );
    sensitive << ( tmp_53_fu_1059_p1 );

    SC_METHOD(thread_a_coeffs_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_exitcond1_fu_1039_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( j_1_reg_495 );

    SC_METHOD(thread_exitcond2_fu_598_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_483 );

    SC_METHOD(thread_exitcond3_fu_574_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_460 );

    SC_METHOD(thread_exitcond_fu_1069_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( j_2_reg_507 );

    SC_METHOD(thread_grp_fu_518_p4);
    sensitive << ( t_q1 );

    SC_METHOD(thread_grp_fu_528_p4);
    sensitive << ( t_q1 );

    SC_METHOD(thread_grp_fu_550_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_grp_fu_560_p3);
    sensitive << ( t_q1 );

    SC_METHOD(thread_j_3_fu_604_p2);
    sensitive << ( j_reg_483 );

    SC_METHOD(thread_j_4_fu_1080_p2);
    sensitive << ( j_2_reg_507 );

    SC_METHOD(thread_j_cast6_fu_594_p1);
    sensitive << ( j_reg_483 );

    SC_METHOD(thread_next_mul_fu_568_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_58_fu_630_p1 );
    sensitive << ( tmp_70_fu_701_p1 );
    sensitive << ( tmp_84_fu_767_p1 );
    sensitive << ( tmp_93_fu_815_p1 );
    sensitive << ( tmp_104_fu_894_p1 );
    sensitive << ( tmp_117_fu_955_p1 );
    sensitive << ( tmp_128_fu_1034_p1 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_r_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_66_fu_670_p1 );
    sensitive << ( tmp_77_fu_738_p1 );
    sensitive << ( tmp_88_fu_778_p1 );
    sensitive << ( tmp_97_fu_837_p1 );
    sensitive << ( tmp_113_fu_933_p1 );
    sensitive << ( tmp_124_fu_1012_p1 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_r_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_r_d0);
    sensitive << ( tmp_68_reg_1283 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( t_q0 );
    sensitive << ( t_q1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_101_fu_625_p1 );
    sensitive << ( tmp_82_fu_755_p2 );
    sensitive << ( tmp_91_fu_800_p3 );
    sensitive << ( tmp_98_fu_879_p3 );
    sensitive << ( tmp_149_fu_1158_p3 );
    sensitive << ( tmp_155_fu_1198_p2 );

    SC_METHOD(thread_r_d1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( t_q0 );
    sensitive << ( t_q1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_64_fu_657_p2 );
    sensitive << ( tmp_75_fu_723_p3 );
    sensitive << ( tmp_111_fu_921_p2 );
    sensitive << ( tmp_122_fu_997_p3 );
    sensitive << ( tmp_137_fu_1104_p3 );
    sensitive << ( tmp_144_fu_1124_p2 );
    sensitive << ( tmp_165_fu_1205_p1 );

    SC_METHOD(thread_r_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_r_we1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_t_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_fu_1069_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_132_fu_620_p1 );
    sensitive << ( tmp_157_fu_1075_p1 );

    SC_METHOD(thread_t_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_54_fu_1064_p1 );

    SC_METHOD(thread_t_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_fu_1069_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_t_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_t_d0);
    sensitive << ( a_coeffs_q0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_fu_1069_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_t_we0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_fu_1069_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_t_we1);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_tmp_101_fu_625_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_102_fu_710_p3);
    sensitive << ( tmp_110_fu_706_p1 );

    SC_METHOD(thread_tmp_103_fu_718_p2);
    sensitive << ( tmp_100_reg_1288 );
    sensitive << ( tmp_102_fu_710_p3 );

    SC_METHOD(thread_tmp_104_fu_894_p1);
    sensitive << ( tmp_99_fu_888_p2 );

    SC_METHOD(thread_tmp_106_fu_913_p3);
    sensitive << ( tmp_136_fu_909_p1 );

    SC_METHOD(thread_tmp_108_fu_645_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_10_fu_1051_p3);
    sensitive << ( j_1_reg_495 );

    SC_METHOD(thread_tmp_110_fu_706_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_111_fu_921_p2);
    sensitive << ( tmp_105_reg_1308 );
    sensitive << ( tmp_106_fu_913_p3 );

    SC_METHOD(thread_tmp_112_fu_927_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_113_fu_933_p1);
    sensitive << ( tmp_112_fu_927_p2 );

    SC_METHOD(thread_tmp_114_fu_787_p3);
    sensitive << ( tmp_121_fu_783_p1 );

    SC_METHOD(thread_tmp_116_fu_949_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_117_fu_955_p1);
    sensitive << ( tmp_116_fu_949_p2 );

    SC_METHOD(thread_tmp_118_fu_795_p2);
    sensitive << ( tmp_109_reg_1298 );
    sensitive << ( tmp_114_fu_787_p3 );

    SC_METHOD(thread_tmp_119_fu_743_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_121_fu_783_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_122_fu_997_p3);
    sensitive << ( tmp_145_fu_987_p4 );
    sensitive << ( tmp_142_fu_982_p2 );

    SC_METHOD(thread_tmp_123_fu_1006_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_124_fu_1012_p1);
    sensitive << ( tmp_123_fu_1006_p2 );

    SC_METHOD(thread_tmp_125_fu_856_p3);
    sensitive << ( tmp_135_fu_852_p1 );

    SC_METHOD(thread_tmp_127_fu_1028_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_128_fu_1034_p1);
    sensitive << ( tmp_127_fu_1028_p2 );

    SC_METHOD(thread_tmp_130_fu_610_p2);
    sensitive << ( tmp_reg_1265 );
    sensitive << ( j_cast6_fu_594_p1 );

    SC_METHOD(thread_tmp_131_fu_615_p1);
    sensitive << ( tmp_130_fu_610_p2 );

    SC_METHOD(thread_tmp_132_fu_620_p1);
    sensitive << ( j_reg_483 );

    SC_METHOD(thread_tmp_133_fu_864_p2);
    sensitive << ( tmp_120_reg_1303 );
    sensitive << ( tmp_125_fu_856_p3 );

    SC_METHOD(thread_tmp_134_fu_869_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_135_fu_852_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_136_fu_909_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_137_fu_1104_p3);
    sensitive << ( grp_fu_560_p3 );
    sensitive << ( tmp_150_fu_1098_p2 );

    SC_METHOD(thread_tmp_140_fu_974_p3);
    sensitive << ( tmp_146_fu_970_p1 );

    SC_METHOD(thread_tmp_141_fu_1117_p3);
    sensitive << ( tmp_158_reg_1339 );

    SC_METHOD(thread_tmp_142_fu_982_p2);
    sensitive << ( tmp_138_reg_1313 );
    sensitive << ( tmp_140_fu_974_p3 );

    SC_METHOD(thread_tmp_144_fu_1124_p2);
    sensitive << ( grp_fu_528_p4 );
    sensitive << ( tmp_141_fu_1117_p3 );

    SC_METHOD(thread_tmp_145_fu_987_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_146_fu_970_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_148_fu_1090_p3);
    sensitive << ( tmp_153_fu_1086_p1 );

    SC_METHOD(thread_tmp_149_fu_1158_p3);
    sensitive << ( tmp_163_reg_1349 );
    sensitive << ( tmp_162_fu_1152_p2 );

    SC_METHOD(thread_tmp_150_fu_1098_p2);
    sensitive << ( grp_fu_550_p4 );
    sensitive << ( tmp_148_fu_1090_p3 );

    SC_METHOD(thread_tmp_152_fu_1181_p3);
    sensitive << ( tmp_164_reg_1354 );

    SC_METHOD(thread_tmp_153_fu_1086_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_154_fu_1188_p4);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_155_fu_1198_p2);
    sensitive << ( tmp_154_fu_1188_p4 );
    sensitive << ( tmp_152_fu_1181_p3 );

    SC_METHOD(thread_tmp_157_fu_1075_p1);
    sensitive << ( j_2_reg_507 );

    SC_METHOD(thread_tmp_158_fu_1113_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_159_fu_1131_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_160_fu_1135_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_161_fu_1145_p3);
    sensitive << ( tmp_159_reg_1344 );

    SC_METHOD(thread_tmp_162_fu_1152_p2);
    sensitive << ( tmp_161_fu_1145_p3 );
    sensitive << ( tmp_160_fu_1135_p4 );

    SC_METHOD(thread_tmp_164_fu_1177_p1);
    sensitive << ( t_q0 );

    SC_METHOD(thread_tmp_165_fu_1205_p1);
    sensitive << ( t_q1 );

    SC_METHOD(thread_tmp_53_fu_1059_p1);
    sensitive << ( tmp_10_fu_1051_p3 );

    SC_METHOD(thread_tmp_54_fu_1064_p1);
    sensitive << ( j_1_reg_495 );

    SC_METHOD(thread_tmp_55_fu_1045_p2);
    sensitive << ( j_1_reg_495 );

    SC_METHOD(thread_tmp_58_fu_630_p1);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_64_fu_657_p2);
    sensitive << ( tmp_85_fu_649_p3 );
    sensitive << ( tmp_s_fu_635_p4 );

    SC_METHOD(thread_tmp_65_fu_664_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_66_fu_670_p1);
    sensitive << ( tmp_65_fu_664_p2 );

    SC_METHOD(thread_tmp_69_fu_695_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_70_fu_701_p1);
    sensitive << ( tmp_69_fu_695_p2 );

    SC_METHOD(thread_tmp_75_fu_723_p3);
    sensitive << ( grp_fu_518_p4 );
    sensitive << ( tmp_103_fu_718_p2 );

    SC_METHOD(thread_tmp_76_fu_732_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_77_fu_738_p1);
    sensitive << ( tmp_76_fu_732_p2 );

    SC_METHOD(thread_tmp_82_fu_755_p2);
    sensitive << ( tmp_89_reg_1293 );
    sensitive << ( tmp_90_fu_747_p3 );

    SC_METHOD(thread_tmp_83_fu_761_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_84_fu_767_p1);
    sensitive << ( tmp_83_fu_761_p2 );

    SC_METHOD(thread_tmp_85_fu_649_p3);
    sensitive << ( tmp_108_fu_645_p1 );

    SC_METHOD(thread_tmp_87_fu_772_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_88_fu_778_p1);
    sensitive << ( tmp_87_fu_772_p2 );

    SC_METHOD(thread_tmp_90_fu_747_p3);
    sensitive << ( tmp_119_fu_743_p1 );

    SC_METHOD(thread_tmp_91_fu_800_p3);
    sensitive << ( grp_fu_560_p3 );
    sensitive << ( tmp_118_fu_795_p2 );

    SC_METHOD(thread_tmp_92_fu_809_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_93_fu_815_p1);
    sensitive << ( tmp_92_fu_809_p2 );

    SC_METHOD(thread_tmp_95_fu_831_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_96_fu_580_p2);
    sensitive << ( i_reg_460 );

    SC_METHOD(thread_tmp_97_fu_837_p1);
    sensitive << ( tmp_95_fu_831_p2 );

    SC_METHOD(thread_tmp_98_fu_879_p3);
    sensitive << ( tmp_134_fu_869_p4 );
    sensitive << ( tmp_133_fu_864_p2 );

    SC_METHOD(thread_tmp_99_fu_888_p2);
    sensitive << ( phi_mul_reg_471 );

    SC_METHOD(thread_tmp_fu_586_p3);
    sensitive << ( i_reg_460 );

    SC_METHOD(thread_tmp_s_fu_635_p4);
    sensitive << ( t_q0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_574_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_598_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( exitcond1_fu_1039_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_fu_1069_p2 );

    ap_CS_fsm = "000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "poly_Sq_tobytes_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, r_address0, "(port)r_address0");
    sc_trace(mVcdFile, r_ce0, "(port)r_ce0");
    sc_trace(mVcdFile, r_we0, "(port)r_we0");
    sc_trace(mVcdFile, r_d0, "(port)r_d0");
    sc_trace(mVcdFile, r_address1, "(port)r_address1");
    sc_trace(mVcdFile, r_ce1, "(port)r_ce1");
    sc_trace(mVcdFile, r_we1, "(port)r_we1");
    sc_trace(mVcdFile, r_d1, "(port)r_d1");
    sc_trace(mVcdFile, a_coeffs_address0, "(port)a_coeffs_address0");
    sc_trace(mVcdFile, a_coeffs_ce0, "(port)a_coeffs_ce0");
    sc_trace(mVcdFile, a_coeffs_q0, "(port)a_coeffs_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, next_mul_fu_568_p2, "next_mul_fu_568_p2");
    sc_trace(mVcdFile, next_mul_reg_1252, "next_mul_reg_1252");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_96_fu_580_p2, "tmp_96_fu_580_p2");
    sc_trace(mVcdFile, tmp_96_reg_1260, "tmp_96_reg_1260");
    sc_trace(mVcdFile, tmp_fu_586_p3, "tmp_fu_586_p3");
    sc_trace(mVcdFile, tmp_reg_1265, "tmp_reg_1265");
    sc_trace(mVcdFile, exitcond3_fu_574_p2, "exitcond3_fu_574_p2");
    sc_trace(mVcdFile, j_3_fu_604_p2, "j_3_fu_604_p2");
    sc_trace(mVcdFile, j_3_reg_1273, "j_3_reg_1273");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond2_fu_598_p2, "exitcond2_fu_598_p2");
    sc_trace(mVcdFile, tmp_68_reg_1283, "tmp_68_reg_1283");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_100_reg_1288, "tmp_100_reg_1288");
    sc_trace(mVcdFile, grp_fu_528_p4, "grp_fu_528_p4");
    sc_trace(mVcdFile, tmp_89_reg_1293, "tmp_89_reg_1293");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_550_p4, "grp_fu_550_p4");
    sc_trace(mVcdFile, tmp_109_reg_1298, "tmp_109_reg_1298");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_120_reg_1303, "tmp_120_reg_1303");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_105_reg_1308, "tmp_105_reg_1308");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_138_reg_1313, "tmp_138_reg_1313");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_55_fu_1045_p2, "tmp_55_fu_1045_p2");
    sc_trace(mVcdFile, tmp_55_reg_1321, "tmp_55_reg_1321");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, exitcond1_fu_1039_p2, "exitcond1_fu_1039_p2");
    sc_trace(mVcdFile, j_4_fu_1080_p2, "j_4_fu_1080_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, exitcond_fu_1069_p2, "exitcond_fu_1069_p2");
    sc_trace(mVcdFile, tmp_158_fu_1113_p1, "tmp_158_fu_1113_p1");
    sc_trace(mVcdFile, tmp_158_reg_1339, "tmp_158_reg_1339");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_159_fu_1131_p1, "tmp_159_fu_1131_p1");
    sc_trace(mVcdFile, tmp_159_reg_1344, "tmp_159_reg_1344");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_fu_518_p4, "grp_fu_518_p4");
    sc_trace(mVcdFile, tmp_163_reg_1349, "tmp_163_reg_1349");
    sc_trace(mVcdFile, tmp_164_fu_1177_p1, "tmp_164_fu_1177_p1");
    sc_trace(mVcdFile, tmp_164_reg_1354, "tmp_164_reg_1354");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, t_address0, "t_address0");
    sc_trace(mVcdFile, t_ce0, "t_ce0");
    sc_trace(mVcdFile, t_we0, "t_we0");
    sc_trace(mVcdFile, t_d0, "t_d0");
    sc_trace(mVcdFile, t_q0, "t_q0");
    sc_trace(mVcdFile, t_address1, "t_address1");
    sc_trace(mVcdFile, t_ce1, "t_ce1");
    sc_trace(mVcdFile, t_we1, "t_we1");
    sc_trace(mVcdFile, t_q1, "t_q1");
    sc_trace(mVcdFile, i_reg_460, "i_reg_460");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, phi_mul_reg_471, "phi_mul_reg_471");
    sc_trace(mVcdFile, j_reg_483, "j_reg_483");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_1_reg_495, "j_1_reg_495");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, j_2_reg_507, "j_2_reg_507");
    sc_trace(mVcdFile, tmp_131_fu_615_p1, "tmp_131_fu_615_p1");
    sc_trace(mVcdFile, tmp_132_fu_620_p1, "tmp_132_fu_620_p1");
    sc_trace(mVcdFile, tmp_58_fu_630_p1, "tmp_58_fu_630_p1");
    sc_trace(mVcdFile, tmp_66_fu_670_p1, "tmp_66_fu_670_p1");
    sc_trace(mVcdFile, tmp_70_fu_701_p1, "tmp_70_fu_701_p1");
    sc_trace(mVcdFile, tmp_77_fu_738_p1, "tmp_77_fu_738_p1");
    sc_trace(mVcdFile, tmp_84_fu_767_p1, "tmp_84_fu_767_p1");
    sc_trace(mVcdFile, tmp_88_fu_778_p1, "tmp_88_fu_778_p1");
    sc_trace(mVcdFile, tmp_93_fu_815_p1, "tmp_93_fu_815_p1");
    sc_trace(mVcdFile, tmp_97_fu_837_p1, "tmp_97_fu_837_p1");
    sc_trace(mVcdFile, tmp_104_fu_894_p1, "tmp_104_fu_894_p1");
    sc_trace(mVcdFile, tmp_113_fu_933_p1, "tmp_113_fu_933_p1");
    sc_trace(mVcdFile, tmp_117_fu_955_p1, "tmp_117_fu_955_p1");
    sc_trace(mVcdFile, tmp_124_fu_1012_p1, "tmp_124_fu_1012_p1");
    sc_trace(mVcdFile, tmp_128_fu_1034_p1, "tmp_128_fu_1034_p1");
    sc_trace(mVcdFile, tmp_53_fu_1059_p1, "tmp_53_fu_1059_p1");
    sc_trace(mVcdFile, tmp_54_fu_1064_p1, "tmp_54_fu_1064_p1");
    sc_trace(mVcdFile, tmp_157_fu_1075_p1, "tmp_157_fu_1075_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_101_fu_625_p1, "tmp_101_fu_625_p1");
    sc_trace(mVcdFile, tmp_64_fu_657_p2, "tmp_64_fu_657_p2");
    sc_trace(mVcdFile, tmp_75_fu_723_p3, "tmp_75_fu_723_p3");
    sc_trace(mVcdFile, tmp_82_fu_755_p2, "tmp_82_fu_755_p2");
    sc_trace(mVcdFile, tmp_91_fu_800_p3, "tmp_91_fu_800_p3");
    sc_trace(mVcdFile, tmp_98_fu_879_p3, "tmp_98_fu_879_p3");
    sc_trace(mVcdFile, tmp_111_fu_921_p2, "tmp_111_fu_921_p2");
    sc_trace(mVcdFile, tmp_122_fu_997_p3, "tmp_122_fu_997_p3");
    sc_trace(mVcdFile, tmp_137_fu_1104_p3, "tmp_137_fu_1104_p3");
    sc_trace(mVcdFile, tmp_144_fu_1124_p2, "tmp_144_fu_1124_p2");
    sc_trace(mVcdFile, tmp_149_fu_1158_p3, "tmp_149_fu_1158_p3");
    sc_trace(mVcdFile, tmp_155_fu_1198_p2, "tmp_155_fu_1198_p2");
    sc_trace(mVcdFile, tmp_165_fu_1205_p1, "tmp_165_fu_1205_p1");
    sc_trace(mVcdFile, j_cast6_fu_594_p1, "j_cast6_fu_594_p1");
    sc_trace(mVcdFile, tmp_130_fu_610_p2, "tmp_130_fu_610_p2");
    sc_trace(mVcdFile, tmp_108_fu_645_p1, "tmp_108_fu_645_p1");
    sc_trace(mVcdFile, tmp_85_fu_649_p3, "tmp_85_fu_649_p3");
    sc_trace(mVcdFile, tmp_s_fu_635_p4, "tmp_s_fu_635_p4");
    sc_trace(mVcdFile, tmp_65_fu_664_p2, "tmp_65_fu_664_p2");
    sc_trace(mVcdFile, tmp_69_fu_695_p2, "tmp_69_fu_695_p2");
    sc_trace(mVcdFile, tmp_110_fu_706_p1, "tmp_110_fu_706_p1");
    sc_trace(mVcdFile, tmp_102_fu_710_p3, "tmp_102_fu_710_p3");
    sc_trace(mVcdFile, tmp_103_fu_718_p2, "tmp_103_fu_718_p2");
    sc_trace(mVcdFile, tmp_76_fu_732_p2, "tmp_76_fu_732_p2");
    sc_trace(mVcdFile, tmp_119_fu_743_p1, "tmp_119_fu_743_p1");
    sc_trace(mVcdFile, tmp_90_fu_747_p3, "tmp_90_fu_747_p3");
    sc_trace(mVcdFile, tmp_83_fu_761_p2, "tmp_83_fu_761_p2");
    sc_trace(mVcdFile, tmp_87_fu_772_p2, "tmp_87_fu_772_p2");
    sc_trace(mVcdFile, tmp_121_fu_783_p1, "tmp_121_fu_783_p1");
    sc_trace(mVcdFile, tmp_114_fu_787_p3, "tmp_114_fu_787_p3");
    sc_trace(mVcdFile, grp_fu_560_p3, "grp_fu_560_p3");
    sc_trace(mVcdFile, tmp_118_fu_795_p2, "tmp_118_fu_795_p2");
    sc_trace(mVcdFile, tmp_92_fu_809_p2, "tmp_92_fu_809_p2");
    sc_trace(mVcdFile, tmp_95_fu_831_p2, "tmp_95_fu_831_p2");
    sc_trace(mVcdFile, tmp_135_fu_852_p1, "tmp_135_fu_852_p1");
    sc_trace(mVcdFile, tmp_125_fu_856_p3, "tmp_125_fu_856_p3");
    sc_trace(mVcdFile, tmp_134_fu_869_p4, "tmp_134_fu_869_p4");
    sc_trace(mVcdFile, tmp_133_fu_864_p2, "tmp_133_fu_864_p2");
    sc_trace(mVcdFile, tmp_99_fu_888_p2, "tmp_99_fu_888_p2");
    sc_trace(mVcdFile, tmp_136_fu_909_p1, "tmp_136_fu_909_p1");
    sc_trace(mVcdFile, tmp_106_fu_913_p3, "tmp_106_fu_913_p3");
    sc_trace(mVcdFile, tmp_112_fu_927_p2, "tmp_112_fu_927_p2");
    sc_trace(mVcdFile, tmp_116_fu_949_p2, "tmp_116_fu_949_p2");
    sc_trace(mVcdFile, tmp_146_fu_970_p1, "tmp_146_fu_970_p1");
    sc_trace(mVcdFile, tmp_140_fu_974_p3, "tmp_140_fu_974_p3");
    sc_trace(mVcdFile, tmp_145_fu_987_p4, "tmp_145_fu_987_p4");
    sc_trace(mVcdFile, tmp_142_fu_982_p2, "tmp_142_fu_982_p2");
    sc_trace(mVcdFile, tmp_123_fu_1006_p2, "tmp_123_fu_1006_p2");
    sc_trace(mVcdFile, tmp_127_fu_1028_p2, "tmp_127_fu_1028_p2");
    sc_trace(mVcdFile, tmp_10_fu_1051_p3, "tmp_10_fu_1051_p3");
    sc_trace(mVcdFile, tmp_153_fu_1086_p1, "tmp_153_fu_1086_p1");
    sc_trace(mVcdFile, tmp_148_fu_1090_p3, "tmp_148_fu_1090_p3");
    sc_trace(mVcdFile, tmp_150_fu_1098_p2, "tmp_150_fu_1098_p2");
    sc_trace(mVcdFile, tmp_141_fu_1117_p3, "tmp_141_fu_1117_p3");
    sc_trace(mVcdFile, tmp_161_fu_1145_p3, "tmp_161_fu_1145_p3");
    sc_trace(mVcdFile, tmp_160_fu_1135_p4, "tmp_160_fu_1135_p4");
    sc_trace(mVcdFile, tmp_162_fu_1152_p2, "tmp_162_fu_1152_p2");
    sc_trace(mVcdFile, tmp_154_fu_1188_p4, "tmp_154_fu_1188_p4");
    sc_trace(mVcdFile, tmp_152_fu_1181_p3, "tmp_152_fu_1181_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

poly_Sq_tobytes::~poly_Sq_tobytes() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete t_U;
}

void poly_Sq_tobytes::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_reg_460 = tmp_96_reg_1260.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_460 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_574_p2.read(), ap_const_lv1_1))) {
        j_1_reg_495 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        j_1_reg_495 = tmp_55_reg_1321.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_1039_p2.read(), ap_const_lv1_1))) {
        j_2_reg_507 = ap_const_lv4_4;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1069_p2.read()))) {
        j_2_reg_507 = j_4_fu_1080_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_574_p2.read(), ap_const_lv1_0))) {
        j_reg_483 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_483 = j_3_reg_1273.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        phi_mul_reg_471 = next_mul_reg_1252.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_471 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_3_reg_1273 = j_3_fu_604_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        next_mul_reg_1252 = next_mul_fu_568_p2.read();
        tmp_96_reg_1260 = tmp_96_fu_580_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_100_reg_1288 = t_q1.read().range(15, 11);
        tmp_68_reg_1283 = t_q1.read().range(10, 3);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_105_reg_1308 = t_q0.read().range(14, 7);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_109_reg_1298 = t_q0.read().range(15, 9);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_120_reg_1303 = t_q1.read().range(15, 12);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_138_reg_1313 = t_q1.read().range(15, 10);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_158_reg_1339 = tmp_158_fu_1113_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_159_reg_1344 = tmp_159_fu_1131_p1.read();
        tmp_163_reg_1349 = t_q1.read().range(5, 3);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_164_reg_1354 = tmp_164_fu_1177_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_55_reg_1321 = tmp_55_fu_1045_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_89_reg_1293 = t_q1.read().range(13, 6);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_574_p2.read(), ap_const_lv1_0))) {
        tmp_reg_1265 = tmp_fu_586_p3.read();
    }
}

void poly_Sq_tobytes::thread_a_coeffs_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_53_fu_1059_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        a_coeffs_address0 =  (sc_lv<10>) (tmp_131_fu_615_p1.read());
    } else {
        a_coeffs_address0 = "XXXXXXXXXX";
    }
}

void poly_Sq_tobytes::thread_a_coeffs_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        a_coeffs_ce0 = ap_const_logic_1;
    } else {
        a_coeffs_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void poly_Sq_tobytes::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void poly_Sq_tobytes::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_exitcond1_fu_1039_p2() {
    exitcond1_fu_1039_p2 = (!j_1_reg_495.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_495.read() == ap_const_lv3_4);
}

void poly_Sq_tobytes::thread_exitcond2_fu_598_p2() {
    exitcond2_fu_598_p2 = (!j_reg_483.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_483.read() == ap_const_lv4_8);
}

void poly_Sq_tobytes::thread_exitcond3_fu_574_p2() {
    exitcond3_fu_574_p2 = (!i_reg_460.read().is_01() || !ap_const_lv7_57.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_460.read() == ap_const_lv7_57);
}

void poly_Sq_tobytes::thread_exitcond_fu_1069_p2() {
    exitcond_fu_1069_p2 = (!j_2_reg_507.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_2_reg_507.read() == ap_const_lv4_8);
}

void poly_Sq_tobytes::thread_grp_fu_518_p4() {
    grp_fu_518_p4 = t_q1.read().range(5, 3);
}

void poly_Sq_tobytes::thread_grp_fu_528_p4() {
    grp_fu_528_p4 = t_q1.read().range(13, 6);
}

void poly_Sq_tobytes::thread_grp_fu_550_p4() {
    grp_fu_550_p4 = t_q0.read().range(15, 9);
}

void poly_Sq_tobytes::thread_grp_fu_560_p3() {
    grp_fu_560_p3 = t_q1.read().range(3, 3);
}

void poly_Sq_tobytes::thread_j_3_fu_604_p2() {
    j_3_fu_604_p2 = (!j_reg_483.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_483.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void poly_Sq_tobytes::thread_j_4_fu_1080_p2() {
    j_4_fu_1080_p2 = (!j_2_reg_507.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_2_reg_507.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void poly_Sq_tobytes::thread_j_cast6_fu_594_p1() {
    j_cast6_fu_594_p1 = esl_zext<10,4>(j_reg_483.read());
}

void poly_Sq_tobytes::thread_next_mul_fu_568_p2() {
    next_mul_fu_568_p2 = (!phi_mul_reg_471.read().is_01() || !ap_const_lv11_D.is_01())? sc_lv<11>(): (sc_biguint<11>(phi_mul_reg_471.read()) + sc_biguint<11>(ap_const_lv11_D));
}

void poly_Sq_tobytes::thread_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        r_address0 =  (sc_lv<11>) (ap_const_lv64_46C);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_address0 =  (sc_lv<11>) (ap_const_lv64_46E);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_address0 =  (sc_lv<11>) (ap_const_lv64_470);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_address0 =  (sc_lv<11>) (tmp_128_fu_1034_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_address0 =  (sc_lv<11>) (tmp_117_fu_955_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_address0 =  (sc_lv<11>) (tmp_104_fu_894_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_address0 =  (sc_lv<11>) (tmp_93_fu_815_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_address0 =  (sc_lv<11>) (tmp_84_fu_767_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_address0 =  (sc_lv<11>) (tmp_70_fu_701_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_address0 =  (sc_lv<11>) (tmp_58_fu_630_p1.read());
    } else {
        r_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        r_address1 =  (sc_lv<11>) (ap_const_lv64_46B);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_address1 =  (sc_lv<11>) (ap_const_lv64_46D);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        r_address1 =  (sc_lv<11>) (ap_const_lv64_46F);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_address1 =  (sc_lv<11>) (ap_const_lv64_471);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_address1 =  (sc_lv<11>) (tmp_124_fu_1012_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_address1 =  (sc_lv<11>) (tmp_113_fu_933_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_address1 =  (sc_lv<11>) (tmp_97_fu_837_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_address1 =  (sc_lv<11>) (tmp_88_fu_778_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_address1 =  (sc_lv<11>) (tmp_77_fu_738_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_address1 =  (sc_lv<11>) (tmp_66_fu_670_p1.read());
    } else {
        r_address1 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        r_ce0 = ap_const_logic_1;
    } else {
        r_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        r_ce1 = ap_const_logic_1;
    } else {
        r_ce1 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        r_d0 = tmp_155_fu_1198_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_d0 = tmp_149_fu_1158_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_d0 = t_q0.read().range(8, 1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_d0 = t_q0.read().range(12, 5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_d0 = t_q1.read().range(9, 2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        r_d0 = tmp_98_fu_879_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_d0 = tmp_91_fu_800_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_d0 = tmp_82_fu_755_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_d0 = tmp_68_reg_1283.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_d0 = tmp_101_fu_625_p1.read();
    } else {
        r_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_r_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        r_d1 = tmp_165_fu_1205_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        r_d1 = t_q0.read().range(10, 3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        r_d1 = tmp_144_fu_1124_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        r_d1 = tmp_137_fu_1104_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        r_d1 = tmp_122_fu_997_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        r_d1 = tmp_111_fu_921_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        r_d1 = t_q1.read().range(11, 4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_d1 = t_q0.read().range(8, 1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_d1 = tmp_75_fu_723_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        r_d1 = tmp_64_fu_657_p2.read();
    } else {
        r_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        r_we0 = ap_const_logic_1;
    } else {
        r_we0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_r_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        r_we1 = ap_const_logic_1;
    } else {
        r_we1 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_t_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1069_p2.read()))) {
        t_address0 =  (sc_lv<3>) (tmp_157_fu_1075_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                 esl_seteq<1,1,1>(exitcond_fu_1069_p2.read(), ap_const_lv1_1)))) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_address0 =  (sc_lv<3>) (tmp_132_fu_620_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else {
        t_address0 =  (sc_lv<3>) ("XXX");
    }
}

void poly_Sq_tobytes::thread_t_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        t_address1 =  (sc_lv<3>) (tmp_54_fu_1064_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else {
        t_address1 =  (sc_lv<3>) ("XXX");
    }
}

void poly_Sq_tobytes::thread_t_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1069_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_1069_p2.read(), ap_const_lv1_1)))) {
        t_ce0 = ap_const_logic_1;
    } else {
        t_ce0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_t_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        t_ce1 = ap_const_logic_1;
    } else {
        t_ce1 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_t_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1069_p2.read()))) {
        t_d0 = ap_const_lv16_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        t_d0 = a_coeffs_q0.read();
    } else {
        t_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void poly_Sq_tobytes::thread_t_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1069_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        t_we0 = ap_const_logic_1;
    } else {
        t_we0 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_t_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        t_we1 = ap_const_logic_1;
    } else {
        t_we1 = ap_const_logic_0;
    }
}

void poly_Sq_tobytes::thread_tmp_101_fu_625_p1() {
    tmp_101_fu_625_p1 = t_q0.read().range(8-1, 0);
}

void poly_Sq_tobytes::thread_tmp_102_fu_710_p3() {
    tmp_102_fu_710_p3 = esl_concat<3,2>(tmp_110_fu_706_p1.read(), ap_const_lv2_0);
}

void poly_Sq_tobytes::thread_tmp_103_fu_718_p2() {
    tmp_103_fu_718_p2 = (tmp_102_fu_710_p3.read() | tmp_100_reg_1288.read());
}

void poly_Sq_tobytes::thread_tmp_104_fu_894_p1() {
    tmp_104_fu_894_p1 = esl_zext<64,11>(tmp_99_fu_888_p2.read());
}

void poly_Sq_tobytes::thread_tmp_106_fu_913_p3() {
    tmp_106_fu_913_p3 = esl_concat<2,6>(tmp_136_fu_909_p1.read(), ap_const_lv6_0);
}

void poly_Sq_tobytes::thread_tmp_108_fu_645_p1() {
    tmp_108_fu_645_p1 = t_q1.read().range(3-1, 0);
}

void poly_Sq_tobytes::thread_tmp_10_fu_1051_p3() {
    tmp_10_fu_1051_p3 = esl_concat<7,3>(ap_const_lv7_57, j_1_reg_495.read());
}

void poly_Sq_tobytes::thread_tmp_110_fu_706_p1() {
    tmp_110_fu_706_p1 = t_q1.read().range(3-1, 0);
}

void poly_Sq_tobytes::thread_tmp_111_fu_921_p2() {
    tmp_111_fu_921_p2 = (tmp_106_fu_913_p3.read() | tmp_105_reg_1308.read());
}

void poly_Sq_tobytes::thread_tmp_112_fu_927_p2() {
    tmp_112_fu_927_p2 = (!ap_const_lv11_9.is_01() || !phi_mul_reg_471.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_9) + sc_biguint<11>(phi_mul_reg_471.read()));
}

void poly_Sq_tobytes::thread_tmp_113_fu_933_p1() {
    tmp_113_fu_933_p1 = esl_zext<64,11>(tmp_112_fu_927_p2.read());
}

void poly_Sq_tobytes::thread_tmp_114_fu_787_p3() {
    tmp_114_fu_787_p3 = esl_concat<3,4>(tmp_121_fu_783_p1.read(), ap_const_lv4_0);
}

void poly_Sq_tobytes::thread_tmp_116_fu_949_p2() {
    tmp_116_fu_949_p2 = (!ap_const_lv11_A.is_01() || !phi_mul_reg_471.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_A) + sc_biguint<11>(phi_mul_reg_471.read()));
}

void poly_Sq_tobytes::thread_tmp_117_fu_955_p1() {
    tmp_117_fu_955_p1 = esl_zext<64,11>(tmp_116_fu_949_p2.read());
}

void poly_Sq_tobytes::thread_tmp_118_fu_795_p2() {
    tmp_118_fu_795_p2 = (tmp_114_fu_787_p3.read() | tmp_109_reg_1298.read());
}

void poly_Sq_tobytes::thread_tmp_119_fu_743_p1() {
    tmp_119_fu_743_p1 = t_q0.read().range(1-1, 0);
}

void poly_Sq_tobytes::thread_tmp_121_fu_783_p1() {
    tmp_121_fu_783_p1 = t_q1.read().range(3-1, 0);
}

void poly_Sq_tobytes::thread_tmp_122_fu_997_p3() {
    tmp_122_fu_997_p3 = esl_concat<2,6>(tmp_145_fu_987_p4.read(), tmp_142_fu_982_p2.read());
}

void poly_Sq_tobytes::thread_tmp_123_fu_1006_p2() {
    tmp_123_fu_1006_p2 = (!ap_const_lv11_B.is_01() || !phi_mul_reg_471.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_B) + sc_biguint<11>(phi_mul_reg_471.read()));
}

void poly_Sq_tobytes::thread_tmp_124_fu_1012_p1() {
    tmp_124_fu_1012_p1 = esl_zext<64,11>(tmp_123_fu_1006_p2.read());
}

void poly_Sq_tobytes::thread_tmp_125_fu_856_p3() {
    tmp_125_fu_856_p3 = esl_concat<3,1>(tmp_135_fu_852_p1.read(), ap_const_lv1_0);
}

void poly_Sq_tobytes::thread_tmp_127_fu_1028_p2() {
    tmp_127_fu_1028_p2 = (!ap_const_lv11_C.is_01() || !phi_mul_reg_471.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_C) + sc_biguint<11>(phi_mul_reg_471.read()));
}

void poly_Sq_tobytes::thread_tmp_128_fu_1034_p1() {
    tmp_128_fu_1034_p1 = esl_zext<64,11>(tmp_127_fu_1028_p2.read());
}

void poly_Sq_tobytes::thread_tmp_130_fu_610_p2() {
    tmp_130_fu_610_p2 = (!tmp_reg_1265.read().is_01() || !j_cast6_fu_594_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_reg_1265.read()) + sc_biguint<10>(j_cast6_fu_594_p1.read()));
}

void poly_Sq_tobytes::thread_tmp_131_fu_615_p1() {
    tmp_131_fu_615_p1 = esl_zext<64,10>(tmp_130_fu_610_p2.read());
}

void poly_Sq_tobytes::thread_tmp_132_fu_620_p1() {
    tmp_132_fu_620_p1 = esl_zext<64,4>(j_reg_483.read());
}

void poly_Sq_tobytes::thread_tmp_133_fu_864_p2() {
    tmp_133_fu_864_p2 = (tmp_125_fu_856_p3.read() | tmp_120_reg_1303.read());
}

void poly_Sq_tobytes::thread_tmp_134_fu_869_p4() {
    tmp_134_fu_869_p4 = t_q0.read().range(6, 3);
}

void poly_Sq_tobytes::thread_tmp_135_fu_852_p1() {
    tmp_135_fu_852_p1 = t_q0.read().range(3-1, 0);
}

void poly_Sq_tobytes::thread_tmp_136_fu_909_p1() {
    tmp_136_fu_909_p1 = t_q1.read().range(2-1, 0);
}

void poly_Sq_tobytes::thread_tmp_137_fu_1104_p3() {
    tmp_137_fu_1104_p3 = esl_concat<1,7>(grp_fu_560_p3.read(), tmp_150_fu_1098_p2.read());
}

void poly_Sq_tobytes::thread_tmp_140_fu_974_p3() {
    tmp_140_fu_974_p3 = esl_concat<3,3>(tmp_146_fu_970_p1.read(), ap_const_lv3_0);
}

void poly_Sq_tobytes::thread_tmp_141_fu_1117_p3() {
    tmp_141_fu_1117_p3 = esl_concat<1,7>(tmp_158_reg_1339.read(), ap_const_lv7_0);
}

void poly_Sq_tobytes::thread_tmp_142_fu_982_p2() {
    tmp_142_fu_982_p2 = (tmp_140_fu_974_p3.read() | tmp_138_reg_1313.read());
}

void poly_Sq_tobytes::thread_tmp_144_fu_1124_p2() {
    tmp_144_fu_1124_p2 = (grp_fu_528_p4.read() | tmp_141_fu_1117_p3.read());
}

void poly_Sq_tobytes::thread_tmp_145_fu_987_p4() {
    tmp_145_fu_987_p4 = t_q0.read().range(4, 3);
}

void poly_Sq_tobytes::thread_tmp_146_fu_970_p1() {
    tmp_146_fu_970_p1 = t_q0.read().range(3-1, 0);
}

void poly_Sq_tobytes::thread_tmp_148_fu_1090_p3() {
    tmp_148_fu_1090_p3 = esl_concat<3,4>(tmp_153_fu_1086_p1.read(), ap_const_lv4_0);
}

void poly_Sq_tobytes::thread_tmp_149_fu_1158_p3() {
    tmp_149_fu_1158_p3 = esl_concat<3,5>(tmp_163_reg_1349.read(), tmp_162_fu_1152_p2.read());
}

void poly_Sq_tobytes::thread_tmp_150_fu_1098_p2() {
    tmp_150_fu_1098_p2 = (tmp_148_fu_1090_p3.read() | grp_fu_550_p4.read());
}

void poly_Sq_tobytes::thread_tmp_152_fu_1181_p3() {
    tmp_152_fu_1181_p3 = esl_concat<3,5>(tmp_164_reg_1354.read(), ap_const_lv5_0);
}

void poly_Sq_tobytes::thread_tmp_153_fu_1086_p1() {
    tmp_153_fu_1086_p1 = t_q1.read().range(3-1, 0);
}

void poly_Sq_tobytes::thread_tmp_154_fu_1188_p4() {
    tmp_154_fu_1188_p4 = t_q1.read().range(15, 8);
}

void poly_Sq_tobytes::thread_tmp_155_fu_1198_p2() {
    tmp_155_fu_1198_p2 = (tmp_154_fu_1188_p4.read() | tmp_152_fu_1181_p3.read());
}

void poly_Sq_tobytes::thread_tmp_157_fu_1075_p1() {
    tmp_157_fu_1075_p1 = esl_zext<64,4>(j_2_reg_507.read());
}

void poly_Sq_tobytes::thread_tmp_158_fu_1113_p1() {
    tmp_158_fu_1113_p1 = t_q0.read().range(1-1, 0);
}

void poly_Sq_tobytes::thread_tmp_159_fu_1131_p1() {
    tmp_159_fu_1131_p1 = t_q1.read().range(3-1, 0);
}

void poly_Sq_tobytes::thread_tmp_160_fu_1135_p4() {
    tmp_160_fu_1135_p4 = t_q0.read().range(15, 11);
}

void poly_Sq_tobytes::thread_tmp_161_fu_1145_p3() {
    tmp_161_fu_1145_p3 = esl_concat<3,2>(tmp_159_reg_1344.read(), ap_const_lv2_0);
}

void poly_Sq_tobytes::thread_tmp_162_fu_1152_p2() {
    tmp_162_fu_1152_p2 = (tmp_161_fu_1145_p3.read() | tmp_160_fu_1135_p4.read());
}

void poly_Sq_tobytes::thread_tmp_164_fu_1177_p1() {
    tmp_164_fu_1177_p1 = t_q0.read().range(3-1, 0);
}

void poly_Sq_tobytes::thread_tmp_165_fu_1205_p1() {
    tmp_165_fu_1205_p1 = t_q1.read().range(8-1, 0);
}

void poly_Sq_tobytes::thread_tmp_53_fu_1059_p1() {
    tmp_53_fu_1059_p1 = esl_zext<64,10>(tmp_10_fu_1051_p3.read());
}

void poly_Sq_tobytes::thread_tmp_54_fu_1064_p1() {
    tmp_54_fu_1064_p1 = esl_zext<64,3>(j_1_reg_495.read());
}

void poly_Sq_tobytes::thread_tmp_55_fu_1045_p2() {
    tmp_55_fu_1045_p2 = (!j_1_reg_495.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_1_reg_495.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void poly_Sq_tobytes::thread_tmp_58_fu_630_p1() {
    tmp_58_fu_630_p1 = esl_zext<64,11>(phi_mul_reg_471.read());
}

void poly_Sq_tobytes::thread_tmp_64_fu_657_p2() {
    tmp_64_fu_657_p2 = (tmp_85_fu_649_p3.read() | tmp_s_fu_635_p4.read());
}

void poly_Sq_tobytes::thread_tmp_65_fu_664_p2() {
    tmp_65_fu_664_p2 = (!ap_const_lv11_1.is_01() || !phi_mul_reg_471.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) + sc_biguint<11>(phi_mul_reg_471.read()));
}

void poly_Sq_tobytes::thread_tmp_66_fu_670_p1() {
    tmp_66_fu_670_p1 = esl_zext<64,11>(tmp_65_fu_664_p2.read());
}

void poly_Sq_tobytes::thread_tmp_69_fu_695_p2() {
    tmp_69_fu_695_p2 = (!ap_const_lv11_2.is_01() || !phi_mul_reg_471.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_2) + sc_biguint<11>(phi_mul_reg_471.read()));
}

void poly_Sq_tobytes::thread_tmp_70_fu_701_p1() {
    tmp_70_fu_701_p1 = esl_zext<64,11>(tmp_69_fu_695_p2.read());
}

void poly_Sq_tobytes::thread_tmp_75_fu_723_p3() {
    tmp_75_fu_723_p3 = esl_concat<3,5>(grp_fu_518_p4.read(), tmp_103_fu_718_p2.read());
}

void poly_Sq_tobytes::thread_tmp_76_fu_732_p2() {
    tmp_76_fu_732_p2 = (!ap_const_lv11_3.is_01() || !phi_mul_reg_471.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3) + sc_biguint<11>(phi_mul_reg_471.read()));
}

void poly_Sq_tobytes::thread_tmp_77_fu_738_p1() {
    tmp_77_fu_738_p1 = esl_zext<64,11>(tmp_76_fu_732_p2.read());
}

void poly_Sq_tobytes::thread_tmp_82_fu_755_p2() {
    tmp_82_fu_755_p2 = (tmp_90_fu_747_p3.read() | tmp_89_reg_1293.read());
}

void poly_Sq_tobytes::thread_tmp_83_fu_761_p2() {
    tmp_83_fu_761_p2 = (!ap_const_lv11_4.is_01() || !phi_mul_reg_471.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_4) + sc_biguint<11>(phi_mul_reg_471.read()));
}

void poly_Sq_tobytes::thread_tmp_84_fu_767_p1() {
    tmp_84_fu_767_p1 = esl_zext<64,11>(tmp_83_fu_761_p2.read());
}

void poly_Sq_tobytes::thread_tmp_85_fu_649_p3() {
    tmp_85_fu_649_p3 = esl_concat<3,5>(tmp_108_fu_645_p1.read(), ap_const_lv5_0);
}

void poly_Sq_tobytes::thread_tmp_87_fu_772_p2() {
    tmp_87_fu_772_p2 = (!ap_const_lv11_5.is_01() || !phi_mul_reg_471.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_5) + sc_biguint<11>(phi_mul_reg_471.read()));
}

void poly_Sq_tobytes::thread_tmp_88_fu_778_p1() {
    tmp_88_fu_778_p1 = esl_zext<64,11>(tmp_87_fu_772_p2.read());
}

void poly_Sq_tobytes::thread_tmp_90_fu_747_p3() {
    tmp_90_fu_747_p3 = esl_concat<1,7>(tmp_119_fu_743_p1.read(), ap_const_lv7_0);
}

void poly_Sq_tobytes::thread_tmp_91_fu_800_p3() {
    tmp_91_fu_800_p3 = esl_concat<1,7>(grp_fu_560_p3.read(), tmp_118_fu_795_p2.read());
}

void poly_Sq_tobytes::thread_tmp_92_fu_809_p2() {
    tmp_92_fu_809_p2 = (!ap_const_lv11_6.is_01() || !phi_mul_reg_471.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_6) + sc_biguint<11>(phi_mul_reg_471.read()));
}

void poly_Sq_tobytes::thread_tmp_93_fu_815_p1() {
    tmp_93_fu_815_p1 = esl_zext<64,11>(tmp_92_fu_809_p2.read());
}

void poly_Sq_tobytes::thread_tmp_95_fu_831_p2() {
    tmp_95_fu_831_p2 = (!ap_const_lv11_7.is_01() || !phi_mul_reg_471.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_7) + sc_biguint<11>(phi_mul_reg_471.read()));
}

void poly_Sq_tobytes::thread_tmp_96_fu_580_p2() {
    tmp_96_fu_580_p2 = (!i_reg_460.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_reg_460.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void poly_Sq_tobytes::thread_tmp_97_fu_837_p1() {
    tmp_97_fu_837_p1 = esl_zext<64,11>(tmp_95_fu_831_p2.read());
}

void poly_Sq_tobytes::thread_tmp_98_fu_879_p3() {
    tmp_98_fu_879_p3 = esl_concat<4,4>(tmp_134_fu_869_p4.read(), tmp_133_fu_864_p2.read());
}

void poly_Sq_tobytes::thread_tmp_99_fu_888_p2() {
    tmp_99_fu_888_p2 = (!ap_const_lv11_8.is_01() || !phi_mul_reg_471.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_8) + sc_biguint<11>(phi_mul_reg_471.read()));
}

void poly_Sq_tobytes::thread_tmp_fu_586_p3() {
    tmp_fu_586_p3 = esl_concat<7,3>(i_reg_460.read(), ap_const_lv3_0);
}

void poly_Sq_tobytes::thread_tmp_s_fu_635_p4() {
    tmp_s_fu_635_p4 = t_q0.read().range(15, 8);
}

void poly_Sq_tobytes::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_574_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_598_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(exitcond1_fu_1039_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1069_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

