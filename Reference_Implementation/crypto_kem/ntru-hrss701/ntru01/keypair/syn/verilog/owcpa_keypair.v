// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module owcpa_keypair (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pk_address0,
        pk_ce0,
        pk_we0,
        pk_d0,
        pk_address1,
        pk_ce1,
        pk_we1,
        pk_d1,
        sk_address0,
        sk_ce0,
        sk_we0,
        sk_d0,
        sk_address1,
        sk_ce1,
        sk_we1,
        sk_d1,
        seed_address0,
        seed_ce0,
        seed_q0
);

parameter    ap_ST_fsm_state1 = 59'd1;
parameter    ap_ST_fsm_state2 = 59'd2;
parameter    ap_ST_fsm_state3 = 59'd4;
parameter    ap_ST_fsm_state4 = 59'd8;
parameter    ap_ST_fsm_state5 = 59'd16;
parameter    ap_ST_fsm_state6 = 59'd32;
parameter    ap_ST_fsm_state7 = 59'd64;
parameter    ap_ST_fsm_state8 = 59'd128;
parameter    ap_ST_fsm_state9 = 59'd256;
parameter    ap_ST_fsm_state10 = 59'd512;
parameter    ap_ST_fsm_state11 = 59'd1024;
parameter    ap_ST_fsm_state12 = 59'd2048;
parameter    ap_ST_fsm_state13 = 59'd4096;
parameter    ap_ST_fsm_state14 = 59'd8192;
parameter    ap_ST_fsm_state15 = 59'd16384;
parameter    ap_ST_fsm_state16 = 59'd32768;
parameter    ap_ST_fsm_state17 = 59'd65536;
parameter    ap_ST_fsm_state18 = 59'd131072;
parameter    ap_ST_fsm_state19 = 59'd262144;
parameter    ap_ST_fsm_state20 = 59'd524288;
parameter    ap_ST_fsm_state21 = 59'd1048576;
parameter    ap_ST_fsm_state22 = 59'd2097152;
parameter    ap_ST_fsm_state23 = 59'd4194304;
parameter    ap_ST_fsm_state24 = 59'd8388608;
parameter    ap_ST_fsm_state25 = 59'd16777216;
parameter    ap_ST_fsm_state26 = 59'd33554432;
parameter    ap_ST_fsm_state27 = 59'd67108864;
parameter    ap_ST_fsm_state28 = 59'd134217728;
parameter    ap_ST_fsm_state29 = 59'd268435456;
parameter    ap_ST_fsm_state30 = 59'd536870912;
parameter    ap_ST_fsm_state31 = 59'd1073741824;
parameter    ap_ST_fsm_state32 = 59'd2147483648;
parameter    ap_ST_fsm_state33 = 59'd4294967296;
parameter    ap_ST_fsm_state34 = 59'd8589934592;
parameter    ap_ST_fsm_state35 = 59'd17179869184;
parameter    ap_ST_fsm_state36 = 59'd34359738368;
parameter    ap_ST_fsm_state37 = 59'd68719476736;
parameter    ap_ST_fsm_state38 = 59'd137438953472;
parameter    ap_ST_fsm_state39 = 59'd274877906944;
parameter    ap_ST_fsm_state40 = 59'd549755813888;
parameter    ap_ST_fsm_state41 = 59'd1099511627776;
parameter    ap_ST_fsm_state42 = 59'd2199023255552;
parameter    ap_ST_fsm_state43 = 59'd4398046511104;
parameter    ap_ST_fsm_state44 = 59'd8796093022208;
parameter    ap_ST_fsm_state45 = 59'd17592186044416;
parameter    ap_ST_fsm_state46 = 59'd35184372088832;
parameter    ap_ST_fsm_state47 = 59'd70368744177664;
parameter    ap_ST_fsm_state48 = 59'd140737488355328;
parameter    ap_ST_fsm_state49 = 59'd281474976710656;
parameter    ap_ST_fsm_state50 = 59'd562949953421312;
parameter    ap_ST_fsm_state51 = 59'd1125899906842624;
parameter    ap_ST_fsm_state52 = 59'd2251799813685248;
parameter    ap_ST_fsm_state53 = 59'd4503599627370496;
parameter    ap_ST_fsm_state54 = 59'd9007199254740992;
parameter    ap_ST_fsm_state55 = 59'd18014398509481984;
parameter    ap_ST_fsm_state56 = 59'd36028797018963968;
parameter    ap_ST_fsm_state57 = 59'd72057594037927936;
parameter    ap_ST_fsm_state58 = 59'd144115188075855872;
parameter    ap_ST_fsm_state59 = 59'd288230376151711744;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] pk_address0;
output   pk_ce0;
output   pk_we0;
output  [7:0] pk_d0;
output  [10:0] pk_address1;
output   pk_ce1;
output   pk_we1;
output  [7:0] pk_d1;
output  [10:0] sk_address0;
output   sk_ce0;
output   sk_we0;
output  [7:0] sk_d0;
output  [10:0] sk_address1;
output   sk_ce1;
output   sk_we1;
output  [7:0] sk_d1;
output  [10:0] seed_address0;
output   seed_ce0;
input  [7:0] seed_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] sk_address0;
reg sk_ce0;
reg sk_we0;
reg[7:0] sk_d0;
reg sk_ce1;
reg sk_we1;
reg seed_ce0;

(* fsm_encoding = "none" *) reg   [58:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] i_33_fu_395_p2;
reg   [9:0] i_33_reg_686;
wire    ap_CS_fsm_state9;
reg   [9:0] f_coeffs_addr_reg_691;
wire   [0:0] exitcond_i_fu_389_p2;
wire   [9:0] i_34_fu_457_p2;
reg   [9:0] i_34_reg_699;
wire    ap_CS_fsm_state11;
reg   [9:0] h_coeffs_addr_1_reg_704;
wire   [0:0] exitcond_i6_fu_451_p2;
wire   [9:0] h_coeffs_addr_reg_709;
wire   [15:0] x3_coeffs_q0;
reg   [15:0] last_coeff_reg_714;
wire    ap_CS_fsm_state13;
wire   [9:0] i_35_fu_519_p2;
reg   [9:0] i_35_reg_722;
wire    ap_CS_fsm_state14;
wire   [0:0] tmp_i2_fu_513_p2;
wire   [63:0] tmp_229_i_fu_530_p1;
reg   [63:0] tmp_229_i_reg_732;
wire   [9:0] i_36_fu_570_p2;
reg   [9:0] i_36_reg_750;
wire    ap_CS_fsm_state17;
reg   [9:0] G_coeffs_addr_2_reg_755;
wire   [0:0] exitcond_fu_564_p2;
wire   [9:0] i_37_fu_608_p2;
reg   [9:0] i_37_reg_763;
wire    ap_CS_fsm_state22;
wire   [63:0] tmp_i4_76_fu_614_p1;
reg   [63:0] tmp_i4_76_reg_768;
wire   [0:0] exitcond1_i_fu_602_p2;
wire   [9:0] i_38_fu_640_p2;
reg   [9:0] i_38_reg_781;
wire    ap_CS_fsm_state24;
wire   [63:0] tmp_252_i_fu_646_p1;
reg   [63:0] tmp_252_i_reg_786;
wire   [0:0] exitcond_i7_fu_634_p2;
wire   [9:0] c_coeffs_addr_reg_796;
wire    ap_CS_fsm_state27;
wire   [9:0] i_39_fu_657_p2;
reg   [9:0] i_39_reg_804;
wire    ap_CS_fsm_state53;
reg   [9:0] h_coeffs_addr_6_reg_809;
wire   [0:0] exitcond_i2_fu_651_p2;
reg   [9:0] b_coeffs_address0;
reg    b_coeffs_ce0;
reg    b_coeffs_we0;
wire   [15:0] b_coeffs_d0;
wire   [15:0] b_coeffs_q0;
reg   [9:0] c_coeffs_address0;
reg    c_coeffs_ce0;
reg    c_coeffs_we0;
reg   [15:0] c_coeffs_d0;
wire   [15:0] c_coeffs_q0;
reg   [9:0] s_coeffs_address0;
reg    s_coeffs_ce0;
reg    s_coeffs_we0;
wire   [15:0] s_coeffs_q0;
reg   [9:0] ai2_coeffs_address0;
reg    ai2_coeffs_ce0;
reg   [1:0] ai2_coeffs_we0;
wire   [15:0] ai2_coeffs_q0;
reg   [9:0] x1_coeffs_address0;
reg    x1_coeffs_ce0;
reg    x1_coeffs_we0;
reg   [15:0] x1_coeffs_d0;
wire   [15:0] x1_coeffs_q0;
reg   [9:0] x1_coeffs_address1;
reg    x1_coeffs_ce1;
reg    x1_coeffs_we1;
wire   [15:0] x1_coeffs_q1;
reg   [9:0] x2_coeffs_address0;
reg    x2_coeffs_ce0;
reg   [1:0] x2_coeffs_we0;
reg   [15:0] x2_coeffs_d0;
wire   [15:0] x2_coeffs_q0;
reg   [9:0] x2_coeffs_address1;
reg    x2_coeffs_ce1;
reg   [1:0] x2_coeffs_we1;
wire   [15:0] x2_coeffs_q1;
reg   [9:0] x3_coeffs_address0;
reg    x3_coeffs_ce0;
reg    x3_coeffs_we0;
reg   [15:0] x3_coeffs_d0;
reg   [9:0] x3_coeffs_address1;
reg    x3_coeffs_ce1;
reg    x3_coeffs_we1;
reg   [15:0] x3_coeffs_d1;
wire   [15:0] x3_coeffs_q1;
reg   [9:0] x4_coeffs_address0;
reg    x4_coeffs_ce0;
reg    x4_coeffs_we0;
reg   [15:0] x4_coeffs_d0;
wire   [15:0] x4_coeffs_q0;
reg   [9:0] x5_coeffs_address0;
reg    x5_coeffs_ce0;
reg    x5_coeffs_we0;
wire   [15:0] x5_coeffs_q0;
wire    grp_poly_S3_inv_fu_328_ap_start;
wire    grp_poly_S3_inv_fu_328_ap_done;
wire    grp_poly_S3_inv_fu_328_ap_idle;
wire    grp_poly_S3_inv_fu_328_ap_ready;
wire   [9:0] grp_poly_S3_inv_fu_328_r_coeffs_address0;
wire    grp_poly_S3_inv_fu_328_r_coeffs_ce0;
wire   [1:0] grp_poly_S3_inv_fu_328_r_coeffs_we0;
wire   [15:0] grp_poly_S3_inv_fu_328_r_coeffs_d0;
wire   [9:0] grp_poly_S3_inv_fu_328_r_coeffs_address1;
wire    grp_poly_S3_inv_fu_328_r_coeffs_ce1;
wire   [1:0] grp_poly_S3_inv_fu_328_r_coeffs_we1;
wire   [15:0] grp_poly_S3_inv_fu_328_r_coeffs_d1;
wire   [9:0] grp_poly_S3_inv_fu_328_a_coeffs_address0;
wire    grp_poly_S3_inv_fu_328_a_coeffs_ce0;
wire    grp_poly_R2_inv_fu_334_ap_start;
wire    grp_poly_R2_inv_fu_334_ap_done;
wire    grp_poly_R2_inv_fu_334_ap_idle;
wire    grp_poly_R2_inv_fu_334_ap_ready;
wire   [9:0] grp_poly_R2_inv_fu_334_r_coeffs_address0;
wire    grp_poly_R2_inv_fu_334_r_coeffs_ce0;
wire   [1:0] grp_poly_R2_inv_fu_334_r_coeffs_we0;
wire   [15:0] grp_poly_R2_inv_fu_334_r_coeffs_d0;
wire   [9:0] grp_poly_R2_inv_fu_334_a_coeffs_address0;
wire    grp_poly_R2_inv_fu_334_a_coeffs_ce0;
wire    grp_poly_Sq_tobytes_1_fu_340_ap_start;
wire    grp_poly_Sq_tobytes_1_fu_340_ap_done;
wire    grp_poly_Sq_tobytes_1_fu_340_ap_idle;
wire    grp_poly_Sq_tobytes_1_fu_340_ap_ready;
wire   [10:0] grp_poly_Sq_tobytes_1_fu_340_r_address0;
wire    grp_poly_Sq_tobytes_1_fu_340_r_ce0;
wire    grp_poly_Sq_tobytes_1_fu_340_r_we0;
wire   [7:0] grp_poly_Sq_tobytes_1_fu_340_r_d0;
wire   [10:0] grp_poly_Sq_tobytes_1_fu_340_r_address1;
wire    grp_poly_Sq_tobytes_1_fu_340_r_ce1;
wire    grp_poly_Sq_tobytes_1_fu_340_r_we1;
wire   [7:0] grp_poly_Sq_tobytes_1_fu_340_r_d1;
wire   [9:0] grp_poly_Sq_tobytes_1_fu_340_a_coeffs_address0;
wire    grp_poly_Sq_tobytes_1_fu_340_a_coeffs_ce0;
wire    grp_poly_Sq_tobytes_fu_347_ap_start;
wire    grp_poly_Sq_tobytes_fu_347_ap_done;
wire    grp_poly_Sq_tobytes_fu_347_ap_idle;
wire    grp_poly_Sq_tobytes_fu_347_ap_ready;
wire   [10:0] grp_poly_Sq_tobytes_fu_347_r_address0;
wire    grp_poly_Sq_tobytes_fu_347_r_ce0;
wire    grp_poly_Sq_tobytes_fu_347_r_we0;
wire   [7:0] grp_poly_Sq_tobytes_fu_347_r_d0;
wire   [10:0] grp_poly_Sq_tobytes_fu_347_r_address1;
wire    grp_poly_Sq_tobytes_fu_347_r_ce1;
wire    grp_poly_Sq_tobytes_fu_347_r_we1;
wire   [7:0] grp_poly_Sq_tobytes_fu_347_r_d1;
wire   [9:0] grp_poly_Sq_tobytes_fu_347_a_coeffs_address0;
wire    grp_poly_Sq_tobytes_fu_347_a_coeffs_ce0;
wire    grp_sample_iid_plus_fu_354_ap_start;
wire    grp_sample_iid_plus_fu_354_ap_done;
wire    grp_sample_iid_plus_fu_354_ap_idle;
wire    grp_sample_iid_plus_fu_354_ap_ready;
wire   [9:0] grp_sample_iid_plus_fu_354_r_coeffs_address0;
wire    grp_sample_iid_plus_fu_354_r_coeffs_ce0;
wire    grp_sample_iid_plus_fu_354_r_coeffs_we0;
wire   [15:0] grp_sample_iid_plus_fu_354_r_coeffs_d0;
reg   [15:0] grp_sample_iid_plus_fu_354_r_coeffs_q0;
wire   [9:0] grp_sample_iid_plus_fu_354_r_coeffs_address1;
wire    grp_sample_iid_plus_fu_354_r_coeffs_ce1;
wire    grp_sample_iid_plus_fu_354_r_coeffs_we1;
wire   [15:0] grp_sample_iid_plus_fu_354_r_coeffs_d1;
reg   [15:0] grp_sample_iid_plus_fu_354_r_coeffs_q1;
wire   [10:0] grp_sample_iid_plus_fu_354_uniformbytes_address0;
wire    grp_sample_iid_plus_fu_354_uniformbytes_ce0;
reg   [11:0] grp_sample_iid_plus_fu_354_uniformbytes_offset;
wire    grp_poly_Rq_mul_fu_365_ap_start;
wire    grp_poly_Rq_mul_fu_365_ap_done;
wire    grp_poly_Rq_mul_fu_365_ap_idle;
wire    grp_poly_Rq_mul_fu_365_ap_ready;
wire   [9:0] grp_poly_Rq_mul_fu_365_r_coeffs_address0;
wire    grp_poly_Rq_mul_fu_365_r_coeffs_ce0;
wire    grp_poly_Rq_mul_fu_365_r_coeffs_we0;
wire   [15:0] grp_poly_Rq_mul_fu_365_r_coeffs_d0;
reg   [15:0] grp_poly_Rq_mul_fu_365_r_coeffs_q0;
wire   [9:0] grp_poly_Rq_mul_fu_365_a_coeffs_address0;
wire    grp_poly_Rq_mul_fu_365_a_coeffs_ce0;
reg   [15:0] grp_poly_Rq_mul_fu_365_a_coeffs_q0;
wire   [9:0] grp_poly_Rq_mul_fu_365_b_coeffs_address0;
wire    grp_poly_Rq_mul_fu_365_b_coeffs_ce0;
reg   [15:0] grp_poly_Rq_mul_fu_365_b_coeffs_q0;
wire    grp_poly_S3_tobytes_fu_372_ap_start;
wire    grp_poly_S3_tobytes_fu_372_ap_done;
wire    grp_poly_S3_tobytes_fu_372_ap_idle;
wire    grp_poly_S3_tobytes_fu_372_ap_ready;
wire   [10:0] grp_poly_S3_tobytes_fu_372_msg_address0;
wire    grp_poly_S3_tobytes_fu_372_msg_ce0;
wire    grp_poly_S3_tobytes_fu_372_msg_we0;
wire   [7:0] grp_poly_S3_tobytes_fu_372_msg_d0;
reg   [9:0] grp_poly_S3_tobytes_fu_372_msg_offset;
wire   [9:0] grp_poly_S3_tobytes_fu_372_a_coeffs_address0;
wire    grp_poly_S3_tobytes_fu_372_a_coeffs_ce0;
reg   [15:0] grp_poly_S3_tobytes_fu_372_a_coeffs_q0;
wire   [9:0] grp_poly_S3_tobytes_fu_372_a_coeffs_address1;
wire    grp_poly_S3_tobytes_fu_372_a_coeffs_ce1;
reg   [15:0] grp_poly_S3_tobytes_fu_372_a_coeffs_q1;
reg   [9:0] i_i_reg_251;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
reg   [9:0] i_i5_reg_262;
wire    ap_CS_fsm_state12;
reg   [9:0] i_i2_reg_273;
wire    ap_CS_fsm_state15;
reg   [9:0] i_reg_284;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
reg   [9:0] i_i1_reg_295;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
reg   [9:0] i_1_i_reg_306;
wire    ap_CS_fsm_state25;
reg   [9:0] i_i3_reg_317;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state54;
reg    grp_poly_S3_inv_fu_328_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_poly_R2_inv_fu_334_ap_start_reg;
wire    ap_CS_fsm_state20;
reg    grp_poly_Sq_tobytes_1_fu_340_ap_start_reg;
wire    ap_CS_fsm_state55;
reg    grp_poly_Sq_tobytes_fu_347_ap_start_reg;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
reg    grp_sample_iid_plus_fu_354_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_poly_Rq_mul_fu_365_ap_start_reg;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state57;
reg    grp_poly_S3_tobytes_fu_372_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state6;
wire   [63:0] tmp_i_fu_401_p1;
wire   [63:0] tmp_i7_fu_463_p1;
wire   [63:0] tmp_i4_fu_525_p1;
wire   [63:0] tmp_s_fu_576_p1;
wire   [63:0] tmp_i3_fu_663_p1;
wire   [15:0] tmp_40_i_fu_442_p3;
wire   [15:0] tmp_40_i1_fu_504_p3;
wire   [15:0] tmp_158_i_cast_fu_678_p1;
wire   [15:0] tmp_231_i_cast_fu_545_p1;
wire   [15:0] tmp_233_i_cast_fu_559_p1;
wire   [15:0] tmp_296_cast_fu_597_p1;
wire    ap_CS_fsm_state28;
wire   [15:0] grp_fu_382_p2;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire   [12:0] tmp_fu_406_p4;
wire   [12:0] tmp_336_fu_422_p1;
wire   [12:0] tmp_38_i_cast_fu_416_p2;
wire   [2:0] tmp_40_fu_432_p4;
wire   [12:0] tmp_39_fu_426_p2;
wire   [12:0] tmp_41_fu_468_p4;
wire   [12:0] tmp_337_fu_484_p1;
wire   [12:0] tmp_38_i1_cast_fu_478_p2;
wire   [2:0] tmp_44_fu_494_p4;
wire   [12:0] tmp_43_fu_488_p2;
wire   [15:0] tmp_230_i_fu_535_p2;
wire   [12:0] tmp_339_fu_541_p1;
wire   [15:0] tmp_232_i_fu_550_p2;
wire   [12:0] tmp_338_fu_555_p1;
wire   [15:0] tmp_340_fu_581_p2;
wire   [15:0] tmp_242_fu_587_p2;
wire   [12:0] tmp_341_fu_593_p1;
wire   [12:0] tmp_342_fu_619_p1;
wire   [12:0] tmp_i6_cast_fu_623_p2;
wire   [15:0] tmp_i5_fu_668_p2;
wire   [12:0] tmp_343_fu_674_p1;
reg   [58:0] ap_NS_fsm;
reg    ap_block_state4_on_subcall_done;
reg    ap_block_state55_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 59'd1;
#0 grp_poly_S3_inv_fu_328_ap_start_reg = 1'b0;
#0 grp_poly_R2_inv_fu_334_ap_start_reg = 1'b0;
#0 grp_poly_Sq_tobytes_1_fu_340_ap_start_reg = 1'b0;
#0 grp_poly_Sq_tobytes_fu_347_ap_start_reg = 1'b0;
#0 grp_sample_iid_plus_fu_354_ap_start_reg = 1'b0;
#0 grp_poly_Rq_mul_fu_365_ap_start_reg = 1'b0;
#0 grp_poly_S3_tobytes_fu_372_ap_start_reg = 1'b0;
end

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
b_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_coeffs_address0),
    .ce0(b_coeffs_ce0),
    .we0(b_coeffs_we0),
    .d0(b_coeffs_d0),
    .q0(b_coeffs_q0)
);

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
c_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(c_coeffs_address0),
    .ce0(c_coeffs_ce0),
    .we0(c_coeffs_we0),
    .d0(c_coeffs_d0),
    .q0(c_coeffs_q0)
);

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
s_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(s_coeffs_address0),
    .ce0(s_coeffs_ce0),
    .we0(s_coeffs_we0),
    .d0(grp_poly_Rq_mul_fu_365_r_coeffs_d0),
    .q0(s_coeffs_q0)
);

owcpa_keypair_ai2_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
ai2_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ai2_coeffs_address0),
    .ce0(ai2_coeffs_ce0),
    .we0(ai2_coeffs_we0),
    .d0(grp_poly_R2_inv_fu_334_r_coeffs_d0),
    .q0(ai2_coeffs_q0)
);

owcpa_keypair_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
x1_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x1_coeffs_address0),
    .ce0(x1_coeffs_ce0),
    .we0(x1_coeffs_we0),
    .d0(x1_coeffs_d0),
    .q0(x1_coeffs_q0),
    .address1(x1_coeffs_address1),
    .ce1(x1_coeffs_ce1),
    .we1(x1_coeffs_we1),
    .d1(grp_sample_iid_plus_fu_354_r_coeffs_d1),
    .q1(x1_coeffs_q1)
);

owcpa_keypair_x2_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
x2_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x2_coeffs_address0),
    .ce0(x2_coeffs_ce0),
    .we0(x2_coeffs_we0),
    .d0(x2_coeffs_d0),
    .q0(x2_coeffs_q0),
    .address1(x2_coeffs_address1),
    .ce1(x2_coeffs_ce1),
    .we1(x2_coeffs_we1),
    .d1(grp_poly_S3_inv_fu_328_r_coeffs_d1),
    .q1(x2_coeffs_q1)
);

owcpa_keypair_x1_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
x3_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x3_coeffs_address0),
    .ce0(x3_coeffs_ce0),
    .we0(x3_coeffs_we0),
    .d0(x3_coeffs_d0),
    .q0(x3_coeffs_q0),
    .address1(x3_coeffs_address1),
    .ce1(x3_coeffs_ce1),
    .we1(x3_coeffs_we1),
    .d1(x3_coeffs_d1),
    .q1(x3_coeffs_q1)
);

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
x4_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x4_coeffs_address0),
    .ce0(x4_coeffs_ce0),
    .we0(x4_coeffs_we0),
    .d0(x4_coeffs_d0),
    .q0(x4_coeffs_q0)
);

poly_S3_inv_b_coeffs #(
    .DataWidth( 16 ),
    .AddressRange( 701 ),
    .AddressWidth( 10 ))
x5_coeffs_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x5_coeffs_address0),
    .ce0(x5_coeffs_ce0),
    .we0(x5_coeffs_we0),
    .d0(grp_poly_Rq_mul_fu_365_r_coeffs_d0),
    .q0(x5_coeffs_q0)
);

poly_S3_inv grp_poly_S3_inv_fu_328(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_inv_fu_328_ap_start),
    .ap_done(grp_poly_S3_inv_fu_328_ap_done),
    .ap_idle(grp_poly_S3_inv_fu_328_ap_idle),
    .ap_ready(grp_poly_S3_inv_fu_328_ap_ready),
    .r_coeffs_address0(grp_poly_S3_inv_fu_328_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_S3_inv_fu_328_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_S3_inv_fu_328_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_S3_inv_fu_328_r_coeffs_d0),
    .r_coeffs_q0(x2_coeffs_q0),
    .r_coeffs_address1(grp_poly_S3_inv_fu_328_r_coeffs_address1),
    .r_coeffs_ce1(grp_poly_S3_inv_fu_328_r_coeffs_ce1),
    .r_coeffs_we1(grp_poly_S3_inv_fu_328_r_coeffs_we1),
    .r_coeffs_d1(grp_poly_S3_inv_fu_328_r_coeffs_d1),
    .r_coeffs_q1(x2_coeffs_q1),
    .a_coeffs_address0(grp_poly_S3_inv_fu_328_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_inv_fu_328_a_coeffs_ce0),
    .a_coeffs_q0(x1_coeffs_q0)
);

poly_R2_inv grp_poly_R2_inv_fu_334(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_R2_inv_fu_334_ap_start),
    .ap_done(grp_poly_R2_inv_fu_334_ap_done),
    .ap_idle(grp_poly_R2_inv_fu_334_ap_idle),
    .ap_ready(grp_poly_R2_inv_fu_334_ap_ready),
    .r_coeffs_address0(grp_poly_R2_inv_fu_334_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_R2_inv_fu_334_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_R2_inv_fu_334_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_R2_inv_fu_334_r_coeffs_d0),
    .r_coeffs_q0(ai2_coeffs_q0),
    .a_coeffs_address0(grp_poly_R2_inv_fu_334_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_R2_inv_fu_334_a_coeffs_ce0),
    .a_coeffs_q0(x3_coeffs_q0)
);

poly_Sq_tobytes_1 grp_poly_Sq_tobytes_1_fu_340(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Sq_tobytes_1_fu_340_ap_start),
    .ap_done(grp_poly_Sq_tobytes_1_fu_340_ap_done),
    .ap_idle(grp_poly_Sq_tobytes_1_fu_340_ap_idle),
    .ap_ready(grp_poly_Sq_tobytes_1_fu_340_ap_ready),
    .r_address0(grp_poly_Sq_tobytes_1_fu_340_r_address0),
    .r_ce0(grp_poly_Sq_tobytes_1_fu_340_r_ce0),
    .r_we0(grp_poly_Sq_tobytes_1_fu_340_r_we0),
    .r_d0(grp_poly_Sq_tobytes_1_fu_340_r_d0),
    .r_address1(grp_poly_Sq_tobytes_1_fu_340_r_address1),
    .r_ce1(grp_poly_Sq_tobytes_1_fu_340_r_ce1),
    .r_we1(grp_poly_Sq_tobytes_1_fu_340_r_we1),
    .r_d1(grp_poly_Sq_tobytes_1_fu_340_r_d1),
    .a_coeffs_address0(grp_poly_Sq_tobytes_1_fu_340_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Sq_tobytes_1_fu_340_a_coeffs_ce0),
    .a_coeffs_q0(x3_coeffs_q0)
);

poly_Sq_tobytes grp_poly_Sq_tobytes_fu_347(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Sq_tobytes_fu_347_ap_start),
    .ap_done(grp_poly_Sq_tobytes_fu_347_ap_done),
    .ap_idle(grp_poly_Sq_tobytes_fu_347_ap_idle),
    .ap_ready(grp_poly_Sq_tobytes_fu_347_ap_ready),
    .r_address0(grp_poly_Sq_tobytes_fu_347_r_address0),
    .r_ce0(grp_poly_Sq_tobytes_fu_347_r_ce0),
    .r_we0(grp_poly_Sq_tobytes_fu_347_r_we0),
    .r_d0(grp_poly_Sq_tobytes_fu_347_r_d0),
    .r_address1(grp_poly_Sq_tobytes_fu_347_r_address1),
    .r_ce1(grp_poly_Sq_tobytes_fu_347_r_ce1),
    .r_we1(grp_poly_Sq_tobytes_fu_347_r_we1),
    .r_d1(grp_poly_Sq_tobytes_fu_347_r_d1),
    .a_coeffs_address0(grp_poly_Sq_tobytes_fu_347_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Sq_tobytes_fu_347_a_coeffs_ce0),
    .a_coeffs_q0(x3_coeffs_q0)
);

sample_iid_plus grp_sample_iid_plus_fu_354(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sample_iid_plus_fu_354_ap_start),
    .ap_done(grp_sample_iid_plus_fu_354_ap_done),
    .ap_idle(grp_sample_iid_plus_fu_354_ap_idle),
    .ap_ready(grp_sample_iid_plus_fu_354_ap_ready),
    .r_coeffs_address0(grp_sample_iid_plus_fu_354_r_coeffs_address0),
    .r_coeffs_ce0(grp_sample_iid_plus_fu_354_r_coeffs_ce0),
    .r_coeffs_we0(grp_sample_iid_plus_fu_354_r_coeffs_we0),
    .r_coeffs_d0(grp_sample_iid_plus_fu_354_r_coeffs_d0),
    .r_coeffs_q0(grp_sample_iid_plus_fu_354_r_coeffs_q0),
    .r_coeffs_address1(grp_sample_iid_plus_fu_354_r_coeffs_address1),
    .r_coeffs_ce1(grp_sample_iid_plus_fu_354_r_coeffs_ce1),
    .r_coeffs_we1(grp_sample_iid_plus_fu_354_r_coeffs_we1),
    .r_coeffs_d1(grp_sample_iid_plus_fu_354_r_coeffs_d1),
    .r_coeffs_q1(grp_sample_iid_plus_fu_354_r_coeffs_q1),
    .uniformbytes_address0(grp_sample_iid_plus_fu_354_uniformbytes_address0),
    .uniformbytes_ce0(grp_sample_iid_plus_fu_354_uniformbytes_ce0),
    .uniformbytes_q0(seed_q0),
    .uniformbytes_offset(grp_sample_iid_plus_fu_354_uniformbytes_offset)
);

poly_Rq_mul grp_poly_Rq_mul_fu_365(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_Rq_mul_fu_365_ap_start),
    .ap_done(grp_poly_Rq_mul_fu_365_ap_done),
    .ap_idle(grp_poly_Rq_mul_fu_365_ap_idle),
    .ap_ready(grp_poly_Rq_mul_fu_365_ap_ready),
    .r_coeffs_address0(grp_poly_Rq_mul_fu_365_r_coeffs_address0),
    .r_coeffs_ce0(grp_poly_Rq_mul_fu_365_r_coeffs_ce0),
    .r_coeffs_we0(grp_poly_Rq_mul_fu_365_r_coeffs_we0),
    .r_coeffs_d0(grp_poly_Rq_mul_fu_365_r_coeffs_d0),
    .r_coeffs_q0(grp_poly_Rq_mul_fu_365_r_coeffs_q0),
    .a_coeffs_address0(grp_poly_Rq_mul_fu_365_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_Rq_mul_fu_365_a_coeffs_ce0),
    .a_coeffs_q0(grp_poly_Rq_mul_fu_365_a_coeffs_q0),
    .b_coeffs_address0(grp_poly_Rq_mul_fu_365_b_coeffs_address0),
    .b_coeffs_ce0(grp_poly_Rq_mul_fu_365_b_coeffs_ce0),
    .b_coeffs_q0(grp_poly_Rq_mul_fu_365_b_coeffs_q0)
);

poly_S3_tobytes grp_poly_S3_tobytes_fu_372(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_poly_S3_tobytes_fu_372_ap_start),
    .ap_done(grp_poly_S3_tobytes_fu_372_ap_done),
    .ap_idle(grp_poly_S3_tobytes_fu_372_ap_idle),
    .ap_ready(grp_poly_S3_tobytes_fu_372_ap_ready),
    .msg_address0(grp_poly_S3_tobytes_fu_372_msg_address0),
    .msg_ce0(grp_poly_S3_tobytes_fu_372_msg_ce0),
    .msg_we0(grp_poly_S3_tobytes_fu_372_msg_we0),
    .msg_d0(grp_poly_S3_tobytes_fu_372_msg_d0),
    .msg_offset(grp_poly_S3_tobytes_fu_372_msg_offset),
    .a_coeffs_address0(grp_poly_S3_tobytes_fu_372_a_coeffs_address0),
    .a_coeffs_ce0(grp_poly_S3_tobytes_fu_372_a_coeffs_ce0),
    .a_coeffs_q0(grp_poly_S3_tobytes_fu_372_a_coeffs_q0),
    .a_coeffs_address1(grp_poly_S3_tobytes_fu_372_a_coeffs_address1),
    .a_coeffs_ce1(grp_poly_S3_tobytes_fu_372_a_coeffs_ce1),
    .a_coeffs_q1(grp_poly_S3_tobytes_fu_372_a_coeffs_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_R2_inv_fu_334_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state20)) begin
            grp_poly_R2_inv_fu_334_ap_start_reg <= 1'b1;
        end else if ((grp_poly_R2_inv_fu_334_ap_ready == 1'b1)) begin
            grp_poly_R2_inv_fu_334_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Rq_mul_fu_365_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state53) & (exitcond_i2_fu_651_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state24) & (exitcond_i7_fu_634_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state17) & (exitcond_fu_564_p2 == 1'd1)))) begin
            grp_poly_Rq_mul_fu_365_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Rq_mul_fu_365_ap_ready == 1'b1)) begin
            grp_poly_Rq_mul_fu_365_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_inv_fu_328_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_poly_S3_inv_fu_328_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_inv_fu_328_ap_ready == 1'b1)) begin
            grp_poly_S3_inv_fu_328_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_S3_tobytes_fu_372_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
            grp_poly_S3_tobytes_fu_372_ap_start_reg <= 1'b1;
        end else if ((grp_poly_S3_tobytes_fu_372_ap_ready == 1'b1)) begin
            grp_poly_S3_tobytes_fu_372_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Sq_tobytes_1_fu_340_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state53) & (exitcond_i2_fu_651_p2 == 1'd1))) begin
            grp_poly_Sq_tobytes_1_fu_340_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Sq_tobytes_1_fu_340_ap_ready == 1'b1)) begin
            grp_poly_Sq_tobytes_1_fu_340_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_poly_Sq_tobytes_fu_347_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state58)) begin
            grp_poly_Sq_tobytes_fu_347_ap_start_reg <= 1'b1;
        end else if ((grp_poly_Sq_tobytes_fu_347_ap_ready == 1'b1)) begin
            grp_poly_Sq_tobytes_fu_347_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sample_iid_plus_fu_354_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_sample_iid_plus_fu_354_ap_start_reg <= 1'b1;
        end else if ((grp_sample_iid_plus_fu_354_ap_ready == 1'b1)) begin
            grp_sample_iid_plus_fu_354_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond1_i_fu_602_p2 == 1'd1))) begin
        i_1_i_reg_306 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        i_1_i_reg_306 <= i_38_reg_781;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_i1_reg_295 <= i_37_reg_763;
    end else if (((grp_poly_R2_inv_fu_334_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
        i_i1_reg_295 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_i2_reg_273 <= i_35_reg_722;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i_i2_reg_273 <= 10'd700;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        i_i3_reg_317 <= i_39_reg_804;
    end else if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
        i_i3_reg_317 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond_i_fu_389_p2 == 1'd1))) begin
        i_i5_reg_262 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i_i5_reg_262 <= i_34_reg_699;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_i_reg_251 <= i_33_reg_686;
    end else if (((grp_poly_S3_tobytes_fu_372_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_i_reg_251 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_reg_284 <= i_36_reg_750;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i_reg_284 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (exitcond_fu_564_p2 == 1'd0))) begin
        G_coeffs_addr_2_reg_755 <= tmp_s_fu_576_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (exitcond_i_fu_389_p2 == 1'd0))) begin
        f_coeffs_addr_reg_691 <= tmp_i_fu_401_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (exitcond_i6_fu_451_p2 == 1'd0))) begin
        h_coeffs_addr_1_reg_704 <= tmp_i7_fu_463_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (exitcond_i2_fu_651_p2 == 1'd0))) begin
        h_coeffs_addr_6_reg_809 <= tmp_i3_fu_663_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_33_reg_686 <= i_33_fu_395_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_34_reg_699 <= i_34_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (tmp_i2_fu_513_p2 == 1'd0))) begin
        i_35_reg_722 <= i_35_fu_519_p2;
        tmp_229_i_reg_732[9 : 0] <= tmp_229_i_fu_530_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_36_reg_750 <= i_36_fu_570_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_37_reg_763 <= i_37_fu_608_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_38_reg_781 <= i_38_fu_640_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        i_39_reg_804 <= i_39_fu_657_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        last_coeff_reg_714 <= x3_coeffs_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (exitcond_i7_fu_634_p2 == 1'd0))) begin
        tmp_252_i_reg_786[9 : 0] <= tmp_252_i_fu_646_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond1_i_fu_602_p2 == 1'd0))) begin
        tmp_i4_76_reg_768[9 : 0] <= tmp_i4_76_fu_614_p1[9 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ai2_coeffs_address0 = tmp_252_i_fu_646_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        ai2_coeffs_address0 = grp_poly_R2_inv_fu_334_r_coeffs_address0;
    end else begin
        ai2_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ai2_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        ai2_coeffs_ce0 = grp_poly_R2_inv_fu_334_r_coeffs_ce0;
    end else begin
        ai2_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        ai2_coeffs_we0 = grp_poly_R2_inv_fu_334_r_coeffs_we0;
    end else begin
        ai2_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((grp_poly_Sq_tobytes_fu_347_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state59)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_poly_Sq_tobytes_fu_347_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        b_coeffs_address0 = tmp_i4_76_reg_768;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26))) begin
        b_coeffs_address0 = grp_poly_Rq_mul_fu_365_b_coeffs_address0;
    end else begin
        b_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        b_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26))) begin
        b_coeffs_ce0 = grp_poly_Rq_mul_fu_365_b_coeffs_ce0;
    end else begin
        b_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        b_coeffs_we0 = 1'b1;
    end else begin
        b_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state28))) begin
        c_coeffs_address0 = c_coeffs_addr_reg_796;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        c_coeffs_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30))) begin
        c_coeffs_address0 = grp_poly_Rq_mul_fu_365_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26))) begin
        c_coeffs_address0 = grp_poly_Rq_mul_fu_365_r_coeffs_address0;
    end else begin
        c_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27))) begin
        c_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30))) begin
        c_coeffs_ce0 = grp_poly_Rq_mul_fu_365_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26))) begin
        c_coeffs_ce0 = grp_poly_Rq_mul_fu_365_r_coeffs_ce0;
    end else begin
        c_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28))) begin
        c_coeffs_d0 = grp_fu_382_p2;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26))) begin
        c_coeffs_d0 = grp_poly_Rq_mul_fu_365_r_coeffs_d0;
    end else begin
        c_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28))) begin
        c_coeffs_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26))) begin
        c_coeffs_we0 = grp_poly_Rq_mul_fu_365_r_coeffs_we0;
    end else begin
        c_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state52))) begin
        grp_poly_Rq_mul_fu_365_a_coeffs_q0 = x5_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_poly_Rq_mul_fu_365_a_coeffs_q0 = s_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_poly_Rq_mul_fu_365_a_coeffs_q0 = c_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state55))) begin
        grp_poly_Rq_mul_fu_365_a_coeffs_q0 = x4_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_poly_Rq_mul_fu_365_a_coeffs_q0 = x2_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_365_a_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state55))) begin
        grp_poly_Rq_mul_fu_365_b_coeffs_q0 = x2_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_poly_Rq_mul_fu_365_b_coeffs_q0 = s_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_poly_Rq_mul_fu_365_b_coeffs_q0 = x4_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_poly_Rq_mul_fu_365_b_coeffs_q0 = b_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state52))) begin
        grp_poly_Rq_mul_fu_365_b_coeffs_q0 = x1_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_365_b_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state55))) begin
        grp_poly_Rq_mul_fu_365_r_coeffs_q0 = x5_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_poly_Rq_mul_fu_365_r_coeffs_q0 = x4_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_poly_Rq_mul_fu_365_r_coeffs_q0 = s_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_poly_Rq_mul_fu_365_r_coeffs_q0 = c_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state52))) begin
        grp_poly_Rq_mul_fu_365_r_coeffs_q0 = x3_coeffs_q0;
    end else begin
        grp_poly_Rq_mul_fu_365_r_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_poly_S3_tobytes_fu_372_a_coeffs_q0 = x2_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_poly_S3_tobytes_fu_372_a_coeffs_q0 = x1_coeffs_q0;
    end else begin
        grp_poly_S3_tobytes_fu_372_a_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_poly_S3_tobytes_fu_372_a_coeffs_q1 = x2_coeffs_q1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_poly_S3_tobytes_fu_372_a_coeffs_q1 = x1_coeffs_q1;
    end else begin
        grp_poly_S3_tobytes_fu_372_a_coeffs_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_poly_S3_tobytes_fu_372_msg_offset = 10'd140;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_poly_S3_tobytes_fu_372_msg_offset = 10'd0;
    end else begin
        grp_poly_S3_tobytes_fu_372_msg_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_sample_iid_plus_fu_354_r_coeffs_q0 = x3_coeffs_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_sample_iid_plus_fu_354_r_coeffs_q0 = x1_coeffs_q0;
    end else begin
        grp_sample_iid_plus_fu_354_r_coeffs_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_sample_iid_plus_fu_354_r_coeffs_q1 = x3_coeffs_q1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_sample_iid_plus_fu_354_r_coeffs_q1 = x1_coeffs_q1;
    end else begin
        grp_sample_iid_plus_fu_354_r_coeffs_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_sample_iid_plus_fu_354_uniformbytes_offset = 12'd700;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_sample_iid_plus_fu_354_uniformbytes_offset = 12'd0;
    end else begin
        grp_sample_iid_plus_fu_354_uniformbytes_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36))) begin
        s_coeffs_address0 = grp_poly_Rq_mul_fu_365_b_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32))) begin
        s_coeffs_address0 = grp_poly_Rq_mul_fu_365_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        s_coeffs_address0 = grp_poly_Rq_mul_fu_365_r_coeffs_address0;
    end else begin
        s_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36))) begin
        s_coeffs_ce0 = grp_poly_Rq_mul_fu_365_b_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32))) begin
        s_coeffs_ce0 = grp_poly_Rq_mul_fu_365_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        s_coeffs_ce0 = grp_poly_Rq_mul_fu_365_r_coeffs_ce0;
    end else begin
        s_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        s_coeffs_we0 = grp_poly_Rq_mul_fu_365_r_coeffs_we0;
    end else begin
        s_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        seed_ce0 = grp_sample_iid_plus_fu_354_uniformbytes_ce0;
    end else begin
        seed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        sk_address0 = grp_poly_S3_tobytes_fu_372_msg_address0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        sk_address0 = grp_poly_Sq_tobytes_1_fu_340_r_address0;
    end else begin
        sk_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        sk_ce0 = grp_poly_S3_tobytes_fu_372_msg_ce0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        sk_ce0 = grp_poly_Sq_tobytes_1_fu_340_r_ce0;
    end else begin
        sk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        sk_ce1 = grp_poly_Sq_tobytes_1_fu_340_r_ce1;
    end else begin
        sk_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        sk_d0 = grp_poly_S3_tobytes_fu_372_msg_d0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        sk_d0 = grp_poly_Sq_tobytes_1_fu_340_r_d0;
    end else begin
        sk_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8))) begin
        sk_we0 = grp_poly_S3_tobytes_fu_372_msg_we0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        sk_we0 = grp_poly_Sq_tobytes_1_fu_340_r_we0;
    end else begin
        sk_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        sk_we1 = grp_poly_Sq_tobytes_1_fu_340_r_we1;
    end else begin
        sk_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        x1_coeffs_address0 = f_coeffs_addr_reg_691;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x1_coeffs_address0 = tmp_i_fu_401_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x1_coeffs_address0 = grp_poly_S3_tobytes_fu_372_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state52))) begin
        x1_coeffs_address0 = grp_poly_Rq_mul_fu_365_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_address0 = grp_sample_iid_plus_fu_354_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x1_coeffs_address0 = grp_poly_S3_inv_fu_328_a_coeffs_address0;
    end else begin
        x1_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        x1_coeffs_address1 = grp_poly_S3_tobytes_fu_372_a_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_address1 = grp_sample_iid_plus_fu_354_r_coeffs_address1;
    end else begin
        x1_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        x1_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x1_coeffs_ce0 = grp_poly_S3_tobytes_fu_372_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state52))) begin
        x1_coeffs_ce0 = grp_poly_Rq_mul_fu_365_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_ce0 = grp_sample_iid_plus_fu_354_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x1_coeffs_ce0 = grp_poly_S3_inv_fu_328_a_coeffs_ce0;
    end else begin
        x1_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        x1_coeffs_ce1 = grp_poly_S3_tobytes_fu_372_a_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_ce1 = grp_sample_iid_plus_fu_354_r_coeffs_ce1;
    end else begin
        x1_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        x1_coeffs_d0 = tmp_40_i_fu_442_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_d0 = grp_sample_iid_plus_fu_354_r_coeffs_d0;
    end else begin
        x1_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        x1_coeffs_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_we0 = grp_sample_iid_plus_fu_354_r_coeffs_we0;
    end else begin
        x1_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_coeffs_we1 = grp_sample_iid_plus_fu_354_r_coeffs_we1;
    end else begin
        x1_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        x2_coeffs_address0 = G_coeffs_addr_2_reg_755;
    end else if (((1'b1 == ap_CS_fsm_state17) & (exitcond_fu_564_p2 == 1'd0))) begin
        x2_coeffs_address0 = tmp_s_fu_576_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        x2_coeffs_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x2_coeffs_address0 = tmp_229_i_reg_732;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x2_coeffs_address0 = grp_poly_S3_tobytes_fu_372_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state55))) begin
        x2_coeffs_address0 = grp_poly_Rq_mul_fu_365_b_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x2_coeffs_address0 = grp_poly_Rq_mul_fu_365_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x2_coeffs_address0 = grp_poly_S3_inv_fu_328_r_coeffs_address0;
    end else begin
        x2_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x2_coeffs_address1 = grp_poly_S3_tobytes_fu_372_a_coeffs_address1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x2_coeffs_address1 = grp_poly_S3_inv_fu_328_r_coeffs_address1;
    end else begin
        x2_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state17) & (exitcond_fu_564_p2 == 1'd0)))) begin
        x2_coeffs_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x2_coeffs_ce0 = grp_poly_S3_tobytes_fu_372_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state55))) begin
        x2_coeffs_ce0 = grp_poly_Rq_mul_fu_365_b_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        x2_coeffs_ce0 = grp_poly_Rq_mul_fu_365_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x2_coeffs_ce0 = grp_poly_S3_inv_fu_328_r_coeffs_ce0;
    end else begin
        x2_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x2_coeffs_ce1 = grp_poly_S3_tobytes_fu_372_a_coeffs_ce1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x2_coeffs_ce1 = grp_poly_S3_inv_fu_328_r_coeffs_ce1;
    end else begin
        x2_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        x2_coeffs_d0 = tmp_296_cast_fu_597_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        x2_coeffs_d0 = tmp_233_i_cast_fu_559_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        x2_coeffs_d0 = tmp_231_i_cast_fu_545_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x2_coeffs_d0 = grp_poly_S3_inv_fu_328_r_coeffs_d0;
    end else begin
        x2_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        x2_coeffs_we0 = 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x2_coeffs_we0 = grp_poly_S3_inv_fu_328_r_coeffs_we0;
    end else begin
        x2_coeffs_we0 = 2'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x2_coeffs_we1 = grp_poly_S3_inv_fu_328_r_coeffs_we1;
    end else begin
        x2_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) & (exitcond_i2_fu_651_p2 == 1'd0))) begin
        x3_coeffs_address0 = h_coeffs_addr_reg_709;
    end else if (((1'b1 == ap_CS_fsm_state14) & (tmp_i2_fu_513_p2 == 1'd1))) begin
        x3_coeffs_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state14) & (tmp_i2_fu_513_p2 == 1'd0))) begin
        x3_coeffs_address0 = tmp_i4_fu_525_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        x3_coeffs_address0 = h_coeffs_addr_1_reg_704;
    end else if (((1'b1 == ap_CS_fsm_state11) & (exitcond_i6_fu_451_p2 == 1'd1))) begin
        x3_coeffs_address0 = 64'd700;
    end else if (((1'b1 == ap_CS_fsm_state11) & (exitcond_i6_fu_451_p2 == 1'd0))) begin
        x3_coeffs_address0 = tmp_i7_fu_463_p1;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state52))) begin
        x3_coeffs_address0 = grp_poly_Rq_mul_fu_365_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x3_coeffs_address0 = grp_sample_iid_plus_fu_354_r_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        x3_coeffs_address0 = grp_poly_Sq_tobytes_fu_347_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        x3_coeffs_address0 = grp_poly_Sq_tobytes_1_fu_340_a_coeffs_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        x3_coeffs_address0 = grp_poly_R2_inv_fu_334_a_coeffs_address0;
    end else begin
        x3_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        x3_coeffs_address1 = h_coeffs_addr_6_reg_809;
    end else if (((1'b1 == ap_CS_fsm_state53) & (exitcond_i2_fu_651_p2 == 1'd0))) begin
        x3_coeffs_address1 = tmp_i3_fu_663_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        x3_coeffs_address1 = tmp_i4_76_fu_614_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        x3_coeffs_address1 = tmp_229_i_fu_530_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x3_coeffs_address1 = grp_sample_iid_plus_fu_354_r_coeffs_address1;
    end else begin
        x3_coeffs_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state53) & (exitcond_i2_fu_651_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state14) & (tmp_i2_fu_513_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state14) & (tmp_i2_fu_513_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state11) & (exitcond_i6_fu_451_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (exitcond_i6_fu_451_p2 == 1'd0)))) begin
        x3_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state52))) begin
        x3_coeffs_ce0 = grp_poly_Rq_mul_fu_365_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x3_coeffs_ce0 = grp_sample_iid_plus_fu_354_r_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        x3_coeffs_ce0 = grp_poly_Sq_tobytes_fu_347_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        x3_coeffs_ce0 = grp_poly_Sq_tobytes_1_fu_340_a_coeffs_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        x3_coeffs_ce0 = grp_poly_R2_inv_fu_334_a_coeffs_ce0;
    end else begin
        x3_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state53) & (exitcond_i2_fu_651_p2 == 1'd0)))) begin
        x3_coeffs_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x3_coeffs_ce1 = grp_sample_iid_plus_fu_354_r_coeffs_ce1;
    end else begin
        x3_coeffs_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x3_coeffs_d0 = tmp_40_i1_fu_504_p3;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state52))) begin
        x3_coeffs_d0 = grp_poly_Rq_mul_fu_365_r_coeffs_d0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x3_coeffs_d0 = grp_sample_iid_plus_fu_354_r_coeffs_d0;
    end else begin
        x3_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        x3_coeffs_d1 = tmp_158_i_cast_fu_678_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x3_coeffs_d1 = grp_sample_iid_plus_fu_354_r_coeffs_d1;
    end else begin
        x3_coeffs_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        x3_coeffs_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state52))) begin
        x3_coeffs_we0 = grp_poly_Rq_mul_fu_365_r_coeffs_we0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x3_coeffs_we0 = grp_sample_iid_plus_fu_354_r_coeffs_we0;
    end else begin
        x3_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        x3_coeffs_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x3_coeffs_we1 = grp_sample_iid_plus_fu_354_r_coeffs_we1;
    end else begin
        x3_coeffs_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        x4_coeffs_address0 = tmp_252_i_reg_786;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_365_b_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state55))) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_365_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36))) begin
        x4_coeffs_address0 = grp_poly_Rq_mul_fu_365_r_coeffs_address0;
    end else begin
        x4_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        x4_coeffs_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state30))) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_365_b_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state55))) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_365_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36))) begin
        x4_coeffs_ce0 = grp_poly_Rq_mul_fu_365_r_coeffs_ce0;
    end else begin
        x4_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        x4_coeffs_d0 = ai2_coeffs_q0;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36))) begin
        x4_coeffs_d0 = grp_poly_Rq_mul_fu_365_r_coeffs_d0;
    end else begin
        x4_coeffs_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        x4_coeffs_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36))) begin
        x4_coeffs_we0 = grp_poly_Rq_mul_fu_365_r_coeffs_we0;
    end else begin
        x4_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state52))) begin
        x5_coeffs_address0 = grp_poly_Rq_mul_fu_365_a_coeffs_address0;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state55))) begin
        x5_coeffs_address0 = grp_poly_Rq_mul_fu_365_r_coeffs_address0;
    end else begin
        x5_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state52))) begin
        x5_coeffs_ce0 = grp_poly_Rq_mul_fu_365_a_coeffs_ce0;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state55))) begin
        x5_coeffs_ce0 = grp_poly_Rq_mul_fu_365_r_coeffs_ce0;
    end else begin
        x5_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state55))) begin
        x5_coeffs_we0 = grp_poly_Rq_mul_fu_365_r_coeffs_we0;
    end else begin
        x5_coeffs_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_sample_iid_plus_fu_354_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_poly_S3_tobytes_fu_372_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_poly_S3_tobytes_fu_372_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (exitcond_i_fu_389_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (exitcond_i6_fu_451_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (tmp_i2_fu_513_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (exitcond_fu_564_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((grp_poly_R2_inv_fu_334_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (exitcond1_i_fu_602_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (exitcond_i7_fu_634_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (exitcond_i2_fu_651_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state55 : begin
            if (((1'b1 == ap_CS_fsm_state55) & (1'b0 == ap_block_state55_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((grp_poly_Rq_mul_fu_365_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((grp_poly_Sq_tobytes_fu_347_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state4_on_subcall_done = ((grp_sample_iid_plus_fu_354_ap_done == 1'b0) | (grp_poly_S3_inv_fu_328_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state55_on_subcall_done = ((grp_poly_Rq_mul_fu_365_ap_done == 1'b0) | (grp_poly_Sq_tobytes_1_fu_340_ap_done == 1'b0));
end

assign b_coeffs_d0 = tmp_i6_cast_fu_623_p2;

assign c_coeffs_addr_reg_796 = 64'd0;

assign exitcond1_i_fu_602_p2 = ((i_i1_reg_295 == 10'd701) ? 1'b1 : 1'b0);

assign exitcond_fu_564_p2 = ((i_reg_284 == 10'd701) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_651_p2 = ((i_i3_reg_317 == 10'd701) ? 1'b1 : 1'b0);

assign exitcond_i6_fu_451_p2 = ((i_i5_reg_262 == 10'd701) ? 1'b1 : 1'b0);

assign exitcond_i7_fu_634_p2 = ((i_1_i_reg_306 == 10'd701) ? 1'b1 : 1'b0);

assign exitcond_i_fu_389_p2 = ((i_i_reg_251 == 10'd701) ? 1'b1 : 1'b0);

assign grp_fu_382_p2 = (c_coeffs_q0 + 16'd2);

assign grp_poly_R2_inv_fu_334_ap_start = grp_poly_R2_inv_fu_334_ap_start_reg;

assign grp_poly_Rq_mul_fu_365_ap_start = grp_poly_Rq_mul_fu_365_ap_start_reg;

assign grp_poly_S3_inv_fu_328_ap_start = grp_poly_S3_inv_fu_328_ap_start_reg;

assign grp_poly_S3_tobytes_fu_372_ap_start = grp_poly_S3_tobytes_fu_372_ap_start_reg;

assign grp_poly_Sq_tobytes_1_fu_340_ap_start = grp_poly_Sq_tobytes_1_fu_340_ap_start_reg;

assign grp_poly_Sq_tobytes_fu_347_ap_start = grp_poly_Sq_tobytes_fu_347_ap_start_reg;

assign grp_sample_iid_plus_fu_354_ap_start = grp_sample_iid_plus_fu_354_ap_start_reg;

assign h_coeffs_addr_reg_709 = 64'd700;

assign i_33_fu_395_p2 = (i_i_reg_251 + 10'd1);

assign i_34_fu_457_p2 = (i_i5_reg_262 + 10'd1);

assign i_35_fu_519_p2 = ($signed(10'd1023) + $signed(i_i2_reg_273));

assign i_36_fu_570_p2 = (i_reg_284 + 10'd1);

assign i_37_fu_608_p2 = (i_i1_reg_295 + 10'd1);

assign i_38_fu_640_p2 = (i_1_i_reg_306 + 10'd1);

assign i_39_fu_657_p2 = (i_i3_reg_317 + 10'd1);

assign pk_address0 = grp_poly_Sq_tobytes_fu_347_r_address0;

assign pk_address1 = grp_poly_Sq_tobytes_fu_347_r_address1;

assign pk_ce0 = grp_poly_Sq_tobytes_fu_347_r_ce0;

assign pk_ce1 = grp_poly_Sq_tobytes_fu_347_r_ce1;

assign pk_d0 = grp_poly_Sq_tobytes_fu_347_r_d0;

assign pk_d1 = grp_poly_Sq_tobytes_fu_347_r_d1;

assign pk_we0 = grp_poly_Sq_tobytes_fu_347_r_we0;

assign pk_we1 = grp_poly_Sq_tobytes_fu_347_r_we1;

assign seed_address0 = grp_sample_iid_plus_fu_354_uniformbytes_address0;

assign sk_address1 = grp_poly_Sq_tobytes_1_fu_340_r_address1;

assign sk_d1 = grp_poly_Sq_tobytes_1_fu_340_r_d1;

assign tmp_158_i_cast_fu_678_p1 = tmp_343_fu_674_p1;

assign tmp_229_i_fu_530_p1 = i_i2_reg_273;

assign tmp_230_i_fu_535_p2 = (x3_coeffs_q0 - x3_coeffs_q1);

assign tmp_231_i_cast_fu_545_p1 = tmp_339_fu_541_p1;

assign tmp_232_i_fu_550_p2 = (last_coeff_reg_714 - x3_coeffs_q0);

assign tmp_233_i_cast_fu_559_p1 = tmp_338_fu_555_p1;

assign tmp_242_fu_587_p2 = (tmp_340_fu_581_p2 - x2_coeffs_q0);

assign tmp_252_i_fu_646_p1 = i_1_i_reg_306;

assign tmp_296_cast_fu_597_p1 = tmp_341_fu_593_p1;

assign tmp_336_fu_422_p1 = x1_coeffs_q0[12:0];

assign tmp_337_fu_484_p1 = x3_coeffs_q0[12:0];

assign tmp_338_fu_555_p1 = tmp_232_i_fu_550_p2[12:0];

assign tmp_339_fu_541_p1 = tmp_230_i_fu_535_p2[12:0];

assign tmp_340_fu_581_p2 = x2_coeffs_q0 << 16'd2;

assign tmp_341_fu_593_p1 = tmp_242_fu_587_p2[12:0];

assign tmp_342_fu_619_p1 = x3_coeffs_q1[12:0];

assign tmp_343_fu_674_p1 = tmp_i5_fu_668_p2[12:0];

assign tmp_38_i1_cast_fu_478_p2 = (13'd0 - tmp_41_fu_468_p4);

assign tmp_38_i_cast_fu_416_p2 = (13'd0 - tmp_fu_406_p4);

assign tmp_39_fu_426_p2 = (tmp_38_i_cast_fu_416_p2 | tmp_336_fu_422_p1);

assign tmp_40_fu_432_p4 = {{x1_coeffs_q0[15:13]}};

assign tmp_40_i1_fu_504_p3 = {{tmp_44_fu_494_p4}, {tmp_43_fu_488_p2}};

assign tmp_40_i_fu_442_p3 = {{tmp_40_fu_432_p4}, {tmp_39_fu_426_p2}};

assign tmp_41_fu_468_p4 = {{x3_coeffs_q0[13:1]}};

assign tmp_43_fu_488_p2 = (tmp_38_i1_cast_fu_478_p2 | tmp_337_fu_484_p1);

assign tmp_44_fu_494_p4 = {{x3_coeffs_q0[15:13]}};

assign tmp_fu_406_p4 = {{x1_coeffs_q0[13:1]}};

assign tmp_i2_fu_513_p2 = ((i_i2_reg_273 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_i3_fu_663_p1 = i_i3_reg_317;

assign tmp_i4_76_fu_614_p1 = i_i1_reg_295;

assign tmp_i4_fu_525_p1 = i_35_fu_519_p2;

assign tmp_i5_fu_668_p2 = (x3_coeffs_q1 - x3_coeffs_q0);

assign tmp_i6_cast_fu_623_p2 = (13'd0 - tmp_342_fu_619_p1);

assign tmp_i7_fu_463_p1 = i_i5_reg_262;

assign tmp_i_fu_401_p1 = i_i_reg_251;

assign tmp_s_fu_576_p1 = i_reg_284;

always @ (posedge ap_clk) begin
    tmp_229_i_reg_732[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_i4_76_reg_768[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    tmp_252_i_reg_786[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //owcpa_keypair
