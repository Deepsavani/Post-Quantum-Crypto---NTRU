// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module poly_Sq_tobytes_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        r_address0,
        r_ce0,
        r_we0,
        r_d0,
        r_address1,
        r_ce1,
        r_we1,
        r_d1,
        a_coeffs_address0,
        a_coeffs_ce0,
        a_coeffs_q0
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] r_address0;
output   r_ce0;
output   r_we0;
output  [7:0] r_d0;
output  [10:0] r_address1;
output   r_ce1;
output   r_we1;
output  [7:0] r_d1;
output  [9:0] a_coeffs_address0;
output   a_coeffs_ce0;
input  [15:0] a_coeffs_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] r_address0;
reg r_ce0;
reg r_we0;
reg[7:0] r_d0;
reg[10:0] r_address1;
reg r_ce1;
reg r_we1;
reg[7:0] r_d1;
reg[9:0] a_coeffs_address0;
reg a_coeffs_ce0;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [10:0] next_mul_fu_570_p2;
reg   [10:0] next_mul_reg_1260;
wire    ap_CS_fsm_state2;
wire   [6:0] tmp_31_fu_582_p2;
reg   [6:0] tmp_31_reg_1268;
wire   [9:0] tmp_fu_588_p3;
reg   [9:0] tmp_reg_1273;
wire   [0:0] exitcond3_fu_576_p2;
wire   [3:0] j_3_fu_606_p2;
reg   [3:0] j_3_reg_1281;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond2_fu_600_p2;
reg   [7:0] tmp_36_reg_1291;
wire    ap_CS_fsm_state5;
reg   [4:0] tmp_23_reg_1296;
wire   [7:0] grp_fu_530_p4;
reg   [7:0] tmp_34_reg_1301;
wire    ap_CS_fsm_state6;
wire   [6:0] grp_fu_552_p4;
reg   [6:0] tmp_44_reg_1306;
wire    ap_CS_fsm_state7;
reg   [3:0] tmp_55_reg_1311;
wire    ap_CS_fsm_state8;
reg   [7:0] tmp_61_reg_1316;
wire    ap_CS_fsm_state9;
reg   [5:0] tmp_68_reg_1321;
wire    ap_CS_fsm_state10;
wire   [2:0] tmp_30_fu_1053_p2;
reg   [2:0] tmp_30_reg_1329;
wire    ap_CS_fsm_state12;
wire   [0:0] exitcond1_fu_1047_p2;
wire   [3:0] j_4_fu_1088_p2;
wire    ap_CS_fsm_state14;
wire   [0:0] exitcond_fu_1077_p2;
wire   [0:0] tmp_88_fu_1121_p1;
reg   [0:0] tmp_88_reg_1347;
wire    ap_CS_fsm_state15;
wire   [2:0] tmp_89_fu_1139_p1;
reg   [2:0] tmp_89_reg_1352;
wire    ap_CS_fsm_state16;
wire   [2:0] grp_fu_520_p4;
reg   [2:0] tmp_93_reg_1357;
wire   [2:0] tmp_94_fu_1185_p1;
reg   [2:0] tmp_94_reg_1362;
wire    ap_CS_fsm_state17;
reg   [2:0] t_address0;
reg    t_ce0;
reg    t_we0;
reg   [15:0] t_d0;
wire   [15:0] t_q0;
reg   [2:0] t_address1;
reg    t_ce1;
reg    t_we1;
wire   [15:0] t_q1;
reg   [6:0] i_reg_462;
wire    ap_CS_fsm_state11;
reg   [10:0] phi_mul_reg_473;
reg   [3:0] j_reg_485;
wire    ap_CS_fsm_state4;
reg   [2:0] j_1_reg_497;
wire    ap_CS_fsm_state13;
reg   [3:0] j_2_reg_509;
wire   [63:0] tmp_78_fu_617_p1;
wire   [63:0] tmp_82_fu_622_p1;
wire   [63:0] sum_cast_fu_638_p1;
wire   [63:0] sum2_cast_fu_678_p1;
wire   [63:0] sum1_cast_fu_709_p1;
wire   [63:0] sum3_cast_fu_746_p1;
wire   [63:0] sum4_cast_fu_775_p1;
wire   [63:0] sum5_cast_fu_786_p1;
wire   [63:0] sum6_cast_fu_823_p1;
wire   [63:0] sum7_cast_fu_845_p1;
wire   [63:0] sum8_cast_fu_902_p1;
wire   [63:0] sum9_cast_fu_941_p1;
wire   [63:0] sum10_cast_fu_963_p1;
wire   [63:0] sum11_cast_fu_1020_p1;
wire   [63:0] sum12_cast_fu_1042_p1;
wire   [63:0] tmp_s_fu_1067_p1;
wire   [63:0] tmp_27_fu_1072_p1;
wire   [63:0] tmp_81_fu_1083_p1;
wire    ap_CS_fsm_state18;
wire   [7:0] tmp_32_fu_627_p1;
wire   [7:0] tmp_33_fu_665_p2;
wire   [7:0] tmp_40_fu_731_p3;
wire   [7:0] tmp_42_fu_763_p2;
wire   [7:0] tmp_51_fu_808_p3;
wire   [7:0] tmp_60_fu_887_p3;
wire   [7:0] tmp_65_fu_929_p2;
wire   [7:0] tmp_74_fu_1005_p3;
wire   [7:0] tmp_48_fu_1112_p3;
wire   [7:0] tmp_54_fu_1132_p2;
wire   [7:0] tmp_62_fu_1166_p3;
wire   [7:0] tmp_79_fu_1206_p2;
wire   [7:0] tmp_95_fu_1213_p1;
wire   [9:0] j_cast6_fu_596_p1;
wire   [9:0] tmp_77_fu_612_p2;
wire   [10:0] sum_fu_632_p2;
wire   [2:0] tmp_41_fu_653_p1;
wire   [7:0] tmp_29_fu_657_p3;
wire   [7:0] tmp_28_fu_643_p4;
wire   [10:0] sum2_fu_672_p2;
wire   [10:0] sum1_fu_703_p2;
wire   [2:0] tmp_45_fu_714_p1;
wire   [4:0] tmp_37_fu_718_p3;
wire   [4:0] tmp_38_fu_726_p2;
wire   [10:0] sum3_fu_740_p2;
wire   [0:0] tmp_49_fu_751_p1;
wire   [7:0] tmp_35_fu_755_p3;
wire   [10:0] sum4_fu_769_p2;
wire   [10:0] sum5_fu_780_p2;
wire   [2:0] tmp_56_fu_791_p1;
wire   [6:0] tmp_46_fu_795_p3;
wire   [0:0] grp_fu_562_p3;
wire   [6:0] tmp_47_fu_803_p2;
wire   [10:0] sum6_fu_817_p2;
wire   [10:0] sum7_fu_839_p2;
wire   [2:0] tmp_67_fu_860_p1;
wire   [3:0] tmp_57_fu_864_p3;
wire   [3:0] tmp_59_fu_877_p4;
wire   [3:0] tmp_58_fu_872_p2;
wire   [10:0] sum8_fu_896_p2;
wire   [1:0] tmp_76_fu_917_p1;
wire   [7:0] tmp_64_fu_921_p3;
wire   [10:0] sum9_fu_935_p2;
wire   [10:0] sum10_fu_957_p2;
wire   [2:0] tmp_80_fu_978_p1;
wire   [5:0] tmp_69_fu_982_p3;
wire   [1:0] tmp_71_fu_995_p4;
wire   [5:0] tmp_70_fu_990_p2;
wire   [10:0] sum11_fu_1014_p2;
wire   [10:0] sum12_fu_1036_p2;
wire   [9:0] tmp_10_fu_1059_p3;
wire   [2:0] tmp_83_fu_1094_p1;
wire   [6:0] tmp_85_fu_1098_p3;
wire   [6:0] tmp_86_fu_1106_p2;
wire   [7:0] tmp_52_fu_1125_p3;
wire   [4:0] tmp_91_fu_1153_p3;
wire   [4:0] tmp_90_fu_1143_p4;
wire   [4:0] tmp_92_fu_1160_p2;
wire   [7:0] tmp_26_fu_1196_p4;
wire   [7:0] tmp_73_fu_1189_p3;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
end

poly_Sq_tobytes_1_t #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
t_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(t_address0),
    .ce0(t_ce0),
    .we0(t_we0),
    .d0(t_d0),
    .q0(t_q0),
    .address1(t_address1),
    .ce1(t_ce1),
    .we1(t_we1),
    .d1(a_coeffs_q0),
    .q1(t_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_reg_462 <= tmp_31_reg_1268;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_462 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_576_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_1_reg_497 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        j_1_reg_497 <= tmp_30_reg_1329;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (exitcond1_fu_1047_p2 == 1'd1))) begin
        j_2_reg_509 <= 4'd4;
    end else if (((exitcond_fu_1077_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        j_2_reg_509 <= j_4_fu_1088_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_576_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_485 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_485 <= j_3_reg_1281;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        phi_mul_reg_473 <= next_mul_reg_1260;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_473 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_3_reg_1281 <= j_3_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        next_mul_reg_1260 <= next_mul_fu_570_p2;
        tmp_31_reg_1268 <= tmp_31_fu_582_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_23_reg_1296 <= {{t_q1[15:11]}};
        tmp_36_reg_1291 <= {{t_q1[10:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_30_reg_1329 <= tmp_30_fu_1053_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_34_reg_1301 <= {{t_q1[13:6]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_44_reg_1306 <= {{t_q0[15:9]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_55_reg_1311 <= {{t_q1[15:12]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_61_reg_1316 <= {{t_q0[14:7]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_68_reg_1321 <= {{t_q1[15:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_88_reg_1347 <= tmp_88_fu_1121_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_89_reg_1352 <= tmp_89_fu_1139_p1;
        tmp_93_reg_1357 <= {{t_q1[5:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_94_reg_1362 <= tmp_94_fu_1185_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_576_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_1273[9 : 3] <= tmp_fu_588_p3[9 : 3];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        a_coeffs_address0 = tmp_s_fu_1067_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        a_coeffs_address0 = tmp_78_fu_617_p1;
    end else begin
        a_coeffs_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state12))) begin
        a_coeffs_ce0 = 1'b1;
    end else begin
        a_coeffs_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        r_address0 = 64'd1412;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        r_address0 = 64'd1414;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_address0 = 64'd1416;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_address0 = sum12_cast_fu_1042_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_address0 = sum10_cast_fu_963_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_address0 = sum8_cast_fu_902_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_address0 = sum6_cast_fu_823_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_address0 = sum4_cast_fu_775_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_address0 = sum1_cast_fu_709_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_address0 = sum_cast_fu_638_p1;
    end else begin
        r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        r_address1 = 64'd1411;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        r_address1 = 64'd1413;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_address1 = 64'd1415;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_address1 = 64'd1417;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_address1 = sum11_cast_fu_1020_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_address1 = sum9_cast_fu_941_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_address1 = sum7_cast_fu_845_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_address1 = sum5_cast_fu_786_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_address1 = sum3_cast_fu_746_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_address1 = sum2_cast_fu_678_p1;
    end else begin
        r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        r_ce0 = 1'b1;
    end else begin
        r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        r_ce1 = 1'b1;
    end else begin
        r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        r_d0 = tmp_79_fu_1206_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        r_d0 = tmp_62_fu_1166_p3;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_d0 = {{t_q0[8:1]}};
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_d0 = {{t_q0[12:5]}};
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_d0 = {{t_q1[9:2]}};
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_d0 = tmp_60_fu_887_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_d0 = tmp_51_fu_808_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_d0 = tmp_42_fu_763_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_d0 = tmp_36_reg_1291;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_d0 = tmp_32_fu_627_p1;
    end else begin
        r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        r_d1 = tmp_95_fu_1213_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        r_d1 = {{t_q0[10:3]}};
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        r_d1 = tmp_54_fu_1132_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        r_d1 = tmp_48_fu_1112_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_d1 = tmp_74_fu_1005_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_d1 = tmp_65_fu_929_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_d1 = {{t_q1[11:4]}};
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_d1 = {{t_q0[8:1]}};
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_d1 = tmp_40_fu_731_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_d1 = tmp_33_fu_665_p2;
    end else begin
        r_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        r_we0 = 1'b1;
    end else begin
        r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        r_we1 = 1'b1;
    end else begin
        r_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        t_address0 = 64'd1;
    end else if (((exitcond_fu_1077_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        t_address0 = tmp_81_fu_1083_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        t_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state14) & (exitcond_fu_1077_p2 == 1'd1)))) begin
        t_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_address0 = tmp_82_fu_622_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address0 = 64'd0;
    end else begin
        t_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        t_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        t_address1 = tmp_27_fu_1072_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        t_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state7))) begin
        t_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state5))) begin
        t_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_address1 = 64'd1;
    end else begin
        t_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state14) & (exitcond_fu_1077_p2 == 1'd1)) | ((exitcond_fu_1077_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        t_ce0 = 1'b1;
    end else begin
        t_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        t_ce1 = 1'b1;
    end else begin
        t_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_1077_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        t_d0 = 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_d0 = a_coeffs_q0;
    end else begin
        t_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((exitcond_fu_1077_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        t_we0 = 1'b1;
    end else begin
        t_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        t_we1 = 1'b1;
    end else begin
        t_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond3_fu_576_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond2_fu_600_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (exitcond1_fu_1047_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state14 : begin
            if (((exitcond_fu_1077_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond1_fu_1047_p2 = ((j_1_reg_497 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond2_fu_600_p2 = ((j_reg_485 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond3_fu_576_p2 = ((i_reg_462 == 7'd87) ? 1'b1 : 1'b0);

assign exitcond_fu_1077_p2 = ((j_2_reg_509 == 4'd8) ? 1'b1 : 1'b0);

assign grp_fu_520_p4 = {{t_q1[5:3]}};

assign grp_fu_530_p4 = {{t_q1[13:6]}};

assign grp_fu_552_p4 = {{t_q0[15:9]}};

assign grp_fu_562_p3 = t_q1[32'd3];

assign j_3_fu_606_p2 = (j_reg_485 + 4'd1);

assign j_4_fu_1088_p2 = (j_2_reg_509 + 4'd1);

assign j_cast6_fu_596_p1 = j_reg_485;

assign next_mul_fu_570_p2 = (phi_mul_reg_473 + 11'd13);

assign sum10_cast_fu_963_p1 = sum10_fu_957_p2;

assign sum10_fu_957_p2 = (11'd290 + phi_mul_reg_473);

assign sum11_cast_fu_1020_p1 = sum11_fu_1014_p2;

assign sum11_fu_1014_p2 = (11'd291 + phi_mul_reg_473);

assign sum12_cast_fu_1042_p1 = sum12_fu_1036_p2;

assign sum12_fu_1036_p2 = (11'd292 + phi_mul_reg_473);

assign sum1_cast_fu_709_p1 = sum1_fu_703_p2;

assign sum1_fu_703_p2 = (11'd282 + phi_mul_reg_473);

assign sum2_cast_fu_678_p1 = sum2_fu_672_p2;

assign sum2_fu_672_p2 = (11'd281 + phi_mul_reg_473);

assign sum3_cast_fu_746_p1 = sum3_fu_740_p2;

assign sum3_fu_740_p2 = (11'd283 + phi_mul_reg_473);

assign sum4_cast_fu_775_p1 = sum4_fu_769_p2;

assign sum4_fu_769_p2 = (11'd284 + phi_mul_reg_473);

assign sum5_cast_fu_786_p1 = sum5_fu_780_p2;

assign sum5_fu_780_p2 = (11'd285 + phi_mul_reg_473);

assign sum6_cast_fu_823_p1 = sum6_fu_817_p2;

assign sum6_fu_817_p2 = (11'd286 + phi_mul_reg_473);

assign sum7_cast_fu_845_p1 = sum7_fu_839_p2;

assign sum7_fu_839_p2 = (11'd287 + phi_mul_reg_473);

assign sum8_cast_fu_902_p1 = sum8_fu_896_p2;

assign sum8_fu_896_p2 = (11'd288 + phi_mul_reg_473);

assign sum9_cast_fu_941_p1 = sum9_fu_935_p2;

assign sum9_fu_935_p2 = (11'd289 + phi_mul_reg_473);

assign sum_cast_fu_638_p1 = sum_fu_632_p2;

assign sum_fu_632_p2 = (11'd280 + phi_mul_reg_473);

assign tmp_10_fu_1059_p3 = {{7'd87}, {j_1_reg_497}};

assign tmp_26_fu_1196_p4 = {{t_q1[15:8]}};

assign tmp_27_fu_1072_p1 = j_1_reg_497;

assign tmp_28_fu_643_p4 = {{t_q0[15:8]}};

assign tmp_29_fu_657_p3 = {{tmp_41_fu_653_p1}, {5'd0}};

assign tmp_30_fu_1053_p2 = (j_1_reg_497 + 3'd1);

assign tmp_31_fu_582_p2 = (i_reg_462 + 7'd1);

assign tmp_32_fu_627_p1 = t_q0[7:0];

assign tmp_33_fu_665_p2 = (tmp_29_fu_657_p3 | tmp_28_fu_643_p4);

assign tmp_35_fu_755_p3 = {{tmp_49_fu_751_p1}, {7'd0}};

assign tmp_37_fu_718_p3 = {{tmp_45_fu_714_p1}, {2'd0}};

assign tmp_38_fu_726_p2 = (tmp_37_fu_718_p3 | tmp_23_reg_1296);

assign tmp_40_fu_731_p3 = {{grp_fu_520_p4}, {tmp_38_fu_726_p2}};

assign tmp_41_fu_653_p1 = t_q1[2:0];

assign tmp_42_fu_763_p2 = (tmp_35_fu_755_p3 | tmp_34_reg_1301);

assign tmp_45_fu_714_p1 = t_q1[2:0];

assign tmp_46_fu_795_p3 = {{tmp_56_fu_791_p1}, {4'd0}};

assign tmp_47_fu_803_p2 = (tmp_46_fu_795_p3 | tmp_44_reg_1306);

assign tmp_48_fu_1112_p3 = {{grp_fu_562_p3}, {tmp_86_fu_1106_p2}};

assign tmp_49_fu_751_p1 = t_q0[0:0];

assign tmp_51_fu_808_p3 = {{grp_fu_562_p3}, {tmp_47_fu_803_p2}};

assign tmp_52_fu_1125_p3 = {{tmp_88_reg_1347}, {7'd0}};

assign tmp_54_fu_1132_p2 = (tmp_52_fu_1125_p3 | grp_fu_530_p4);

assign tmp_56_fu_791_p1 = t_q1[2:0];

assign tmp_57_fu_864_p3 = {{tmp_67_fu_860_p1}, {1'd0}};

assign tmp_58_fu_872_p2 = (tmp_57_fu_864_p3 | tmp_55_reg_1311);

assign tmp_59_fu_877_p4 = {{t_q0[6:3]}};

assign tmp_60_fu_887_p3 = {{tmp_59_fu_877_p4}, {tmp_58_fu_872_p2}};

assign tmp_62_fu_1166_p3 = {{tmp_93_reg_1357}, {tmp_92_fu_1160_p2}};

assign tmp_64_fu_921_p3 = {{tmp_76_fu_917_p1}, {6'd0}};

assign tmp_65_fu_929_p2 = (tmp_64_fu_921_p3 | tmp_61_reg_1316);

assign tmp_67_fu_860_p1 = t_q0[2:0];

assign tmp_69_fu_982_p3 = {{tmp_80_fu_978_p1}, {3'd0}};

assign tmp_70_fu_990_p2 = (tmp_69_fu_982_p3 | tmp_68_reg_1321);

assign tmp_71_fu_995_p4 = {{t_q0[4:3]}};

assign tmp_73_fu_1189_p3 = {{tmp_94_reg_1362}, {5'd0}};

assign tmp_74_fu_1005_p3 = {{tmp_71_fu_995_p4}, {tmp_70_fu_990_p2}};

assign tmp_76_fu_917_p1 = t_q1[1:0];

assign tmp_77_fu_612_p2 = (tmp_reg_1273 + j_cast6_fu_596_p1);

assign tmp_78_fu_617_p1 = tmp_77_fu_612_p2;

assign tmp_79_fu_1206_p2 = (tmp_73_fu_1189_p3 | tmp_26_fu_1196_p4);

assign tmp_80_fu_978_p1 = t_q0[2:0];

assign tmp_81_fu_1083_p1 = j_2_reg_509;

assign tmp_82_fu_622_p1 = j_reg_485;

assign tmp_83_fu_1094_p1 = t_q1[2:0];

assign tmp_85_fu_1098_p3 = {{tmp_83_fu_1094_p1}, {4'd0}};

assign tmp_86_fu_1106_p2 = (tmp_85_fu_1098_p3 | grp_fu_552_p4);

assign tmp_88_fu_1121_p1 = t_q0[0:0];

assign tmp_89_fu_1139_p1 = t_q1[2:0];

assign tmp_90_fu_1143_p4 = {{t_q0[15:11]}};

assign tmp_91_fu_1153_p3 = {{tmp_89_reg_1352}, {2'd0}};

assign tmp_92_fu_1160_p2 = (tmp_91_fu_1153_p3 | tmp_90_fu_1143_p4);

assign tmp_94_fu_1185_p1 = t_q0[2:0];

assign tmp_95_fu_1213_p1 = t_q1[7:0];

assign tmp_fu_588_p3 = {{i_reg_462}, {3'd0}};

assign tmp_s_fu_1067_p1 = tmp_10_fu_1059_p3;

always @ (posedge ap_clk) begin
    tmp_reg_1273[2:0] <= 3'b000;
end

endmodule //poly_Sq_tobytes_1
